{"version":3,"sources":["assets/pathblazer-logo.png","state/state.ts","components/DisplayTest.tsx","screens/authed/MenuScreen.tsx","components/DeliveryScreen.tsx","components/CashScreen.tsx","components/ChangeScreen.tsx","state/firebaseConfig.ts","state/firebaseFunctions.ts","screens/authed/CartScreen.tsx","screens/authed/ViewTransactions.tsx","components/Spinner.tsx","components/AddCategory.tsx","components/DropDown.tsx","components/AddProduct.tsx","components/EditProductList.tsx","components/WoocommerceSettings.tsx","screens/authed/HomeScreen.tsx","navigation/authed/TmpAuthStack.tsx","navigation/authed/MainAuthed.tsx","screens/non-authed/Login.tsx","screens/non-authed/Register.tsx","navigation/non-authed/MainNonAuth.tsx","navigation/RouteManager.tsx","App.tsx"],"names":["module","exports","userState","entity","setUserState","val","set","cartState","setCartState","userStoreState","products","categories","setUserStoreState","transListState","setTransListState","woocommerceState","apiUrl","ck","cs","useWoocommerce","setWoocommerceState","DisplayTest","product","productIndex","myObj","useState","myObjProfile","setmyObjProfile","price","total","settotal","modalVisible","setModalVisible","DisplayOption","selectedValueList","e","index","isSelected","selectedCaseList","options","filter","op","label","selectedCaseKey","length","optionsList","opL","selectedCaseValue","selected","View","style","marginBottom","Text","fontWeight","fontSize","map","selection","listIndex","TouchableOpacity","backgroundColor","borderColor","borderWidth","flexDirection","justifyContent","padding","margin","onPress","newMyObjProfile","structuredClone","prevState","parseFloat","priceIncrease","parseInt","numOfSelectable","styles","h2Black","newSubtract","forEach","item","indexOfItem","title","name","touchable","Modal","visible","ScrollView","modalContainer","opsArray","opWVal","numberOfSelected","f","push","toFixed","description","btn","StyleSheet","create","sizeRow","alignItems","halfRow","width","toppingsContainer","flex","flexWrap","marginTop","dropDown","h2White","color","MenuScreen","section","catalog","container","catagory","height","wrapper","paddingLeft","paddingRight","DeliveryScreen","setDeliveryModal","setOngoingDelivery","setName","setPhone","setAddress","phone","address","deliveryChecked","setDeliveryChecked","value","onValueChange","variant","input","onChangeText","autoCorrect","contentContainerStyle","CashScreen","setCashModal","GetTrans","setChangeDue","cash","setCash","ChangeScreen","setChangeModal","setTotal","qz","require","websocket","connect","then","config","configs","print","disconnect","catch","err","console","error","openCash","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","updateData","collection","doc","currentUser","uid","update","updateTransList","transList","CartScreen","deliveryModal","cashModal","changeModal","ongoingDelivery","changeDue","cart","use","cartSub","setCartSub","useEffect","newVal","i","AddToList","payload","local","Print","method","transNum","today","Date","data","toLocaleDateString","toLocaleTimeString","cartItem","option","fetch","headers","body","JSON","stringify","response","json","respData","log","date","contentContainer","splice","disabled","ViewTransactions","todaysReceiptValue","todaysReceipts","todaysDetails","textAlign","paddingBottom","Spinner","isModalVisible","transparent","className","AddCategory","categoryName","setcategoryName","setisModalVisible","localCatalog","handleRemoveCategory","placeholder","DropDown","setValue","show","setShow","trailing","props","AddProduct","setProductModal","existingProduct","existingProductIndex","newProduct","setnewProduct","inputName","innerList","autoFocusOn","setautoFocusOn","handleDataUpdate","copyProductData","copy","scrollPosition","sessionStorage","getItem","window","scrollTo","removeItem","alignSelf","optionLblsValues","setoptionLblsValues","optionLbls","setoptionLbls","optionLblsLocal","checkUseE","localE","optionLblsValuesLocal","eVals","newOptionsList","setItem","pageYOffset","autoFocus","eInnerList","indexInnerList","marginLeft","marginRight","EditProductList","productModal","productEditModal","setProductEditModal","handleRemoveCatagory","borderRadius","WoocommerceSettings","wooCredentials","setapiUrl","setck","setcs","setuseWoocommerce","updateWooCredentials","HomeScreen","setSection","settings","setSettings","prevScreen","localStorage","titleStyle","signOut","category","Stack","createStackNavigator","TmpAuthStack","Navigator","screenOptions","headerShown","Screen","component","Home","MainAuthed","Login","navigation","email","setEmail","password","setPassword","showPassword","setShowPassword","safeareaContainer","Image","source","logo","innerContainer","textContentType","icon","secureTextEntry","uppercase","signInWithEmailAndPassword","signIn","navigate","resizeMode","Register","createUserWithEmailAndPassword","userAuth","user","paid","signUp","goBack","MainNonAuth","RouteManager","userS","loading","setloading","onAuthStateChanged","get","setTimeout","unsub","onSnapshot","interval","setInterval","Authorization","btoa","array2","newArray","concat","reduce","acc","curr","includes","transaction_id","newItems","printData","date_created","number","line_items","quantity","meta_data","meta","key","shipping","address_1","city","postcode","state","first_name","last_name","shipping_lines","line","method_title","payment_method_title","total_tax","alert","clearInterval","NavigationContainer","App"],"mappings":"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","file":"static/js/app.975693ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pathblazer-logo.17137072.png\";","import { entity } from \"simpler-state\";\n\nexport const userState = entity(null);\n\nexport const setUserState = (val) => {\n  userState.set(val);\n};\n\nexport const cartState = entity([]);\n\nexport const setCartState = (val) => {\n  cartState.set(val);\n};\n\nexport const addCartState = (val) => {\n  cartState.set((prevState) => [...prevState, val]);\n};\n\nexport const userStoreState = entity({ products: [], categories: [] });\n\nexport const setUserStoreState = (val) => {\n  userStoreState.set(val);\n};\n\nexport const transListState = entity([]);\n\nexport const setTransListState = (val) => {\n  transListState.set(val);\n};\n\nexport const woocommerceState = entity({\n  apiUrl: null,\n  ck: null,\n  cs: null,\n  useWoocommerce: false,\n});\n\nexport const setWoocommerceState = (val) => {\n  woocommerceState.set(val);\n};\n","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button } from \"@react-native-material/core\";\nimport { addCartState } from \"state/state\";\n\nconst DisplayTest = ({ product, productIndex }) => {\n  const myObj = product;\n  const [myObjProfile, setmyObjProfile] = useState(myObj);\n  const [total, settotal] = useState(myObj.price);\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const DisplayOption = ({ e, index }) => {\n    let isSelected = false;\n\n    const selectedCaseList = myObjProfile.options.filter(\n      (op) => op.label == e.selectedCaseKey\n    );\n\n    let selectedValueList;\n\n    if (selectedCaseList.length > 0) {\n      selectedValueList = selectedCaseList[0].optionsList.filter(\n        (opL) => opL.label == e.selectedCaseValue\n      );\n\n      if (selectedValueList.length > 0) {\n        isSelected = selectedValueList[0].selected === true;\n      }\n    }\n\n    if (e.selectedCaseKey === null || isSelected) {\n      return (\n        <View style={{ marginBottom: 25 }} key={index}>\n          <Text style={{ fontWeight: \"700\", fontSize: 18 }}>\n            Label: {e.label}\n          </Text>\n          {e.optionsList.map((selection, listIndex) => {\n            return (\n              <TouchableOpacity\n                key={listIndex}\n                style={[\n                  myObjProfile.options[index].optionsList[listIndex].selected ==\n                  true\n                    ? {\n                        backgroundColor: \"green\",\n                      }\n                    : {\n                        borderColor: \"black\",\n                        borderWidth: 2,\n                      },\n                  {\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    padding: 10,\n                    margin: 5,\n                  },\n                ]}\n                onPress={() => {\n                  const newMyObjProfile = structuredClone(myObjProfile);\n                  if (\n                    !newMyObjProfile.options[index].optionsList[listIndex]\n                      .selected == false\n                  ) {\n                    newMyObjProfile.options[index].optionsList[\n                      listIndex\n                    ].selected = false;\n                    settotal(\n                      (prevState) =>\n                        parseFloat(prevState) -\n                        parseFloat(\n                          newMyObjProfile.options[index].optionsList[listIndex]\n                            .priceIncrease\n                        )\n                    );\n                  } else {\n                    if (\n                      newMyObjProfile.options[index].optionsList.filter(\n                        (op) => op.selected === true\n                      ).length < parseInt(e.numOfSelectable) ||\n                      !e.numOfSelectable\n                    ) {\n                      newMyObjProfile.options[index].optionsList[\n                        listIndex\n                      ].selected = true;\n                      settotal(\n                        (prevState) =>\n                          parseFloat(prevState) +\n                          parseFloat(\n                            newMyObjProfile.options[index].optionsList[\n                              listIndex\n                            ].priceIncrease\n                          )\n                      );\n                    }\n                  }\n                  setmyObjProfile(newMyObjProfile);\n                }}\n              >\n                <Text style={styles.h2Black}>Name: {selection.label}</Text>\n                <Text style={styles.h2Black}>\n                  Price: ${selection.priceIncrease}\n                </Text>\n              </TouchableOpacity>\n            );\n          })}\n        </View>\n      );\n    } else if (isSelected === false) {\n      const newMyObjProfile = structuredClone(myObjProfile);\n      let newSubtract = 0;\n      newMyObjProfile.options[index].optionsList.forEach(\n        (item, indexOfItem) => {\n          if (item.selected === true) {\n            newSubtract += parseFloat(\n              newMyObjProfile.options[index].optionsList[indexOfItem]\n                .priceIncrease\n            );\n            newMyObjProfile.options[index].optionsList[indexOfItem].selected =\n              false;\n          }\n        }\n      );\n      if (newSubtract > 0) {\n        settotal((prevState) => parseFloat(prevState) - newSubtract);\n        setmyObjProfile(newMyObjProfile);\n      }\n    }\n    // return null;\n  };\n\n  const AddToCart = () => {\n    const opsArray = [];\n\n    myObjProfile.options.forEach((op) => {\n      let opWVal = `${op.label}: `;\n      const numberOfSelected = op.optionsList.filter(\n        (f) => f.selected === true\n      ).length;\n\n      if (numberOfSelected > 0) {\n        opWVal = `${op.label}: `;\n\n        op.optionsList.map((e, index) => {\n          if (e.selected === true) {\n            if (index < op.optionsList.length - 1 && numberOfSelected > 1) {\n              opWVal += e.label + \" , \";\n            } else {\n              opWVal += e.label;\n            }\n          }\n        });\n        opsArray.push(opWVal);\n      }\n    });\n\n    addCartState({\n      name: myObjProfile.name,\n      price: total.toFixed(2),\n      description: myObj.description,\n      options: opsArray,\n    });\n\n    setModalVisible(false);\n    setmyObjProfile(myObj);\n    settotal(myObjProfile.price);\n  };\n\n  return (\n    <View key={productIndex}>\n      <Button\n        title={myObj.name}\n        onPress={() => setModalVisible(true)}\n        style={styles.touchable}\n      />\n      <Modal visible={modalVisible}>\n        <ScrollView style={styles.modalContainer}>\n          <Text style={styles.h2Black}>Name: {myObj.name}</Text>\n          <Text style={[{ marginBottom: 25 }, styles.h2Black]}>\n            Price: {total}\n          </Text>\n          {myObj.options.map((e, index) => (\n            <DisplayOption e={e} index={index} key={index} />\n          ))}\n          <Button title=\"Add To Cart\" onPress={AddToCart} style={styles.btn} />\n          <Button\n            title=\"Close\"\n            onPress={() => setModalVisible(false)}\n            style={styles.btn}\n          />\n        </ScrollView>\n      </Modal>\n    </View>\n  );\n};\n\nexport default DisplayTest;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 10,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n  },\n  btn: {\n    marginBottom: 25,\n  },\n  dropDown: {\n    marginBottom: 25,\n  },\n  h2White: {\n    fontSize: 17,\n    color: \"white\",\n  },\n  h2Black: {\n    fontSize: 20,\n    color: \"black\",\n  },\n});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport DisplayTest from \"components/DisplayTest\";\n\nconst MenuScreen = ({ section, catalog }) => {\n  const InnerBlock = () => {\n    if (catalog.products) {\n      if (catalog.products.length > 0) {\n        if (!section) {\n          return catalog.products\n            .filter((e) => e.catagory === catalog.categories[0])\n            .map((product, index) => (\n              <DisplayTest product={product} productIndex={index} key={index} />\n            ));\n        } else {\n          return catalog.products\n            .filter((e) => e.catagory === section)\n            .map((product, index) => (\n              <DisplayTest product={product} productIndex={index} key={index} />\n            ));\n        }\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <InnerBlock />\n    </View>\n  );\n};\n\nexport default MenuScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 2,\n    height: \"100%\",\n  },\n  wrapper: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n});\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { cartState, setCartState } from \"state/state\";\nimport { Switch } from \"react-native-gesture-handler\";\n\nconst DeliveryScreen = ({\n  setDeliveryModal,\n  setOngoingDelivery,\n  setName,\n  setPhone,\n  setAddress,\n  name,\n  phone,\n  address,\n  deliveryChecked,\n  setDeliveryChecked,\n}) => {\n  return (\n    <ScrollView style={styles.modalContainer}>\n      <View style={styles.sizeRow}>\n        <Text>Enter Phone Order Details</Text>\n        <View>\n          <Text>Delivery?</Text>\n          <Switch\n            value={deliveryChecked}\n            onValueChange={() => {\n              setDeliveryChecked(!deliveryChecked);\n            }}\n          />\n        </View>\n      </View>\n      <TextInput\n        label=\"Name\"\n        variant=\"outlined\"\n        style={styles.input}\n        onChangeText={(val) => setName(val)}\n        autoCorrect={false}\n        value={name}\n      />\n      <TextInput\n        label=\"Phone #\"\n        variant=\"outlined\"\n        style={styles.input}\n        onChangeText={(val) => setPhone(val)}\n        autoCorrect={false}\n        value={phone}\n      />\n      {deliveryChecked && (\n        <TextInput\n          label=\"Address\"\n          variant=\"outlined\"\n          style={styles.input}\n          onChangeText={(val) => setAddress(val)}\n          autoCorrect={false}\n          value={address}\n        />\n      )}\n      <Button\n        title=\"Order\"\n        // onPress={GetTrans}\n        onPress={() => {\n          setDeliveryModal(false);\n          setOngoingDelivery(true);\n        }}\n        contentContainerStyle={styles.btn}\n        style={{ margin: 25 }}\n      />\n      <Button\n        title=\"Cancel\"\n        onPress={() => {\n          setDeliveryModal(false);\n          setOngoingDelivery(null);\n        }}\n        contentContainerStyle={styles.btn}\n        style={{ margin: 25 }}\n      />\n    </ScrollView>\n  );\n};\n\nexport default DeliveryScreen;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n  },\n  btn: {\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  input: {\n    marginTop: 25,\n    marginBottom: 25,\n  },\n});\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, TextInput } from \"@react-native-material/core\";\r\nimport { cartState, setCartState } from \"state/state\";\r\nimport { Switch } from \"react-native-gesture-handler\";\r\n\r\nconst CashScreen = ({ setCashModal, GetTrans, total, setChangeDue }) => {\r\n  const [cash, setCash] = useState(\"\");\r\n\r\n  return (\r\n    <ScrollView style={styles.modalContainer}>\r\n      <View style={styles.sizeRow}>\r\n        <Text>Cash Payment Details</Text>\r\n      </View>\r\n      <Text>Total: {total}</Text>\r\n      <TextInput\r\n        label=\"Enter Cash Given\"\r\n        variant=\"outlined\"\r\n        style={styles.input}\r\n        onChangeText={(val) => {\r\n          setCash(val);\r\n          setChangeDue((parseFloat(val) - total).toFixed(2));\r\n        }}\r\n        autoCorrect={false}\r\n        value={cash}\r\n      />\r\n      <Text>\r\n        Change Due:{\" \"}\r\n        {parseFloat(cash) > total && (parseFloat(cash) - total).toFixed(2)}\r\n      </Text>\r\n      <Button\r\n        title=\"Print\"\r\n        onPress={() => {\r\n          GetTrans(\"Cash\");\r\n          setCashModal(false);\r\n        }}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n      <Button\r\n        title=\"Cancel\"\r\n        onPress={() => setCashModal(false)}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default CashScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  sizeRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n  },\r\n  halfRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"50%\",\r\n  },\r\n  toppingsContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n  },\r\n  touchable: {\r\n    margin: 25,\r\n    width: 300,\r\n  },\r\n  modalContainer: {\r\n    padding: 50,\r\n  },\r\n  btn: {\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n  },\r\n});\r\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, TextInput } from \"@react-native-material/core\";\r\n\r\nconst ChangeScreen = ({ setChangeModal }) => {\r\n  const [total, setTotal] = useState(\"\");\r\n  const [cash, setCash] = useState(\"\");\r\n\r\n  const openCash = () => {\r\n    const qz = require(\"qz-tray\");\r\n    qz.websocket\r\n      .connect()\r\n      .then(function () {\r\n        let config = qz.configs.create(\"jZebra\");\r\n        return qz.print(config, [\r\n          \"\\x1B\" + \"\\x40\", // init\r\n          \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\r\n          \"Tomas Pizza\",\r\n          \"\\x0A\",\r\n          \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\r\n          \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\r\n          \"(519) 650-0409\" + \"\\x0A\", // text and line break\r\n          \"\\x0A\",\r\n          \"\\x0A\",\r\n          \"\\x0A\",\r\n          \"\\x0A\",\r\n          \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\r\n          `Total: $${total}` + \"\\x0A\",\r\n          `Cash Given: $${cash}` + \"\\x0A\",\r\n          `Change Due: $${(parseFloat(cash) - total).toFixed(2)}` + \"\\x0A\",\r\n          \"------------------------------------------\" + \"\\x0A\",\r\n          \"\\x0A\", // line break\r\n          \"\\x0A\", // line break\r\n          \"\\x0A\", // line break\r\n          \"\\x0A\", // line break\r\n          \"\\x0A\", // line break\r\n          \"\\x0A\", // line break\r\n          //\"\\x1D\" + \"\\x56\" + \"\\x00\",\r\n          \"\\x1D\" + \"\\x56\" + \"\\x30\",\r\n          \"\\x10\" + \"\\x14\" + \"\\x01\" + \"\\x00\" + \"\\x05\",\r\n        ]);\r\n      })\r\n      .then(qz.websocket.disconnect)\r\n      .catch(function (err) {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.modalContainer}>\r\n      <View style={styles.sizeRow}>\r\n        <Text>Cash Payment Details</Text>\r\n      </View>\r\n      <TextInput\r\n        label=\"Enter Total\"\r\n        variant=\"outlined\"\r\n        style={styles.input}\r\n        onChangeText={(val) => setTotal(val)}\r\n        autoCorrect={false}\r\n        value={total}\r\n      />\r\n      <TextInput\r\n        label=\"Enter Cash Given\"\r\n        variant=\"outlined\"\r\n        style={styles.input}\r\n        onChangeText={(val) => setCash(val)}\r\n        autoCorrect={false}\r\n        value={cash}\r\n      />\r\n      <Text>Change Due: {(parseFloat(cash) - total).toFixed(2)}</Text>\r\n      <Button\r\n        title=\"Open Cash\"\r\n        onPress={() => {\r\n          openCash();\r\n          setChangeModal(false);\r\n        }}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n      <Button\r\n        title=\"Cancel\"\r\n        onPress={() => setChangeModal(false)}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default ChangeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  sizeRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n  },\r\n  halfRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"50%\",\r\n  },\r\n  toppingsContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n  },\r\n  touchable: {\r\n    margin: 25,\r\n    width: 300,\r\n  },\r\n  modalContainer: {\r\n    padding: 50,\r\n  },\r\n  btn: {\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n  },\r\n});\r\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialize Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDmtlrkfZRbFy8P7D4BFXTIkzMDC_DP5n8\",\n  authDomain: \"posmate-5fc0a.firebaseapp.com\",\n  projectId: \"posmate-5fc0a\",\n  storageBucket: \"posmate-5fc0a.appspot.com\",\n  messagingSenderId: \"48463376409\",\n  appId: \"1:48463376409:web:b427a4fbc3c210a5977a88\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// Initialize Cloud Firestore and get a reference to the service\nexport const auth = firebase.auth();\n\nexport const db = firebase.firestore();\n","import { auth, db } from \"./firebaseConfig\";\n\nexport const signIn = (email, password) =>\n  auth.signInWithEmailAndPassword(email, password);\n\nexport const signUp = (email, password) =>\n  auth\n    .createUserWithEmailAndPassword(email, password)\n    .then((userAuth) => {\n      if (userAuth.user) {\n        db.collection(\"users\")\n          .doc(userAuth.user.uid)\n          .set({\n            paid: true,\n            products: [],\n            categories: [],\n            wooCredentials: { ck: null, cs: null, useWoocommerce: false },\n            //company name\n            //adddress\n            //etc\n          });\n      }\n    })\n    .catch((e) => console.log(e));\n\nexport const updateData = (categories, products) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    products: products,\n    categories: categories,\n  });\n};\n\nexport const updateWooCredentials = (wooCredentials) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    wooCredentials: wooCredentials,\n  });\n};\n\nexport const updateTransList = (transList) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    transList: transList,\n  });\n};\n","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  cartState,\n  cartSubState,\n  setCartState,\n  setTransListState,\n  transListState,\n} from \"state/state\";\nimport { Button } from \"@react-native-material/core\";\nimport DeliveryScreen from \"components/DeliveryScreen\";\nimport CashScreen from \"components/CashScreen\";\nimport ChangeScreen from \"components/ChangeScreen\";\nimport { updateTransList } from \"state/firebaseFunctions\";\n\nconst CartScreen = () => {\n  const [deliveryModal, setDeliveryModal] = useState(false);\n  const [cashModal, setCashModal] = useState(false);\n  const [changeModal, setChangeModal] = useState(false);\n  const [ongoingDelivery, setOngoingDelivery] = useState(null);\n  const [name, setName] = useState();\n  const [phone, setPhone] = useState();\n  const [address, setAddress] = useState();\n  const [deliveryChecked, setDeliveryChecked] = useState(false);\n  const [changeDue, setChangeDue] = useState();\n  const cart = cartState.use();\n  const transList = transListState.use();\n  const [cartSub, setCartSub] = useState(0);\n\n  useEffect(() => {\n    if (cart.length > 0) {\n      let newVal = 0;\n      for (var i = 0; i < cart.length; i++) {\n        newVal += parseFloat(cart[i].price);\n      }\n      setCartSub(newVal);\n    } else {\n      setCartSub(0);\n    }\n  }, [cart]);\n\n  const AddToList = async (payload) => {\n    const local = structuredClone(transList);\n    local.push(payload);\n    updateTransList(local);\n    setTransListState(local);\n  };\n\n  const Print = (method) => {\n    const transNum = transList.length + 1;\n    if (method === \"deliveryOrder\") {\n      let total = 5.5;\n      const today = new Date();\n\n      let data = [\n        \"\\x1B\" + \"\\x40\", // init\n        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n        \"Tomas Pizza\",\n        \"\\x0A\",\n        \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n        \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n        \"(519) 650-0409\" + \"\\x0A\", // text and line break\n        today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n        \"\\x0A\",\n        `Transaction # ${transNum}` + \"\\x0A\",\n        \"\\x0A\",\n        \"Delivery Order: $5.50 Fee\" + \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      ];\n\n      cart.map((cartItem) => {\n        total += parseFloat(cartItem.price);\n        data.push(`Name: ${cartItem.name}`);\n        data.push(\"\\x0A\");\n        data.push(`Price: $${cartItem.price}`);\n\n        if (cartItem.options) {\n          data.push(\"\\x0A\");\n          cartItem.options.map((option) => {\n            data.push(option);\n            data.push(\"\\x0A\");\n          });\n        }\n        data.push(\"\\x0A\" + \"\\x0A\");\n      });\n\n      total = total * 1.13;\n      total = total.toFixed(2);\n\n      //push ending\n      data.push(\n        \"\\x0A\",\n        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Name: \" + name,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Phone #:  \" + phone,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Address #:  \" + address,\n        \"\\x0A\" + \"\\x0A\",\n        \"Total Including (13% Tax): \" + total + \"\\x0A\" + \"\\x0A\",\n        \"------------------------------------------\" + \"\\x0A\",\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n      );\n      fetch(\"http://localhost:8080/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n        .then((respData) => {\n          console.log(respData);\n        });\n\n      AddToList({\n        date: today,\n        transNum: transNum,\n        total: total,\n        method: \"deliveryOrder\",\n        cart: cart,\n      });\n\n      setCartState([]);\n      setDeliveryModal(false);\n    }\n    if (method === \"pickupOrder\") {\n      let total = 0;\n      const today = new Date();\n\n      let data = [\n        \"\\x1B\" + \"\\x40\", // init\n        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n        \"Tomas Pizza\",\n        \"\\x0A\",\n        \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n        \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n        \"(519) 650-0409\" + \"\\x0A\", // text and line break\n        today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n        \"\\x0A\",\n        `Transaction # ${transNum}` + \"\\x0A\",\n        \"\\x0A\",\n        \"Pickup Order\" + \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      ];\n\n      cart.map((cartItem) => {\n        total += parseFloat(cartItem.price);\n        data.push(`Name: ${cartItem.name}`);\n        data.push(\"\\x0A\");\n        data.push(`Price: $${cartItem.price}`);\n\n        if (cartItem.options) {\n          data.push(\"\\x0A\");\n          cartItem.options.map((option) => {\n            data.push(option);\n            data.push(\"\\x0A\");\n          });\n        }\n        data.push(\"\\x0A\" + \"\\x0A\");\n      });\n\n      total = total * 1.13;\n      total = total.toFixed(2);\n\n      //push ending\n      data.push(\n        \"\\x0A\",\n        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Name: \" + name,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Phone #:  \" + phone,\n        \"\\x0A\" + \"\\x0A\",\n        \"Total Including (13% Tax): \" + total + \"\\x0A\" + \"\\x0A\",\n        \"------------------------------------------\" + \"\\x0A\",\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n      );\n      fetch(\"http://localhost:8080/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n        .then((respData) => {\n          console.log(respData);\n        });\n\n      AddToList({\n        date: today,\n        transNum: transNum,\n        total: total,\n        method: \"pickupOrder\",\n        cart: cart,\n      });\n\n      setCartState([]);\n      setDeliveryModal(false);\n    }\n\n    let total = 0;\n    const today = new Date();\n\n    let data = [\n      \"\\x1B\" + \"\\x40\", // init\n      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n      \"Tomas Pizza\",\n      \"\\x0A\",\n      \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n      \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n      \"(519) 650-0409\" + \"\\x0A\", // text and line break\n      today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n      \"\\x0A\",\n      `Transaction # ${transNum}` + \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n    ];\n\n    cart.map((cartItem) => {\n      total += parseFloat(cartItem.price);\n      data.push(`Name: ${cartItem.name}`);\n      data.push(\"\\x0A\");\n      data.push(\"\\x0A\");\n      data.push(`Price: $${cartItem.price}`);\n\n      if (cartItem.options) {\n        data.push(\"\\x0A\");\n        cartItem.options.map((option) => {\n          data.push(option);\n          data.push(\"\\x0A\");\n        });\n      }\n      data.push(\"\\x0A\" + \"\\x0A\");\n    });\n\n    total = total * 1.13;\n    total = total.toFixed(2);\n\n    if (method === \"Cash\") {\n      //push ending\n      data.push(\n        \"\\x0A\",\n        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n        \"\\x0A\" + \"\\x0A\",\n        \"Payment Method: \" + method + \"\\x0A\" + \"\\x0A\",\n        \"Total Including (13% Tax): \" + \"$\" + total + \"\\x0A\" + \"\\x0A\",\n        \"Change Due: \" + \"$\" + changeDue + \"\\x0A\" + \"\\x0A\",\n        \"------------------------------------------\" + \"\\x0A\",\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n        \"\\x1D\" + \"\\x56\" + \"\\x30\",\n        \"\\x10\" + \"\\x14\" + \"\\x01\" + \"\\x00\" + \"\\x05\"\n      );\n    } else {\n      data.push(\n        \"\\x0A\",\n        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n        \"\\x0A\" + \"\\x0A\",\n        \"Payment Method: \" + method + \"\\x0A\" + \"\\x0A\",\n        \"Total Including (13% Tax): \" + \"$\" + total + \"\\x0A\" + \"\\x0A\",\n        \"------------------------------------------\" + \"\\x0A\",\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n      );\n    }\n\n    fetch(\"http://localhost:8080/print\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((respData) => {\n        console.log(respData);\n      });\n\n    AddToList({\n      date: today,\n      transNum: transNum,\n      total: total,\n      method: method,\n      cart: cart,\n    });\n\n    setCartState([]);\n  };\n\n  const DeliveryBtn = () => {\n    if (ongoingDelivery === null) {\n      return (\n        <Button\n          title=\"Phone Order\"\n          onPress={() => setDeliveryModal(true)}\n          disabled={cart.length > 0}\n          style={{ marginBottom: 20 }}\n        />\n      );\n    }\n    if (ongoingDelivery && cart.length > 0) {\n      return (\n        <Button\n          title=\"Complete\"\n          onPress={() => {\n            Print(deliveryChecked ? \"deliveryOrder\" : \"pickupOrder\");\n            setOngoingDelivery(null);\n            setName(null);\n            setPhone(null);\n            setAddress(null);\n          }}\n          style={{ marginBottom: 20 }}\n        />\n      );\n    } else {\n      return (\n        <Button\n          title=\"Cancel\"\n          onPress={() => setOngoingDelivery(null)}\n          style={{ marginBottom: 20 }}\n        />\n      );\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={styles.container}\n        contentContainerStyle={styles.contentContainer}\n      >\n        <View>\n          {cart.map((cartItem, index) => (\n            <View style={{ marginBottom: 20 }}>\n              <Text>Name: {cartItem.name}</Text>\n              <Text>Price: {cartItem.price}</Text>\n              {cartItem.description && (\n                <Text>Description: {cartItem.description}</Text>\n              )}\n              {cartItem.options &&\n                cartItem.options.map((option) => <Text>{option}</Text>)}\n              <Text\n                style={{ color: \"blue\" }}\n                onPress={() => {\n                  const local = structuredClone(cart);\n                  local.splice(index, 1);\n                  setCartState(local);\n                }}\n              >\n                Remove\n              </Text>\n            </View>\n          ))}\n        </View>\n        <View>\n          <Text>Sub: {cartSub.toFixed(2)}</Text>\n          <Text>Total: {(cartSub * 1.13).toFixed(2)}</Text>\n          <Button\n            title=\"Cash\"\n            onPress={() => setCashModal(true)}\n            disabled={cart.length < 1 || ongoingDelivery}\n            style={{ marginBottom: 20 }}\n          />\n          <Button\n            title=\"Card\"\n            onPress={() => Print(\"Card\")}\n            disabled={cart.length < 1 || ongoingDelivery}\n            style={{ marginBottom: 20 }}\n          />\n          <DeliveryBtn />\n          <Button\n            title=\"Change\"\n            onPress={() => setChangeModal(true)}\n            disabled={cart.length > 0 || ongoingDelivery}\n          />\n        </View>\n        <Modal visible={deliveryModal}>\n          <DeliveryScreen\n            setDeliveryModal={setDeliveryModal}\n            setOngoingDelivery={setOngoingDelivery}\n            setName={setName}\n            setPhone={setPhone}\n            setAddress={setAddress}\n            name={name}\n            phone={phone}\n            address={address}\n            deliveryChecked={deliveryChecked}\n            setDeliveryChecked={setDeliveryChecked}\n          />\n        </Modal>\n        <Modal visible={cashModal}>\n          <CashScreen\n            setCashModal={setCashModal}\n            GetTrans={() => Print(\"Cash\")}\n            total={(cartSub * 1.13).toFixed(2)}\n            setChangeDue={setChangeDue}\n          />\n        </Modal>\n        <Modal visible={changeModal}>\n          <ChangeScreen setChangeModal={setChangeModal} />\n        </Modal>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default CartScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"lightgrey\",\n    flex: 1,\n    height: \"100%\",\n  },\n  contentContainer: {\n    backgroundColor: \"lightgrey\",\n    flex: 1,\n    height: \"100%\",\n    justifyContent: \"space-between\",\n    padding: 20,\n  },\n});\n","import { ScrollView, StyleSheet, View } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Text } from \"@react-native-material/core\";\nimport { transListState } from \"state/state\";\n\nconst ViewTransactions = () => {\n  const res = { transList: transListState.use() };\n  const [transList, setTransList] = useState([]);\n  const today = new Date();\n  const [todaysDetails, setTodaysDetails] = useState({\n    todaysReceiptValue: 0,\n    todaysReceipts: 0,\n  });\n\n  // useEffect(() => {\n  //   // GetTrans();\n  //   const reversed = res.transList.reverse();\n  //   setTransList(reversed);\n  //   const todaysReceiptValue = res.transList.reduce((accumulator, current) => {\n  //     const date = new Date(current.date);\n  //     if (date.toLocaleDateString() === today.toLocaleDateString()) {\n  //       return accumulator + parseFloat(current.total);\n  //     } else {\n  //       return accumulator;\n  //     }\n  //   }, 0);\n  //   const todaysReceipts = res.transList.reduce((accumulator, current) => {\n  //     const date = new Date(current.date);\n  //     if (date.toLocaleDateString() === today.toLocaleDateString()) {\n  //       return accumulator + 1;\n  //     } else {\n  //       return accumulator;\n  //     }\n  //   }, 0);\n  //   setTodaysDetails({\n  //     todaysReceiptValue: todaysReceiptValue.toFixed(2),\n  //     todaysReceipts: todaysReceipts,\n  //   });\n  // }, []);\n\n  // const PrintTodaysTotal = () => {\n  //   const qz = require(\"qz-tray\");\n\n  //   let data = [\n  //     \"\\x1B\" + \"\\x40\", // init\n  //     \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n  //     \"Tomas Pizza\",\n  //     \"\\x0A\",\n  //     \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n  //     \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n  //     \"(519) 650-0409\" + \"\\x0A\", // text and line break\n  //     today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n  //     \"\\x0A\",\n  //     \"\\x0A\",\n  //     \"\\x0A\",\n  //     \"\\x0A\",\n  //     \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n  //     \"\\x0A\" + \"\\x0A\",\n  //     \"Number Of Receipts: \" + todaysDetails.todaysReceipts + \"\\x0A\" + \"\\x0A\",\n  //     \"Sub-Total: \" +\n  //       \"$\" +\n  //       (todaysDetails.todaysReceiptValue / 1.13).toFixed(2) +\n  //       \"\\x0A\" +\n  //       \"\\x0A\",\n  //     \"Tax: \" +\n  //       \"$\" +\n  //       ((todaysDetails.todaysReceiptValue / 1.13) * 0.13).toFixed(2) +\n  //       \"\\x0A\" +\n  //       \"\\x0A\",\n  //     \"Total Including (13% Tax): \" +\n  //       \"$\" +\n  //       todaysDetails.todaysReceiptValue +\n  //       \"\\x0A\" +\n  //       \"\\x0A\",\n  //     \"------------------------------------------\" + \"\\x0A\",\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x1D\" + \"\\x56\" + \"\\x00\",\n  //     \"\\x1D\" + \"\\x56\" + \"\\x30\",\n  //   ];\n\n  //   qz.websocket\n  //     .connect()\n  //     .then(function () {\n  //       let config = qz.configs.create(\"jZebra\");\n  //       return qz.print(config, data);\n  //     })\n  //     .then(qz.websocket.disconnect)\n  //     .catch(function (err) {\n  //       console.error(err);\n  //     });\n  // };\n\n  // const Print = () => {\n  //   const qz = require(\"qz-tray\");\n\n  //   const todaysReceiptsList = transList.filter(\n  //     (i) =>\n  //       new Date(i.date).toLocaleDateString() === today.toLocaleDateString()\n  //   );\n\n  //   let data = [];\n\n  //   todaysReceiptsList.forEach((element) => {\n  //     let total = 0;\n  //     data.push(\n  //       \"\\x1B\" + \"\\x40\", // init\n  //       \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n  //       \"Tomas Pizza\",\n  //       \"\\x0A\",\n  //       \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n  //       \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n  //       \"(519) 650-0409\" + \"\\x0A\", // text and line break\n  //       today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n  //       \"\\x0A\",\n  //       `Transaction # ${element.transNum}` + \"\\x0A\",\n  //       \"\\x0A\",\n  //       \"\\x0A\",\n  //       \"\\x0A\",\n  //       \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n  //     );\n\n  //     element.cart?.map((cartItem) => {\n  //       total += cartItem.price;\n  //       data.push(`Name: ${cartItem.name}`);\n  //       data.push(\"\\x0A\");\n  //       data.push(`Quantity: ${cartItem.quantity}`);\n  //       data.push(\"\\x0A\");\n  //       data.push(`Price: $${cartItem.price}`);\n\n  //       if (cartItem.options) {\n  //         cartItem.options?.map((option) => {\n  //           data.push(option);\n  //           data.push(\"\\x0A\");\n  //         });\n  //       } else {\n  //         data.push(\"\\x0A\" + \"\\x0A\");\n  //       }\n  //     });\n\n  //     data.push(\n  //       \"\\x0A\",\n  //       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n  //       \"\\x0A\" + \"\\x0A\",\n  //       \"Payment Method: \" + element.method + \"\\x0A\" + \"\\x0A\",\n  //       \"Total Including (13% Tax): \" + \"$\" + element.total + \"\\x0A\" + \"\\x0A\",\n  //       \"------------------------------------------\" + \"\\x0A\",\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\" // line break\n  //     );\n  //   });\n\n  //   data.push(\"\\x1D\" + \"\\x56\" + \"\\x00\", \"\\x1D\" + \"\\x56\" + \"\\x30\");\n\n  //   qz.websocket\n  //     .connect()\n  //     .then(function () {\n  //       let config = qz.configs.create(\"jZebra\");\n  //       return qz.print(config, data);\n  //     })\n  //     .then(qz.websocket.disconnect)\n  //     .catch(function (err) {\n  //       console.error(err);\n  //     });\n  // };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ textAlign: \"center\", margin: 25 }}>\n        List Of Transactions\n      </Text>\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Price: {todaysDetails.todaysReceiptValue}\n        </Text>\n        <Button\n          style={{ height: 40, alignItems: \"center\", justifyContent: \"center\" }}\n          title=\"Print Todays Receipts\"\n          // onPress={PrintTodaysTotal}\n        />\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Receipts: {todaysDetails.todaysReceipts}\n        </Text>\n      </View>\n      <View style={styles.contentContainer}>\n        {/* {transList &&\n          transList?.map((element, index) => {\n            const date = new Date(element.date);\n            // if (date.toLocaleDateString() === today.toLocaleDateString()) {\n            //   setTodaysDetails((prevState) => prevState + 1);\n            // }\n            return (\n              <View\n                style={{ backgroundColor: \"grey\", padding: 30, margin: 10 }}\n                key={index}\n              >\n                {element.cart?.map((cartItem, index) => (\n                  <View style={{ marginBottom: 20 }} key={index}>\n                    <Text>Name: {cartItem.name}</Text>\n                    <Text>Quantity: {cartItem.quantity}</Text>\n                    <Text>Price: {cartItem.price}</Text>\n                    <Text>Date: {date.toLocaleDateString()}</Text>\n                    {cartItem.options &&\n                      cartItem.options?.map((option) => <Text>{option}</Text>)}\n                  </View>\n                ))}\n                <Button\n                  title=\"Print\"\n                  onPress={() => {\n                    let total = 0;\n                    const qz = require(\"qz-tray\");\n                    const today = new Date();\n\n                    let data = [\n                      \"\\x1B\" + \"\\x40\", // init\n                      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                      \"Tomas Pizza\",\n                      \"\\x0A\",\n                      \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n                      \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n                      \"(519) 650-0409\" + \"\\x0A\", // text and line break\n                      today.toLocaleDateString() +\n                        \" \" +\n                        today.toLocaleTimeString() +\n                        \"\\x0A\",\n                      \"\\x0A\",\n                      `Transaction # ${element.transNum}` + \"\\x0A\",\n                      \"\\x0A\",\n                      \"\\x0A\",\n                      \"\\x0A\",\n                      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n                    ];\n\n                    element.cart?.map((cartItem) => {\n                      total += parseFloat(cartItem.price);\n                      data.push(`Name: ${cartItem.name}`);\n                      data.push(\"\\x0A\");\n                      data.push(`Quantity: ${cartItem.quantity}`);\n                      data.push(\"\\x0A\");\n                      data.push(`Price: $${cartItem.price}`);\n\n                      if (cartItem.options) {\n                        data.push(\"\\x0A\");\n                        cartItem.options?.map((option) => {\n                          data.push(option);\n                          data.push(\"\\x0A\");\n                        });\n                      }\n                      data.push(\"\\x0A\" + \"\\x0A\");\n                    });\n\n                    total = total * 1.13;\n                    total = total.toFixed(2);\n\n                    //push ending\n                    data.push(\n                      \"\\x0A\",\n                      \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                      \"\\x0A\" + \"\\x0A\",\n                      \"Total Including (13% Tax): \" +\n                        \"$\" +\n                        total +\n                        \"\\x0A\" +\n                        \"\\x0A\",\n                      \"------------------------------------------\" + \"\\x0A\",\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n                      \"\\x1D\" + \"\\x56\" + \"\\x30\"\n                    );\n\n                    qz.websocket\n                      .connect()\n                      .then(function () {\n                        let config = qz.configs.create(\"jZebra\");\n                        return qz.print(config, data);\n                      })\n                      .then(qz.websocket.disconnect)\n                      .catch(function (err) {\n                        console.error(err);\n                      });\n                  }}\n                />\n              </View>\n            );\n          })} */}\n      </View>\n    </View>\n  );\n};\n\nexport default ViewTransactions;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\",\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n});\n","import { Modal, StyleSheet, Text, View } from \"react-native\";\nimport React from \"react\";\n\nconst Spinner = ({ isModalVisible }) => {\n  return (\n    <Modal visible={isModalVisible} transparent={true}>\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flex: 1,\n          backgroundColor: \"rgba(52, 52, 52, 0.8)\",\n        }}\n      >\n        <style>\n          {`.loader {\n  border: 16px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 16px solid #3498db;\n  width: 120px;\n  height: 120px;\n  -webkit-animation: spin 2s linear infinite; /* Safari */\n  animation: spin 2s linear infinite;\n}\n\n/* Safari */\n@-webkit-keyframes spin {\n  0% { -webkit-transform: rotate(0deg); }\n  100% { -webkit-transform: rotate(360deg); }\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}`}\n        </style>\n\n        <div className=\"loader\"></div>\n      </View>\n    </Modal>\n  );\n};\n\nexport default Spinner;\n\nconst styles = StyleSheet.create({});\n","import {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport Spinner from \"./Spinner\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst AddCategory = () => {\n  const catalog = userStoreState.use();\n  const [categoryName, setcategoryName] = useState();\n  const [isModalVisible, setisModalVisible] = useState(false);\n\n  function handleDataUpdate() {\n    updateData([...catalog.categories, categoryName], catalog.products);\n    setisModalVisible(true);\n  }\n\n  function handleRemoveCategory(index) {\n    const localCatalog = structuredClone(catalog);\n    localCatalog.categories.splice(index, 1);\n\n    updateData(localCatalog.categories, localCatalog.products);\n    setisModalVisible(true);\n  }\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      {catalog.categories.map((e, index) => {\n        return (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              padding: 15,\n              margin: 10,\n              backgroundColor: \"lightgrey\",\n            }}\n          >\n            <Text style={{ fontSize: 17 }}>{e}</Text>\n            <TouchableOpacity\n              onPress={() => handleRemoveCategory(index)}\n              style={{\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"red\", fontWeight: \"600\" }}>Remove X</Text>\n            </TouchableOpacity>\n          </View>\n        );\n      })}\n      <TextInput\n        placeholder=\"Enter New Category\"\n        onChangeText={(val) => setcategoryName(val)}\n        style={{ margin: 10 }}\n      />\n      <Button\n        title=\"Add New Category\"\n        onPress={handleDataUpdate}\n        style={{ margin: 10 }}\n      />\n      <Spinner isModalVisible={isModalVisible} />\n    </ScrollView>\n  );\n};\n\nexport default AddCategory;\n\nconst styles = StyleSheet.create({});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { ListItem } from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nconst DropDown = ({ label, options, setValue, value, style }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <View style={[styles.container, style]}>\n      <ListItem\n        title={value ? value : label}\n        trailing={(props) => (\n          <Icon name={show ? \"chevron-up\" : \"chevron-down\"} {...props} />\n        )}\n        onPress={() => setShow((prevState) => !prevState)}\n      />\n      {show && (\n        <>\n          {options.map((option) => (\n            <ListItem\n              title={option}\n              onPress={() => {\n                setValue(option);\n                setShow(false);\n              }}\n            />\n          ))}\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default DropDown;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n  },\n});\n","import {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"state/state\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst AddProduct = ({\n  setProductModal,\n  setisModalVisible,\n  existingProduct,\n  existingProductIndex,\n}) => {\n  const catalog = userStoreState.use();\n  const [newProduct, setnewProduct] = useState(\n    existingProduct\n      ? existingProduct\n      : {\n          name: null,\n          price: null,\n          catagory: null,\n          options: [],\n          description: null,\n        }\n  );\n  const [autoFocusOn, setautoFocusOn] = useState({\n    index: null,\n    inputName: null,\n    innerList: null,\n  });\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(\n        [...catalog.categories],\n        [...catalog.products, copyProductData]\n      );\n    } else if (existingProduct) {\n      let copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n\n      updateData([...catalog.categories], copy);\n    } else {\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\n    }\n    setisModalVisible(true);\n  }\n\n  useEffect(() => {\n    const scrollPosition = sessionStorage.getItem(\"scrollPosition\");\n    if (scrollPosition) {\n      window.scrollTo(0, parseInt(scrollPosition));\n      sessionStorage.removeItem(\"scrollPosition\");\n    }\n  }, [newProduct]);\n\n  const OptionsAddingSection = () => {\n    return (\n      <View>\n        {newProduct.options.map((e, index) => {\n          const [optionLblsValues, setoptionLblsValues] = useState([]);\n          const [optionLbls, setoptionLbls] = useState([]);\n\n          useEffect(() => {\n            //setnewProduct(newProductSaved.current);\n            if (newProduct.options.length > 1) {\n              const optionLblsLocal = [];\n              newProduct.options.forEach((checkUseE) => {\n                if (checkUseE.label !== e.label)\n                  optionLblsLocal.push(checkUseE.label);\n              });\n              setoptionLbls(optionLblsLocal);\n            }\n          }, []);\n\n          useEffect(() => {\n            if (e.selectedCaseKey !== null) {\n              const local = newProduct.options.filter(\n                (localE) => localE.label == e.selectedCaseKey\n              );\n              const optionLblsValuesLocal = [];\n              local[0].optionsList.forEach((eVals) => {\n                optionLblsValuesLocal.push(eVals.label);\n              });\n              setoptionLblsValues(optionLblsValuesLocal);\n            }\n          }, [optionLbls]);\n\n          return (\n            <View\n              style={{\n                padding: 25,\n                margin: 15,\n                backgroundColor: \"lightgrey\",\n              }}\n            >\n              <TouchableOpacity\n                onPress={() => {\n                  const copy = structuredClone(newProduct);\n                  copy.options.push({\n                    ...e,\n                    label: e.label + \" Copy\",\n                  });\n\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: copy.options,\n                  }));\n                }}\n              >\n                <Text\n                  style={{\n                    marginBottom: 25,\n                    fontWeight: \"700\",\n                    color: \"red\",\n                  }}\n                >\n                  Copy\n                </Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                onPress={() => {\n                  const copy = structuredClone(newProduct);\n                  copy.options.splice(index, 1);\n\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: copy.options,\n                  }));\n                }}\n              >\n                <Text\n                  style={{\n                    marginBottom: 25,\n                    fontWeight: \"700\",\n                    color: \"red\",\n                  }}\n                >\n                  X\n                </Text>\n              </TouchableOpacity>\n              <TextInput\n                placeholder=\"Enter Select List Label\"\n                onChangeText={(val) => {\n                  const newOptionsList = [...newProduct.options];\n                  newOptionsList[index].label = val;\n                  setautoFocusOn({\n                    index: index,\n                    inputName: \"label\",\n                    innerList: false,\n                  });\n                  sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: newOptionsList,\n                  }));\n                }}\n                value={e.label}\n                autoFocus={\n                  autoFocusOn.index === index &&\n                  autoFocusOn.innerList === false &&\n                  autoFocusOn.inputName === \"label\"\n                }\n                style={{ marginBottom: 25 }}\n              />\n              <TextInput\n                placeholder=\"Enter Number Of Selectable; If There Is\"\n                onChangeText={(val) => {\n                  const newOptionsList = [...newProduct.options];\n                  newOptionsList[index].numOfSelectable = val;\n                  setautoFocusOn({\n                    index: index,\n                    inputName: \"numOfSelectable\",\n                    innerList: false,\n                  });\n                  sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: newOptionsList,\n                  }));\n                }}\n                value={e.numOfSelectable}\n                autoFocus={\n                  autoFocusOn.index === index &&\n                  autoFocusOn.innerList === false &&\n                  autoFocusOn.inputName === \"numOfSelectable\"\n                }\n                style={{ marginBottom: 25 }}\n              />\n              {e.optionsList.map((eInnerList, indexInnerList) => {\n                return (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      marginBottom: 25,\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <TextInput\n                      placeholder=\"Enter Option Label\"\n                      onChangeText={(val) => {\n                        const newOptionsList = structuredClone(newProduct);\n                        newOptionsList.options[index].optionsList[\n                          indexInnerList\n                        ].label = val;\n                        setautoFocusOn({\n                          index: indexInnerList,\n                          inputName: \"label\",\n                          innerList: true,\n                        });\n                        sessionStorage.setItem(\n                          \"scrollPosition\",\n                          window.pageYOffset\n                        );\n                        setnewProduct(newOptionsList);\n                      }}\n                      value={eInnerList.label}\n                      autoFocus={\n                        autoFocusOn.index === indexInnerList &&\n                        autoFocusOn.innerList === true &&\n                        autoFocusOn.inputName === \"label\"\n                      }\n                    />\n                    <TextInput\n                      placeholder=\"Enter price increase\"\n                      onChangeText={(val) => {\n                        const newOptionsList = structuredClone(newProduct);\n                        newOptionsList.options[index].optionsList[\n                          indexInnerList\n                        ].priceIncrease = val;\n                        setautoFocusOn({\n                          index: indexInnerList,\n                          inputName: \"priceIncrease\",\n                          innerList: true,\n                        });\n                        sessionStorage.setItem(\n                          \"scrollPosition\",\n                          window.pageYOffset\n                        );\n                        setnewProduct(newOptionsList);\n                      }}\n                      value={eInnerList.priceIncrease}\n                      autoFocus={\n                        autoFocusOn.index === indexInnerList &&\n                        autoFocusOn.innerList === true &&\n                        autoFocusOn.inputName === \"priceIncrease\"\n                      }\n                      style={{ marginLeft: 20, marginRight: 20 }}\n                    />\n                    <TouchableOpacity\n                      onPress={() => {\n                        const copy = structuredClone(newProduct);\n                        copy.options[index].optionsList.splice(\n                          indexInnerList,\n                          1\n                        );\n\n                        setnewProduct((prevState) => ({\n                          ...prevState,\n                          options: copy.options,\n                        }));\n\n                        setnewProduct((prevState) => ({\n                          ...prevState,\n                          options: copy.options,\n                        }));\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontWeight: \"700\",\n                          color: \"red\",\n                        }}\n                      >\n                        X\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                );\n              })}\n              <Button\n                title=\"Add Option Choice\"\n                onPress={() => {\n                  const newOptionsList = [...newProduct.options];\n                  newOptionsList[index].optionsList.push({\n                    label: null,\n                    priceIncrease: null,\n                  });\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: newOptionsList,\n                  }));\n                  setautoFocusOn({\n                    index: newOptionsList[index].optionsList.length - 1,\n                    inputName: \"label\",\n                    innerList: true,\n                  });\n                  sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                }}\n                style={{ marginBottom: 25 }}\n              />\n              {optionLbls.length > 1 && (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    marginBottom: 25,\n                  }}\n                >\n                  <DropDown\n                    label=\"Show if...\"\n                    options={optionLbls}\n                    setValue={(val) => {\n                      const newOptionsList = [...newProduct.options];\n                      newOptionsList[index].selectedCaseKey = val;\n                      setnewProduct((prevState) => ({\n                        ...prevState,\n                        options: newOptionsList,\n                      }));\n                      sessionStorage.setItem(\n                        \"scrollPosition\",\n                        window.pageYOffset\n                      );\n                      setautoFocusOn({\n                        index: null,\n                        inputName: null,\n                        innerList: null,\n                      });\n                    }}\n                    value={e.selectedCaseKey}\n                    style={{ marginBottom: 25 }}\n                  />\n                  <Text>\"=\"</Text>\n                  <DropDown\n                    label=\"Show if...\"\n                    options={optionLblsValues}\n                    setValue={(val) => {\n                      const newOptionsList = [...newProduct.options];\n                      newOptionsList[index].selectedCaseValue = val;\n                      setnewProduct((prevState) => ({\n                        ...prevState,\n                        options: newOptionsList,\n                      }));\n                      sessionStorage.setItem(\n                        \"scrollPosition\",\n                        window.pageYOffset\n                      );\n\n                      setautoFocusOn({\n                        index: null,\n                        inputName: null,\n                        innerList: null,\n                      });\n                    }}\n                    value={e.selectedCaseValue}\n                    style={{ marginBottom: 25 }}\n                  />\n                </View>\n              )}\n            </View>\n          );\n        })}\n        <Button\n          title=\"Add Product Option\"\n          onPress={() => {\n            sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: [\n                ...prevState.options,\n                {\n                  label: null,\n                  optionsList: [],\n                  selectedCaseKey: null,\n                  selectedCaseValue: null,\n                  numOfSelectable: null,\n                },\n              ],\n            }));\n\n            // Not using -1 on length since this is before the new option is added to list\n            setautoFocusOn({\n              index: newProduct.options.length,\n              inputName: \"label\",\n              innerList: false,\n            });\n          }}\n          style={{ marginBottom: 25 }}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView\n      contentContainerStyle={{\n        width: \"93%\",\n        alignSelf: \"center\",\n        marginTop: 25,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 20,\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <TouchableOpacity onPress={() => setProductModal(false)}>\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n            X\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            let copy = structuredClone(newProduct);\n            copy.name = copy.name + \" Copy\";\n            handleDataUpdate(copy);\n          }}\n        >\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <Text style={{ marginBottom: 25 }}>AddProduct</Text>\n      </View>\n      <TextInput\n        placeholder=\"Enter Product Name\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, name: val }));\n        }}\n        value={newProduct.name}\n        style={{ marginBottom: 25 }}\n      />\n      <TextInput\n        placeholder=\"Enter any other items that come with this\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, description: val }));\n        }}\n        style={{ marginBottom: 25 }}\n        value={newProduct.description}\n      />\n      <TextInput\n        placeholder=\"Enter Product Price\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, price: val }));\n        }}\n        style={{ marginBottom: 25 }}\n        value={newProduct.price}\n      />\n      <DropDown\n        label=\"Choose catagory\"\n        options={catalog.categories}\n        setValue={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, catagory: val }));\n        }}\n        value={newProduct.catagory}\n        style={{ marginBottom: 25 }}\n      />\n      <OptionsAddingSection />\n      <Button\n        title=\"Add/Save Product\"\n        onPress={() => handleDataUpdate()}\n        style={{\n          marginBottom: 25,\n          marginTop: 25,\n          backgroundColor: \"lightgreen\",\n        }}\n      />\n    </ScrollView>\n  );\n};\n\nexport default AddProduct;\n\nconst styles = StyleSheet.create({});\n","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport AddProduct from \"./AddProduct\";\nimport Spinner from \"./Spinner\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst EditProductList = () => {\n  const catalog = userStoreState.use();\n  const [productModal, setProductModal] = useState(false);\n  const [productEditModal, setProductEditModal] = useState(false);\n  const [isModalVisible, setisModalVisible] = useState(false);\n\n  function handleRemoveCatagory(index) {\n    const localCatalog = structuredClone(catalog);\n    localCatalog.products.splice(index, 1);\n\n    updateData(localCatalog.categories, localCatalog.products);\n    setisModalVisible(true);\n  }\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>Current Products</Text>\n      {catalog.categories.length > 0 ? (\n        catalog.products.map((e, index) => {\n          return (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                padding: 15,\n                margin: 10,\n                backgroundColor: \"lightgrey\",\n              }}\n            >\n              <Text style={{ fontSize: 17 }}>Product: {e.name}</Text>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  width: \"10%\",\n                }}\n              >\n                <Button\n                  title=\"Edit\"\n                  onPress={() => setProductEditModal(true)}\n                  style={{ margin: 10 }}\n                />\n                <TouchableOpacity\n                  onPress={() => handleRemoveCatagory(index)}\n                  style={{\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    borderRadius: 3,\n                    backgroundColor: \"red\",\n                    padding: 10,\n                    margin: 10,\n                  }}\n                >\n                  <Text\n                    style={{ color: \"white\", fontWeight: \"600\", fontSize: 18 }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n              </View>\n              <Modal visible={productEditModal}>\n                <AddProduct\n                  setProductModal={setProductEditModal}\n                  setisModalVisible={setisModalVisible}\n                  existingProduct={e}\n                  existingProductIndex={index}\n                />\n              </Modal>\n            </View>\n          );\n        })\n      ) : (\n        <Text style={{ marginTop: 50, marginBottom: 50 }}>\n          You must add a category before you can add a product...\n        </Text>\n      )}\n      {catalog.products.length < 1 && catalog.categories.length > 0 && (\n        <Text style={{ marginTop: 50, marginBottom: 50 }}>\n          You have no products...\n        </Text>\n      )}\n      <Button\n        title=\"Add New Product\"\n        onPress={() => setProductModal(true)}\n        style={{ margin: 10 }}\n        disabled={catalog.categories.length < 1}\n      />\n      <Modal visible={productModal}>\n        <AddProduct\n          setProductModal={setProductModal}\n          setisModalVisible={setisModalVisible}\n        />\n      </Modal>\n      <Spinner isModalVisible={isModalVisible} />\n    </ScrollView>\n  );\n};\n\nexport default EditProductList;\n\nconst styles = StyleSheet.create({});\n","import { View, Text, ScrollView } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport { setWoocommerceState, woocommerceState } from \"state/state\";\nimport { updateWooCredentials } from \"state/firebaseFunctions\";\n\nconst WoocommerceSettings = () => {\n  const wooCredentials = woocommerceState.use();\n  const [apiUrl, setapiUrl] = useState(wooCredentials.apiUrl);\n  const [ck, setck] = useState(wooCredentials.ck);\n  const [cs, setcs] = useState(wooCredentials.cs);\n  const [useWoocommerce, setuseWoocommerce] = useState(\n    wooCredentials.useWoocommerce\n  );\n\n  const handleDataUpdate = () => {\n    if (apiUrl !== null && ck !== null && cs !== null) {\n      setWoocommerceState({\n        apiUrl: apiUrl,\n        ck: ck,\n        cs: cs,\n        useWoocommerce: useWoocommerce,\n      });\n      updateWooCredentials({\n        apiUrl: apiUrl,\n        ck: ck,\n        cs: cs,\n        useWoocommerce: useWoocommerce,\n      });\n    }\n  };\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      <TextInput\n        placeholder=\"Enter Woocommerce 'API Url'\"\n        onChangeText={(val) => setapiUrl(val)}\n        style={{ margin: 10 }}\n        value={apiUrl}\n      />\n      <TextInput\n        placeholder=\"Enter Woocommerce 'CK'\"\n        onChangeText={(val) => setck(val)}\n        style={{ margin: 10 }}\n        value={ck}\n      />\n      <TextInput\n        placeholder=\"Enter Woocommerce 'CS'\"\n        onChangeText={(val) => setcs(val)}\n        style={{ margin: 10 }}\n        value={cs}\n      />\n      <Switch\n        value={useWoocommerce}\n        onValueChange={(val) => setuseWoocommerce(val)}\n      />\n      <Button title=\"Save\" onPress={handleDataUpdate} style={{ margin: 10 }} />\n      {/* <Spinner isModalVisible={isModalVisible} /> */}\n    </ScrollView>\n  );\n};\n\nexport default WoocommerceSettings;\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport MenuScreen from \"./MenuScreen\";\nimport CartScreen from \"./CartScreen\";\nimport { Button } from \"@react-native-material/core\";\nimport ViewTransactions from \"./ViewTransactions\";\nimport AddCategory from \"components/AddCategory\";\nimport AddProduct from \"components/AddProduct\";\n//import DisplayTest from \"components/DisplayTest\";\nimport EditProductList from \"components/EditProductList\";\nimport { userStoreState } from \"state/state\";\nimport { auth } from \"state/firebaseConfig\";\nimport WoocommerceSettings from \"components/WoocommerceSettings\";\n\nconst HomeScreen = () => {\n  const catalog = userStoreState.use();\n  const [section, setSection] = useState();\n  const [settings, setSettings] = useState(false);\n\n  // useEffect(() => {\n  //   const socket = io(\"http://localhost:8443\");\n  //   socket.on(\"connect\", () => console.log(socket.id));\n  //   socket.on(\"connect_error\", () => {\n  //     setTimeout(() => socket.connect(), 8443);\n  //   });\n\n  //   socket.on(\"onlineOrder\", (res) => {\n  //     const qz = require(\"qz-tray\");\n  //     const data = [\n  //       \"\\x1B\" + \"\\x40\", // init\n  //       \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n  //       \"Tomas Pizza\",\n  //       \"\\x0A\",\n  //       \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n  //       \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n  //       \"(519) 650-0409\" + \"\\x0A\", // text and line break\n  //       \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n  //     ];\n\n  //     // Pushs each line to array\n\n  //     const str = res.text;\n  //     const withoutSplit = str.split(/\\r\\n|\\r|\\n/);\n\n  //     withoutSplit.forEach((element) => {\n  //       data.push(element);\n  //       data.push(\"\\x0A\");\n  //     });\n\n  //     data.push(\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x1D\" + \"\\x56\" + \"\\x30\"\n  //     );\n\n  //     data.push(...data);\n\n  //     qz.websocket\n  //       .connect()\n  //       .then(function () {\n  //         let config = qz.configs.create(\"jZebra\");\n  //         return qz.print(config, data);\n  //       })\n  //       .then(qz.websocket.disconnect)\n  //       .catch(function (err) {\n  //         console.error(err);\n  //         return qz.websocket.disconnect();\n  //       });\n  //   });\n  // }, []);\n\n  useEffect(() => {\n    const prevScreen = localStorage.getItem(\"localScreen\");\n    setSection(prevScreen);\n    if (\n      prevScreen === \"add-category\" ||\n      prevScreen === \"add-product\" ||\n      prevScreen === \"edit-woocommerce\"\n    )\n      setSettings(true);\n  }, []);\n\n  const Menu = () => {\n    if (settings === true) {\n      //edit settings menu\n      return (\n        <View\n          style={{\n            width: \"100%\",\n            height: 120,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-evenly\",\n            backgroundColor: \"red\",\n          }}\n        >\n          <Button\n            titleStyle={\n              section === \"add-category\"\n                ? { color: \"white\", fontWeight: \"700\" }\n                : { color: \"black\", fontWeight: \"700\" }\n            }\n            style={\n              section === \"add-category\"\n                ? { backgroundColor: \"blue\" }\n                : { backgroundColor: \"white\" }\n            }\n            onPress={() => {\n              setSection(\"add-category\");\n              localStorage.setItem(\"localScreen\", \"add-category\");\n            }}\n            title=\"Add Category\"\n          />\n          <Button\n            titleStyle={\n              section === \"add-product\"\n                ? { color: \"white\", fontWeight: \"700\" }\n                : { color: \"black\", fontWeight: \"700\" }\n            }\n            style={\n              section === \"add-product\"\n                ? { backgroundColor: \"blue\" }\n                : { backgroundColor: \"white\" }\n            }\n            onPress={() => {\n              setSection(\"add-product\");\n              localStorage.setItem(\"localScreen\", \"add-product\");\n            }}\n            title=\"Add Product\"\n          />\n          <Button\n            titleStyle={\n              section === \"edit-woocommerce\"\n                ? { color: \"white\", fontWeight: \"700\" }\n                : { color: \"black\", fontWeight: \"700\" }\n            }\n            style={\n              section === \"edit-woocommerce\"\n                ? { backgroundColor: \"blue\" }\n                : { backgroundColor: \"white\" }\n            }\n            onPress={() => {\n              setSection(\"edit-woocommerce\");\n              localStorage.setItem(\"localScreen\", \"edit-woocommerce\");\n            }}\n            title=\"Woocommerce\"\n          />\n          <Button\n            titleStyle={{ color: \"black\", fontWeight: \"700\" }}\n            style={{ backgroundColor: \"white\" }}\n            onPress={() => {\n              localStorage.removeItem(\"localScreen\");\n              auth.signOut();\n            }}\n            title=\"Logout\"\n          />\n          <Button\n            titleStyle={{ color: \"black\", fontWeight: \"700\" }}\n            style={{ backgroundColor: \"white\" }}\n            onPress={() => {\n              setSettings(false);\n              setSection();\n              localStorage.removeItem(\"localScreen\");\n            }}\n            title=\"X\"\n          />\n          <Button\n            titleStyle={{ color: \"black\", fontWeight: \"700\" }}\n            style={{ backgroundColor: \"white\" }}\n            onPress={() => {\n              let data = [\n                \"\\x1B\" + \"\\x40\", // init\n                \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                \"Tomas Pizza\",\n                \"\\x0A\",\n                \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n                \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n                \"(519) 650-0409\" + \"\\x0A\", // text and line break\n                `Transaction # 1` + \"\\x0A\",\n                \"\\x0A\",\n                \"Pickup Order\" + \"\\x0A\",\n                \"\\x0A\",\n                \"\\x0A\",\n                \"\\x0A\",\n                \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n              ];\n              fetch(\"http://localhost:8080/print\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(data),\n              })\n                .then((response) => response.json())\n                .then((respData) => {\n                  console.log(respData);\n                });\n            }}\n            title=\"Test\"\n          />\n        </View>\n      );\n    }\n    return (\n      <View\n        style={{\n          width: \"100%\",\n          height: 120,\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-evenly\",\n          backgroundColor: \"red\",\n        }}\n      >\n        {catalog.categories?.map((category, index) => {\n          if (!section && index === 0) {\n            return (\n              <Button\n                key={index}\n                titleStyle={{ color: \"white\", fontWeight: \"700\" }}\n                style={{ backgroundColor: \"blue\" }}\n                onPress={() => {\n                  setSection(category);\n                  localStorage.setItem(\"localScreen\", category);\n                }}\n                title={category}\n              />\n            );\n          }\n\n          return (\n            <Button\n              key={index}\n              titleStyle={\n                section === category\n                  ? { color: \"white\", fontWeight: \"700\" }\n                  : { color: \"black\", fontWeight: \"700\" }\n              }\n              style={\n                section === category\n                  ? { backgroundColor: \"blue\" }\n                  : { backgroundColor: \"white\" }\n              }\n              onPress={() => {\n                setSection(category);\n                localStorage.setItem(\"localScreen\", category);\n              }}\n              title={category}\n            />\n          );\n        })}\n        <Button\n          titleStyle={\n            section === \"transList\"\n              ? { color: \"white\", fontWeight: \"700\" }\n              : { color: \"black\", fontWeight: \"700\" }\n          }\n          style={\n            section === \"transList\"\n              ? { backgroundColor: \"blue\" }\n              : { backgroundColor: \"white\" }\n          }\n          onPress={() => {\n            setSection(\"transList\");\n            localStorage.setItem(\"localScreen\", \"transList\");\n          }}\n          title=\"Transaction\"\n        />\n        <Button\n          titleStyle={{ color: \"black\", fontWeight: \"700\" }}\n          style={{ backgroundColor: \"white\" }}\n          onPress={() => setSettings(true)}\n          title=\"Settings\"\n        />\n      </View>\n    );\n  };\n\n  const Screen = () => {\n    if (section === \"add-category\") return <AddCategory />;\n    if (section === \"add-product\") return <EditProductList />;\n    if (section === \"edit-woocommerce\") return <WoocommerceSettings />;\n    if (section === \"transList\")\n      return (\n        <View style={{ height: \"85%\" }}>\n          <ViewTransactions />\n        </View>\n      );\n    return (\n      <View style={{ flexDirection: \"row\", height: \"85%\" }}>\n        <MenuScreen catalog={catalog} section={section} />\n        <CartScreen />\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <Menu />\n      <Screen />\n    </View>\n  );\n};\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n  },\n});\n","import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Home from \"screens/authed/HomeScreen\";\nimport Register from \"screens/non-authed/Register\";\n\nconst Stack = createStackNavigator();\n\nexport default function TmpAuthStack() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Home\" component={Home} />\n    </Stack.Navigator>\n  );\n}\n","import React from \"react\";\nimport TabNav from \"./TabNav\";\nimport TmpAuthStack from \"./TmpAuthStack\";\n\nconst MainAuthed = () => {\n  // return <TabNav />;\n  return <TmpAuthStack />;\n};\n\nexport default MainAuthed;\n","import { Image, StyleSheet, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport {\n  TextInput,\n  IconButton,\n  Button,\n  Text,\n} from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { signIn } from \"state/firebaseFunctions\";\n\nconst Login = ({ navigation }) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const attemptSignIn = () => {\n    if (email && password) {\n     signIn(email, password)\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaView style={styles.safeareaContainer}>\n        <Image\n          source={require(\"assets/pathblazer-logo.png\")}\n          style={styles.logo}\n        />\n        <View style={styles.innerContainer}>\n          <TextInput\n            label=\"Email\"\n            variant=\"outlined\"\n            style={{ width: \"100%\", marginBottom: 10 }}\n            value={email}\n            onChangeText={(val) => setEmail(val)}\n            autoCorrect={false}\n            textContentType={\"emailAddress\"}\n          />\n          <TextInput\n            label=\"Password\"\n            variant=\"outlined\"\n            trailing={(props) => (\n              <IconButton\n                onPress={() => setShowPassword((prevState) => !prevState)}\n                icon={(props) => <Icon name=\"eye\" {...props} />}\n                {...props}\n              />\n            )}\n            value={password}\n            onChangeText={(val) => setPassword(val)}\n            secureTextEntry={!showPassword}\n            style={{ width: \"100%\" }}\n          />\n        </View>\n        <View style={styles.innerContainer}>\n          <Button\n            title=\"Login\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            style={{ marginBottom: 10 }}\n            onPress={attemptSignIn}\n          />\n          <Text variant=\"subtitle1\" style={{ marginBottom: 10 }}>\n            Or\n          </Text>\n          <Button\n            title=\"Register\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"grey\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"Register\")}\n          />\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nexport default Login;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  safeareaContainer: {\n    flex: 1,\n    height: \"60%\",\n    width: \"80%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 250,\n    resizeMode: \"contain\",\n  },\n  innerContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","import { Image, StyleSheet, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport {\n  TextInput,\n  IconButton,\n  Button,\n  Text,\n} from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { signUp } from \"state/firebaseFunctions\";\n\nconst Register = ({ navigation }) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const attemptSignUp = () => {\n    if (email && password) {\n      signUp(email, password);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaView style={styles.safeareaContainer}>\n        <Image\n          source={require(\"assets/pathblazer-logo.png\")}\n          style={styles.logo}\n        />\n        <View style={styles.innerContainer}>\n          <TextInput\n            label=\"Email\"\n            variant=\"outlined\"\n            style={{ width: \"100%\", marginBottom: 10 }}\n            value={email}\n            onChangeText={(val) => setEmail(val)}\n            autoCorrect={false}\n            textContentType={\"emailAddress\"}\n          />\n          <TextInput\n            label=\"Password\"\n            variant=\"outlined\"\n            trailing={(props) => (\n              <IconButton\n                onPress={() => setShowPassword((prevState) => !prevState)}\n                icon={(props) => <Icon name=\"eye\" {...props} />}\n                {...props}\n              />\n            )}\n            value={password}\n            onChangeText={(val) => setPassword(val)}\n            secureTextEntry={!showPassword}\n            style={{ width: \"100%\" }}\n          />\n        </View>\n        <View style={styles.innerContainer}>\n          <Button\n            title=\"Register\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            style={{ marginBottom: 10 }}\n            onPress={attemptSignUp}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Text variant=\"subtitle1\" style={{ marginBottom: 10 }}>\n              Or\n            </Text>\n            <Text\n              variant=\"subtitle1\"\n              style={{ marginBottom: 10, marginLeft: 5, color: \"blue\" }}\n              onPress={() => navigation.goBack()}\n            >\n              Go Back\n            </Text>\n          </View>\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nexport default Register;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  safeareaContainer: {\n    flex: 1,\n    height: \"60%\",\n    width: \"80%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 250,\n    resizeMode: \"contain\",\n  },\n  innerContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Login from \"screens/non-authed/Login\";\nimport Register from \"screens/non-authed/Register\";\n\nconst Stack = createStackNavigator();\n\nexport default function MainNonAuth() {\n  return (\n    <Stack.Navigator screenOptions={{headerShown: false}}>\n      <Stack.Screen name=\"Login\" component={Login} />\n      <Stack.Screen name=\"Register\" component={Register} />\n    </Stack.Navigator>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport MainAuthed from \"./authed/MainAuthed\";\nimport {\n  setTransListState,\n  setUserState,\n  setUserStoreState,\n  setWoocommerceState,\n  transListState,\n  userState,\n  woocommerceState,\n} from \"state/state\";\nimport MainNonAuth from \"./non-authed/MainNonAuth\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport Spinner from \"components/Spinner\";\nimport { updateTransList } from \"state/firebaseFunctions\";\n\nconst RouteManager = () => {\n  const userS = userState.use();\n  const wooCredentials = woocommerceState.use();\n  const transList = transListState.use();\n  const [loading, setloading] = useState(true);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUserState(user);\n        db.collection(\"users\")\n          .doc(user.uid)\n          .get()\n          .then((doc) => {\n            setUserStoreState({\n              products: doc.data().products,\n              categories: doc.data().categories,\n            });\n            if (doc.data().transList) {\n              setTransListState(doc.data().transList);\n            }\n            if (doc.data().wooCredentials) {\n              setWoocommerceState(doc.data().wooCredentials);\n            }\n          });\n        setTimeout(() => {\n          setloading(false);\n        }, 1);\n      } else {\n        setUserState(null);\n        setUserStoreState({ products: null, categories: null });\n        setTimeout(() => {\n          setloading(false);\n        }, 1);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (userS) {\n      const unsub = db\n        .collection(\"users\")\n        .doc(userS.uid)\n        .onSnapshot((doc) => {\n          setloading(true);\n          setUserStoreState({\n            products: doc.data().products,\n            categories: doc.data().categories,\n          });\n          setTransListState(doc.data().transList);\n          setTimeout(() => {\n            setloading(false);\n          }, 1);\n        });\n      return () => unsub();\n    }\n  }, [userS]);\n\n  useEffect(() => {\n    if (wooCredentials.useWoocommerce === true) {\n      const interval = setInterval(() => {\n        fetch(wooCredentials.apiUrl, {\n          headers: {\n            Authorization:\n              \"Basic \" + btoa(`${wooCredentials.ck}:${wooCredentials.cs}`),\n          },\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            // do something with the data, like checking for new orders\n            //console.log(data);\n\n            const array1 = transList;\n            const array2 = data;\n\n            const newArray = [];\n\n            array1.concat(array2).reduce(function (acc, curr) {\n              if (!acc.includes(curr.transaction_id)) {\n                acc.push(curr.transaction_id);\n                newArray.push(curr);\n              }\n              return acc;\n            }, []);\n            if (newArray.length > transList.length) {\n              const newItems = structuredClone(newArray).splice(\n                transList.length,\n                newArray.length - transList.length\n              );\n\n              updateTransList(newArray);\n\n              if (newItems.length > 1) {\n                newItems.forEach((e) => {\n                  const printData = [];\n\n                  printData.push(\n                    \"\\x1B\\x40\", // init\n                    \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                    \"Tomas Pizza\",\n                    \"\\x0A\",\n                    \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n                    \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n                    \"(519) 650-0409\" + \"\\x0A\", // text and line break\n                    e.date_created + \"\\x0A\",\n                    \"\\x0A\",\n                    \"Online Order\" + \"\\x0A\", // text and line break\n                    `Transaction # ${e.number}` + \"\\x0A\",\n                    \"\\x0A\",\n                    \"\\x0A\",\n                    \"\\x0A\",\n                    \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n                  );\n\n                  e.line_items?.map((cartItem) => {\n                    printData.push(\"\\x0A\");\n                    printData.push(`Name: ${cartItem.name}`);\n                    printData.push(\"\\x0A\");\n                    printData.push(`Quantity: ${cartItem.quantity}`);\n                    printData.push(\"\\x0A\");\n                    printData.push(`Price: $${cartItem.price}`);\n                    printData.push(\"\\x0A\");\n\n                    if (cartItem.meta_data) {\n                      cartItem.meta_data?.map((meta, index) => {\n                        if (index === 0) {\n                          printData.push(`${meta.key} : ${meta.value}`);\n                          if (cartItem.meta_data[index + 1].key !== meta.key) {\n                            printData.push(\"\\x0A\");\n                          }\n                        } else {\n                          if (index !== cartItem.meta_data.length - 1) {\n                            if (\n                              cartItem.meta_data[index - 1].key === meta.key\n                            ) {\n                              printData.push(` , ${meta.value}`);\n                            } else {\n                              printData.push(`${meta.key} : ${meta.value}`);\n                            }\n\n                            if (\n                              cartItem.meta_data[index + 1].key !== meta.key\n                            ) {\n                              printData.push(\"\\x0A\");\n                            }\n                          }\n                        }\n                      });\n                    } else {\n                      printData.push(\"\\x0A\" + \"\\x0A\");\n                    }\n                  });\n\n                  printData.push(`Shipping:`);\n                  printData.push(`Address: ${e.shipping.address_1}`);\n                  printData.push(`City: ${e.shipping.city}`);\n                  printData.push(`Zip/Postal Code: ${e.shipping.postcode}`);\n                  printData.push(`Province/State: ${e.shipping.state}`);\n                  printData.push(\n                    `Name: ${e.shipping.first_name} ${e.shipping.last_name}`\n                  );\n                  printData.push(\"\\x0A\");\n\n                  e.shipping_lines.map((line) =>\n                    printData.push(`Shipping Method: ${line.method_title}`)\n                  );\n\n                  printData.push(\n                    \"\\x0A\",\n                    \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                    \"\\x0A\" + \"\\x0A\",\n                    \"Payment Method: \" +\n                      e.payment_method_title +\n                      \"\\x0A\" +\n                      \"\\x0A\",\n                    \"Total Including (13% Tax): \" +\n                      \"$\" +\n                      (parseFloat(e.total) + parseFloat(e.total_tax)).toFixed(\n                        2\n                      ) +\n                      \"\\x0A\" +\n                      \"\\x0A\",\n                    \"------------------------------------------\" + \"\\x0A\",\n                    \"\\x0A\", // line break\n                    \"\\x0A\", // line break\n                    \"\\x0A\", // line break\n                    \"\\x0A\", // line break\n                    \"\\x0A\", // line break\n                    \"\\x0A\" // line break\n                  );\n\n                  printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n                  fetch(\"http://localhost:8080/print\", {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(printData),\n                  })\n                    .then((response) => response.json())\n                    .then((respData) => {\n                      console.log(respData);\n                    });\n                });\n              } else {\n                const e = newItems[0];\n                const printData = [];\n\n                printData.push(\n                  \"\\x1B\" + \"\\x40\", // init\n                  \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                  \"Tomas Pizza\",\n                  \"\\x0A\",\n                  \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n                  \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n                  \"(519) 650-0409\" + \"\\x0A\", // text and line break\n                  e.date_created + \"\\x0A\",\n                  \"\\x0A\",\n                  \"Online Order\" + \"\\x0A\", // text and line break\n                  `Transaction # ${e.number}` + \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n                );\n\n                e.line_items?.map((cartItem) => {\n                  printData.push(\"\\x0A\");\n                  printData.push(`Name: ${cartItem.name}`);\n                  printData.push(\"\\x0A\");\n                  printData.push(`Quantity: ${cartItem.quantity}`);\n                  printData.push(\"\\x0A\");\n                  printData.push(`Price: $${cartItem.price}`);\n                  printData.push(\"\\x0A\");\n\n                  if (cartItem.meta_data) {\n                    cartItem.meta_data?.map((meta, index) => {\n                      if (index === 0) {\n                        printData.push(`${meta.key} : ${meta.value}`);\n                        if (cartItem.meta_data[index + 1].key !== meta.key) {\n                          printData.push(\"\\x0A\");\n                        }\n                      } else {\n                        if (index !== cartItem.meta_data.length - 1) {\n                          if (cartItem.meta_data[index - 1].key === meta.key) {\n                            printData.push(` , ${meta.value}`);\n                          } else {\n                            printData.push(`${meta.key} : ${meta.value}`);\n                          }\n\n                          if (cartItem.meta_data[index + 1].key !== meta.key) {\n                            printData.push(\"\\x0A\");\n                          }\n                        }\n                      }\n                    });\n                  } else {\n                    printData.push(\"\\x0A\" + \"\\x0A\");\n                  }\n                });\n\n                printData.push(`Shipping:`);\n                printData.push(`Address: ${e.shipping.address_1}`);\n                printData.push(`City: ${e.shipping.city}`);\n                printData.push(`Zip/Postal Code: ${e.shipping.postcode}`);\n                printData.push(`Province/State: ${e.shipping.state}`);\n                printData.push(\n                  `Name: ${e.shipping.first_name} ${e.shipping.last_name}`\n                );\n                printData.push(\"\\x0A\");\n\n                e.shipping_lines.map((line) =>\n                  printData.push(`Shipping Method: ${line.method_title}`)\n                );\n\n                printData.push(\n                  \"\\x0A\",\n                  \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                  \"\\x0A\" + \"\\x0A\",\n                  \"Payment Method: \" + e.payment_method_title + \"\\x0A\" + \"\\x0A\",\n                  \"Total Including (13% Tax): \" +\n                    \"$\" +\n                    (parseFloat(e.total) + parseFloat(e.total_tax)).toFixed(2) +\n                    \"\\x0A\" +\n                    \"\\x0A\",\n                  \"------------------------------------------\" + \"\\x0A\",\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\" // line break\n                );\n\n                printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n                fetch(\"http://localhost:8080/print\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify(printData),\n                })\n                  .then((response) => response.json())\n                  .then((respData) => {\n                    console.log(respData);\n                  });\n              }\n            }\n          })\n          .catch((error) => {\n            alert(\n              \"Error has errored with woocommerce api. Try refreshing or updating creditials\"\n            );\n            clearInterval(interval);\n          });\n      }, 5000); // this will check for new orders every minute\n      return () => clearInterval(interval);\n    }\n  }, [wooCredentials, transList]);\n\n  return (\n    <NavigationContainer>\n      {loading ? (\n        <Spinner isModalVisible={true} />\n      ) : (\n        <>{userS ? <MainAuthed /> : <MainNonAuth />}</>\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default RouteManager;\n","import React from \"react\";\nimport RouteManager from \"navigation/RouteManager\";\nimport \"react-native-gesture-handler\";\n\nconst App = () => {\n  return <RouteManager />;\n};\n\n//hello love u\nexport default App;\n"],"sourceRoot":""}