{"version":3,"sources":["assets/pathblazer-logo.png","components/DisplayTest.tsx","screens/authed/MenuScreen.tsx","state/state.ts","components/DeliveryScreen.tsx","components/CashScreen.tsx","components/ChangeScreen.tsx","state/firebaseConfig.ts","state/firebaseFunctions.ts","screens/authed/CartScreen.tsx","screens/authed/HomeScreen.tsx","components/EditProductList.tsx","components/DropDown.tsx","components/OptionView.tsx","components/TestAdd.tsx","components/WoocommerceSettings.tsx","components/EditStoreDetails.tsx","components/Spinner.tsx","components/AddCategory.tsx","screens/authed/ViewTransactions.tsx","components/CustomHeader.tsx","components/ProductOptionDropDown.tsx","components/ProductListing.tsx","navigation/authed/TmpAuthStack.tsx","navigation/authed/MainAuthed.tsx","screens/non-authed/Login.tsx","screens/non-authed/Register.tsx","navigation/non-authed/MainNonAuth.tsx","navigation/RouteManager.tsx","App.tsx"],"names":["module","exports","DisplayTest","navigation","product","productIndex","View","title","name","onPress","navigate","style","styles","touchable","StyleSheet","create","sizeRow","flexDirection","alignItems","justifyContent","marginBottom","halfRow","width","toppingsContainer","flex","flexWrap","marginTop","margin","modalContainer","padding","btn","dropDown","h2White","fontSize","color","h2Black","MenuScreen","section","catalog","container","products","length","filter","e","catagory","map","index","categories","backgroundColor","height","wrapper","paddingLeft","paddingRight","userState","entity","setUserState","val","set","cartState","setCartState","userStoreState","setUserStoreState","transListState","setTransListState","woocommerceState","apiUrl","ck","cs","useWoocommerce","setWoocommerceState","storeDetailState","address","phoneNumber","website","comSelected","deliveryPrice","setStoreDetailState","sectionState","setsectionState","DeliveryScreen","setDeliveryModal","setOngoingDelivery","setName","setPhone","setAddress","phone","deliveryChecked","setDeliveryChecked","ScrollView","Text","value","onValueChange","label","variant","input","onChangeText","autoCorrect","contentContainerStyle","CashScreen","setCashModal","GetTrans","total","setChangeDue","useState","cash","setCash","parseFloat","toFixed","ChangeScreen","setChangeModal","setTotal","storeDetails","use","data","fetch","method","headers","body","JSON","stringify","printData","then","response","json","respData","console","log","catch","alert","openCash","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","updateData","Promise","resolve","reject","collection","doc","currentUser","uid","update","updateTransList","transList","CartScreen","deliveryModal","cashModal","changeModal","ongoingDelivery","changeDue","cart","cartSub","setCartSub","useEffect","newVal","i","price","AddToList","payload","local","structuredClone","push","Print","transNum","today","Date","toLocaleDateString","toLocaleTimeString","cartItem","description","options","option","extraDetails","date","contentContainer","splice","disabled","Modal","visible","HomeScreen","EditProductList","fontWeight","copy","existingProduct","existingProductIndex","TouchableOpacity","localCatalog","handleRemoveCatagory","borderRadius","DropDown","setValue","show","setShow","trailing","props","prevState","OptionView","item","setnewProduct","newProduct","newProductOptions","indexOn","setindexOn","optionLblsValues","setoptionLblsValues","sete","optionsList","testMap","settestMap","optionLbls","el","selectedCaseKey","localE","optionLblsValuesLocal","current","selectedCaseValue","from","to","f","moveItem","placeholder","optionType","numOfSelectable","eInnerListStart","indexInnerList","eInnerList","clone","priceIncrease","marginLeft","marginRight","AddProduct","route","params","useRef","handleDataUpdate","copyProductData","goBack","newProductUseRef","alignSelf","FlatList","getItemLayout","offset","keyExtractor","id","toString","renderItem","Math","random","substr","WoocommerceSettings","wooCredentials","setapiUrl","setck","setcs","setuseWoocommerce","updateWooCredentials","EditStoreDetails","setname","setphoneNumber","setaddress","setwebsite","setdeliveryPrice","com","setcom","updateStoreDetails","Spinner","isModalVisible","transparent","className","AddCategory","categoryName","setcategoryName","setisModalVisible","handleRemoveCategory","ViewTransactions","settransList","todaysReceiptValue","todaysReceipts","todaysDetails","setTodaysDetails","sort","a","b","seconds","date_created","bDate","getTime","reverse","reduce","accumulator","textAlign","element","toLocaleString","quantity","line_items","meta_data","meta","key","number","shipping","address_1","city","postcode","state","first_name","last_name","shipping_lines","line","method_title","payment_method_title","total_tax","paddingBottom","CustomHeader","back","settings","setSettings","settingsOn","localStorage","getItem","titleStyle","setItem","removeItem","signOut","category","ProductOptionDropDown","listIndex","ProductListing","myObj","myObjProfile","setmyObjProfile","settotal","extraInput","setextraInput","DisplayOption","optionVal","setoptionVal","selectedList","checkOp","selected","selectedValueList","isSelected","selectedCaseList","op","opL","toLowerCase","newMyObjProfile","forEach","indexOfOl","selection","borderColor","borderWidth","parseInt","newSubtract","indexOfItem","multiline","inputStyle","opsArray","opWVal","numberOfSelected","Stack","createStackNavigator","TmpAuthStack","Navigator","screenOptions","header","headerMode","Screen","component","Home","headerShown","MainAuthed","Login","email","setEmail","password","setPassword","showPassword","setShowPassword","safeareaContainer","Image","source","require","logo","innerContainer","textContentType","icon","secureTextEntry","uppercase","signInWithEmailAndPassword","signIn","resizeMode","Register","createUserWithEmailAndPassword","userAuth","user","paid","signUp","MainNonAuth","RouteManager","userS","loading","setloading","onAuthStateChanged","get","setTimeout","unsub","onSnapshot","interval","setInterval","WooCommerce","url","consumerKey","consumerSecret","wpAPI","version","page","orders","getOrders","getAsync","parse","array2","newArray","concat","acc","curr","includes","newItems","clearInterval","NavigationContainer","App"],"mappings":"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","file":"static/js/app.ad51da08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pathblazer-logo.17137072.png\";","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { addCartState } from \"state/state\";\nimport ProductOptionDropDown from \"./ProductOptionDropDown\";\n\nconst DisplayTest = ({ navigation, product, productIndex }) => {\n  return (\n    <View key={productIndex}>\n      <Button\n        title={product.name}\n        onPress={() =>\n          navigation.navigate(\"ProductListing\", { product: product })\n        }\n        style={styles.touchable}\n      />\n    </View>\n  );\n};\n\nexport default DisplayTest;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 10,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n  },\n  btn: {\n    marginBottom: 25,\n  },\n  dropDown: {\n    marginBottom: 25,\n  },\n  h2White: {\n    fontSize: 17,\n    color: \"white\",\n  },\n  h2Black: {\n    fontSize: 20,\n    color: \"black\",\n  },\n});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport DisplayTest from \"components/DisplayTest\";\n\nconst MenuScreen = ({ navigation,section, catalog }) => {\n  const InnerBlock = () => {\n    if (catalog.products) {\n      if (catalog.products.length > 0) {\n        if (!section) {\n          return catalog.products\n            .filter((e) => e.catagory === catalog.categories[0])\n            .map((product, index) => (\n              <DisplayTest product={product} productIndex={index} key={index} navigation={navigation} />\n            ));\n        } else {\n          return catalog.products\n            .filter((e) => e.catagory === section)\n            .map((product, index) => (\n              <DisplayTest product={product} productIndex={index} key={index} navigation={navigation} />\n            ));\n        }\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <InnerBlock />\n    </View>\n  );\n};\n\nexport default MenuScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 2,\n    height: \"100%\",\n  },\n  wrapper: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n});\n","import { entity } from \"simpler-state\";\n\nexport const userState = entity(null);\n\nexport const setUserState = (val) => {\n  userState.set(val);\n};\n\nexport const cartState = entity([]);\n\nexport const setCartState = (val) => {\n  cartState.set(val);\n};\n\nexport const addCartState = (val) => {\n  cartState.set((prevState) => [...prevState, val]);\n};\n\nexport const userStoreState = entity({ products: [], categories: [] });\n\nexport const setUserStoreState = (val) => {\n  userStoreState.set(val);\n};\n\nexport const transListState = entity([]);\n\nexport const setTransListState = (val) => {\n  transListState.set(val);\n};\n\nexport const woocommerceState = entity({\n  apiUrl: null,\n  ck: null,\n  cs: null,\n  useWoocommerce: false,\n});\n\nexport const setWoocommerceState = (val) => {\n  woocommerceState.set(val);\n};\n\nexport const storeDetailState = entity({\n  name: null,\n  address: null,\n  phoneNumber: null,\n  website: null,\n  comSelected: null,\n  deliveryPrice: null,\n});\n\nexport const setStoreDetailState = (val) => {\n  storeDetailState.set(val);\n};\n\nexport const sectionState = entity(null);\n\nexport const setsectionState = (val) => {\n  sectionState.set(val);\n};\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { cartState, setCartState } from \"state/state\";\nimport { Switch } from \"react-native-gesture-handler\";\n\nconst DeliveryScreen = ({\n  setDeliveryModal,\n  setOngoingDelivery,\n  setName,\n  setPhone,\n  setAddress,\n  name,\n  phone,\n  address,\n  deliveryChecked,\n  setDeliveryChecked,\n}) => {\n  return (\n    <ScrollView style={styles.modalContainer}>\n      <View style={styles.sizeRow}>\n        <Text>Enter Phone Order Details</Text>\n        <View>\n          <Text>Delivery?</Text>\n          <Switch\n            value={deliveryChecked}\n            onValueChange={() => {\n              setDeliveryChecked(!deliveryChecked);\n            }}\n          />\n        </View>\n      </View>\n      <TextInput\n        label=\"Name\"\n        variant=\"outlined\"\n        style={styles.input}\n        onChangeText={(val) => setName(val)}\n        autoCorrect={false}\n        value={name}\n      />\n      <TextInput\n        label=\"Phone #\"\n        variant=\"outlined\"\n        style={styles.input}\n        onChangeText={(val) => setPhone(val)}\n        autoCorrect={false}\n        value={phone}\n      />\n      {deliveryChecked && (\n        <TextInput\n          label=\"Address\"\n          variant=\"outlined\"\n          style={styles.input}\n          onChangeText={(val) => setAddress(val)}\n          autoCorrect={false}\n          value={address}\n        />\n      )}\n      <Button\n        title=\"Order\"\n        // onPress={GetTrans}\n        onPress={() => {\n          setDeliveryModal(false);\n          setOngoingDelivery(true);\n        }}\n        contentContainerStyle={styles.btn}\n        style={{ margin: 25 }}\n      />\n      <Button\n        title=\"Cancel\"\n        onPress={() => {\n          setDeliveryModal(false);\n          setOngoingDelivery(null);\n        }}\n        contentContainerStyle={styles.btn}\n        style={{ margin: 25 }}\n      />\n    </ScrollView>\n  );\n};\n\nexport default DeliveryScreen;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n  },\n  btn: {\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  input: {\n    marginTop: 25,\n    marginBottom: 25,\n  },\n});\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, TextInput } from \"@react-native-material/core\";\r\nimport { cartState, setCartState } from \"state/state\";\r\nimport { Switch } from \"react-native-gesture-handler\";\r\n\r\nconst CashScreen = ({ setCashModal, GetTrans, total, setChangeDue }) => {\r\n  const [cash, setCash] = useState(\"\");\r\n\r\n  return (\r\n    <ScrollView style={styles.modalContainer}>\r\n      <View style={styles.sizeRow}>\r\n        <Text>Cash Payment Details</Text>\r\n      </View>\r\n      <Text>Total: {total}</Text>\r\n      <TextInput\r\n        label=\"Enter Cash Given\"\r\n        variant=\"outlined\"\r\n        style={styles.input}\r\n        onChangeText={(val) => {\r\n          setCash(val);\r\n          setChangeDue((parseFloat(val) - total).toFixed(2));\r\n        }}\r\n        autoCorrect={false}\r\n        value={cash}\r\n      />\r\n      <Text>\r\n        Change Due:{\" \"}\r\n        {parseFloat(cash) > total && (parseFloat(cash) - total).toFixed(2)}\r\n      </Text>\r\n      <Button\r\n        title=\"Print\"\r\n        onPress={() => {\r\n          GetTrans(\"Cash\");\r\n          setCashModal(false);\r\n        }}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n      <Button\r\n        title=\"Cancel\"\r\n        onPress={() => setCashModal(false)}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default CashScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  sizeRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n  },\r\n  halfRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"50%\",\r\n  },\r\n  toppingsContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n  },\r\n  touchable: {\r\n    margin: 25,\r\n    width: 300,\r\n  },\r\n  modalContainer: {\r\n    padding: 50,\r\n  },\r\n  btn: {\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n  },\r\n});\r\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, TextInput } from \"@react-native-material/core\";\r\nimport { storeDetailState } from \"state/state\";\r\n\r\nconst ChangeScreen = ({ setChangeModal }) => {\r\n  const [total, setTotal] = useState(\"\");\r\n  const [cash, setCash] = useState(\"\");\r\n  const storeDetails = storeDetailState.use();\r\n\r\n  const openCash = () => {\r\n    const data = [\r\n      \"\\x1B\" + \"\\x40\", // init\r\n      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\r\n      storeDetails.name,\r\n      \"\\x0A\",\r\n      storeDetails.address + \"\\x0A\",\r\n      storeDetails.website + \"\\x0A\", // text and line break\r\n      storeDetails.phoneNumber + \"\\x0A\", // text and line break\r\n      \"\\x0A\",\r\n      \"\\x0A\",\r\n      \"\\x0A\",\r\n      \"\\x0A\",\r\n      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\r\n      `Total: $${total}` + \"\\x0A\",\r\n      `Cash Given: $${cash}` + \"\\x0A\",\r\n      `Change Due: $${(parseFloat(cash) - parseFloat(total)).toFixed(2)}` +\r\n        \"\\x0A\",\r\n      \"------------------------------------------\" + \"\\x0A\",\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      //\"\\x1D\" + \"\\x56\" + \"\\x00\",\r\n      \"\\x1D\" + \"\\x56\" + \"\\x30\",\r\n      \"\\x10\" + \"\\x14\" + \"\\x01\" + \"\\x00\" + \"\\x05\",\r\n    ];\r\n\r\n    fetch(\"http://localhost:8080/print\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        printData: data,\r\n        comSelected: storeDetails.comSelected,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((respData) => {\r\n        console.log(respData);\r\n      })\r\n      .catch((e) => alert(\"Error with printer\"));\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.modalContainer}>\r\n      <View style={styles.sizeRow}>\r\n        <Text>Cash Payment Details</Text>\r\n      </View>\r\n      <TextInput\r\n        label=\"Enter Total\"\r\n        variant=\"outlined\"\r\n        style={styles.input}\r\n        onChangeText={(val) => setTotal(val)}\r\n        autoCorrect={false}\r\n        value={total}\r\n      />\r\n      <TextInput\r\n        label=\"Enter Cash Given\"\r\n        variant=\"outlined\"\r\n        style={styles.input}\r\n        onChangeText={(val) => setCash(val)}\r\n        autoCorrect={false}\r\n        value={cash}\r\n      />\r\n      <Text>Change Due: {(parseFloat(cash) - total).toFixed(2)}</Text>\r\n      <Button\r\n        title=\"Open Cash\"\r\n        onPress={() => {\r\n          openCash();\r\n          setChangeModal(false);\r\n        }}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n      <Button\r\n        title=\"Cancel\"\r\n        onPress={() => setChangeModal(false)}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default ChangeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  sizeRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n  },\r\n  halfRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"50%\",\r\n  },\r\n  toppingsContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n  },\r\n  touchable: {\r\n    margin: 25,\r\n    width: 300,\r\n  },\r\n  modalContainer: {\r\n    padding: 50,\r\n  },\r\n  btn: {\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n  },\r\n});\r\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialize Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDmtlrkfZRbFy8P7D4BFXTIkzMDC_DP5n8\",\n  authDomain: \"posmate-5fc0a.firebaseapp.com\",\n  projectId: \"posmate-5fc0a\",\n  storageBucket: \"posmate-5fc0a.appspot.com\",\n  messagingSenderId: \"48463376409\",\n  appId: \"1:48463376409:web:b427a4fbc3c210a5977a88\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// Initialize Cloud Firestore and get a reference to the service\nexport const auth = firebase.auth();\n\nexport const db = firebase.firestore();\n","import { auth, db } from \"./firebaseConfig\";\n\nexport const signIn = (email, password) =>\n  auth.signInWithEmailAndPassword(email, password);\n\nexport const signUp = (email, password) =>\n  auth\n    .createUserWithEmailAndPassword(email, password)\n    .then((userAuth) => {\n      if (userAuth.user) {\n        db.collection(\"users\")\n          .doc(userAuth.user.uid)\n          .set({\n            paid: true,\n            products: [],\n            categories: [],\n            wooCredentials: { ck: null, cs: null, useWoocommerce: false },\n            transList: [],\n            storeDetails: {\n              name: null,\n              address: null,\n              phoneNumber: null,\n              website: null,\n              comSelected: null,\n              deliveryPrice: null,\n            },\n            //company name\n            //adddress\n            //etc\n          });\n      }\n    })\n    .catch((e) => console.log(e));\n\nexport const updateData = (categories, products) => {\n  return new Promise((resolve, reject) => {\n    db.collection(\"users\")\n      .doc(auth.currentUser?.uid)\n      .update({\n        products: products,\n        categories: categories,\n      })\n      .then(() => resolve(\"Promise resolved!\"))\n      .catch(() => reject(\"Promise rejected!\"));\n  });\n};\n\nexport const updateWooCredentials = (wooCredentials) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    wooCredentials: wooCredentials,\n  });\n};\n\nexport const updateTransList = (transList) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    transList: transList,\n  });\n};\n\nexport const updateStoreDetails = (storeDetails) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    storeDetails: storeDetails,\n  });\n};\n","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  cartState,\n  cartSubState,\n  setCartState,\n  setTransListState,\n  storeDetailState,\n  transListState,\n} from \"state/state\";\nimport { Button } from \"@react-native-material/core\";\nimport DeliveryScreen from \"components/DeliveryScreen\";\nimport CashScreen from \"components/CashScreen\";\nimport ChangeScreen from \"components/ChangeScreen\";\nimport { updateTransList } from \"state/firebaseFunctions\";\n\nconst CartScreen = () => {\n  const [deliveryModal, setDeliveryModal] = useState(false);\n  const [cashModal, setCashModal] = useState(false);\n  const [changeModal, setChangeModal] = useState(false);\n  const [ongoingDelivery, setOngoingDelivery] = useState(null);\n  const [name, setName] = useState();\n  const [phone, setPhone] = useState();\n  const [address, setAddress] = useState();\n  const [deliveryChecked, setDeliveryChecked] = useState(false);\n  const [changeDue, setChangeDue] = useState();\n  const cart = cartState.use();\n  const transList = transListState.use();\n  const storeDetails = storeDetailState.use();\n  const [cartSub, setCartSub] = useState(0);\n\n  useEffect(() => {\n    if (cart.length > 0) {\n      let newVal = 0;\n      for (var i = 0; i < cart.length; i++) {\n        newVal += parseFloat(cart[i].price);\n      }\n      setCartSub(newVal);\n    } else {\n      setCartSub(0);\n    }\n  }, [cart]);\n\n  const AddToList = async (payload) => {\n    const local = structuredClone(transList);\n    //local.unshift(payload);\n    console.log(\"trans: \", local);\n    console.log(\"Payload: \", payload);\n    local.push(payload);\n    updateTransList(local);\n   // setTransListState(local);\n  };\n\n  const Print = (method) => {\n    const transNum = transList?.length + 1;\n    if (method === \"deliveryOrder\") {\n      let total =\n        storeDetails.deliveryPrice > 0\n          ? parseFloat(storeDetails.deliveryPrice)\n          : 0;\n      const today = new Date();\n\n      let data = [\n        \"\\x1B\" + \"\\x40\", // init\n        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n        storeDetails.name,\n        \"\\x0A\",\n        storeDetails.address + \"\\x0A\",\n        storeDetails.website + \"\\x0A\", // text and line break\n        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n        today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n        \"\\x0A\",\n        `Transaction # ${transNum}` + \"\\x0A\",\n        \"\\x0A\",\n        `Delivery Order: $${storeDetails.deliveryPrice} Fee` + \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      ];\n\n      cart.map((cartItem) => {\n        total += parseFloat(cartItem.price);\n        data.push(`Name: ${cartItem.name}`);\n        data.push(`Price: $${cartItem.price}`);\n\n        if (cartItem.description) {\n          data.push(\"\\x0A\");\n          data.push(cartItem.description);\n        }\n\n        if (cartItem.options) {\n          data.push(\"\\x0A\");\n          cartItem.options.map((option) => {\n            data.push(option);\n            data.push(\"\\x0A\");\n          });\n        }\n\n        if (cartItem.extraDetails) {\n          data.push(cartItem.extraDetails);\n          data.push(\"\\x0A\");\n        }\n\n        data.push(\"\\x0A\" + \"\\x0A\");\n      });\n\n      total = total * 1.13;\n      total = total.toFixed(2);\n\n      //push ending\n      data.push(\n        \"\\x0A\",\n        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Name: \" + name,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Phone #:  \" + phone,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Address #:  \" + address,\n        \"\\x0A\" + \"\\x0A\",\n        \"Total Including (13% Tax): \" + total + \"\\x0A\" + \"\\x0A\",\n        \"------------------------------------------\" + \"\\x0A\",\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n      );\n      fetch(\"http://localhost:8080/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          printData: data,\n          comSelected: storeDetails.comSelected,\n        }),\n      })\n        .then((response) => response.json())\n        .then((respData) => {\n          console.log(respData);\n        })\n        .catch((e) => alert(\"Error with printer\"));\n\n      AddToList({\n        date: today,\n        transNum: transNum,\n        total: total,\n        method: \"deliveryOrder\",\n        cart: cart,\n      });\n\n      setCartState([]);\n      setDeliveryModal(false);\n    } else if (method === \"pickupOrder\") {\n      let total = 0;\n      const today = new Date();\n\n      let data = [\n        \"\\x1B\" + \"\\x40\", // init\n        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n        storeDetails.name,\n        \"\\x0A\",\n        storeDetails.address + \"\\x0A\",\n        storeDetails.website + \"\\x0A\", // text and line break\n        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n        today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n        \"\\x0A\",\n        `Transaction # ${transNum}` + \"\\x0A\",\n        \"\\x0A\",\n        \"Pickup Order\" + \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      ];\n\n      cart.map((cartItem) => {\n        total += parseFloat(cartItem.price);\n        data.push(`Name: ${cartItem.name}`);\n        data.push(`Price: $${cartItem.price}`);\n\n        if (cartItem.description) {\n          data.push(\"\\x0A\");\n          data.push(cartItem.description);\n        }\n\n        if (cartItem.options) {\n          data.push(\"\\x0A\");\n          cartItem.options.map((option) => {\n            data.push(option);\n            data.push(\"\\x0A\");\n          });\n        }\n\n        if (cartItem.extraDetails) {\n          data.push(cartItem.extraDetails);\n          data.push(\"\\x0A\");\n        }\n\n        data.push(\"\\x0A\" + \"\\x0A\");\n      });\n\n      total = total * 1.13;\n      total = total.toFixed(2);\n\n      //push ending\n      data.push(\n        \"\\x0A\",\n        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Name: \" + name,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Phone #:  \" + phone,\n        \"\\x0A\" + \"\\x0A\",\n        \"Total Including (13% Tax): \" + total + \"\\x0A\" + \"\\x0A\",\n        \"------------------------------------------\" + \"\\x0A\",\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n      );\n      fetch(\"http://localhost:8080/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          printData: data,\n          comSelected: storeDetails.comSelected,\n        }),\n      })\n        .then((response) => response.json())\n        .then((respData) => {\n          console.log(respData);\n        })\n        .catch((e) => alert(\"Error with printer\"));\n\n      AddToList({\n        date: today,\n        transNum: transNum,\n        total: total,\n        method: \"pickupOrder\",\n        cart: cart,\n      });\n\n      setCartState([]);\n      setDeliveryModal(false);\n    } else {\n      let total = 0;\n      const today = new Date();\n\n      let data = [\n        \"\\x1B\" + \"\\x40\", // init\n        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n        storeDetails.name,\n        \"\\x0A\",\n        storeDetails.address + \"\\x0A\",\n        storeDetails.website + \"\\x0A\", // text and line break\n        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n        today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n        \"\\x0A\",\n        `Transaction # ${transNum}` + \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      ];\n\n      cart.map((cartItem) => {\n        total += parseFloat(cartItem.price);\n        data.push(`Name: ${cartItem.name}`);\n        data.push(\"\\x0A\");\n        data.push(`Price: $${cartItem.price}`);\n\n        if (cartItem.description) {\n          data.push(\"\\x0A\");\n          data.push(cartItem.description);\n        }\n\n        if (cartItem.options) {\n          data.push(\"\\x0A\");\n          cartItem.options.map((option) => {\n            data.push(option);\n            data.push(\"\\x0A\");\n          });\n        }\n\n        if (cartItem.extraDetails) {\n          data.push(cartItem.extraDetails);\n          data.push(\"\\x0A\");\n        }\n\n        data.push(\"\\x0A\" + \"\\x0A\");\n      });\n\n      total = total * 1.13;\n      total = total.toFixed(2);\n\n      if (method === \"Cash\") {\n        //push ending\n        data.push(\n          \"\\x0A\",\n          \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n          \"\\x0A\" + \"\\x0A\",\n          \"Payment Method: \" + method + \"\\x0A\" + \"\\x0A\",\n          \"Total Including (13% Tax): \" + \"$\" + total + \"\\x0A\" + \"\\x0A\",\n          \"Change Due: \" + \"$\" + changeDue + \"\\x0A\" + \"\\x0A\",\n          \"------------------------------------------\" + \"\\x0A\",\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n          \"\\x1D\" + \"\\x56\" + \"\\x30\",\n          \"\\x10\" + \"\\x14\" + \"\\x01\" + \"\\x00\" + \"\\x05\"\n        );\n      } else {\n        data.push(\n          \"\\x0A\",\n          \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n          \"\\x0A\" + \"\\x0A\",\n          \"Payment Method: \" + method + \"\\x0A\" + \"\\x0A\",\n          \"Total Including (13% Tax): \" + \"$\" + total + \"\\x0A\" + \"\\x0A\",\n          \"------------------------------------------\" + \"\\x0A\",\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n          \"\\x1D\" + \"\\x56\" + \"\\x30\"\n        );\n      }\n\n      fetch(\"http://localhost:8080/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          printData: data,\n          comSelected: storeDetails.comSelected,\n        }),\n      })\n        .then((response) => response.json())\n        .then((respData) => {\n          console.log(respData);\n        })\n        .catch((e) => alert(\"Error with printer\"));\n\n      AddToList({\n        date: today,\n        transNum: transNum,\n        total: total,\n        method: method,\n        cart: cart,\n      });\n    }\n\n    setCartState([]);\n  };\n\n  const DeliveryBtn = () => {\n    if (ongoingDelivery === null) {\n      return (\n        <Button\n          title=\"Phone Order\"\n          onPress={() => setDeliveryModal(true)}\n          disabled={cart.length > 0}\n          style={{ marginBottom: 20 }}\n        />\n      );\n    }\n    if (ongoingDelivery && cart.length > 0) {\n      return (\n        <Button\n          title=\"Complete\"\n          onPress={() => {\n            Print(deliveryChecked ? \"deliveryOrder\" : \"pickupOrder\");\n            setOngoingDelivery(null);\n            setName(null);\n            setPhone(null);\n            setAddress(null);\n          }}\n          style={{ marginBottom: 20 }}\n        />\n      );\n    } else {\n      return (\n        <Button\n          title=\"Cancel\"\n          onPress={() => setOngoingDelivery(null)}\n          style={{ marginBottom: 20 }}\n        />\n      );\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={styles.container}\n        contentContainerStyle={styles.contentContainer}\n      >\n        <View>\n          {cart.map((cartItem, index) => (\n            <View style={{ marginBottom: 20 }}>\n              <Text>Name: {cartItem.name}</Text>\n              <Text>Price: {cartItem.price}</Text>\n              {cartItem.description && (\n                <Text>Description: {cartItem.description}</Text>\n              )}\n              {cartItem.options &&\n                cartItem.options.map((option) => <Text>{option}</Text>)}\n              {cartItem.extraDetails && <Text>{cartItem.extraDetails}</Text>}\n              <Text\n                style={{ color: \"blue\" }}\n                onPress={() => {\n                  const local = structuredClone(cart);\n                  local.splice(index, 1);\n                  setCartState(local);\n                }}\n              >\n                Remove\n              </Text>\n            </View>\n          ))}\n        </View>\n        <View>\n          <Text>Sub: {cartSub.toFixed(2)}</Text>\n          <Text>Total: {(cartSub * 1.13).toFixed(2)}</Text>\n          <Button\n            title=\"Cash\"\n            onPress={() => setCashModal(true)}\n            disabled={cart.length < 1 || ongoingDelivery}\n            style={{ marginBottom: 20 }}\n          />\n          <Button\n            title=\"Card\"\n            onPress={() => Print(\"Card\")}\n            disabled={cart.length < 1 || ongoingDelivery}\n            style={{ marginBottom: 20 }}\n          />\n          <DeliveryBtn />\n          <Button\n            title=\"Change\"\n            onPress={() => setChangeModal(true)}\n            disabled={cart.length > 0 || ongoingDelivery}\n          />\n        </View>\n        <Modal visible={deliveryModal}>\n          <DeliveryScreen\n            setDeliveryModal={setDeliveryModal}\n            setOngoingDelivery={setOngoingDelivery}\n            setName={setName}\n            setPhone={setPhone}\n            setAddress={setAddress}\n            name={name}\n            phone={phone}\n            address={address}\n            deliveryChecked={deliveryChecked}\n            setDeliveryChecked={setDeliveryChecked}\n          />\n        </Modal>\n        <Modal visible={cashModal}>\n          <CashScreen\n            setCashModal={setCashModal}\n            GetTrans={() => Print(\"Cash\")}\n            total={(cartSub * 1.13).toFixed(2)}\n            setChangeDue={setChangeDue}\n          />\n        </Modal>\n        <Modal visible={changeModal}>\n          <ChangeScreen setChangeModal={setChangeModal} />\n        </Modal>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default CartScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"lightgrey\",\n    flex: 1,\n    height: \"100%\",\n  },\n  contentContainer: {\n    backgroundColor: \"lightgrey\",\n    flex: 1,\n    height: \"100%\",\n    justifyContent: \"space-between\",\n    padding: 20,\n  },\n});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport MenuScreen from \"./MenuScreen\";\nimport CartScreen from \"./CartScreen\";\nimport { Button } from \"@react-native-material/core\";\nimport { sectionState, userStoreState } from \"state/state\";\nimport { auth } from \"state/firebaseConfig\";\n\nconst HomeScreen = ({ navigation }) => {\n  const catalog = userStoreState.use();\n  const section = sectionState.use();\n\n  const Screen = () => {\n    return (\n      <View style={{ flexDirection: \"row\", height: \"100%\" }}>\n        <MenuScreen\n          catalog={catalog}\n          section={section}\n          navigation={navigation}\n        />\n        <CartScreen />\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <Screen />\n    </View>\n  );\n};\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n  },\n});\n","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport TestAdd from \"./TestAdd\";\nimport Spinner from \"./Spinner\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst EditProductList = ({ navigation }) => {\n  const catalog = userStoreState.use();\n\n  function handleRemoveCatagory(index) {\n    const localCatalog = structuredClone(catalog);\n    localCatalog.products.splice(index, 1);\n\n    updateData(localCatalog.categories, localCatalog.products);\n    // setisModalVisible(true);\n  }\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>Current Products</Text>\n      {catalog.categories.length > 0 ? (\n        catalog.products.map((e, index) => {\n          return (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                padding: 15,\n                margin: 10,\n                backgroundColor: \"lightgrey\",\n              }}\n            >\n              <Text style={{ fontSize: 17 }}>Product: {e.name}</Text>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  width: \"20%\",\n                }}\n              >\n                <Button\n                  title=\"Duplicate\"\n                  onPress={() => {\n                    let copy = structuredClone(e);\n                    copy.name = copy.name + \" Copy\";\n                    updateData(\n                      [...catalog.categories],\n                      [...catalog.products, copy]\n                    );\n                  }}\n                  style={{ margin: 10 }}\n                />\n                <Button\n                  title=\"Edit\"\n                  // onPress={() => setProductEditModal(true)}\n                  onPress={() =>\n                    navigation.navigate(\"AddProduct\", {\n                      existingProduct: e,\n                      existingProductIndex: index,\n                    })\n                  }\n                  style={{ margin: 10 }}\n                />\n                <TouchableOpacity\n                  onPress={() => handleRemoveCatagory(index)}\n                  style={{\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    borderRadius: 3,\n                    backgroundColor: \"red\",\n                    padding: 10,\n                    margin: 10,\n                  }}\n                >\n                  <Text\n                    style={{ color: \"white\", fontWeight: \"600\", fontSize: 18 }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          );\n        })\n      ) : (\n        <Text style={{ marginTop: 50, marginBottom: 50 }}>\n          You must add a category before you can add a product...\n        </Text>\n      )}\n      {catalog.products.length < 1 && catalog.categories.length > 0 && (\n        <Text style={{ marginTop: 50, marginBottom: 50 }}>\n          You have no products...\n        </Text>\n      )}\n      <Button\n        title=\"Add New Product\"\n        onPress={() => navigation.navigate(\"AddProduct\")}\n        style={{ margin: 10 }}\n        disabled={catalog.categories.length < 1}\n      />\n      {/* <Spinner isModalVisible={isModalVisible} /> */}\n    </ScrollView>\n  );\n};\n\nexport default EditProductList;\n\nconst styles = StyleSheet.create({});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { ListItem } from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nconst DropDown = ({ label, options, setValue, value, style }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <View style={[styles.container, style]}>\n      <ListItem\n        title={value ? value : label}\n        trailing={(props) => (\n          <Icon name={show ? \"chevron-up\" : \"chevron-down\"} {...props} />\n        )}\n        onPress={() => setShow((prevState) => !prevState)}\n      />\n      {show && (\n        <>\n          {options.map((option) => (\n            <ListItem\n              title={option}\n              onPress={() => {\n                setValue(option);\n                setShow(false);\n              }}\n            />\n          ))}\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default DropDown;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n  },\n});\n","import { View, Text, TouchableOpacity } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\n\nconst OptionView = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n  indexOn,\n  setindexOn,\n}) => {\n  if (indexOn === index) {\n    const [optionLblsValues, setoptionLblsValues] = useState([]);\n    const [e, sete] = useState(item);\n    const [testMap, settestMap] = useState(structuredClone(item.optionsList));\n    var optionLbls = newProduct.options.map(function (el) {\n      if (el.label !== e.label && el.label !== null) {\n        return el.label;\n      }\n    });\n\n    useEffect(() => {\n      if (e.selectedCaseKey !== null) {\n        if (newProduct.options.length > 1) {\n          const local = newProduct.options.filter(\n            (localE) => localE.label == e.selectedCaseKey\n          );\n          const optionLblsValuesLocal =\n            local.length > 0 &&\n            local[0].optionsList.map(function (el) {\n              return el.label;\n            });\n          setoptionLblsValues(optionLblsValuesLocal);\n        } else {\n          newProductOptions.current[index].selectedCaseKey = null;\n          newProductOptions.current[index].selectedCaseValue = null;\n        }\n      }\n    }, [e]);\n\n    return (\n      <View>\n        <View\n          style={{\n            padding: 25,\n            margin: 15,\n            backgroundColor: \"lightgrey\",\n          }}\n        >\n          <TouchableOpacity\n            onPress={() =>\n              indexOn !== index ? setindexOn(index) : setindexOn(null)\n            }\n            style={{\n              padding: 25,\n              margin: 15,\n              backgroundColor: \"lightgrey\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              height: 100,\n            }}\n          >\n            <Text>{item.label}</Text>\n            <TouchableOpacity\n              onPress={() => {\n                newProductOptions.current.push({\n                  ...item,\n                  label: item.label + \" Copy\",\n                });\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(newProductOptions.current.length - 1);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                Copy\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                newProductOptions.current.splice(index, 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(indexOn - 1);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                X\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                function moveItem(from, to) {\n                  // remove `from` item and store it\n                  var f = newProductOptions.current.splice(from, 1)[0];\n                  // insert stored item into position `to`\n                  newProductOptions.current.splice(to, 0, f);\n                }\n\n                moveItem(index, index + 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(null);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                \\/\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                function moveItem(from, to) {\n                  // remove `from` item and store it\n                  var f = newProductOptions.current.splice(from, 1)[0];\n                  // insert stored item into position `to`\n                  newProductOptions.current.splice(to, 0, f);\n                }\n\n                moveItem(index, index - 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(null);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                /\\\n              </Text>\n            </TouchableOpacity>\n          </TouchableOpacity>\n          <TextInput\n            placeholder=\"Enter Select List Label\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, label: val }));\n              newProductOptions.current[index].label = val;\n            }}\n            value={e.label}\n            style={{ marginBottom: 25 }}\n          />\n          {/* optionType */}\n          <DropDown\n            label=\"Option Type\"\n            options={[\"Standard\", \"Dropdown\"]}\n            setValue={(val) => {\n              // sete((prevState) => ({\n              //   ...prevState,\n              //   optionType: val,\n              // }));\n              if (e.optionType) {\n                newProductOptions.current[index].optionType = val;\n              } else {\n                newProductOptions.current[index] = { ...e, optionType: val };\n                console.log(newProductOptions.current[index].optionType);\n              }\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n            }}\n            value={e.optionType}\n            style={{ marginBottom: 25 }}\n          />\n          <TextInput\n            placeholder=\"Enter Number Of Selectable; If There Is\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n              newProductOptions.current[index].numOfSelectable = val;\n            }}\n            value={e.numOfSelectable}\n            style={{ marginBottom: 25 }}\n          />\n          {testMap.map((eInnerListStart, indexInnerList) => {\n            const eInnerList = structuredClone(eInnerListStart);\n            return (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  marginBottom: 25,\n                  alignItems: \"center\",\n                }}\n              >\n                <TextInput\n                  placeholder=\"Enter Option Label\"\n                  onChangeText={(val) => {\n                    const clone = structuredClone(testMap);\n                    clone[indexInnerList].label = val;\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                  value={eInnerList.label}\n                />\n                <TextInput\n                  placeholder=\"Enter price increase\"\n                  //   onChangeText={(val) => {\n                  //     newProductOptions.current[index].optionsList[\n                  //       indexInnerList\n                  //     ].priceIncrease = val;\n                  //     seteInnerList((prevState) => ({\n                  //       ...prevState,\n                  //       priceIncrease: val,\n                  //     }));\n                  //   }}\n                  onChangeText={(val) => {\n                    const clone = structuredClone(testMap);\n                    clone[indexInnerList].priceIncrease = val;\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                  value={eInnerList.priceIncrease}\n                  style={{ marginLeft: 20, marginRight: 20 }}\n                />\n                <TouchableOpacity\n                  onPress={() => {\n                    const clone = structuredClone(testMap);\n                    clone.splice(indexInnerList, 1);\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            );\n          })}\n          <Button\n            title=\"Add Option Choice\"\n            onPress={() => {\n              const clone = structuredClone(testMap);\n              clone.push({\n                label: null,\n                priceIncrease: null,\n              });\n              newProductOptions.current[index].optionsList = clone;\n              settestMap(clone);\n            }}\n            style={{ marginBottom: 25 }}\n          />\n          {optionLbls.length > 1 && (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginBottom: 25,\n              }}\n            >\n              <DropDown\n                label=\"Show if...\"\n                options={optionLbls}\n                setValue={(val) => {\n                  sete((prevState) => ({ ...prevState, selectedCaseKey: val }));\n                  newProductOptions.current[index].selectedCaseKey = val;\n                }}\n                value={e.selectedCaseKey}\n                style={{ marginBottom: 25 }}\n              />\n              <Text>\"=\"</Text>\n              <DropDown\n                label=\"Show if...\"\n                options={optionLblsValues}\n                setValue={(val) => {\n                  sete((prevState) => ({\n                    ...prevState,\n                    selectedCaseValue: val,\n                  }));\n                  newProductOptions.current[index].selectedCaseValue = val;\n                }}\n                value={e.selectedCaseValue}\n                style={{ marginBottom: 25 }}\n              />\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  } else {\n    return (\n      <TouchableOpacity\n        onPress={() =>\n          indexOn !== index ? setindexOn(index) : setindexOn(null)\n        }\n        style={{\n          padding: 25,\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 100,\n        }}\n      >\n        <Text>{item.label}</Text>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.push({\n              ...item,\n              label: item.label + \" Copy\",\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(newProductOptions.current.length - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.splice(index, 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(indexOn - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            X\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            function moveItem(from, to) {\n              // remove `from` item and store it\n              var f = newProductOptions.current.splice(from, 1)[0];\n              // insert stored item into position `to`\n              newProductOptions.current.splice(to, 0, f);\n            }\n\n            moveItem(index, index + 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(null);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            \\/\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            function moveItem(from, to) {\n              // remove `from` item and store it\n              var f = newProductOptions.current.splice(from, 1)[0];\n              // insert stored item into position `to`\n              newProductOptions.current.splice(to, 0, f);\n            }\n\n            moveItem(index, index - 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(null);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            /\\\n          </Text>\n        </TouchableOpacity>\n      </TouchableOpacity>\n    );\n  }\n};\n\nexport default OptionView;\n","import {\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"state/state\";\nimport { updateData } from \"state/firebaseFunctions\";\nimport OptionView from \"./OptionView\";\n\nconst MyListItem = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n  indexOn,\n  setindexOn,\n  setcurrentY,\n}) => {\n  const memoizedItem = useMemo(() => item, [item]);\n\n  if (indexOn !== index) {\n    return (\n      <TouchableOpacity\n        onPress={() => setindexOn(index)}\n        style={{\n          padding: 25,\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 100,\n        }}\n      >\n        <Text>{memoizedItem.label}</Text>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.push({\n              ...memoizedItem,\n              label: memoizedItem.label + \" Copy\",\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(newProductOptions.current.length - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.splice(index, 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(indexOn - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            X\n          </Text>\n        </TouchableOpacity>\n      </TouchableOpacity>\n    );\n  } else {\n    const [optionLblsValues, setoptionLblsValues] = useState([]);\n    const [e, sete] = useState(memoizedItem);\n    var optionLbls = newProduct.options.map(function (el) {\n      if (el.label !== e.label && el.label !== null) {\n        return el.label;\n      }\n    });\n\n    useEffect(() => {\n      if (e.selectedCaseKey !== null) {\n        const local = newProduct.options.filter(\n          (localE) => localE.label == e.selectedCaseKey\n        );\n        const optionLblsValuesLocal =\n          local.length > 0 &&\n          local[0].optionsList.map(function (el) {\n            return el.label;\n          });\n        setoptionLblsValues(optionLblsValuesLocal);\n      }\n    }, [e]);\n\n    return (\n      <View>\n        <View\n          style={{\n            padding: 25,\n            margin: 15,\n            backgroundColor: \"lightgrey\",\n          }}\n        >\n          <TouchableOpacity\n            onPress={() => {\n              newProductOptions.current.push({\n                ...e,\n                label: e.label + \" Copy\",\n              });\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(newProductOptions.current.length - 1);\n            }}\n          >\n            <Text\n              style={{\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\",\n              }}\n            >\n              Copy\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              newProductOptions.current.splice(index, 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <Text\n              style={{\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\",\n              }}\n            >\n              X\n            </Text>\n          </TouchableOpacity>\n          <TextInput\n            placeholder=\"Enter Select List Label\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, label: val }));\n              newProductOptions.current[index].label = val;\n            }}\n            value={e.label}\n            style={{ marginBottom: 25 }}\n          />\n          {/* optionType */}\n          <DropDown\n            label=\"Option Type\"\n            options={[\"Standard\", \"Dropdown\"]}\n            setValue={(val) => {\n              // sete((prevState) => ({\n              //   ...prevState,\n              //   optionType: val,\n              // }));\n              if (e.optionType) {\n                newProductOptions.current[index].optionType = val;\n              } else {\n                newProductOptions.current[index] = { ...e, optionType: val };\n                console.log(newProductOptions.current[index].optionType);\n              }\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n            }}\n            value={e.optionType}\n            style={{ marginBottom: 25 }}\n          />\n          <TextInput\n            placeholder=\"Enter Number Of Selectable; If There Is\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n              newProductOptions.current[index].numOfSelectable = val;\n            }}\n            value={e.numOfSelectable}\n            style={{ marginBottom: 25 }}\n          />\n          {e.optionsList.map((eInnerListStart, indexInnerList) => {\n            const [eInnerList, seteInnerList] = useState(eInnerListStart);\n            return (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  marginBottom: 25,\n                  alignItems: \"center\",\n                }}\n              >\n                <TextInput\n                  placeholder=\"Enter Option Label\"\n                  onChangeText={(val) => {\n                    newProductOptions.current[index].optionsList[\n                      indexInnerList\n                    ].label = val;\n                    seteInnerList((prevState) => ({\n                      ...prevState,\n                      label: val,\n                    }));\n                  }}\n                  value={eInnerList.label}\n                />\n                <TextInput\n                  placeholder=\"Enter price increase\"\n                  onChangeText={(val) => {\n                    newProductOptions.current[index].optionsList[\n                      indexInnerList\n                    ].priceIncrease = val;\n                    seteInnerList((prevState) => ({\n                      ...prevState,\n                      priceIncrease: val,\n                    }));\n                  }}\n                  value={eInnerList.priceIncrease}\n                  style={{ marginLeft: 20, marginRight: 20 }}\n                />\n                <TouchableOpacity\n                  onPress={() => {\n                    newProductOptions.current[index].optionsList.splice(\n                      indexInnerList,\n                      1\n                    );\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: newProductOptions.current,\n                    }));\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            );\n          })}\n          <Button\n            title=\"Add Option Choice\"\n            onPress={() => {\n              newProductOptions.current[index].optionsList.push({\n                label: null,\n                priceIncrease: null,\n              });\n              setcurrentY(window.pageYOffset);\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n            }}\n            style={{ marginBottom: 25 }}\n          />\n          {optionLbls.length > 1 && (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginBottom: 25,\n              }}\n            >\n              <DropDown\n                label=\"Show if...\"\n                options={optionLbls}\n                setValue={(val) => {\n                  sete((prevState) => ({ ...prevState, selectedCaseKey: val }));\n                  newProductOptions.current[index].selectedCaseKey = val;\n                }}\n                value={e.selectedCaseKey}\n                style={{ marginBottom: 25 }}\n              />\n              <Text>\"=\"</Text>\n              <DropDown\n                label=\"Show if...\"\n                options={optionLblsValues}\n                setValue={(val) => {\n                  sete((prevState) => ({\n                    ...prevState,\n                    selectedCaseValue: val,\n                  }));\n                  newProductOptions.current[index].selectedCaseValue = val;\n                }}\n                value={e.selectedCaseValue}\n                style={{ marginBottom: 25 }}\n              />\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n};\n\nconst AddProduct = ({ route, navigation }) => {\n  const { existingProduct, existingProductIndex } = route.params\n    ? route.params\n    : { existingProduct: null, existingProductIndex: null };\n\n  const catalog = userStoreState.use();\n  const [newProduct, setnewProduct] = useState(\n    existingProduct\n      ? existingProduct\n      : {\n          name: null,\n          price: null,\n          catagory: null,\n          options: [],\n          description: null,\n        }\n  );\n  const newProductOptions = useRef(\n    existingProduct ? existingProduct.options : []\n  );\n  const [indexOn, setindexOn] = useState(0);\n\n  // useEffect(() => {\n  //   //setTimeout(() => {\n  //   window.scrollTo({\n  //     top: currentY,\n  //     behavior: \"instant\",\n  //   });\n  //   //}, 500);\n  // }, [currentY]);\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(\n        [...catalog.categories],\n        [...catalog.products, copyProductData]\n      );\n      navigation.goBack();\n    } else if (existingProduct) {\n      let copy = structuredClone(catalog.products);\n      const newProductUseRef = {\n        ...newProduct,\n        options: newProductOptions.current,\n      };\n      copy[existingProductIndex] = newProductUseRef;\n      updateData([...catalog.categories], copy);\n      navigation.goBack();\n    } else {\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\n      navigation.goBack();\n    }\n  }\n\n  const OptionsAddingSection = () => {\n    return (\n      <View>\n        <FlatList\n          // onLayout={() =>\n          //   window.scrollTo({\n          //     top: currentY,\n          //     behavior: \"instant\",\n          //   })\n          // }\n          getItemLayout={(data, index) => ({\n            length: index === indexOn ? 400 * data.optionsList?.length : 100,\n            offset: 400 * index,\n            index,\n          })}\n          data={newProduct.options}\n          keyExtractor={(item) => item.id?.toString()}\n          renderItem={({ item, index }) => (\n            <OptionView\n              item={item}\n              index={index}\n              newProduct={newProduct}\n              setnewProduct={setnewProduct}\n              newProductOptions={newProductOptions}\n              indexOn={indexOn}\n              setindexOn={setindexOn}\n            />\n          )}\n        />\n        <Button\n          title=\"Add Product Option\"\n          onPress={() => {\n            newProductOptions.current.push({\n              label: null,\n              optionsList: [],\n              selectedCaseKey: null,\n              selectedCaseValue: null,\n              numOfSelectable: null,\n              id: Math.random().toString(36).substr(2, 9),\n              optionType: null,\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(newProductOptions.current.length - 1);\n          }}\n          style={{ marginBottom: 25 }}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView\n      style={{ width: \"100%\", height: \"100%\", flex: 1 }}\n      contentContainerStyle={{\n        width: \"93%\",\n        alignSelf: \"center\",\n        marginTop: 25,\n      }}\n    >\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            padding: 20,\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <TouchableOpacity onPress={() => navigation.goBack()}>\n            <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n              X\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              let copy = structuredClone(newProduct);\n              copy.name = copy.name + \" Copy\";\n              handleDataUpdate(copy);\n            }}\n          >\n            <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n              Copy\n            </Text>\n          </TouchableOpacity>\n          <Text style={{ marginBottom: 25 }}>AddProduct</Text>\n        </View>\n        <TextInput\n          placeholder=\"Enter Product Name\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, name: val }));\n          }}\n          value={newProduct.name}\n          style={{ marginBottom: 25 }}\n        />\n        <TextInput\n          placeholder=\"Enter any other items that come with this\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, description: val }));\n          }}\n          style={{ marginBottom: 25 }}\n          value={newProduct.description}\n        />\n        <TextInput\n          placeholder=\"Enter Product Price\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, price: val }));\n          }}\n          style={{ marginBottom: 25 }}\n          value={newProduct.price}\n        />\n        <DropDown\n          label=\"Choose catagory\"\n          options={catalog.categories}\n          setValue={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, catagory: val }));\n          }}\n          value={newProduct.catagory}\n          style={{ marginBottom: 25 }}\n        />\n        <OptionsAddingSection />\n        <Button\n          title=\"Add/Save Product\"\n          onPress={() => {\n            handleDataUpdate();\n          }}\n          style={{\n            marginBottom: 25,\n            marginTop: 25,\n            backgroundColor: \"lightgreen\",\n          }}\n        />\n      </>\n    </ScrollView>\n  );\n};\n\nexport default AddProduct;\n\nconst styles = StyleSheet.create({});\n","import { View, Text, ScrollView } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport { setWoocommerceState, woocommerceState } from \"state/state\";\nimport { updateWooCredentials } from \"state/firebaseFunctions\";\n\nconst WoocommerceSettings = () => {\n  const wooCredentials = woocommerceState.use();\n  const [apiUrl, setapiUrl] = useState(wooCredentials.apiUrl);\n  const [ck, setck] = useState(wooCredentials.ck);\n  const [cs, setcs] = useState(wooCredentials.cs);\n  const [useWoocommerce, setuseWoocommerce] = useState(\n    wooCredentials.useWoocommerce\n  );\n\n  const handleDataUpdate = () => {\n    if (apiUrl !== null && ck !== null && cs !== null) {\n      setWoocommerceState({\n        apiUrl: apiUrl,\n        ck: ck,\n        cs: cs,\n        useWoocommerce: useWoocommerce,\n      });\n      updateWooCredentials({\n        apiUrl: apiUrl,\n        ck: ck,\n        cs: cs,\n        useWoocommerce: useWoocommerce,\n      });\n    }\n  };\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      <TextInput\n        placeholder=\"Enter Woocommerce 'API Url'\"\n        onChangeText={(val) => setapiUrl(val)}\n        style={{ margin: 10 }}\n        value={apiUrl}\n      />\n      <TextInput\n        placeholder=\"Enter Woocommerce 'CK'\"\n        onChangeText={(val) => setck(val)}\n        style={{ margin: 10 }}\n        value={ck}\n      />\n      <TextInput\n        placeholder=\"Enter Woocommerce 'CS'\"\n        onChangeText={(val) => setcs(val)}\n        style={{ margin: 10 }}\n        value={cs}\n      />\n      <Switch\n        value={useWoocommerce}\n        onValueChange={(val) => setuseWoocommerce(val)}\n      />\n      <Button title=\"Save\" onPress={handleDataUpdate} style={{ margin: 10 }} />\n      {/* <Spinner isModalVisible={isModalVisible} /> */}\n    </ScrollView>\n  );\n};\n\nexport default WoocommerceSettings;\n","import { View, Text, ScrollView } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport { setStoreDetailState, storeDetailState } from \"state/state\";\nimport { updateStoreDetails } from \"state/firebaseFunctions\";\nimport DropDown from \"./DropDown\";\n\nconst EditStoreDetails = () => {\n  const storeDetails = storeDetailState.use();\n  const [name, setname] = useState(storeDetails.name);\n  const [phoneNumber, setphoneNumber] = useState(storeDetails.phoneNumber);\n  const [address, setaddress] = useState(storeDetails.address);\n  const [website, setwebsite] = useState(storeDetails.website);\n  const [deliveryPrice, setdeliveryPrice] = useState(\n    storeDetails.deliveryPrice\n  );\n  const [com, setcom] = useState(storeDetails.comSelected);\n\n  const handleDataUpdate = () => {\n    if (name !== null && phoneNumber !== null && address !== null) {\n      setStoreDetailState({\n        name: name,\n        phoneNumber: phoneNumber,\n        address: address,\n        website: website,\n        deliveryPrice: deliveryPrice,\n        comSelected: com,\n      });\n      updateStoreDetails({\n        name: name,\n        phoneNumber: phoneNumber,\n        address: address,\n        website: website,\n        deliveryPrice: deliveryPrice,\n        comSelected: com,\n      });\n    }\n  };\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      <TextInput\n        placeholder=\"Enter Store Name\"\n        onChangeText={(val) => setname(val)}\n        style={{ margin: 10 }}\n        value={name}\n      />\n      <TextInput\n        placeholder=\"Enter Store Website Url\"\n        onChangeText={(val) => setwebsite(val)}\n        style={{ margin: 10 }}\n        value={website}\n      />\n      <TextInput\n        placeholder=\"Enter Store Phone Number\"\n        onChangeText={(val) => setphoneNumber(val)}\n        style={{ margin: 10 }}\n        value={phoneNumber}\n      />\n      <TextInput\n        placeholder=\"Enter Store Address\"\n        onChangeText={(val) => setaddress(val)}\n        style={{ margin: 10 }}\n        value={address}\n      />\n      <TextInput\n        placeholder=\"Enter Delivery Price\"\n        onChangeText={(val) => setdeliveryPrice(val)}\n        style={{ margin: 10 }}\n        value={deliveryPrice}\n      />\n      <DropDown\n        options={[\"COM1\", \"COM2\", \"COM3\", \"COM4\", \"COM5\", \"COM6\", \"What Cum?\"]}\n        label=\"Pick Printer COM\"\n        value={com}\n        setValue={setcom}\n      />\n      <Button title=\"Save\" onPress={handleDataUpdate} style={{ margin: 10 }} />\n      {/* <Spinner isModalVisible={isModalVisible} /> */}\n    </ScrollView>\n  );\n};\n\nexport default EditStoreDetails;\n","import { Modal, StyleSheet, Text, View } from \"react-native\";\nimport React from \"react\";\n\nconst Spinner = ({ isModalVisible }) => {\n  return (\n    <Modal visible={isModalVisible} transparent={true}>\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flex: 1,\n          backgroundColor: \"rgba(52, 52, 52, 0.8)\",\n        }}\n      >\n        <style>\n          {`.loader {\n  border: 16px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 16px solid #3498db;\n  width: 120px;\n  height: 120px;\n  -webkit-animation: spin 2s linear infinite; /* Safari */\n  animation: spin 2s linear infinite;\n}\n\n/* Safari */\n@-webkit-keyframes spin {\n  0% { -webkit-transform: rotate(0deg); }\n  100% { -webkit-transform: rotate(360deg); }\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}`}\n        </style>\n\n        <div className=\"loader\"></div>\n      </View>\n    </Modal>\n  );\n};\n\nexport default Spinner;\n\nconst styles = StyleSheet.create({});\n","import {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport Spinner from \"./Spinner\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst AddCategory = () => {\n  const catalog = userStoreState.use();\n  const [categoryName, setcategoryName] = useState();\n  const [isModalVisible, setisModalVisible] = useState(false);\n\n  function handleDataUpdate() {\n    updateData([...catalog.categories, categoryName], catalog.products);\n    setisModalVisible(true);\n  }\n\n  function handleRemoveCategory(index) {\n    const localCatalog = structuredClone(catalog);\n    localCatalog.categories.splice(index, 1);\n\n    updateData(localCatalog.categories, localCatalog.products);\n    setisModalVisible(true);\n  }\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      {catalog.categories.map((e, index) => {\n        return (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              padding: 15,\n              margin: 10,\n              backgroundColor: \"lightgrey\",\n            }}\n          >\n            <Text style={{ fontSize: 17 }}>{e}</Text>\n            <TouchableOpacity\n              onPress={() => handleRemoveCategory(index)}\n              style={{\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"red\", fontWeight: \"600\" }}>Remove X</Text>\n            </TouchableOpacity>\n          </View>\n        );\n      })}\n      <TextInput\n        placeholder=\"Enter New Category\"\n        onChangeText={(val) => setcategoryName(val)}\n        style={{ margin: 10 }}\n      />\n      <Button\n        title=\"Add New Category\"\n        onPress={handleDataUpdate}\n        style={{ margin: 10 }}\n      />\n      <Spinner isModalVisible={isModalVisible} />\n    </ScrollView>\n  );\n};\n\nexport default AddCategory;\n\nconst styles = StyleSheet.create({});\n","import { ScrollView, StyleSheet, View } from \"react-native\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { Button, Text } from \"@react-native-material/core\";\nimport { storeDetailState, transListState } from \"state/state\";\n\nconst ViewTransactions = () => {\n  const local = transListState.use();\n  const [transList, settransList] = useState([]);\n  const today = new Date();\n  const [todaysDetails, setTodaysDetails] = useState({\n    todaysReceiptValue: 0,\n    todaysReceipts: 0,\n  });\n  const storeDetails = storeDetailState.use();\n\n  useEffect(() => {\n    if (local?.length > 0) {\n      local\n        .sort(function (a, b) {\n          if (a.date && b.date) {\n            return a.date.seconds - b.date.seconds;\n          } else if (a.date && b.date_created) {\n            const bDate = new Date(b.date_created).getTime() / 1000;\n            return a.date.seconds - bDate;\n          } else if (a.date_created && b.date) {\n            const aDate = new Date(a.date_created).getTime() / 1000;\n            return aDate - b.date.seconds;\n          } else {\n            const aDate = new Date(a.date_created).getTime() / 1000;\n            const bDate = new Date(b.date_created).getTime() / 1000;\n            return aDate - bDate;\n          }\n        })\n        .reverse();\n      settransList(local);\n      const todaysReceiptValue = local.reduce((accumulator, current) => {\n        let date;\n        if (current.date) {\n          date = new Date(current.date.seconds * 1000);\n        } else {\n          date = new Date(current.date_created);\n          // console.log(\"seconds is: \", date.getTime() / 1000);\n        }\n        if (date.toLocaleDateString() === today.toLocaleDateString()) {\n          return accumulator + parseFloat(current.total);\n        } else {\n          return accumulator;\n        }\n      }, 0);\n      const todaysReceipts = local.reduce((accumulator, current) => {\n        let date;\n        if (current.date) {\n          date = new Date(current.date.seconds * 1000);\n        } else {\n          date = new Date(current.date_created);\n        }\n\n        if (date.toLocaleDateString() === today.toLocaleDateString()) {\n          return accumulator + 1;\n        } else {\n          return accumulator;\n        }\n      }, 0);\n      setTodaysDetails({\n        todaysReceiptValue: todaysReceiptValue.toFixed(2),\n        todaysReceipts: todaysReceipts,\n      });\n    }\n  }, [local]);\n\n  const PrintTodaysTotal = () => {\n    let data = [\n      \"\\x1B\" + \"\\x40\", // init\n      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n      storeDetails.name,\n      \"\\x0A\",\n      storeDetails.address + \"\\x0A\",\n      storeDetails.website + \"\\x0A\", // text and line break\n      storeDetails.phoneNumber + \"\\x0A\", // text and line break\n      today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      \"\\x0A\" + \"\\x0A\",\n      \"Number Of Receipts: \" + todaysDetails.todaysReceipts + \"\\x0A\" + \"\\x0A\",\n      \"Sub-Total: \" +\n        \"$\" +\n        (todaysDetails.todaysReceiptValue / 1.13).toFixed(2) +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"Tax: \" +\n        \"$\" +\n        ((todaysDetails.todaysReceiptValue / 1.13) * 0.13).toFixed(2) +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"Total Including (13% Tax): \" +\n        \"$\" +\n        todaysDetails.todaysReceiptValue +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"------------------------------------------\" + \"\\x0A\",\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x1D\" + \"\\x56\" + \"\\x30\",\n    ];\n\n    fetch(\"http://localhost:8080/print\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        printData: data,\n        comSelected: storeDetails.comSelected,\n      }),\n    })\n      .then((response) => response.json())\n      .then((respData) => {\n        console.log(respData);\n      })\n      .catch((e) => alert(\"Error with printer\"));\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ textAlign: \"center\", margin: 25 }}>\n        List Of Transactions\n      </Text>\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Price: {todaysDetails.todaysReceiptValue}\n        </Text>\n        <Button\n          style={{ height: 40, alignItems: \"center\", justifyContent: \"center\" }}\n          title=\"Print Todays Receipts\"\n          onPress={PrintTodaysTotal}\n        />\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Receipts: {todaysDetails.todaysReceipts}\n        </Text>\n      </View>\n      <View style={styles.contentContainer}>\n        {transList ? (\n          transList?.map((element, index) => {\n            // if (date.toLocaleDateString() === today.toLocaleDateString()) {\n            //   setTodaysDetails((prevState) => prevState + 1);\n            // }\n\n            const date = element.date\n              ? new Date(element.date.seconds * 1000)\n              : element.date_created\n              ? new Date(element.date_created)\n              : null;\n\n            return (\n              <View\n                style={{ backgroundColor: \"grey\", padding: 30, margin: 10 }}\n                key={index}\n              >\n                <Text>{date.toLocaleString()}</Text>\n                {element.cart?.map((cartItem, index) => (\n                  <View style={{ marginBottom: 20 }} key={index}>\n                    <Text>Name: {cartItem.name}</Text>\n                    <Text>Quantity: {cartItem.quantity}</Text>\n                    <Text>Price: {cartItem.price}</Text>\n                    {cartItem.options &&\n                      cartItem.options?.map((option) => <Text>{option}</Text>)}\n                  </View>\n                ))}\n                {element.line_items?.map((cartItem, index) => (\n                  <View style={{ marginBottom: 20 }} key={index}>\n                    <Text>Name: {cartItem.name}</Text>\n                    <Text>Quantity: {cartItem.quantity}</Text>\n                    <Text>Price: {cartItem.price}</Text>\n                    {cartItem.meta_data?.map((meta, index) => {\n                      if (index === cartItem.meta_data.length - 1) return;\n                      return <Text>{`${meta.key} : ${meta.value}`}</Text>;\n                    })}\n                  </View>\n                ))}\n                <Button\n                  title=\"Print\"\n                  onPress={() => {\n                    if (element.date) {\n                      let total = 0;\n\n                      let data = [\n                        \"\\x1B\" + \"\\x40\", // init\n                        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                        storeDetails.name,\n                        \"\\x0A\",\n                        storeDetails.address + \"\\x0A\",\n                        storeDetails.website + \"\\x0A\", // text and line break\n                        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                        date.toLocaleDateString() +\n                          \" \" +\n                          date.toLocaleTimeString() +\n                          \"\\x0A\",\n                        \"\\x0A\",\n                        `Transaction # ${element.transNum}` + \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n                      ];\n\n                      element.cart?.map((cartItem) => {\n                        total += parseFloat(cartItem.price);\n                        data.push(`Name: ${cartItem.name}`);\n                        data.push(\"\\x0A\");\n                        data.push(`Price: $${cartItem.price}`);\n\n                        if (cartItem.options) {\n                          data.push(\"\\x0A\");\n                          cartItem.options?.map((option) => {\n                            data.push(option);\n                            data.push(\"\\x0A\");\n                          });\n                        }\n                        data.push(\"\\x0A\" + \"\\x0A\");\n                      });\n\n                      total = total * 1.13;\n                      total = total.toFixed(2);\n\n                      //push ending\n                      data.push(\n                        \"\\x0A\",\n                        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                        \"\\x0A\" + \"\\x0A\",\n                        \"Total Including (13% Tax): \" +\n                          \"$\" +\n                          total +\n                          \"\\x0A\" +\n                          \"\\x0A\",\n                        \"------------------------------------------\" + \"\\x0A\",\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n                        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n                      );\n\n                      fetch(\"http://localhost:8080/print\", {\n                        method: \"POST\",\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                          printData: data,\n                          comSelected: storeDetails.comSelected,\n                        }),\n                      })\n                        .then((response) => response.json())\n                        .then((respData) => {\n                          console.log(respData);\n                        })\n                        .catch((e) => alert(\"Error with printer\"));\n                    } else {\n                      const printData = [];\n\n                      printData.push(\n                        \"\\x1B\" + \"\\x40\", // init\n                        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                        storeDetails.name,\n                        \"\\x0A\",\n                        storeDetails.address + \"\\x0A\",\n                        storeDetails.website + \"\\x0A\", // text and line break\n                        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                        element.date_created + \"\\x0A\",\n                        \"\\x0A\",\n                        \"Online Order\" + \"\\x0A\", // text and line break\n                        `Transaction # ${element.number}` + \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n                      );\n\n                      element.line_items?.map((cartItem) => {\n                        printData.push(\"\\x0A\");\n                        printData.push(`Name: ${cartItem.name}`);\n                        printData.push(\"\\x0A\");\n                        printData.push(`Quantity: ${cartItem.quantity}`);\n                        printData.push(\"\\x0A\");\n                        printData.push(`Price: $${cartItem.price}`);\n                        printData.push(\"\\x0A\");\n\n                        if (cartItem.meta_data) {\n                          cartItem.meta_data?.map((meta, index) => {\n                            if (index === 0) {\n                              printData.push(`${meta.key} : ${meta.value}`);\n                              if (\n                                cartItem.meta_data[index + 1].key !== meta.key\n                              ) {\n                                printData.push(\"\\x0A\");\n                              }\n                            } else {\n                              if (index !== cartItem.meta_data.length - 1) {\n                                if (\n                                  cartItem.meta_data[index - 1].key === meta.key\n                                ) {\n                                  printData.push(` , ${meta.value}`);\n                                } else {\n                                  printData.push(`${meta.key} : ${meta.value}`);\n                                }\n\n                                if (\n                                  cartItem.meta_data[index + 1].key !== meta.key\n                                ) {\n                                  printData.push(\"\\x0A\");\n                                }\n                              }\n                            }\n                          });\n                        } else {\n                          printData.push(\"\\x0A\" + \"\\x0A\");\n                        }\n                      });\n\n                      printData.push(\"\\x0A\");\n                      printData.push(\"\\x0A\");\n                      printData.push(`Customer Details:`);\n                      printData.push(\"\\x0A\");\n                      printData.push(`Address: ${element.shipping.address_1}`);\n                      printData.push(\"\\x0A\");\n                      printData.push(`City: ${element.shipping.city}`);\n                      printData.push(\"\\x0A\");\n                      printData.push(\n                        `Zip/Postal Code: ${element.shipping.postcode}`\n                      );\n                      printData.push(\"\\x0A\");\n                      printData.push(\n                        `Province/State: ${element.shipping.state}`\n                      );\n                      printData.push(\"\\x0A\");\n                      printData.push(\n                        `Name: ${element.shipping.first_name} ${element.shipping.last_name}`\n                      );\n                      printData.push(\"\\x0A\");\n                      element.shipping_lines.map((line) =>\n                        printData.push(`Shipping Method: ${line.method_title}`)\n                      );\n                      printData.push(\"\\x0A\");\n                      printData.push(\"\\x0A\");\n\n                      printData.push(\n                        \"\\x0A\",\n                        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                        \"\\x0A\" + \"\\x0A\",\n                        \"Payment Method: \" +\n                          element.payment_method_title +\n                          \"\\x0A\" +\n                          \"\\x0A\",\n                        \"Total Including (13% Tax): \" +\n                          \"$\" +\n                          (\n                            parseFloat(element.total) +\n                            parseFloat(element.total_tax)\n                          ).toFixed(2) +\n                          \"\\x0A\" +\n                          \"\\x0A\",\n                        \"------------------------------------------\" + \"\\x0A\",\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\" // line break\n                      );\n\n                      printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n                      fetch(\"http://localhost:8080/print\", {\n                        method: \"POST\",\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                          printData: printData,\n                          comSelected: storeDetails.comSelected,\n                        }),\n                      })\n                        .then((response) => response.json())\n                        .then((respData) => {\n                          console.log(respData);\n                        })\n                        .catch((e) => alert(\"Error with printer\"));\n                    }\n                  }}\n                />\n              </View>\n            );\n          })\n        ) : (\n          <Text>No receipts yet</Text>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default ViewTransactions;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\",\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n});\n","import { Button } from \"@react-native-material/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { TouchableOpacity, View, Text } from \"react-native\";\nimport { auth } from \"state/firebaseConfig\";\nimport { sectionState, setsectionState, userStoreState } from \"state/state\";\n// import { useNavigation } from \"react-navigation-hooks\";\n\nconst CustomHeader = ({ navigation, route, options, back }) => {\n  const [settings, setSettings] = useState(false);\n  const catalog = userStoreState.use();\n  const section = sectionState.use();\n\n  useEffect(() => {\n    //       const prevScreen = localStorage.getItem(\"localScreen\");\n    const settingsOn = localStorage.getItem(\"settingsOn\");\n    setSettings(settingsOn);\n    //     if (\n    //       section === \"EditCategories\" ||\n    //       section === \"EditProductList\" ||\n    //       section === \"EditWoocommerce\" ||\n    //       section === \"StoreDetails\" ||\n    //       section === \"Transactions\"\n    //     ) {\n    //       navigation.navigate(section);\n    //       //setSettings(true);\n    //       setsectionState(prevScreen);\n    //     } else {\n    //       //setSettings(false);\n    //       setsectionState(prevScreen);\n    //       navigation.navigate(\"Home\");\n    //     }\n    //   }, [settings, section]);\n  }, []);\n\n  if (settings == true) {\n    //edit settings menu\n    return (\n      <View\n        style={{\n          width: \"100%\",\n          height: 120,\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-evenly\",\n          backgroundColor: \"red\",\n        }}\n      >\n        <Button\n          titleStyle={\n            section === \"EditCategories\"\n              ? { color: \"white\", fontWeight: \"700\" }\n              : { color: \"black\", fontWeight: \"700\" }\n          }\n          style={\n            section === \"EditCategories\"\n              ? { backgroundColor: \"blue\" }\n              : { backgroundColor: \"white\" }\n          }\n          onPress={() => {\n            localStorage.setItem(\"localScreen\", \"EditCategories\");\n            localStorage.setItem(\"settingsOn\", true);\n            navigation.navigate(\"EditCategories\");\n            setsectionState(\"EditCategories\");\n          }}\n          title=\"Add Category\"\n        />\n        <Button\n          titleStyle={\n            section === \"EditProductList\"\n              ? { color: \"white\", fontWeight: \"700\" }\n              : { color: \"black\", fontWeight: \"700\" }\n          }\n          style={\n            section === \"EditProductList\"\n              ? { backgroundColor: \"blue\" }\n              : { backgroundColor: \"white\" }\n          }\n          onPress={() => {\n            localStorage.setItem(\"localScreen\", \"EditProductList\");\n            navigation.navigate(\"EditProductList\");\n            localStorage.setItem(\"settingsOn\", true);\n            setsectionState(\"EditProductList\");\n          }}\n          title=\"Add Product\"\n        />\n        <Button\n          titleStyle={\n            section === \"EditWoocommerce\"\n              ? { color: \"white\", fontWeight: \"700\" }\n              : { color: \"black\", fontWeight: \"700\" }\n          }\n          style={\n            section === \"EditWoocommerce\"\n              ? { backgroundColor: \"blue\" }\n              : { backgroundColor: \"white\" }\n          }\n          onPress={() => {\n            localStorage.setItem(\"localScreen\", \"EditWoocommerce\");\n            navigation.navigate(\"EditWoocommerce\");\n            localStorage.setItem(\"settingsOn\", true);\n            setsectionState(\"EditWoocommerce\");\n          }}\n          title=\"Woocommerce\"\n        />\n        <Button\n          titleStyle={\n            section === \"StoreDetails\"\n              ? { color: \"white\", fontWeight: \"700\" }\n              : { color: \"black\", fontWeight: \"700\" }\n          }\n          style={\n            section === \"StoreDetails\"\n              ? { backgroundColor: \"blue\" }\n              : { backgroundColor: \"white\" }\n          }\n          onPress={() => {\n            localStorage.setItem(\"localScreen\", \"StoreDetails\");\n            navigation.navigate(\"StoreDetails\");\n            localStorage.setItem(\"settingsOn\", true);\n            setsectionState(\"StoreDetails\");\n          }}\n          title=\"Store Details\"\n        />\n        <Button\n          titleStyle={\n            section === \"Transactions\"\n              ? { color: \"white\", fontWeight: \"700\" }\n              : { color: \"black\", fontWeight: \"700\" }\n          }\n          style={\n            section === \"Transactions\"\n              ? { backgroundColor: \"blue\" }\n              : { backgroundColor: \"white\" }\n          }\n          onPress={() => {\n            localStorage.setItem(\"localScreen\", \"Transactions\");\n            navigation.navigate(\"Transactions\");\n            localStorage.setItem(\"settingsOn\", true);\n            setsectionState(\"Transactions\");\n          }}\n          title=\"Transaction\"\n        />\n        <Button\n          titleStyle={{ color: \"black\", fontWeight: \"700\" }}\n          style={{ backgroundColor: \"white\" }}\n          onPress={() => {\n            localStorage.removeItem(\"localScreen\");\n            auth.signOut();\n          }}\n          title=\"Logout\"\n        />\n        <Button\n          titleStyle={{ color: \"black\", fontWeight: \"700\" }}\n          style={{ backgroundColor: \"white\" }}\n          onPress={() => {\n            localStorage.removeItem(\"localScreen\");\n            setsectionState();\n            setSettings(false);\n            localStorage.setItem(\"settingsOn\", false);\n          }}\n          title=\"X\"\n        />\n      </View>\n    );\n  }\n  return (\n    <View\n      style={{\n        width: \"100%\",\n        height: 120,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-evenly\",\n        backgroundColor: \"red\",\n      }}\n    >\n      {catalog.categories?.map((category, index) => {\n        if (!section && index === 0) {\n          return (\n            <Button\n              key={index}\n              titleStyle={{ color: \"white\", fontWeight: \"700\" }}\n              style={{ backgroundColor: \"blue\" }}\n              onPress={() => {\n                setsectionState(category);\n              }}\n              title={category}\n            />\n          );\n        }\n\n        return (\n          <Button\n            key={index}\n            titleStyle={\n              section === category\n                ? { color: \"white\", fontWeight: \"700\" }\n                : { color: \"black\", fontWeight: \"700\" }\n            }\n            style={\n              section === category\n                ? { backgroundColor: \"blue\" }\n                : { backgroundColor: \"white\" }\n            }\n            onPress={() => {\n              setsectionState(category);\n              localStorage.setItem(\"localScreen\", category);\n            }}\n            title={category}\n          />\n        );\n      })}\n      <Button\n        titleStyle={{ color: \"black\", fontWeight: \"700\" }}\n        style={{ backgroundColor: \"white\" }}\n        onPress={() => setSettings(true)}\n        title=\"Settings\"\n      />\n    </View>\n  );\n};\n\nexport default CustomHeader;\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { ListItem } from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nconst ProductOptionDropDown = ({ label, options, setValue, value, style }) => {\n  const [show, setShow] = useState(false);\n\n  return (\n    <View style={[styles.container, style]}>\n      <ListItem\n        title={\n          value\n            ? `${value.label} : $${\n                value.priceIncrease !== null ? value.priceIncrease : 0\n              }`\n            : label\n        }\n        trailing={(props) => (\n          <Icon name={show ? \"chevron-up\" : \"chevron-down\"} {...props} />\n        )}\n        onPress={() => setShow((prevState) => !prevState)}\n      />\n      {show && (\n        <>\n          {options.map((option, listIndex) => (\n            <ListItem\n              title={`${option.label} : $${\n                option.priceIncrease !== null ? option.priceIncrease : 0\n              }`}\n              onPress={() => {\n                setValue({\n                  option: {\n                    label: option.label,\n                    priceIncrease:\n                      option.priceIncrease !== null ? option.priceIncrease : 0,\n                  },\n                  listIndex: listIndex,\n                });\n                setShow(false);\n              }}\n            />\n          ))}\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default ProductOptionDropDown;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n  },\n});\n","import {\n  View,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n  StyleSheet,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport ProductOptionDropDown from \"./ProductOptionDropDown\";\nimport { addCartState } from \"state/state\";\n\nconst ProductListing = ({ navigation, route }) => {\n  const { product } = route.params;\n  const myObj = product;\n  const [myObjProfile, setmyObjProfile] = useState(myObj);\n  const [total, settotal] = useState(myObj.price);\n  const [extraInput, setextraInput] = useState(null);\n\n  const DisplayOption = ({ e, index }) => {\n    const [optionVal, setoptionVal] = useState();\n\n    const selectedList = e.optionsList.filter((checkOp) => checkOp.selected);\n\n    if (selectedList.length > 0 && !optionVal) {\n      setoptionVal(selectedList[0]);\n    }\n\n    let isSelected = false;\n\n    const selectedCaseList = myObjProfile.options.filter(\n      (op) => op.label == e.selectedCaseKey\n    );\n\n    let selectedValueList;\n\n    if (selectedCaseList.length > 0) {\n      selectedValueList = selectedCaseList[0].optionsList.filter(\n        (opL) => opL.label == e.selectedCaseValue\n      );\n\n      if (selectedValueList.length > 0) {\n        isSelected = selectedValueList[0].selected === true;\n      }\n    }\n\n    if (e.selectedCaseKey === null || isSelected) {\n      if (e.optionType?.toLowerCase() === \"dropdown\") {\n        return (\n          <View\n            style={{\n              marginBottom: 25,\n              width: \"100%\",\n            }}\n            key={index}\n          >\n            <Text style={{ fontWeight: \"700\", fontSize: 18 }}>\n              Label: {e.label}\n            </Text>\n            <ProductOptionDropDown\n              label={e.label}\n              options={e.optionsList}\n              setValue={({ option, listIndex }) => {\n                const newMyObjProfile = structuredClone(myObjProfile);\n                newMyObjProfile.options[index].optionsList.forEach(\n                  (element, indexOfOl) => {\n                    if (element.selected) {\n                      newMyObjProfile.options[index].optionsList[\n                        indexOfOl\n                      ].selected = false;\n                      settotal((prevState) =>\n                        (\n                          parseFloat(prevState) -\n                          parseFloat(\n                            newMyObjProfile.options[index].optionsList[\n                              indexOfOl\n                            ].priceIncrease !== null\n                              ? newMyObjProfile.options[index].optionsList[\n                                  indexOfOl\n                                ].priceIncrease\n                              : 0\n                          )\n                        ).toFixed(2)\n                      );\n                    }\n                  }\n                );\n\n                newMyObjProfile.options[index].optionsList[listIndex].selected =\n                  true;\n                settotal((prevState) =>\n                  (\n                    parseFloat(prevState) +\n                    parseFloat(\n                      newMyObjProfile.options[index].optionsList[listIndex]\n                        .priceIncrease !== null\n                        ? newMyObjProfile.options[index].optionsList[listIndex]\n                            .priceIncrease\n                        : 0\n                    )\n                  ).toFixed(2)\n                );\n                console.log(option);\n\n                setoptionVal(option);\n                setmyObjProfile(newMyObjProfile);\n              }}\n              value={optionVal}\n              style={{ marginBottom: 25 }}\n            />\n          </View>\n        );\n      } else {\n        return (\n          <View\n            style={{\n              marginBottom: 25,\n              flexWrap: \"wrap\",\n              width: \"100%\",\n            }}\n            key={index}\n          >\n            <Text style={{ fontWeight: \"700\", fontSize: 18 }}>\n              Label: {e.label}\n            </Text>\n            <View style={{ flexWrap: \"wrap\", flexDirection: \"row\" }}>\n              {e.optionsList.map((selection, listIndex) => {\n                return (\n                  <TouchableOpacity\n                    key={listIndex}\n                    style={[\n                      myObjProfile.options[index].optionsList[listIndex]\n                        .selected == true && {\n                        backgroundColor: \"green\",\n                      },\n                      {\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        padding: 10,\n                        margin: 5,\n                        borderColor: \"black\",\n                        borderWidth: 2,\n                        // width: \"50%\",\n                      },\n                    ]}\n                    onPress={() => {\n                      const newMyObjProfile = structuredClone(myObjProfile);\n                      if (\n                        !newMyObjProfile.options[index].optionsList[listIndex]\n                          .selected == false\n                      ) {\n                        newMyObjProfile.options[index].optionsList[\n                          listIndex\n                        ].selected = false;\n                        settotal((prevState) =>\n                          (\n                            parseFloat(prevState) -\n                            parseFloat(\n                              newMyObjProfile.options[index].optionsList[\n                                listIndex\n                              ].priceIncrease !== null\n                                ? newMyObjProfile.options[index].optionsList[\n                                    listIndex\n                                  ].priceIncrease\n                                : 0\n                            )\n                          ).toFixed(2)\n                        );\n                      } else {\n                        if (\n                          newMyObjProfile.options[index].optionsList.filter(\n                            (op) => op.selected === true\n                          ).length < parseInt(e.numOfSelectable) ||\n                          !e.numOfSelectable\n                        ) {\n                          newMyObjProfile.options[index].optionsList[\n                            listIndex\n                          ].selected = true;\n                          settotal((prevState) =>\n                            (\n                              parseFloat(prevState) +\n                              parseFloat(\n                                newMyObjProfile.options[index].optionsList[\n                                  listIndex\n                                ].priceIncrease !== null\n                                  ? newMyObjProfile.options[index].optionsList[\n                                      listIndex\n                                    ].priceIncrease\n                                  : 0\n                              )\n                            ).toFixed(2)\n                          );\n                        }\n                      }\n                      setmyObjProfile(newMyObjProfile);\n                    }}\n                  >\n                    <Text style={styles.h2Black}>Name: {selection.label}</Text>\n                    <View style={{ width: 20 }} />\n                    <Text style={styles.h2Black}>\n                      Price: $\n                      {selection.priceIncrease !== null\n                        ? selection.priceIncrease\n                        : 0}\n                    </Text>\n                  </TouchableOpacity>\n                );\n              })}\n            </View>\n          </View>\n        );\n      }\n    } else if (isSelected === false) {\n      const newMyObjProfile = structuredClone(myObjProfile);\n      let newSubtract = 0;\n      newMyObjProfile.options[index].optionsList.forEach(\n        (item, indexOfItem) => {\n          if (item.selected === true) {\n            newSubtract += parseFloat(\n              newMyObjProfile.options[index].optionsList[indexOfItem]\n                .priceIncrease !== null\n                ? priceIncrease\n                : 0\n            );\n            newMyObjProfile.options[index].optionsList[indexOfItem].selected =\n              false;\n          }\n        }\n      );\n      if (newSubtract > 0) {\n        settotal((prevState) =>\n          (parseFloat(prevState) - newSubtract).toFixed(2)\n        );\n        setmyObjProfile(newMyObjProfile);\n      }\n    }\n    // return null;\n  };\n\n  const AddToCart = () => {\n    const opsArray = [];\n\n    myObjProfile.options.forEach((op) => {\n      let opWVal = `${op.label}: `;\n      const numberOfSelected = op.optionsList.filter(\n        (f) => f.selected === true\n      ).length;\n\n      if (numberOfSelected > 0) {\n        opWVal = `${op.label}: `;\n\n        op.optionsList.map((e, index) => {\n          if (e.selected === true) {\n            if (index < op.optionsList.length - 1 && numberOfSelected > 1) {\n              opWVal += e.label + \" , \";\n            } else {\n              opWVal += e.label;\n            }\n          }\n        });\n        opsArray.push(opWVal);\n      }\n    });\n\n    addCartState({\n      name: myObjProfile.name,\n      price: total,\n      description: myObj.description,\n      options: opsArray,\n      extraDetails: extraInput,\n    });\n\n    navigation.goBack();\n    setmyObjProfile(myObj);\n    settotal(myObjProfile.price);\n    setextraInput(null);\n  };\n\n  return (\n    <ScrollView style={styles.modalContainer}>\n      <Text style={styles.h2Black}>Name: {myObj.name}</Text>\n      {myObj.description && (\n        <Text style={styles.h2Black}>Name: {myObj.description}</Text>\n      )}\n      <Text style={[{ marginBottom: 25 }, styles.h2Black]}>Price: {total}</Text>\n      {myObjProfile.options.map((e, index) => (\n        <DisplayOption e={e} index={index} key={index} />\n      ))}\n      <TextInput\n        placeholder=\"Write any extra info here..\"\n        multiline={true}\n        onChangeText={(val) => setextraInput(val)}\n        value={extraInput}\n        style={{ marginTop: 15, marginBottom: 15 }}\n        inputStyle={{ padding: 10 }}\n      />\n      <Button title=\"Add To Cart\" onPress={AddToCart} style={styles.btn} />\n      <Button\n        title=\"Close\"\n        onPress={() => navigation.goBack()}\n        style={styles.btn}\n      />\n    </ScrollView>\n  );\n};\n\nexport default ProductListing;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 10,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n  },\n  btn: {\n    marginBottom: 25,\n  },\n  dropDown: {\n    marginBottom: 25,\n  },\n  h2White: {\n    fontSize: 17,\n    color: \"white\",\n  },\n  h2Black: {\n    fontSize: 20,\n    color: \"black\",\n  },\n});\n","import React, { useState } from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Home from \"screens/authed/HomeScreen\";\nimport Register from \"screens/non-authed/Register\";\nimport EditProductList from \"components/EditProductList\";\nimport AddProduct from \"components/TestAdd\";\nimport WoocommerceSettings from \"components/WoocommerceSettings\";\nimport EditStoreDetails from \"components/EditStoreDetails\";\nimport AddCategory from \"components/AddCategory\";\nimport ViewTransactions from \"screens/authed/ViewTransactions\";\nimport CustomHeader from \"components/CustomHeader\";\nimport ProductListing from \"components/ProductListing\";\n\nconst Stack = createStackNavigator();\n\nexport default function TmpAuthStack() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        header: (props) => <CustomHeader {...props} />,\n        headerMode: \"screen\",\n      }}\n    >\n      <Stack.Screen name=\"Home\" component={Home} />\n      <Stack.Screen name=\"EditCategories\" component={AddCategory} />\n      <Stack.Screen name=\"EditProductList\" component={EditProductList} />\n      <Stack.Screen\n        name=\"AddProduct\"\n        component={AddProduct}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen name=\"EditWoocommerce\" component={WoocommerceSettings} />\n      <Stack.Screen name=\"StoreDetails\" component={EditStoreDetails} />\n      <Stack.Screen name=\"Transactions\" component={ViewTransactions} />\n      <Stack.Screen\n        name=\"ProductListing\"\n        component={ProductListing}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import React from \"react\";\nimport TabNav from \"./TabNav\";\nimport TmpAuthStack from \"./TmpAuthStack\";\n\nconst MainAuthed = () => {\n  // return <TabNav />;\n  return <TmpAuthStack />;\n};\n\nexport default MainAuthed;\n","import { Image, StyleSheet, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport {\n  TextInput,\n  IconButton,\n  Button,\n  Text,\n} from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { signIn } from \"state/firebaseFunctions\";\n\nconst Login = ({ navigation }) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const attemptSignIn = () => {\n    if (email && password) {\n     signIn(email, password)\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaView style={styles.safeareaContainer}>\n        <Image\n          source={require(\"assets/pathblazer-logo.png\")}\n          style={styles.logo}\n        />\n        <View style={styles.innerContainer}>\n          <TextInput\n            label=\"Email\"\n            variant=\"outlined\"\n            style={{ width: \"100%\", marginBottom: 10 }}\n            value={email}\n            onChangeText={(val) => setEmail(val)}\n            autoCorrect={false}\n            textContentType={\"emailAddress\"}\n          />\n          <TextInput\n            label=\"Password\"\n            variant=\"outlined\"\n            trailing={(props) => (\n              <IconButton\n                onPress={() => setShowPassword((prevState) => !prevState)}\n                icon={(props) => <Icon name=\"eye\" {...props} />}\n                {...props}\n              />\n            )}\n            value={password}\n            onChangeText={(val) => setPassword(val)}\n            secureTextEntry={!showPassword}\n            style={{ width: \"100%\" }}\n          />\n        </View>\n        <View style={styles.innerContainer}>\n          <Button\n            title=\"Login\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            style={{ marginBottom: 10 }}\n            onPress={attemptSignIn}\n          />\n          <Text variant=\"subtitle1\" style={{ marginBottom: 10 }}>\n            Or\n          </Text>\n          <Button\n            title=\"Register\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"grey\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"Register\")}\n          />\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nexport default Login;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  safeareaContainer: {\n    flex: 1,\n    height: \"60%\",\n    width: \"80%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 250,\n    resizeMode: \"contain\",\n  },\n  innerContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","import { Image, StyleSheet, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport {\n  TextInput,\n  IconButton,\n  Button,\n  Text,\n} from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { signUp } from \"state/firebaseFunctions\";\n\nconst Register = ({ navigation }) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const attemptSignUp = () => {\n    if (email && password) {\n      signUp(email, password);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaView style={styles.safeareaContainer}>\n        <Image\n          source={require(\"assets/pathblazer-logo.png\")}\n          style={styles.logo}\n        />\n        <View style={styles.innerContainer}>\n          <TextInput\n            label=\"Email\"\n            variant=\"outlined\"\n            style={{ width: \"100%\", marginBottom: 10 }}\n            value={email}\n            onChangeText={(val) => setEmail(val)}\n            autoCorrect={false}\n            textContentType={\"emailAddress\"}\n          />\n          <TextInput\n            label=\"Password\"\n            variant=\"outlined\"\n            trailing={(props) => (\n              <IconButton\n                onPress={() => setShowPassword((prevState) => !prevState)}\n                icon={(props) => <Icon name=\"eye\" {...props} />}\n                {...props}\n              />\n            )}\n            value={password}\n            onChangeText={(val) => setPassword(val)}\n            secureTextEntry={!showPassword}\n            style={{ width: \"100%\" }}\n          />\n        </View>\n        <View style={styles.innerContainer}>\n          <Button\n            title=\"Register\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            style={{ marginBottom: 10 }}\n            onPress={attemptSignUp}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Text variant=\"subtitle1\" style={{ marginBottom: 10 }}>\n              Or\n            </Text>\n            <Text\n              variant=\"subtitle1\"\n              style={{ marginBottom: 10, marginLeft: 5, color: \"blue\" }}\n              onPress={() => navigation.goBack()}\n            >\n              Go Back\n            </Text>\n          </View>\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nexport default Register;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  safeareaContainer: {\n    flex: 1,\n    height: \"60%\",\n    width: \"80%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 250,\n    resizeMode: \"contain\",\n  },\n  innerContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Login from \"screens/non-authed/Login\";\nimport Register from \"screens/non-authed/Register\";\n\nconst Stack = createStackNavigator();\n\nexport default function MainNonAuth() {\n  return (\n    <Stack.Navigator screenOptions={{headerShown: false}}>\n      <Stack.Screen name=\"Login\" component={Login} />\n      <Stack.Screen name=\"Register\" component={Register} />\n    </Stack.Navigator>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport MainAuthed from \"./authed/MainAuthed\";\nimport {\n  setStoreDetailState,\n  setTransListState,\n  setUserState,\n  setUserStoreState,\n  setWoocommerceState,\n  storeDetailState,\n  transListState,\n  userState,\n  woocommerceState,\n} from \"state/state\";\nimport MainNonAuth from \"./non-authed/MainNonAuth\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport Spinner from \"components/Spinner\";\nimport { updateTransList } from \"state/firebaseFunctions\";\n\nconst RouteManager = () => {\n  const userS = userState.use();\n  const wooCredentials = woocommerceState.use();\n  const transList = transListState.use();\n  const storeDetails = storeDetailState.use();\n  const [loading, setloading] = useState(true);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUserState(user);\n        db.collection(\"users\")\n          .doc(user.uid)\n          .get()\n          .then((doc) => {\n            setUserStoreState({\n              products: doc.data().products,\n              categories: doc.data().categories,\n            });\n            if (doc.data().transList) {\n              setTransListState(doc.data().transList);\n            }\n            if (doc.data().wooCredentials) {\n              setWoocommerceState(doc.data().wooCredentials);\n            }\n            if (doc.data().storeDetails) {\n              setStoreDetailState(doc.data().storeDetails);\n            }\n          });\n        setTimeout(() => {\n          setloading(false);\n        }, 1);\n      } else {\n        setUserState(null);\n        setUserStoreState({ products: null, categories: null });\n        setTimeout(() => {\n          setloading(false);\n        }, 1);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (userS) {\n      const unsub = db\n        .collection(\"users\")\n        .doc(userS.uid)\n        .onSnapshot((doc) => {\n          setloading(true);\n          setUserStoreState({\n            products: doc.data().products,\n            categories: doc.data().categories,\n          });\n          if (doc.data().transList) {\n            setTransListState(doc.data().transList);\n          }\n          if (doc.data().wooCredentials) {\n            setWoocommerceState(doc.data().wooCredentials);\n          }\n          if (doc.data().storeDetails) {\n            setStoreDetailState(doc.data().storeDetails);\n          }\n          setTimeout(() => {\n            setloading(false);\n          }, 1);\n        });\n      return () => unsub();\n    }\n  }, [userS]);\n\n  useEffect(() => {\n    if (wooCredentials.useWoocommerce === true) {\n      const interval = setInterval(() => {\n        const WooCommerceAPI = require(\"woocommerce-api\");\n\n        const WooCommerce = new WooCommerceAPI({\n          url: wooCredentials.apiUrl,\n          consumerKey: wooCredentials.ck,\n          consumerSecret: wooCredentials.cs,\n          wpAPI: true,\n          version: \"wc/v1\",\n        });\n\n        let page = 1;\n        let orders = [];\n\n        const getOrders = async () => {\n          const response = await WooCommerce.getAsync(\n            `orders?page=${page}&per_page=100`\n          );\n          const data = JSON.parse(response.body);\n          orders = [...orders, ...data];\n          if (data.length === 100) {\n            page++;\n            getOrders();\n          } else {\n            console.log(orders);\n          }\n        };\n\n        getOrders().then(() => {\n          const array1 = transList;\n          const array2 = orders;\n\n          const newArray = [];\n\n          array1.concat(array2).reduce(function (acc, curr) {\n            if (!acc.includes(curr.id)) {\n              acc.push(curr.id);\n              newArray.push(curr);\n            }\n            return acc;\n          }, []);\n\n          //console.log('checking')\n          // console.log('translist: ', transList.filter(e => e.id))\n          // console.log('res: ', orders)\n          // console.log('data: ', data)\n          console.log(\"new array: \", newArray);\n\n          if (newArray.length > transList.length) {\n            console.log(\"new item\");\n            const newItems = structuredClone(newArray).splice(\n              transList.length,\n              newArray.length - transList.length\n            );\n            console.log(\"NEW ITEMS \", newItems);\n            updateTransList(newArray);\n\n            if (newItems.length > 1) {\n              newItems.forEach((e) => {\n                const printData = [];\n\n                printData.push(\n                  \"\\x1B\\x40\", // init\n                  \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                  storeDetails.name,\n                  \"\\x0A\",\n                  storeDetails.address + \"\\x0A\",\n                  storeDetails.website + \"\\x0A\", // text and line break\n                  storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                  e.date_created + \"\\x0A\",\n                  \"\\x0A\",\n                  \"Online Order\" + \"\\x0A\", // text and line break\n                  `Transaction # ${e.number}` + \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n                );\n\n                e.line_items?.map((cartItem) => {\n                  printData.push(\"\\x0A\");\n                  printData.push(`Name: ${cartItem.name}`);\n                  printData.push(\"\\x0A\");\n                  printData.push(`Quantity: ${cartItem.quantity}`);\n                  printData.push(\"\\x0A\");\n                  printData.push(`Price: $${cartItem.price}`);\n                  printData.push(\"\\x0A\");\n\n                  if (cartItem.meta_data) {\n                    cartItem.meta_data?.map((meta, index) => {\n                      if (index === 0) {\n                        printData.push(`${meta.key} : ${meta.value}`);\n                        if (cartItem.meta_data[index + 1].key !== meta.key) {\n                          printData.push(\"\\x0A\");\n                        }\n                      } else {\n                        if (index !== cartItem.meta_data.length - 1) {\n                          if (cartItem.meta_data[index - 1].key === meta.key) {\n                            printData.push(` , ${meta.value}`);\n                          } else {\n                            printData.push(`${meta.key} : ${meta.value}`);\n                          }\n\n                          if (cartItem.meta_data[index + 1].key !== meta.key) {\n                            printData.push(\"\\x0A\");\n                          }\n                        }\n                      }\n                    });\n                  } else {\n                    printData.push(\"\\x0A\" + \"\\x0A\");\n                  }\n                });\n\n                printData.push(\"\\x0A\");\n                printData.push(\"\\x0A\");\n                printData.push(`Customer Details:`);\n                printData.push(\"\\x0A\");\n                printData.push(`Address: ${e.shipping.address_1}`);\n                printData.push(\"\\x0A\");\n                printData.push(`City: ${e.shipping.city}`);\n                printData.push(\"\\x0A\");\n                printData.push(`Zip/Postal Code: ${e.shipping.postcode}`);\n                printData.push(\"\\x0A\");\n                printData.push(`Province/State: ${e.shipping.state}`);\n                printData.push(\"\\x0A\");\n                printData.push(\n                  `Name: ${e.shipping.first_name} ${e.shipping.last_name}`\n                );\n                printData.push(\"\\x0A\");\n                e.shipping_lines.map((line) =>\n                  printData.push(`Shipping Method: ${line.method_title}`)\n                );\n                printData.push(\"\\x0A\");\n                printData.push(\"\\x0A\");\n\n                printData.push(\n                  \"\\x0A\",\n                  \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                  \"\\x0A\" + \"\\x0A\",\n                  \"Payment Method: \" + e.payment_method_title + \"\\x0A\" + \"\\x0A\",\n                  \"Total Including (13% Tax): \" +\n                    \"$\" +\n                    (parseFloat(e.total) + parseFloat(e.total_tax)).toFixed(2) +\n                    \"\\x0A\" +\n                    \"\\x0A\",\n                  \"------------------------------------------\" + \"\\x0A\",\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\" // line break\n                );\n\n                printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n                async () =>\n                  await fetch(\"http://localhost:8080/print\", {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify({\n                      printData: printData,\n                      comSelected: storeDetails.comSelected,\n                    }),\n                  })\n                    .then((response) => response.json())\n                    .then((respData) => {\n                      console.log(respData);\n                    })\n                    .catch((e) => console.log(\"Error with printer\"));\n              });\n            } else {\n              const e = newItems[0];\n              const printData = [];\n\n              printData.push(\n                \"\\x1B\" + \"\\x40\", // init\n                \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                storeDetails.name,\n                \"\\x0A\",\n                storeDetails.address + \"\\x0A\",\n                storeDetails.website + \"\\x0A\", // text and line break\n                storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                e.date_created + \"\\x0A\",\n                \"\\x0A\",\n                \"Online Order\" + \"\\x0A\", // text and line break\n                `Transaction # ${e.number}` + \"\\x0A\",\n                \"\\x0A\",\n                \"\\x0A\",\n                \"\\x0A\",\n                \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n              );\n\n              e.line_items?.map((cartItem) => {\n                printData.push(\"\\x0A\");\n                printData.push(`Name: ${cartItem.name}`);\n                printData.push(\"\\x0A\");\n                printData.push(`Quantity: ${cartItem.quantity}`);\n                printData.push(\"\\x0A\");\n                printData.push(`Price: $${cartItem.price}`);\n                printData.push(\"\\x0A\");\n\n                if (cartItem.meta_data) {\n                  cartItem.meta_data?.map((meta, index) => {\n                    if (index === 0) {\n                      printData.push(`${meta.key} : ${meta.value}`);\n                      if (cartItem.meta_data[index + 1].key !== meta.key) {\n                        printData.push(\"\\x0A\");\n                      }\n                    } else {\n                      if (index !== cartItem.meta_data.length - 1) {\n                        if (cartItem.meta_data[index - 1].key === meta.key) {\n                          printData.push(` , ${meta.value}`);\n                        } else {\n                          printData.push(`${meta.key} : ${meta.value}`);\n                        }\n\n                        if (cartItem.meta_data[index + 1].key !== meta.key) {\n                          printData.push(\"\\x0A\");\n                        }\n                      }\n                    }\n                  });\n                } else {\n                  printData.push(\"\\x0A\" + \"\\x0A\");\n                }\n              });\n\n              printData.push(\"\\x0A\");\n              printData.push(\"\\x0A\");\n              printData.push(`Customer Details:`);\n              printData.push(\"\\x0A\");\n              printData.push(`Address: ${e.shipping.address_1}`);\n              printData.push(\"\\x0A\");\n              printData.push(`City: ${e.shipping.city}`);\n              printData.push(\"\\x0A\");\n              printData.push(`Zip/Postal Code: ${e.shipping.postcode}`);\n              printData.push(\"\\x0A\");\n              printData.push(`Province/State: ${e.shipping.state}`);\n              printData.push(\"\\x0A\");\n              printData.push(\n                `Name: ${e.shipping.first_name} ${e.shipping.last_name}`\n              );\n              printData.push(\"\\x0A\");\n              e.shipping_lines.map((line) =>\n                printData.push(`Shipping Method: ${line.method_title}`)\n              );\n              printData.push(\"\\x0A\");\n              printData.push(\"\\x0A\");\n\n              printData.push(\n                \"\\x0A\",\n                \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                \"\\x0A\" + \"\\x0A\",\n                \"Payment Method: \" + e.payment_method_title + \"\\x0A\" + \"\\x0A\",\n                \"Total Including (13% Tax): \" +\n                  \"$\" +\n                  (parseFloat(e.total) + parseFloat(e.total_tax)).toFixed(2) +\n                  \"\\x0A\" +\n                  \"\\x0A\",\n                \"------------------------------------------\" + \"\\x0A\",\n                \"\\x0A\", // line break\n                \"\\x0A\", // line break\n                \"\\x0A\", // line break\n                \"\\x0A\", // line break\n                \"\\x0A\", // line break\n                \"\\x0A\" // line break\n              );\n\n              printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n              fetch(\"http://localhost:8080/print\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  printData: printData,\n                  comSelected: storeDetails.comSelected,\n                }),\n              })\n                .then((response) => response.json())\n                .then((respData) => {\n                  console.log(respData);\n                })\n                .catch((e) => alert(\"Error with printer\"));\n            }\n          }\n        });\n      }, 5000); // this will check for new orders every minute\n      return () => clearInterval(interval);\n    }\n  }, [wooCredentials, transList]);\n\n  return (\n    <NavigationContainer>\n      {loading ? (\n        <Spinner isModalVisible={true} />\n      ) : (\n        <>{userS ? <MainAuthed /> : <MainNonAuth />}</>\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default RouteManager;\n","import React from \"react\";\nimport RouteManager from \"navigation/RouteManager\";\nimport \"react-native-gesture-handler\";\n\n//Do this before syncing git config --global core.editor \"code --wait\"\n\nconst App = () => {\n  return <RouteManager />;\n};\n\n//hello love u\nexport default App;\n"],"sourceRoot":""}