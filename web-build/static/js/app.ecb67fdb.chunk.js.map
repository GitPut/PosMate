{"version":3,"sources":["assets/pathblazer-logo.png","state/state.ts","components/ProductOptionDropDown.tsx","components/DisplayTest.tsx","screens/authed/MenuScreen.tsx","components/DeliveryScreen.tsx","components/CashScreen.tsx","components/ChangeScreen.tsx","state/firebaseConfig.ts","state/firebaseFunctions.ts","screens/authed/CartScreen.tsx","screens/authed/HomeScreen.tsx","components/EditProductList.tsx","components/DropDown.tsx","components/OptionView.tsx","components/TestAdd.tsx","components/WoocommerceSettings.tsx","components/EditStoreDetails.tsx","components/Spinner.tsx","components/AddCategory.tsx","screens/authed/ViewTransactions.tsx","components/CustomHeader.tsx","navigation/authed/TmpAuthStack.tsx","navigation/authed/MainAuthed.tsx","screens/non-authed/Login.tsx","screens/non-authed/Register.tsx","navigation/non-authed/MainNonAuth.tsx","navigation/RouteManager.tsx","App.tsx"],"names":["module","exports","userState","entity","setUserState","val","set","cartState","setCartState","userStoreState","products","categories","setUserStoreState","transListState","setTransListState","woocommerceState","apiUrl","ck","cs","useWoocommerce","setWoocommerceState","storeDetailState","name","address","phoneNumber","website","comSelected","deliveryPrice","setStoreDetailState","sectionState","setsectionState","ProductOptionDropDown","label","options","setValue","value","style","useState","show","setShow","View","styles","container","title","priceIncrease","trailing","props","onPress","prevState","map","option","listIndex","StyleSheet","create","backgroundColor","DisplayTest","product","productIndex","myObj","myObjProfile","setmyObjProfile","price","total","settotal","modalVisible","setModalVisible","extraInput","setextraInput","DisplayOption","e","index","optionVal","setoptionVal","selectedList","optionsList","filter","checkOp","selected","length","selectedValueList","isSelected","selectedCaseList","op","selectedCaseKey","opL","selectedCaseValue","optionType","toLowerCase","marginBottom","width","Text","fontWeight","fontSize","newMyObjProfile","structuredClone","forEach","element","indexOfOl","parseFloat","toFixed","console","log","flexWrap","flexDirection","selection","TouchableOpacity","justifyContent","padding","margin","borderColor","borderWidth","parseInt","numOfSelectable","h2Black","newSubtract","item","indexOfItem","touchable","Modal","visible","ScrollView","modalContainer","description","placeholder","multiline","onChangeText","marginTop","inputStyle","opsArray","opWVal","numberOfSelected","f","push","extraDetails","btn","sizeRow","alignItems","halfRow","toppingsContainer","flex","dropDown","h2White","color","MenuScreen","section","catalog","catagory","height","wrapper","paddingLeft","paddingRight","DeliveryScreen","setDeliveryModal","setOngoingDelivery","setName","setPhone","setAddress","phone","deliveryChecked","setDeliveryChecked","onValueChange","variant","input","autoCorrect","contentContainerStyle","CashScreen","setCashModal","GetTrans","setChangeDue","cash","setCash","ChangeScreen","setChangeModal","setTotal","storeDetails","use","data","fetch","method","headers","body","JSON","stringify","printData","then","response","json","respData","catch","alert","openCash","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","updateData","Promise","resolve","reject","collection","doc","currentUser","uid","update","updateTransList","transList","CartScreen","deliveryModal","cashModal","changeModal","ongoingDelivery","changeDue","cart","cartSub","setCartSub","useEffect","newVal","i","AddToList","payload","local","unshift","Print","transNum","today","Date","toLocaleDateString","toLocaleTimeString","cartItem","date","contentContainer","splice","disabled","HomeScreen","EditProductList","navigation","copy","navigate","existingProduct","existingProductIndex","localCatalog","handleRemoveCatagory","borderRadius","DropDown","OptionView","setnewProduct","newProduct","newProductOptions","indexOn","setindexOn","optionLblsValues","setoptionLblsValues","sete","testMap","settestMap","optionLbls","el","localE","optionLblsValuesLocal","current","from","to","moveItem","eInnerListStart","indexInnerList","eInnerList","clone","marginLeft","marginRight","AddProduct","route","params","useRef","handleDataUpdate","copyProductData","goBack","newProductUseRef","alignSelf","FlatList","getItemLayout","offset","keyExtractor","id","toString","renderItem","Math","random","substr","WoocommerceSettings","wooCredentials","setapiUrl","setck","setcs","setuseWoocommerce","updateWooCredentials","EditStoreDetails","setname","setphoneNumber","setaddress","setwebsite","setdeliveryPrice","com","setcom","updateStoreDetails","Spinner","isModalVisible","transparent","className","AddCategory","categoryName","setcategoryName","setisModalVisible","handleRemoveCategory","ViewTransactions","settransList","todaysReceiptValue","todaysReceipts","todaysDetails","setTodaysDetails","sort","a","b","seconds","date_created","bDate","getTime","reverse","reduce","accumulator","textAlign","toLocaleString","quantity","line_items","meta_data","meta","key","number","shipping","address_1","city","postcode","state","first_name","last_name","shipping_lines","line","method_title","payment_method_title","total_tax","paddingBottom","CustomHeader","back","settings","setSettings","settingsOn","localStorage","getItem","titleStyle","setItem","removeItem","signOut","category","Stack","createStackNavigator","TmpAuthStack","Navigator","screenOptions","header","headerMode","Screen","component","Home","headerShown","MainAuthed","Login","email","setEmail","password","setPassword","showPassword","setShowPassword","safeareaContainer","Image","source","require","logo","innerContainer","textContentType","icon","secureTextEntry","uppercase","signInWithEmailAndPassword","signIn","resizeMode","Register","createUserWithEmailAndPassword","userAuth","user","paid","signUp","MainNonAuth","RouteManager","userS","loading","setloading","onAuthStateChanged","get","setTimeout","unsub","onSnapshot","interval","setInterval","WooCommerce","url","consumerKey","consumerSecret","wpAPI","version","page","orders","getOrders","getAsync","parse","array2","newArray","concat","acc","curr","includes","newItems","clearInterval","NavigationContainer","App"],"mappings":"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","file":"static/js/app.ecb67fdb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pathblazer-logo.17137072.png\";","import { entity } from \"simpler-state\";\n\nexport const userState = entity(null);\n\nexport const setUserState = (val) => {\n  userState.set(val);\n};\n\nexport const cartState = entity([]);\n\nexport const setCartState = (val) => {\n  cartState.set(val);\n};\n\nexport const addCartState = (val) => {\n  cartState.set((prevState) => [...prevState, val]);\n};\n\nexport const userStoreState = entity({ products: [], categories: [] });\n\nexport const setUserStoreState = (val) => {\n  userStoreState.set(val);\n};\n\nexport const transListState = entity([]);\n\nexport const setTransListState = (val) => {\n  transListState.set(val);\n};\n\nexport const woocommerceState = entity({\n  apiUrl: null,\n  ck: null,\n  cs: null,\n  useWoocommerce: false,\n});\n\nexport const setWoocommerceState = (val) => {\n  woocommerceState.set(val);\n};\n\nexport const storeDetailState = entity({\n  name: null,\n  address: null,\n  phoneNumber: null,\n  website: null,\n  comSelected: null,\n  deliveryPrice: null,\n});\n\nexport const setStoreDetailState = (val) => {\n  storeDetailState.set(val);\n};\n\nexport const sectionState = entity(null);\n\nexport const setsectionState = (val) => {\n  sectionState.set(val);\n};\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { ListItem } from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nconst ProductOptionDropDown = ({ label, options, setValue, value, style }) => {\n  const [show, setShow] = useState(false);\n\n  return (\n    <View style={[styles.container, style]}>\n      <ListItem\n        title={\n          value\n            ? `${value.label} : $${\n                value.priceIncrease !== null ? value.priceIncrease : 0\n              }`\n            : label\n        }\n        trailing={(props) => (\n          <Icon name={show ? \"chevron-up\" : \"chevron-down\"} {...props} />\n        )}\n        onPress={() => setShow((prevState) => !prevState)}\n      />\n      {show && (\n        <>\n          {options.map((option, listIndex) => (\n            <ListItem\n              title={`${option.label} : $${\n                option.priceIncrease !== null ? option.priceIncrease : 0\n              }`}\n              onPress={() => {\n                setValue({\n                  option: {\n                    label: option.label,\n                    priceIncrease:\n                      option.priceIncrease !== null ? option.priceIncrease : 0,\n                  },\n                  listIndex: listIndex,\n                });\n                setShow(false);\n              }}\n            />\n          ))}\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default ProductOptionDropDown;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n  },\n});\n","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { addCartState } from \"state/state\";\nimport ProductOptionDropDown from \"./ProductOptionDropDown\";\n\nconst DisplayTest = ({ product, productIndex }) => {\n  const myObj = product;\n  const [myObjProfile, setmyObjProfile] = useState(myObj);\n  const [total, settotal] = useState(myObj.price);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [extraInput, setextraInput] = useState();\n\n  const DisplayOption = ({ e, index }) => {\n    const [optionVal, setoptionVal] = useState();\n\n    const selectedList = e.optionsList.filter((checkOp) => checkOp.selected);\n\n    if (selectedList.length > 0 && !optionVal) {\n      setoptionVal(selectedList[0]);\n    }\n\n    let isSelected = false;\n\n    const selectedCaseList = myObjProfile.options.filter(\n      (op) => op.label == e.selectedCaseKey\n    );\n\n    let selectedValueList;\n\n    if (selectedCaseList.length > 0) {\n      selectedValueList = selectedCaseList[0].optionsList.filter(\n        (opL) => opL.label == e.selectedCaseValue\n      );\n\n      if (selectedValueList.length > 0) {\n        isSelected = selectedValueList[0].selected === true;\n      }\n    }\n\n    if (e.selectedCaseKey === null || isSelected) {\n      if (e.optionType?.toLowerCase() === \"dropdown\") {\n        return (\n          <View\n            style={{\n              marginBottom: 25,\n              width: \"100%\",\n            }}\n            key={index}\n          >\n            <Text style={{ fontWeight: \"700\", fontSize: 18 }}>\n              Label: {e.label}\n            </Text>\n            <ProductOptionDropDown\n              label={e.label}\n              options={e.optionsList}\n              setValue={({ option, listIndex }) => {\n                const newMyObjProfile = structuredClone(myObjProfile);\n                newMyObjProfile.options[index].optionsList.forEach(\n                  (element, indexOfOl) => {\n                    if (element.selected) {\n                      newMyObjProfile.options[index].optionsList[\n                        indexOfOl\n                      ].selected = false;\n                      settotal((prevState) =>\n                        (\n                          parseFloat(prevState) -\n                          parseFloat(\n                            newMyObjProfile.options[index].optionsList[\n                              indexOfOl\n                            ].priceIncrease !== null\n                              ? newMyObjProfile.options[index].optionsList[\n                                  indexOfOl\n                                ].priceIncrease\n                              : 0\n                          )\n                        ).toFixed(2)\n                      );\n                    }\n                  }\n                );\n\n                newMyObjProfile.options[index].optionsList[listIndex].selected =\n                  true;\n                settotal((prevState) =>\n                  (\n                    parseFloat(prevState) +\n                    parseFloat(\n                      newMyObjProfile.options[index].optionsList[listIndex]\n                        .priceIncrease !== null\n                        ? newMyObjProfile.options[index].optionsList[listIndex]\n                            .priceIncrease\n                        : 0\n                    )\n                  ).toFixed(2)\n                );\n                console.log(option);\n\n                setoptionVal(option);\n                setmyObjProfile(newMyObjProfile);\n              }}\n              value={optionVal}\n              style={{ marginBottom: 25 }}\n            />\n          </View>\n        );\n      } else {\n        return (\n          <View\n            style={{\n              marginBottom: 25,\n              flexWrap: \"wrap\",\n              width: \"100%\",\n            }}\n            key={index}\n          >\n            <Text style={{ fontWeight: \"700\", fontSize: 18 }}>\n              Label: {e.label}\n            </Text>\n            <View style={{ flexWrap: \"wrap\", flexDirection: \"row\" }}>\n              {e.optionsList.map((selection, listIndex) => {\n                return (\n                  <TouchableOpacity\n                    key={listIndex}\n                    style={[\n                      myObjProfile.options[index].optionsList[listIndex]\n                        .selected == true && {\n                        backgroundColor: \"green\",\n                      },\n                      {\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        padding: 10,\n                        margin: 5,\n                        borderColor: \"black\",\n                        borderWidth: 2,\n                        // width: \"50%\",\n                      },\n                    ]}\n                    onPress={() => {\n                      const newMyObjProfile = structuredClone(myObjProfile);\n                      if (\n                        !newMyObjProfile.options[index].optionsList[listIndex]\n                          .selected == false\n                      ) {\n                        newMyObjProfile.options[index].optionsList[\n                          listIndex\n                        ].selected = false;\n                        settotal((prevState) =>\n                          (\n                            parseFloat(prevState) -\n                            parseFloat(\n                              newMyObjProfile.options[index].optionsList[\n                                listIndex\n                              ].priceIncrease !== null\n                                ? newMyObjProfile.options[index].optionsList[\n                                    listIndex\n                                  ].priceIncrease\n                                : 0\n                            )\n                          ).toFixed(2)\n                        );\n                      } else {\n                        if (\n                          newMyObjProfile.options[index].optionsList.filter(\n                            (op) => op.selected === true\n                          ).length < parseInt(e.numOfSelectable) ||\n                          !e.numOfSelectable\n                        ) {\n                          newMyObjProfile.options[index].optionsList[\n                            listIndex\n                          ].selected = true;\n                          settotal((prevState) =>\n                            (\n                              parseFloat(prevState) +\n                              parseFloat(\n                                newMyObjProfile.options[index].optionsList[\n                                  listIndex\n                                ].priceIncrease !== null\n                                  ? newMyObjProfile.options[index].optionsList[\n                                      listIndex\n                                    ].priceIncrease\n                                  : 0\n                              )\n                            ).toFixed(2)\n                          );\n                        }\n                      }\n                      setmyObjProfile(newMyObjProfile);\n                    }}\n                  >\n                    <Text style={styles.h2Black}>Name: {selection.label}</Text>\n                    <View style={{ width: 20 }} />\n                    <Text style={styles.h2Black}>\n                      Price: $\n                      {selection.priceIncrease !== null\n                        ? selection.priceIncrease\n                        : 0}\n                    </Text>\n                  </TouchableOpacity>\n                );\n              })}\n            </View>\n          </View>\n        );\n      }\n    } else if (isSelected === false) {\n      const newMyObjProfile = structuredClone(myObjProfile);\n      let newSubtract = 0;\n      newMyObjProfile.options[index].optionsList.forEach(\n        (item, indexOfItem) => {\n          if (item.selected === true) {\n            newSubtract += parseFloat(\n              newMyObjProfile.options[index].optionsList[indexOfItem]\n                .priceIncrease !== null\n                ? priceIncrease\n                : 0\n            );\n            newMyObjProfile.options[index].optionsList[indexOfItem].selected =\n              false;\n          }\n        }\n      );\n      if (newSubtract > 0) {\n        settotal((prevState) =>\n          (parseFloat(prevState) - newSubtract).toFixed(2)\n        );\n        setmyObjProfile(newMyObjProfile);\n      }\n    }\n    // return null;\n  };\n\n  const AddToCart = () => {\n    const opsArray = [];\n\n    myObjProfile.options.forEach((op) => {\n      let opWVal = `${op.label}: `;\n      const numberOfSelected = op.optionsList.filter(\n        (f) => f.selected === true\n      ).length;\n\n      if (numberOfSelected > 0) {\n        opWVal = `${op.label}: `;\n\n        op.optionsList.map((e, index) => {\n          if (e.selected === true) {\n            if (index < op.optionsList.length - 1 && numberOfSelected > 1) {\n              opWVal += e.label + \" , \";\n            } else {\n              opWVal += e.label;\n            }\n          }\n        });\n        opsArray.push(opWVal);\n      }\n    });\n\n    addCartState({\n      name: myObjProfile.name,\n      price: total.toFixed(2),\n      description: myObj.description,\n      options: opsArray,\n      extraDetails: extraInput,\n    });\n\n    setModalVisible(false);\n    setmyObjProfile(myObj);\n    settotal(myObjProfile.price);\n    setextraInput();\n  };\n\n  return (\n    <View key={productIndex}>\n      <Button\n        title={myObj.name}\n        onPress={() => setModalVisible(true)}\n        style={styles.touchable}\n      />\n      <Modal visible={modalVisible}>\n        <ScrollView style={styles.modalContainer}>\n          <Text style={styles.h2Black}>Name: {myObj.name}</Text>\n          {myObj.description && (\n            <Text style={styles.h2Black}>Name: {myObj.description}</Text>\n          )}\n          <Text style={[{ marginBottom: 25 }, styles.h2Black]}>\n            Price: {total}\n          </Text>\n          {myObjProfile.options.map((e, index) => (\n            <DisplayOption e={e} index={index} key={index} />\n          ))}\n          <TextInput\n            placeholder=\"Write any extra info here..\"\n            multiline={true}\n            onChangeText={(val) => setextraInput(val)}\n            value={extraInput}\n            style={{ marginTop: 15, marginBottom: 15 }}\n            inputStyle={{ padding: 10 }}\n          />\n          <Button title=\"Add To Cart\" onPress={AddToCart} style={styles.btn} />\n          <Button\n            title=\"Close\"\n            onPress={() => setModalVisible(false)}\n            style={styles.btn}\n          />\n        </ScrollView>\n      </Modal>\n    </View>\n  );\n};\n\nexport default DisplayTest;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 10,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n  },\n  btn: {\n    marginBottom: 25,\n  },\n  dropDown: {\n    marginBottom: 25,\n  },\n  h2White: {\n    fontSize: 17,\n    color: \"white\",\n  },\n  h2Black: {\n    fontSize: 20,\n    color: \"black\",\n  },\n});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport DisplayTest from \"components/DisplayTest\";\n\nconst MenuScreen = ({ section, catalog }) => {\n  const InnerBlock = () => {\n    if (catalog.products) {\n      if (catalog.products.length > 0) {\n        if (!section) {\n          return catalog.products\n            .filter((e) => e.catagory === catalog.categories[0])\n            .map((product, index) => (\n              <DisplayTest product={product} productIndex={index} key={index} />\n            ));\n        } else {\n          return catalog.products\n            .filter((e) => e.catagory === section)\n            .map((product, index) => (\n              <DisplayTest product={product} productIndex={index} key={index} />\n            ));\n        }\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <InnerBlock />\n    </View>\n  );\n};\n\nexport default MenuScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 2,\n    height: \"100%\",\n  },\n  wrapper: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n});\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { cartState, setCartState } from \"state/state\";\nimport { Switch } from \"react-native-gesture-handler\";\n\nconst DeliveryScreen = ({\n  setDeliveryModal,\n  setOngoingDelivery,\n  setName,\n  setPhone,\n  setAddress,\n  name,\n  phone,\n  address,\n  deliveryChecked,\n  setDeliveryChecked,\n}) => {\n  return (\n    <ScrollView style={styles.modalContainer}>\n      <View style={styles.sizeRow}>\n        <Text>Enter Phone Order Details</Text>\n        <View>\n          <Text>Delivery?</Text>\n          <Switch\n            value={deliveryChecked}\n            onValueChange={() => {\n              setDeliveryChecked(!deliveryChecked);\n            }}\n          />\n        </View>\n      </View>\n      <TextInput\n        label=\"Name\"\n        variant=\"outlined\"\n        style={styles.input}\n        onChangeText={(val) => setName(val)}\n        autoCorrect={false}\n        value={name}\n      />\n      <TextInput\n        label=\"Phone #\"\n        variant=\"outlined\"\n        style={styles.input}\n        onChangeText={(val) => setPhone(val)}\n        autoCorrect={false}\n        value={phone}\n      />\n      {deliveryChecked && (\n        <TextInput\n          label=\"Address\"\n          variant=\"outlined\"\n          style={styles.input}\n          onChangeText={(val) => setAddress(val)}\n          autoCorrect={false}\n          value={address}\n        />\n      )}\n      <Button\n        title=\"Order\"\n        // onPress={GetTrans}\n        onPress={() => {\n          setDeliveryModal(false);\n          setOngoingDelivery(true);\n        }}\n        contentContainerStyle={styles.btn}\n        style={{ margin: 25 }}\n      />\n      <Button\n        title=\"Cancel\"\n        onPress={() => {\n          setDeliveryModal(false);\n          setOngoingDelivery(null);\n        }}\n        contentContainerStyle={styles.btn}\n        style={{ margin: 25 }}\n      />\n    </ScrollView>\n  );\n};\n\nexport default DeliveryScreen;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n  },\n  btn: {\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  input: {\n    marginTop: 25,\n    marginBottom: 25,\n  },\n});\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, TextInput } from \"@react-native-material/core\";\r\nimport { cartState, setCartState } from \"state/state\";\r\nimport { Switch } from \"react-native-gesture-handler\";\r\n\r\nconst CashScreen = ({ setCashModal, GetTrans, total, setChangeDue }) => {\r\n  const [cash, setCash] = useState(\"\");\r\n\r\n  return (\r\n    <ScrollView style={styles.modalContainer}>\r\n      <View style={styles.sizeRow}>\r\n        <Text>Cash Payment Details</Text>\r\n      </View>\r\n      <Text>Total: {total}</Text>\r\n      <TextInput\r\n        label=\"Enter Cash Given\"\r\n        variant=\"outlined\"\r\n        style={styles.input}\r\n        onChangeText={(val) => {\r\n          setCash(val);\r\n          setChangeDue((parseFloat(val) - total).toFixed(2));\r\n        }}\r\n        autoCorrect={false}\r\n        value={cash}\r\n      />\r\n      <Text>\r\n        Change Due:{\" \"}\r\n        {parseFloat(cash) > total && (parseFloat(cash) - total).toFixed(2)}\r\n      </Text>\r\n      <Button\r\n        title=\"Print\"\r\n        onPress={() => {\r\n          GetTrans(\"Cash\");\r\n          setCashModal(false);\r\n        }}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n      <Button\r\n        title=\"Cancel\"\r\n        onPress={() => setCashModal(false)}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default CashScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  sizeRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n  },\r\n  halfRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"50%\",\r\n  },\r\n  toppingsContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n  },\r\n  touchable: {\r\n    margin: 25,\r\n    width: 300,\r\n  },\r\n  modalContainer: {\r\n    padding: 50,\r\n  },\r\n  btn: {\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n  },\r\n});\r\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, TextInput } from \"@react-native-material/core\";\r\nimport { storeDetailState } from \"state/state\";\r\n\r\nconst ChangeScreen = ({ setChangeModal }) => {\r\n  const [total, setTotal] = useState(\"\");\r\n  const [cash, setCash] = useState(\"\");\r\n  const storeDetails = storeDetailState.use();\r\n\r\n  const openCash = () => {\r\n    const data = [\r\n      \"\\x1B\" + \"\\x40\", // init\r\n      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\r\n      storeDetails.name,\r\n      \"\\x0A\",\r\n      storeDetails.address + \"\\x0A\",\r\n      storeDetails.website + \"\\x0A\", // text and line break\r\n      storeDetails.phoneNumber + \"\\x0A\", // text and line break\r\n      \"\\x0A\",\r\n      \"\\x0A\",\r\n      \"\\x0A\",\r\n      \"\\x0A\",\r\n      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\r\n      `Total: $${total}` + \"\\x0A\",\r\n      `Cash Given: $${cash}` + \"\\x0A\",\r\n      `Change Due: $${(parseFloat(cash) - parseFloat(total)).toFixed(2)}` +\r\n        \"\\x0A\",\r\n      \"------------------------------------------\" + \"\\x0A\",\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      //\"\\x1D\" + \"\\x56\" + \"\\x00\",\r\n      \"\\x1D\" + \"\\x56\" + \"\\x30\",\r\n      \"\\x10\" + \"\\x14\" + \"\\x01\" + \"\\x00\" + \"\\x05\",\r\n    ];\r\n\r\n    fetch(\"http://localhost:8080/print\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        printData: data,\r\n        comSelected: storeDetails.comSelected,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((respData) => {\r\n        console.log(respData);\r\n      })\r\n      .catch((e) => alert(\"Error with printer\"));\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.modalContainer}>\r\n      <View style={styles.sizeRow}>\r\n        <Text>Cash Payment Details</Text>\r\n      </View>\r\n      <TextInput\r\n        label=\"Enter Total\"\r\n        variant=\"outlined\"\r\n        style={styles.input}\r\n        onChangeText={(val) => setTotal(val)}\r\n        autoCorrect={false}\r\n        value={total}\r\n      />\r\n      <TextInput\r\n        label=\"Enter Cash Given\"\r\n        variant=\"outlined\"\r\n        style={styles.input}\r\n        onChangeText={(val) => setCash(val)}\r\n        autoCorrect={false}\r\n        value={cash}\r\n      />\r\n      <Text>Change Due: {(parseFloat(cash) - total).toFixed(2)}</Text>\r\n      <Button\r\n        title=\"Open Cash\"\r\n        onPress={() => {\r\n          openCash();\r\n          setChangeModal(false);\r\n        }}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n      <Button\r\n        title=\"Cancel\"\r\n        onPress={() => setChangeModal(false)}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default ChangeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  sizeRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n  },\r\n  halfRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"50%\",\r\n  },\r\n  toppingsContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n  },\r\n  touchable: {\r\n    margin: 25,\r\n    width: 300,\r\n  },\r\n  modalContainer: {\r\n    padding: 50,\r\n  },\r\n  btn: {\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n  },\r\n});\r\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialize Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDmtlrkfZRbFy8P7D4BFXTIkzMDC_DP5n8\",\n  authDomain: \"posmate-5fc0a.firebaseapp.com\",\n  projectId: \"posmate-5fc0a\",\n  storageBucket: \"posmate-5fc0a.appspot.com\",\n  messagingSenderId: \"48463376409\",\n  appId: \"1:48463376409:web:b427a4fbc3c210a5977a88\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// Initialize Cloud Firestore and get a reference to the service\nexport const auth = firebase.auth();\n\nexport const db = firebase.firestore();\n","import { auth, db } from \"./firebaseConfig\";\n\nexport const signIn = (email, password) =>\n  auth.signInWithEmailAndPassword(email, password);\n\nexport const signUp = (email, password) =>\n  auth\n    .createUserWithEmailAndPassword(email, password)\n    .then((userAuth) => {\n      if (userAuth.user) {\n        db.collection(\"users\")\n          .doc(userAuth.user.uid)\n          .set({\n            paid: true,\n            products: [],\n            categories: [],\n            wooCredentials: { ck: null, cs: null, useWoocommerce: false },\n            transList: [],\n            storeDetails: {\n              name: null,\n              address: null,\n              phoneNumber: null,\n              website: null,\n              comSelected: null,\n              deliveryPrice: null,\n            },\n            //company name\n            //adddress\n            //etc\n          });\n      }\n    })\n    .catch((e) => console.log(e));\n\nexport const updateData = (categories, products) => {\n  return new Promise((resolve, reject) => {\n    db.collection(\"users\")\n      .doc(auth.currentUser?.uid)\n      .update({\n        products: products,\n        categories: categories,\n      })\n      .then(() => resolve(\"Promise resolved!\"))\n      .catch(() => reject(\"Promise rejected!\"));\n  });\n};\n\nexport const updateWooCredentials = (wooCredentials) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    wooCredentials: wooCredentials,\n  });\n};\n\nexport const updateTransList = (transList) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    transList: transList,\n  });\n};\n\nexport const updateStoreDetails = (storeDetails) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    storeDetails: storeDetails,\n  });\n};\n","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  cartState,\n  cartSubState,\n  setCartState,\n  setTransListState,\n  storeDetailState,\n  transListState,\n} from \"state/state\";\nimport { Button } from \"@react-native-material/core\";\nimport DeliveryScreen from \"components/DeliveryScreen\";\nimport CashScreen from \"components/CashScreen\";\nimport ChangeScreen from \"components/ChangeScreen\";\nimport { updateTransList } from \"state/firebaseFunctions\";\n\nconst CartScreen = () => {\n  const [deliveryModal, setDeliveryModal] = useState(false);\n  const [cashModal, setCashModal] = useState(false);\n  const [changeModal, setChangeModal] = useState(false);\n  const [ongoingDelivery, setOngoingDelivery] = useState(null);\n  const [name, setName] = useState();\n  const [phone, setPhone] = useState();\n  const [address, setAddress] = useState();\n  const [deliveryChecked, setDeliveryChecked] = useState(false);\n  const [changeDue, setChangeDue] = useState();\n  const cart = cartState.use();\n  const transList = transListState.use();\n  const storeDetails = storeDetailState.use();\n  const [cartSub, setCartSub] = useState(0);\n\n  useEffect(() => {\n    if (cart.length > 0) {\n      let newVal = 0;\n      for (var i = 0; i < cart.length; i++) {\n        newVal += parseFloat(cart[i].price);\n      }\n      setCartSub(newVal);\n    } else {\n      setCartSub(0);\n    }\n  }, [cart]);\n\n  const AddToList = async (payload) => {\n    const local = structuredClone(transList);\n    local.unshift(payload);\n    updateTransList(local);\n    //setTransListState(local);\n  };\n\n  const Print = (method) => {\n    const transNum = transList?.length + 1;\n    if (method === \"deliveryOrder\") {\n      let total =\n        storeDetails.deliveryPrice > 0\n          ? parseFloat(storeDetails.deliveryPrice)\n          : 0;\n      const today = new Date();\n\n      let data = [\n        \"\\x1B\" + \"\\x40\", // init\n        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n        storeDetails.name,\n        \"\\x0A\",\n        storeDetails.address + \"\\x0A\",\n        storeDetails.website + \"\\x0A\", // text and line break\n        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n        today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n        \"\\x0A\",\n        `Transaction # ${transNum}` + \"\\x0A\",\n        \"\\x0A\",\n        `Delivery Order: $${storeDetails.deliveryPrice} Fee` + \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      ];\n\n      cart.map((cartItem) => {\n        total += parseFloat(cartItem.price);\n        data.push(`Name: ${cartItem.name}`);\n        data.push(`Price: $${cartItem.price}`);\n\n        if (cartItem.description) {\n          data.push(cartItem.description);\n          data.push(\"\\x0A\");\n        }\n\n        if (cartItem.options) {\n          data.push(\"\\x0A\");\n          cartItem.options.map((option) => {\n            data.push(option);\n            data.push(\"\\x0A\");\n          });\n        }\n\n        if (cartItem.extraDetails) {\n          data.push(cartItem.extraDetails);\n          data.push(\"\\x0A\");\n        }\n\n        data.push(\"\\x0A\" + \"\\x0A\");\n      });\n\n      total = total * 1.13;\n      total = total.toFixed(2);\n\n      //push ending\n      data.push(\n        \"\\x0A\",\n        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Name: \" + name,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Phone #:  \" + phone,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Address #:  \" + address,\n        \"\\x0A\" + \"\\x0A\",\n        \"Total Including (13% Tax): \" + total + \"\\x0A\" + \"\\x0A\",\n        \"------------------------------------------\" + \"\\x0A\",\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n      );\n      fetch(\"http://localhost:8080/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          printData: data,\n          comSelected: storeDetails.comSelected,\n        }),\n      })\n        .then((response) => response.json())\n        .then((respData) => {\n          console.log(respData);\n        })\n        .catch((e) => alert(\"Error with printer\"));\n\n      AddToList({\n        date: today,\n        transNum: transNum,\n        total: total,\n        method: \"deliveryOrder\",\n        cart: cart,\n      });\n\n      setCartState([]);\n      setDeliveryModal(false);\n    } else if (method === \"pickupOrder\") {\n      let total = 0;\n      const today = new Date();\n\n      let data = [\n        \"\\x1B\" + \"\\x40\", // init\n        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n        storeDetails.name,\n        \"\\x0A\",\n        storeDetails.address + \"\\x0A\",\n        storeDetails.website + \"\\x0A\", // text and line break\n        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n        today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n        \"\\x0A\",\n        `Transaction # ${transNum}` + \"\\x0A\",\n        \"\\x0A\",\n        \"Pickup Order\" + \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      ];\n\n      cart.map((cartItem) => {\n        total += parseFloat(cartItem.price);\n        data.push(`Name: ${cartItem.name}`);\n        data.push(`Price: $${cartItem.price}`);\n\n        if (cartItem.description) {\n          data.push(cartItem.description);\n          data.push(\"\\x0A\");\n        }\n\n        if (cartItem.options) {\n          data.push(\"\\x0A\");\n          cartItem.options.map((option) => {\n            data.push(option);\n            data.push(\"\\x0A\");\n          });\n        }\n\n        if (cartItem.extraDetails) {\n          data.push(cartItem.extraDetails);\n          data.push(\"\\x0A\");\n        }\n\n        data.push(\"\\x0A\" + \"\\x0A\");\n      });\n\n      total = total * 1.13;\n      total = total.toFixed(2);\n\n      //push ending\n      data.push(\n        \"\\x0A\",\n        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Name: \" + name,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Phone #:  \" + phone,\n        \"\\x0A\" + \"\\x0A\",\n        \"Total Including (13% Tax): \" + total + \"\\x0A\" + \"\\x0A\",\n        \"------------------------------------------\" + \"\\x0A\",\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n      );\n      fetch(\"http://localhost:8080/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          printData: data,\n          comSelected: storeDetails.comSelected,\n        }),\n      })\n        .then((response) => response.json())\n        .then((respData) => {\n          console.log(respData);\n        })\n        .catch((e) => alert(\"Error with printer\"));\n\n      AddToList({\n        date: today,\n        transNum: transNum,\n        total: total,\n        method: \"pickupOrder\",\n        cart: cart,\n      });\n\n      setCartState([]);\n      setDeliveryModal(false);\n    } else {\n      let total = 0;\n      const today = new Date();\n\n      let data = [\n        \"\\x1B\" + \"\\x40\", // init\n        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n        storeDetails.name,\n        \"\\x0A\",\n        storeDetails.address + \"\\x0A\",\n        storeDetails.website + \"\\x0A\", // text and line break\n        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n        today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n        \"\\x0A\",\n        `Transaction # ${transNum}` + \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      ];\n\n      cart.map((cartItem) => {\n        total += parseFloat(cartItem.price);\n        data.push(`Name: ${cartItem.name}`);\n        data.push(\"\\x0A\");\n        data.push(`Price: $${cartItem.price}`);\n\n        if (cartItem.description) {\n          data.push(cartItem.description);\n          data.push(\"\\x0A\");\n        }\n\n        if (cartItem.options) {\n          data.push(\"\\x0A\");\n          cartItem.options.map((option) => {\n            data.push(option);\n            data.push(\"\\x0A\");\n          });\n        }\n\n        if (cartItem.extraDetails) {\n          data.push(cartItem.extraDetails);\n          data.push(\"\\x0A\");\n        }\n\n        data.push(\"\\x0A\" + \"\\x0A\");\n      });\n\n      total = total * 1.13;\n      total = total.toFixed(2);\n\n      if (method === \"Cash\") {\n        //push ending\n        data.push(\n          \"\\x0A\",\n          \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n          \"\\x0A\" + \"\\x0A\",\n          \"Payment Method: \" + method + \"\\x0A\" + \"\\x0A\",\n          \"Total Including (13% Tax): \" + \"$\" + total + \"\\x0A\" + \"\\x0A\",\n          \"Change Due: \" + \"$\" + changeDue + \"\\x0A\" + \"\\x0A\",\n          \"------------------------------------------\" + \"\\x0A\",\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n          \"\\x1D\" + \"\\x56\" + \"\\x30\",\n          \"\\x10\" + \"\\x14\" + \"\\x01\" + \"\\x00\" + \"\\x05\"\n        );\n      } else {\n        data.push(\n          \"\\x0A\",\n          \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n          \"\\x0A\" + \"\\x0A\",\n          \"Payment Method: \" + method + \"\\x0A\" + \"\\x0A\",\n          \"Total Including (13% Tax): \" + \"$\" + total + \"\\x0A\" + \"\\x0A\",\n          \"------------------------------------------\" + \"\\x0A\",\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n          \"\\x1D\" + \"\\x56\" + \"\\x30\"\n        );\n      }\n\n      fetch(\"http://localhost:8080/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          printData: data,\n          comSelected: storeDetails.comSelected,\n        }),\n      })\n        .then((response) => response.json())\n        .then((respData) => {\n          console.log(respData);\n        })\n        .catch((e) => alert(\"Error with printer\"));\n\n      AddToList({\n        date: today,\n        transNum: transNum,\n        total: total,\n        method: method,\n        cart: cart,\n      });\n    }\n\n    setCartState([]);\n  };\n\n  const DeliveryBtn = () => {\n    if (ongoingDelivery === null) {\n      return (\n        <Button\n          title=\"Phone Order\"\n          onPress={() => setDeliveryModal(true)}\n          disabled={cart.length > 0}\n          style={{ marginBottom: 20 }}\n        />\n      );\n    }\n    if (ongoingDelivery && cart.length > 0) {\n      return (\n        <Button\n          title=\"Complete\"\n          onPress={() => {\n            Print(deliveryChecked ? \"deliveryOrder\" : \"pickupOrder\");\n            setOngoingDelivery(null);\n            setName(null);\n            setPhone(null);\n            setAddress(null);\n          }}\n          style={{ marginBottom: 20 }}\n        />\n      );\n    } else {\n      return (\n        <Button\n          title=\"Cancel\"\n          onPress={() => setOngoingDelivery(null)}\n          style={{ marginBottom: 20 }}\n        />\n      );\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={styles.container}\n        contentContainerStyle={styles.contentContainer}\n      >\n        <View>\n          {cart.map((cartItem, index) => (\n            <View style={{ marginBottom: 20 }}>\n              <Text>Name: {cartItem.name}</Text>\n              <Text>Price: {cartItem.price}</Text>\n              {cartItem.description && (\n                <Text>Description: {cartItem.description}</Text>\n              )}\n              {cartItem.options &&\n                cartItem.options.map((option) => <Text>{option}</Text>)}\n              {cartItem.extraDetails && <Text>{cartItem.extraDetails}</Text>}\n              <Text\n                style={{ color: \"blue\" }}\n                onPress={() => {\n                  const local = structuredClone(cart);\n                  local.splice(index, 1);\n                  setCartState(local);\n                }}\n              >\n                Remove\n              </Text>\n            </View>\n          ))}\n        </View>\n        <View>\n          <Text>Sub: {cartSub.toFixed(2)}</Text>\n          <Text>Total: {(cartSub * 1.13).toFixed(2)}</Text>\n          <Button\n            title=\"Cash\"\n            onPress={() => setCashModal(true)}\n            disabled={cart.length < 1 || ongoingDelivery}\n            style={{ marginBottom: 20 }}\n          />\n          <Button\n            title=\"Card\"\n            onPress={() => Print(\"Card\")}\n            disabled={cart.length < 1 || ongoingDelivery}\n            style={{ marginBottom: 20 }}\n          />\n          <DeliveryBtn />\n          <Button\n            title=\"Change\"\n            onPress={() => setChangeModal(true)}\n            disabled={cart.length > 0 || ongoingDelivery}\n          />\n        </View>\n        <Modal visible={deliveryModal}>\n          <DeliveryScreen\n            setDeliveryModal={setDeliveryModal}\n            setOngoingDelivery={setOngoingDelivery}\n            setName={setName}\n            setPhone={setPhone}\n            setAddress={setAddress}\n            name={name}\n            phone={phone}\n            address={address}\n            deliveryChecked={deliveryChecked}\n            setDeliveryChecked={setDeliveryChecked}\n          />\n        </Modal>\n        <Modal visible={cashModal}>\n          <CashScreen\n            setCashModal={setCashModal}\n            GetTrans={() => Print(\"Cash\")}\n            total={(cartSub * 1.13).toFixed(2)}\n            setChangeDue={setChangeDue}\n          />\n        </Modal>\n        <Modal visible={changeModal}>\n          <ChangeScreen setChangeModal={setChangeModal} />\n        </Modal>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default CartScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"lightgrey\",\n    flex: 1,\n    height: \"100%\",\n  },\n  contentContainer: {\n    backgroundColor: \"lightgrey\",\n    flex: 1,\n    height: \"100%\",\n    justifyContent: \"space-between\",\n    padding: 20,\n  },\n});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport MenuScreen from \"./MenuScreen\";\nimport CartScreen from \"./CartScreen\";\nimport { Button } from \"@react-native-material/core\";\nimport { sectionState, userStoreState } from \"state/state\";\nimport { auth } from \"state/firebaseConfig\";\n\nconst HomeScreen = () => {\n  const catalog = userStoreState.use();\n   const section = sectionState.use();\n\n  const Screen = () => {\n    return (\n      <View style={{ flexDirection: \"row\", height: \"100%\" }}>\n        <MenuScreen catalog={catalog} section={section} />\n        <CartScreen />\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <Screen />\n    </View>\n  );\n};\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n  },\n});\n","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport TestAdd from \"./TestAdd\";\nimport Spinner from \"./Spinner\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst EditProductList = ({ navigation }) => {\n  const catalog = userStoreState.use();\n\n  function handleRemoveCatagory(index) {\n    const localCatalog = structuredClone(catalog);\n    localCatalog.products.splice(index, 1);\n\n    updateData(localCatalog.categories, localCatalog.products);\n    // setisModalVisible(true);\n  }\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>Current Products</Text>\n      {catalog.categories.length > 0 ? (\n        catalog.products.map((e, index) => {\n          return (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                padding: 15,\n                margin: 10,\n                backgroundColor: \"lightgrey\",\n              }}\n            >\n              <Text style={{ fontSize: 17 }}>Product: {e.name}</Text>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  width: \"20%\",\n                }}\n              >\n                <Button\n                  title=\"Duplicate\"\n                  onPress={() => {\n                    let copy = structuredClone(e);\n                    copy.name = copy.name + \" Copy\";\n                    updateData(\n                      [...catalog.categories],\n                      [...catalog.products, copy]\n                    );\n                  }}\n                  style={{ margin: 10 }}\n                />\n                <Button\n                  title=\"Edit\"\n                  // onPress={() => setProductEditModal(true)}\n                  onPress={() =>\n                    navigation.navigate(\"AddProduct\", {\n                      existingProduct: e,\n                      existingProductIndex: index,\n                    })\n                  }\n                  style={{ margin: 10 }}\n                />\n                <TouchableOpacity\n                  onPress={() => handleRemoveCatagory(index)}\n                  style={{\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    borderRadius: 3,\n                    backgroundColor: \"red\",\n                    padding: 10,\n                    margin: 10,\n                  }}\n                >\n                  <Text\n                    style={{ color: \"white\", fontWeight: \"600\", fontSize: 18 }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          );\n        })\n      ) : (\n        <Text style={{ marginTop: 50, marginBottom: 50 }}>\n          You must add a category before you can add a product...\n        </Text>\n      )}\n      {catalog.products.length < 1 && catalog.categories.length > 0 && (\n        <Text style={{ marginTop: 50, marginBottom: 50 }}>\n          You have no products...\n        </Text>\n      )}\n      <Button\n        title=\"Add New Product\"\n        onPress={() => navigation.navigate(\"AddProduct\")}\n        style={{ margin: 10 }}\n        disabled={catalog.categories.length < 1}\n      />\n      {/* <Spinner isModalVisible={isModalVisible} /> */}\n    </ScrollView>\n  );\n};\n\nexport default EditProductList;\n\nconst styles = StyleSheet.create({});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { ListItem } from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nconst DropDown = ({ label, options, setValue, value, style }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <View style={[styles.container, style]}>\n      <ListItem\n        title={value ? value : label}\n        trailing={(props) => (\n          <Icon name={show ? \"chevron-up\" : \"chevron-down\"} {...props} />\n        )}\n        onPress={() => setShow((prevState) => !prevState)}\n      />\n      {show && (\n        <>\n          {options.map((option) => (\n            <ListItem\n              title={option}\n              onPress={() => {\n                setValue(option);\n                setShow(false);\n              }}\n            />\n          ))}\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default DropDown;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n  },\n});\n","import { View, Text, TouchableOpacity } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\n\nconst OptionView = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n  indexOn,\n  setindexOn,\n}) => {\n  if (indexOn === index) {\n    const [optionLblsValues, setoptionLblsValues] = useState([]);\n    const [e, sete] = useState(item);\n    const [testMap, settestMap] = useState(structuredClone(item.optionsList));\n    var optionLbls = newProduct.options.map(function (el) {\n      if (el.label !== e.label && el.label !== null) {\n        return el.label;\n      }\n    });\n\n    useEffect(() => {\n      if (e.selectedCaseKey !== null) {\n        if (newProduct.options.length > 1) {\n          const local = newProduct.options.filter(\n            (localE) => localE.label == e.selectedCaseKey\n          );\n          const optionLblsValuesLocal =\n            local.length > 0 &&\n            local[0].optionsList.map(function (el) {\n              return el.label;\n            });\n          setoptionLblsValues(optionLblsValuesLocal);\n        } else {\n          newProductOptions.current[index].selectedCaseKey = null;\n          newProductOptions.current[index].selectedCaseValue = null;\n        }\n      }\n    }, [e]);\n\n    return (\n      <View>\n        <View\n          style={{\n            padding: 25,\n            margin: 15,\n            backgroundColor: \"lightgrey\",\n          }}\n        >\n          <TouchableOpacity\n            onPress={() =>\n              indexOn !== index ? setindexOn(index) : setindexOn(null)\n            }\n            style={{\n              padding: 25,\n              margin: 15,\n              backgroundColor: \"lightgrey\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              height: 100,\n            }}\n          >\n            <Text>{item.label}</Text>\n            <TouchableOpacity\n              onPress={() => {\n                newProductOptions.current.push({\n                  ...item,\n                  label: item.label + \" Copy\",\n                });\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(newProductOptions.current.length - 1);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                Copy\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                newProductOptions.current.splice(index, 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(indexOn - 1);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                X\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                function moveItem(from, to) {\n                  // remove `from` item and store it\n                  var f = newProductOptions.current.splice(from, 1)[0];\n                  // insert stored item into position `to`\n                  newProductOptions.current.splice(to, 0, f);\n                }\n\n                moveItem(index, index + 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(null);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                \\/\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                function moveItem(from, to) {\n                  // remove `from` item and store it\n                  var f = newProductOptions.current.splice(from, 1)[0];\n                  // insert stored item into position `to`\n                  newProductOptions.current.splice(to, 0, f);\n                }\n\n                moveItem(index, index - 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(null);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                /\\\n              </Text>\n            </TouchableOpacity>\n          </TouchableOpacity>\n          <TextInput\n            placeholder=\"Enter Select List Label\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, label: val }));\n              newProductOptions.current[index].label = val;\n            }}\n            value={e.label}\n            style={{ marginBottom: 25 }}\n          />\n          {/* optionType */}\n          <DropDown\n            label=\"Option Type\"\n            options={[\"Standard\", \"Dropdown\"]}\n            setValue={(val) => {\n              // sete((prevState) => ({\n              //   ...prevState,\n              //   optionType: val,\n              // }));\n              if (e.optionType) {\n                newProductOptions.current[index].optionType = val;\n              } else {\n                newProductOptions.current[index] = { ...e, optionType: val };\n                console.log(newProductOptions.current[index].optionType);\n              }\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n            }}\n            value={e.optionType}\n            style={{ marginBottom: 25 }}\n          />\n          <TextInput\n            placeholder=\"Enter Number Of Selectable; If There Is\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n              newProductOptions.current[index].numOfSelectable = val;\n            }}\n            value={e.numOfSelectable}\n            style={{ marginBottom: 25 }}\n          />\n          {testMap.map((eInnerListStart, indexInnerList) => {\n            const eInnerList = structuredClone(eInnerListStart);\n            return (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  marginBottom: 25,\n                  alignItems: \"center\",\n                }}\n              >\n                <TextInput\n                  placeholder=\"Enter Option Label\"\n                  onChangeText={(val) => {\n                    const clone = structuredClone(testMap);\n                    clone[indexInnerList].label = val;\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                  value={eInnerList.label}\n                />\n                <TextInput\n                  placeholder=\"Enter price increase\"\n                  //   onChangeText={(val) => {\n                  //     newProductOptions.current[index].optionsList[\n                  //       indexInnerList\n                  //     ].priceIncrease = val;\n                  //     seteInnerList((prevState) => ({\n                  //       ...prevState,\n                  //       priceIncrease: val,\n                  //     }));\n                  //   }}\n                  onChangeText={(val) => {\n                    const clone = structuredClone(testMap);\n                    clone[indexInnerList].priceIncrease = val;\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                  value={eInnerList.priceIncrease}\n                  style={{ marginLeft: 20, marginRight: 20 }}\n                />\n                <TouchableOpacity\n                  onPress={() => {\n                    const clone = structuredClone(testMap);\n                    clone.splice(indexInnerList, 1);\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            );\n          })}\n          <Button\n            title=\"Add Option Choice\"\n            onPress={() => {\n              const clone = structuredClone(testMap);\n              clone.push({\n                label: null,\n                priceIncrease: null,\n              });\n              newProductOptions.current[index].optionsList = clone;\n              settestMap(clone);\n            }}\n            style={{ marginBottom: 25 }}\n          />\n          {optionLbls.length > 1 && (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginBottom: 25,\n              }}\n            >\n              <DropDown\n                label=\"Show if...\"\n                options={optionLbls}\n                setValue={(val) => {\n                  sete((prevState) => ({ ...prevState, selectedCaseKey: val }));\n                  newProductOptions.current[index].selectedCaseKey = val;\n                }}\n                value={e.selectedCaseKey}\n                style={{ marginBottom: 25 }}\n              />\n              <Text>\"=\"</Text>\n              <DropDown\n                label=\"Show if...\"\n                options={optionLblsValues}\n                setValue={(val) => {\n                  sete((prevState) => ({\n                    ...prevState,\n                    selectedCaseValue: val,\n                  }));\n                  newProductOptions.current[index].selectedCaseValue = val;\n                }}\n                value={e.selectedCaseValue}\n                style={{ marginBottom: 25 }}\n              />\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  } else {\n    return (\n      <TouchableOpacity\n        onPress={() =>\n          indexOn !== index ? setindexOn(index) : setindexOn(null)\n        }\n        style={{\n          padding: 25,\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 100,\n        }}\n      >\n        <Text>{item.label}</Text>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.push({\n              ...item,\n              label: item.label + \" Copy\",\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(newProductOptions.current.length - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.splice(index, 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(indexOn - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            X\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            function moveItem(from, to) {\n              // remove `from` item and store it\n              var f = newProductOptions.current.splice(from, 1)[0];\n              // insert stored item into position `to`\n              newProductOptions.current.splice(to, 0, f);\n            }\n\n            moveItem(index, index + 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(null);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            \\/\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            function moveItem(from, to) {\n              // remove `from` item and store it\n              var f = newProductOptions.current.splice(from, 1)[0];\n              // insert stored item into position `to`\n              newProductOptions.current.splice(to, 0, f);\n            }\n\n            moveItem(index, index - 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(null);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            /\\\n          </Text>\n        </TouchableOpacity>\n      </TouchableOpacity>\n    );\n  }\n};\n\nexport default OptionView;\n","import {\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"state/state\";\nimport { updateData } from \"state/firebaseFunctions\";\nimport OptionView from \"./OptionView\";\n\nconst MyListItem = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n  indexOn,\n  setindexOn,\n  setcurrentY,\n}) => {\n  const memoizedItem = useMemo(() => item, [item]);\n\n  if (indexOn !== index) {\n    return (\n      <TouchableOpacity\n        onPress={() => setindexOn(index)}\n        style={{\n          padding: 25,\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 100,\n        }}\n      >\n        <Text>{memoizedItem.label}</Text>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.push({\n              ...memoizedItem,\n              label: memoizedItem.label + \" Copy\",\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(newProductOptions.current.length - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.splice(index, 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(indexOn - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            X\n          </Text>\n        </TouchableOpacity>\n      </TouchableOpacity>\n    );\n  } else {\n    const [optionLblsValues, setoptionLblsValues] = useState([]);\n    const [e, sete] = useState(memoizedItem);\n    var optionLbls = newProduct.options.map(function (el) {\n      if (el.label !== e.label && el.label !== null) {\n        return el.label;\n      }\n    });\n\n    useEffect(() => {\n      if (e.selectedCaseKey !== null) {\n        const local = newProduct.options.filter(\n          (localE) => localE.label == e.selectedCaseKey\n        );\n        const optionLblsValuesLocal =\n          local.length > 0 &&\n          local[0].optionsList.map(function (el) {\n            return el.label;\n          });\n        setoptionLblsValues(optionLblsValuesLocal);\n      }\n    }, [e]);\n\n    return (\n      <View>\n        <View\n          style={{\n            padding: 25,\n            margin: 15,\n            backgroundColor: \"lightgrey\",\n          }}\n        >\n          <TouchableOpacity\n            onPress={() => {\n              newProductOptions.current.push({\n                ...e,\n                label: e.label + \" Copy\",\n              });\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(newProductOptions.current.length - 1);\n            }}\n          >\n            <Text\n              style={{\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\",\n              }}\n            >\n              Copy\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              newProductOptions.current.splice(index, 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <Text\n              style={{\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\",\n              }}\n            >\n              X\n            </Text>\n          </TouchableOpacity>\n          <TextInput\n            placeholder=\"Enter Select List Label\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, label: val }));\n              newProductOptions.current[index].label = val;\n            }}\n            value={e.label}\n            style={{ marginBottom: 25 }}\n          />\n          {/* optionType */}\n          <DropDown\n            label=\"Option Type\"\n            options={[\"Standard\", \"Dropdown\"]}\n            setValue={(val) => {\n              // sete((prevState) => ({\n              //   ...prevState,\n              //   optionType: val,\n              // }));\n              if (e.optionType) {\n                newProductOptions.current[index].optionType = val;\n              } else {\n                newProductOptions.current[index] = { ...e, optionType: val };\n                console.log(newProductOptions.current[index].optionType);\n              }\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n            }}\n            value={e.optionType}\n            style={{ marginBottom: 25 }}\n          />\n          <TextInput\n            placeholder=\"Enter Number Of Selectable; If There Is\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n              newProductOptions.current[index].numOfSelectable = val;\n            }}\n            value={e.numOfSelectable}\n            style={{ marginBottom: 25 }}\n          />\n          {e.optionsList.map((eInnerListStart, indexInnerList) => {\n            const [eInnerList, seteInnerList] = useState(eInnerListStart);\n            return (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  marginBottom: 25,\n                  alignItems: \"center\",\n                }}\n              >\n                <TextInput\n                  placeholder=\"Enter Option Label\"\n                  onChangeText={(val) => {\n                    newProductOptions.current[index].optionsList[\n                      indexInnerList\n                    ].label = val;\n                    seteInnerList((prevState) => ({\n                      ...prevState,\n                      label: val,\n                    }));\n                  }}\n                  value={eInnerList.label}\n                />\n                <TextInput\n                  placeholder=\"Enter price increase\"\n                  onChangeText={(val) => {\n                    newProductOptions.current[index].optionsList[\n                      indexInnerList\n                    ].priceIncrease = val;\n                    seteInnerList((prevState) => ({\n                      ...prevState,\n                      priceIncrease: val,\n                    }));\n                  }}\n                  value={eInnerList.priceIncrease}\n                  style={{ marginLeft: 20, marginRight: 20 }}\n                />\n                <TouchableOpacity\n                  onPress={() => {\n                    newProductOptions.current[index].optionsList.splice(\n                      indexInnerList,\n                      1\n                    );\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: newProductOptions.current,\n                    }));\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            );\n          })}\n          <Button\n            title=\"Add Option Choice\"\n            onPress={() => {\n              newProductOptions.current[index].optionsList.push({\n                label: null,\n                priceIncrease: null,\n              });\n              setcurrentY(window.pageYOffset);\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n            }}\n            style={{ marginBottom: 25 }}\n          />\n          {optionLbls.length > 1 && (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginBottom: 25,\n              }}\n            >\n              <DropDown\n                label=\"Show if...\"\n                options={optionLbls}\n                setValue={(val) => {\n                  sete((prevState) => ({ ...prevState, selectedCaseKey: val }));\n                  newProductOptions.current[index].selectedCaseKey = val;\n                }}\n                value={e.selectedCaseKey}\n                style={{ marginBottom: 25 }}\n              />\n              <Text>\"=\"</Text>\n              <DropDown\n                label=\"Show if...\"\n                options={optionLblsValues}\n                setValue={(val) => {\n                  sete((prevState) => ({\n                    ...prevState,\n                    selectedCaseValue: val,\n                  }));\n                  newProductOptions.current[index].selectedCaseValue = val;\n                }}\n                value={e.selectedCaseValue}\n                style={{ marginBottom: 25 }}\n              />\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n};\n\nconst AddProduct = ({ route, navigation }) => {\n  const { existingProduct, existingProductIndex } = route.params\n    ? route.params\n    : { existingProduct: null, existingProductIndex: null };\n\n  const catalog = userStoreState.use();\n  const [newProduct, setnewProduct] = useState(\n    existingProduct\n      ? existingProduct\n      : {\n          name: null,\n          price: null,\n          catagory: null,\n          options: [],\n          description: null,\n        }\n  );\n  const newProductOptions = useRef(\n    existingProduct ? existingProduct.options : []\n  );\n  const [indexOn, setindexOn] = useState(0);\n\n  // useEffect(() => {\n  //   //setTimeout(() => {\n  //   window.scrollTo({\n  //     top: currentY,\n  //     behavior: \"instant\",\n  //   });\n  //   //}, 500);\n  // }, [currentY]);\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(\n        [...catalog.categories],\n        [...catalog.products, copyProductData]\n      );\n      navigation.goBack();\n    } else if (existingProduct) {\n      let copy = structuredClone(catalog.products);\n      const newProductUseRef = {\n        ...newProduct,\n        options: newProductOptions.current,\n      };\n      copy[existingProductIndex] = newProductUseRef;\n      updateData([...catalog.categories], copy);\n      navigation.goBack();\n    } else {\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\n      navigation.goBack();\n    }\n  }\n\n  const OptionsAddingSection = () => {\n    return (\n      <View>\n        <FlatList\n          // onLayout={() =>\n          //   window.scrollTo({\n          //     top: currentY,\n          //     behavior: \"instant\",\n          //   })\n          // }\n          getItemLayout={(data, index) => ({\n            length: index === indexOn ? 400 * data.optionsList?.length : 100,\n            offset: 400 * index,\n            index,\n          })}\n          data={newProduct.options}\n          keyExtractor={(item) => item.id?.toString()}\n          renderItem={({ item, index }) => (\n            <OptionView\n              item={item}\n              index={index}\n              newProduct={newProduct}\n              setnewProduct={setnewProduct}\n              newProductOptions={newProductOptions}\n              indexOn={indexOn}\n              setindexOn={setindexOn}\n            />\n          )}\n        />\n        <Button\n          title=\"Add Product Option\"\n          onPress={() => {\n            newProductOptions.current.push({\n              label: null,\n              optionsList: [],\n              selectedCaseKey: null,\n              selectedCaseValue: null,\n              numOfSelectable: null,\n              id: Math.random().toString(36).substr(2, 9),\n              optionType: null,\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(newProductOptions.current.length - 1);\n          }}\n          style={{ marginBottom: 25 }}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView\n      style={{ width: \"100%\", height: \"100%\", flex: 1 }}\n      contentContainerStyle={{\n        width: \"93%\",\n        alignSelf: \"center\",\n        marginTop: 25,\n      }}\n    >\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            padding: 20,\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <TouchableOpacity onPress={() => navigation.goBack()}>\n            <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n              X\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              let copy = structuredClone(newProduct);\n              copy.name = copy.name + \" Copy\";\n              handleDataUpdate(copy);\n            }}\n          >\n            <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n              Copy\n            </Text>\n          </TouchableOpacity>\n          <Text style={{ marginBottom: 25 }}>AddProduct</Text>\n        </View>\n        <TextInput\n          placeholder=\"Enter Product Name\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, name: val }));\n          }}\n          value={newProduct.name}\n          style={{ marginBottom: 25 }}\n        />\n        <TextInput\n          placeholder=\"Enter any other items that come with this\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, description: val }));\n          }}\n          style={{ marginBottom: 25 }}\n          value={newProduct.description}\n        />\n        <TextInput\n          placeholder=\"Enter Product Price\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, price: val }));\n          }}\n          style={{ marginBottom: 25 }}\n          value={newProduct.price}\n        />\n        <DropDown\n          label=\"Choose catagory\"\n          options={catalog.categories}\n          setValue={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, catagory: val }));\n          }}\n          value={newProduct.catagory}\n          style={{ marginBottom: 25 }}\n        />\n        <OptionsAddingSection />\n        <Button\n          title=\"Add/Save Product\"\n          onPress={() => {\n            handleDataUpdate();\n          }}\n          style={{\n            marginBottom: 25,\n            marginTop: 25,\n            backgroundColor: \"lightgreen\",\n          }}\n        />\n      </>\n    </ScrollView>\n  );\n};\n\nexport default AddProduct;\n\nconst styles = StyleSheet.create({});\n","import { View, Text, ScrollView } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport { setWoocommerceState, woocommerceState } from \"state/state\";\nimport { updateWooCredentials } from \"state/firebaseFunctions\";\n\nconst WoocommerceSettings = () => {\n  const wooCredentials = woocommerceState.use();\n  const [apiUrl, setapiUrl] = useState(wooCredentials.apiUrl);\n  const [ck, setck] = useState(wooCredentials.ck);\n  const [cs, setcs] = useState(wooCredentials.cs);\n  const [useWoocommerce, setuseWoocommerce] = useState(\n    wooCredentials.useWoocommerce\n  );\n\n  const handleDataUpdate = () => {\n    if (apiUrl !== null && ck !== null && cs !== null) {\n      setWoocommerceState({\n        apiUrl: apiUrl,\n        ck: ck,\n        cs: cs,\n        useWoocommerce: useWoocommerce,\n      });\n      updateWooCredentials({\n        apiUrl: apiUrl,\n        ck: ck,\n        cs: cs,\n        useWoocommerce: useWoocommerce,\n      });\n    }\n  };\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      <TextInput\n        placeholder=\"Enter Woocommerce 'API Url'\"\n        onChangeText={(val) => setapiUrl(val)}\n        style={{ margin: 10 }}\n        value={apiUrl}\n      />\n      <TextInput\n        placeholder=\"Enter Woocommerce 'CK'\"\n        onChangeText={(val) => setck(val)}\n        style={{ margin: 10 }}\n        value={ck}\n      />\n      <TextInput\n        placeholder=\"Enter Woocommerce 'CS'\"\n        onChangeText={(val) => setcs(val)}\n        style={{ margin: 10 }}\n        value={cs}\n      />\n      <Switch\n        value={useWoocommerce}\n        onValueChange={(val) => setuseWoocommerce(val)}\n      />\n      <Button title=\"Save\" onPress={handleDataUpdate} style={{ margin: 10 }} />\n      {/* <Spinner isModalVisible={isModalVisible} /> */}\n    </ScrollView>\n  );\n};\n\nexport default WoocommerceSettings;\n","import { View, Text, ScrollView } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport { setStoreDetailState, storeDetailState } from \"state/state\";\nimport { updateStoreDetails } from \"state/firebaseFunctions\";\nimport DropDown from \"./DropDown\";\n\nconst EditStoreDetails = () => {\n  const storeDetails = storeDetailState.use();\n  const [name, setname] = useState(storeDetails.name);\n  const [phoneNumber, setphoneNumber] = useState(storeDetails.phoneNumber);\n  const [address, setaddress] = useState(storeDetails.address);\n  const [website, setwebsite] = useState(storeDetails.website);\n  const [deliveryPrice, setdeliveryPrice] = useState(\n    storeDetails.deliveryPrice\n  );\n  const [com, setcom] = useState(storeDetails.comSelected);\n\n  const handleDataUpdate = () => {\n    if (name !== null && phoneNumber !== null && address !== null) {\n      setStoreDetailState({\n        name: name,\n        phoneNumber: phoneNumber,\n        address: address,\n        website: website,\n        deliveryPrice: deliveryPrice,\n        comSelected: com,\n      });\n      updateStoreDetails({\n        name: name,\n        phoneNumber: phoneNumber,\n        address: address,\n        website: website,\n        deliveryPrice: deliveryPrice,\n        comSelected: com,\n      });\n    }\n  };\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      <TextInput\n        placeholder=\"Enter Store Name\"\n        onChangeText={(val) => setname(val)}\n        style={{ margin: 10 }}\n        value={name}\n      />\n      <TextInput\n        placeholder=\"Enter Store Website Url\"\n        onChangeText={(val) => setwebsite(val)}\n        style={{ margin: 10 }}\n        value={website}\n      />\n      <TextInput\n        placeholder=\"Enter Store Phone Number\"\n        onChangeText={(val) => setphoneNumber(val)}\n        style={{ margin: 10 }}\n        value={phoneNumber}\n      />\n      <TextInput\n        placeholder=\"Enter Store Address\"\n        onChangeText={(val) => setaddress(val)}\n        style={{ margin: 10 }}\n        value={address}\n      />\n      <TextInput\n        placeholder=\"Enter Delivery Price\"\n        onChangeText={(val) => setdeliveryPrice(val)}\n        style={{ margin: 10 }}\n        value={deliveryPrice}\n      />\n      <DropDown\n        options={[\"COM1\", \"COM2\", \"COM3\", \"COM4\", \"COM5\", \"COM6\", \"What Cum?\"]}\n        label=\"Pick Printer COM\"\n        value={com}\n        setValue={setcom}\n      />\n      <Button title=\"Save\" onPress={handleDataUpdate} style={{ margin: 10 }} />\n      {/* <Spinner isModalVisible={isModalVisible} /> */}\n    </ScrollView>\n  );\n};\n\nexport default EditStoreDetails;\n","import { Modal, StyleSheet, Text, View } from \"react-native\";\nimport React from \"react\";\n\nconst Spinner = ({ isModalVisible }) => {\n  return (\n    <Modal visible={isModalVisible} transparent={true}>\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flex: 1,\n          backgroundColor: \"rgba(52, 52, 52, 0.8)\",\n        }}\n      >\n        <style>\n          {`.loader {\n  border: 16px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 16px solid #3498db;\n  width: 120px;\n  height: 120px;\n  -webkit-animation: spin 2s linear infinite; /* Safari */\n  animation: spin 2s linear infinite;\n}\n\n/* Safari */\n@-webkit-keyframes spin {\n  0% { -webkit-transform: rotate(0deg); }\n  100% { -webkit-transform: rotate(360deg); }\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}`}\n        </style>\n\n        <div className=\"loader\"></div>\n      </View>\n    </Modal>\n  );\n};\n\nexport default Spinner;\n\nconst styles = StyleSheet.create({});\n","import {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport Spinner from \"./Spinner\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst AddCategory = () => {\n  const catalog = userStoreState.use();\n  const [categoryName, setcategoryName] = useState();\n  const [isModalVisible, setisModalVisible] = useState(false);\n\n  function handleDataUpdate() {\n    updateData([...catalog.categories, categoryName], catalog.products);\n    setisModalVisible(true);\n  }\n\n  function handleRemoveCategory(index) {\n    const localCatalog = structuredClone(catalog);\n    localCatalog.categories.splice(index, 1);\n\n    updateData(localCatalog.categories, localCatalog.products);\n    setisModalVisible(true);\n  }\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      {catalog.categories.map((e, index) => {\n        return (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              padding: 15,\n              margin: 10,\n              backgroundColor: \"lightgrey\",\n            }}\n          >\n            <Text style={{ fontSize: 17 }}>{e}</Text>\n            <TouchableOpacity\n              onPress={() => handleRemoveCategory(index)}\n              style={{\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"red\", fontWeight: \"600\" }}>Remove X</Text>\n            </TouchableOpacity>\n          </View>\n        );\n      })}\n      <TextInput\n        placeholder=\"Enter New Category\"\n        onChangeText={(val) => setcategoryName(val)}\n        style={{ margin: 10 }}\n      />\n      <Button\n        title=\"Add New Category\"\n        onPress={handleDataUpdate}\n        style={{ margin: 10 }}\n      />\n      <Spinner isModalVisible={isModalVisible} />\n    </ScrollView>\n  );\n};\n\nexport default AddCategory;\n\nconst styles = StyleSheet.create({});\n","import { ScrollView, StyleSheet, View } from \"react-native\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { Button, Text } from \"@react-native-material/core\";\nimport { storeDetailState, transListState } from \"state/state\";\n\nconst ViewTransactions = () => {\n  const local = transListState.use();\n  const [transList, settransList] = useState([]);\n  const today = new Date();\n  const [todaysDetails, setTodaysDetails] = useState({\n    todaysReceiptValue: 0,\n    todaysReceipts: 0,\n  });\n  const storeDetails = storeDetailState.use();\n\n  useEffect(() => {\n    if (local?.length > 0) {\n      local\n        .sort(function (a, b) {\n          if (a.date && b.date) {\n            return a.date.seconds - b.date.seconds;\n          } else if (a.date && b.date_created) {\n            const bDate = new Date(b.date_created).getTime() / 1000;\n            return a.date.seconds - bDate;\n          } else if (a.date_created && b.date) {\n            const aDate = new Date(a.date_created).getTime() / 1000;\n            return aDate - b.date.seconds;\n          } else {\n            const aDate = new Date(a.date_created).getTime() / 1000;\n            const bDate = new Date(b.date_created).getTime() / 1000;\n            return aDate - bDate;\n          }\n        })\n        .reverse();\n      settransList(local);\n      const todaysReceiptValue = local.reduce((accumulator, current) => {\n        let date;\n        if (current.date) {\n          date = new Date(current.date.seconds * 1000);\n        } else {\n          date = new Date(current.date_created);\n          // console.log(\"seconds is: \", date.getTime() / 1000);\n        }\n        if (date.toLocaleDateString() === today.toLocaleDateString()) {\n          return accumulator + parseFloat(current.total);\n        } else {\n          return accumulator;\n        }\n      }, 0);\n      const todaysReceipts = local.reduce((accumulator, current) => {\n        let date;\n        if (current.date) {\n          date = new Date(current.date.seconds * 1000);\n        } else {\n          date = new Date(current.date_created);\n        }\n\n        if (date.toLocaleDateString() === today.toLocaleDateString()) {\n          return accumulator + 1;\n        } else {\n          return accumulator;\n        }\n      }, 0);\n      setTodaysDetails({\n        todaysReceiptValue: todaysReceiptValue.toFixed(2),\n        todaysReceipts: todaysReceipts,\n      });\n    }\n  }, [local]);\n\n  const PrintTodaysTotal = () => {\n    let data = [\n      \"\\x1B\" + \"\\x40\", // init\n      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n      storeDetails.name,\n      \"\\x0A\",\n      storeDetails.address + \"\\x0A\",\n      storeDetails.website + \"\\x0A\", // text and line break\n      storeDetails.phoneNumber + \"\\x0A\", // text and line break\n      today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      \"\\x0A\" + \"\\x0A\",\n      \"Number Of Receipts: \" + todaysDetails.todaysReceipts + \"\\x0A\" + \"\\x0A\",\n      \"Sub-Total: \" +\n        \"$\" +\n        (todaysDetails.todaysReceiptValue / 1.13).toFixed(2) +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"Tax: \" +\n        \"$\" +\n        ((todaysDetails.todaysReceiptValue / 1.13) * 0.13).toFixed(2) +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"Total Including (13% Tax): \" +\n        \"$\" +\n        todaysDetails.todaysReceiptValue +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"------------------------------------------\" + \"\\x0A\",\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x1D\" + \"\\x56\" + \"\\x30\",\n    ];\n\n    fetch(\"http://localhost:8080/print\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        printData: data,\n        comSelected: storeDetails.comSelected,\n      }),\n    })\n      .then((response) => response.json())\n      .then((respData) => {\n        console.log(respData);\n      })\n      .catch((e) => alert(\"Error with printer\"));\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ textAlign: \"center\", margin: 25 }}>\n        List Of Transactions\n      </Text>\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Price: {todaysDetails.todaysReceiptValue}\n        </Text>\n        <Button\n          style={{ height: 40, alignItems: \"center\", justifyContent: \"center\" }}\n          title=\"Print Todays Receipts\"\n          onPress={PrintTodaysTotal}\n        />\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Receipts: {todaysDetails.todaysReceipts}\n        </Text>\n      </View>\n      <View style={styles.contentContainer}>\n        {transList ? (\n          transList?.map((element, index) => {\n            // if (date.toLocaleDateString() === today.toLocaleDateString()) {\n            //   setTodaysDetails((prevState) => prevState + 1);\n            // }\n\n            const date = element.date\n              ? new Date(element.date.seconds * 1000)\n              : element.date_created\n              ? new Date(element.date_created)\n              : null;\n\n            return (\n              <View\n                style={{ backgroundColor: \"grey\", padding: 30, margin: 10 }}\n                key={index}\n              >\n                <Text>{date.toLocaleString()}</Text>\n                {element.cart?.map((cartItem, index) => (\n                  <View style={{ marginBottom: 20 }} key={index}>\n                    <Text>Name: {cartItem.name}</Text>\n                    <Text>Quantity: {cartItem.quantity}</Text>\n                    <Text>Price: {cartItem.price}</Text>\n                    {cartItem.options &&\n                      cartItem.options?.map((option) => <Text>{option}</Text>)}\n                  </View>\n                ))}\n                {element.line_items?.map((cartItem, index) => (\n                  <View style={{ marginBottom: 20 }} key={index}>\n                    <Text>Name: {cartItem.name}</Text>\n                    <Text>Quantity: {cartItem.quantity}</Text>\n                    <Text>Price: {cartItem.price}</Text>\n                    {cartItem.meta_data?.map((meta, index) => {\n                      if (index === cartItem.meta_data.length - 1) return;\n                      return <Text>{`${meta.key} : ${meta.value}`}</Text>;\n                    })}\n                  </View>\n                ))}\n                <Button\n                  title=\"Print\"\n                  onPress={() => {\n                    if (element.date) {\n                      let total = 0;\n\n                      let data = [\n                        \"\\x1B\" + \"\\x40\", // init\n                        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                        storeDetails.name,\n                        \"\\x0A\",\n                        storeDetails.address + \"\\x0A\",\n                        storeDetails.website + \"\\x0A\", // text and line break\n                        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                        date.toLocaleDateString() +\n                          \" \" +\n                          date.toLocaleTimeString() +\n                          \"\\x0A\",\n                        \"\\x0A\",\n                        `Transaction # ${element.transNum}` + \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n                      ];\n\n                      element.cart?.map((cartItem) => {\n                        total += parseFloat(cartItem.price);\n                        data.push(`Name: ${cartItem.name}`);\n                        data.push(\"\\x0A\");\n                        data.push(`Price: $${cartItem.price}`);\n\n                        if (cartItem.options) {\n                          data.push(\"\\x0A\");\n                          cartItem.options?.map((option) => {\n                            data.push(option);\n                            data.push(\"\\x0A\");\n                          });\n                        }\n                        data.push(\"\\x0A\" + \"\\x0A\");\n                      });\n\n                      total = total * 1.13;\n                      total = total.toFixed(2);\n\n                      //push ending\n                      data.push(\n                        \"\\x0A\",\n                        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                        \"\\x0A\" + \"\\x0A\",\n                        \"Total Including (13% Tax): \" +\n                          \"$\" +\n                          total +\n                          \"\\x0A\" +\n                          \"\\x0A\",\n                        \"------------------------------------------\" + \"\\x0A\",\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n                        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n                      );\n\n                      fetch(\"http://localhost:8080/print\", {\n                        method: \"POST\",\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                          printData: data,\n                          comSelected: storeDetails.comSelected,\n                        }),\n                      })\n                        .then((response) => response.json())\n                        .then((respData) => {\n                          console.log(respData);\n                        })\n                        .catch((e) => alert(\"Error with printer\"));\n                    } else {\n                      const printData = [];\n\n                      printData.push(\n                        \"\\x1B\" + \"\\x40\", // init\n                        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                        storeDetails.name,\n                        \"\\x0A\",\n                        storeDetails.address + \"\\x0A\",\n                        storeDetails.website + \"\\x0A\", // text and line break\n                        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                        element.date_created + \"\\x0A\",\n                        \"\\x0A\",\n                        \"Online Order\" + \"\\x0A\", // text and line break\n                        `Transaction # ${element.number}` + \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n                      );\n\n                      element.line_items?.map((cartItem) => {\n                        printData.push(\"\\x0A\");\n                        printData.push(`Name: ${cartItem.name}`);\n                        printData.push(\"\\x0A\");\n                        printData.push(`Quantity: ${cartItem.quantity}`);\n                        printData.push(\"\\x0A\");\n                        printData.push(`Price: $${cartItem.price}`);\n                        printData.push(\"\\x0A\");\n\n                        if (cartItem.meta_data) {\n                          cartItem.meta_data?.map((meta, index) => {\n                            if (index === 0) {\n                              printData.push(`${meta.key} : ${meta.value}`);\n                              if (\n                                cartItem.meta_data[index + 1].key !== meta.key\n                              ) {\n                                printData.push(\"\\x0A\");\n                              }\n                            } else {\n                              if (index !== cartItem.meta_data.length - 1) {\n                                if (\n                                  cartItem.meta_data[index - 1].key === meta.key\n                                ) {\n                                  printData.push(` , ${meta.value}`);\n                                } else {\n                                  printData.push(`${meta.key} : ${meta.value}`);\n                                }\n\n                                if (\n                                  cartItem.meta_data[index + 1].key !== meta.key\n                                ) {\n                                  printData.push(\"\\x0A\");\n                                }\n                              }\n                            }\n                          });\n                        } else {\n                          printData.push(\"\\x0A\" + \"\\x0A\");\n                        }\n                      });\n\n                      printData.push(\"\\x0A\");\n                      printData.push(\"\\x0A\");\n                      printData.push(`Customer Details:`);\n                      printData.push(\"\\x0A\");\n                      printData.push(`Address: ${element.shipping.address_1}`);\n                      printData.push(\"\\x0A\");\n                      printData.push(`City: ${element.shipping.city}`);\n                      printData.push(\"\\x0A\");\n                      printData.push(\n                        `Zip/Postal Code: ${element.shipping.postcode}`\n                      );\n                      printData.push(\"\\x0A\");\n                      printData.push(\n                        `Province/State: ${element.shipping.state}`\n                      );\n                      printData.push(\"\\x0A\");\n                      printData.push(\n                        `Name: ${element.shipping.first_name} ${element.shipping.last_name}`\n                      );\n                      printData.push(\"\\x0A\");\n                      element.shipping_lines.map((line) =>\n                        printData.push(`Shipping Method: ${line.method_title}`)\n                      );\n                      printData.push(\"\\x0A\");\n                      printData.push(\"\\x0A\");\n\n                      printData.push(\n                        \"\\x0A\",\n                        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                        \"\\x0A\" + \"\\x0A\",\n                        \"Payment Method: \" +\n                          element.payment_method_title +\n                          \"\\x0A\" +\n                          \"\\x0A\",\n                        \"Total Including (13% Tax): \" +\n                          \"$\" +\n                          (\n                            parseFloat(element.total) +\n                            parseFloat(element.total_tax)\n                          ).toFixed(2) +\n                          \"\\x0A\" +\n                          \"\\x0A\",\n                        \"------------------------------------------\" + \"\\x0A\",\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\" // line break\n                      );\n\n                      printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n                      fetch(\"http://localhost:8080/print\", {\n                        method: \"POST\",\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                          printData: printData,\n                          comSelected: storeDetails.comSelected,\n                        }),\n                      })\n                        .then((response) => response.json())\n                        .then((respData) => {\n                          console.log(respData);\n                        })\n                        .catch((e) => alert(\"Error with printer\"));\n                    }\n                  }}\n                />\n              </View>\n            );\n          })\n        ) : (\n          <Text>No receipts yet</Text>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default ViewTransactions;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\",\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n});\n","import { Button } from \"@react-native-material/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { TouchableOpacity, View, Text } from \"react-native\";\nimport { auth } from \"state/firebaseConfig\";\nimport { sectionState, setsectionState, userStoreState } from \"state/state\";\n// import { useNavigation } from \"react-navigation-hooks\";\n\nconst CustomHeader = ({ navigation, route, options, back }) => {\n  const [settings, setSettings] = useState(false);\n  const catalog = userStoreState.use();\n  const section = sectionState.use();\n\n  useEffect(() => {\n    //       const prevScreen = localStorage.getItem(\"localScreen\");\n    const settingsOn = localStorage.getItem(\"settingsOn\");\n    setSettings(settingsOn);\n    //     if (\n    //       section === \"EditCategories\" ||\n    //       section === \"EditProductList\" ||\n    //       section === \"EditWoocommerce\" ||\n    //       section === \"StoreDetails\" ||\n    //       section === \"Transactions\"\n    //     ) {\n    //       navigation.navigate(section);\n    //       //setSettings(true);\n    //       setsectionState(prevScreen);\n    //     } else {\n    //       //setSettings(false);\n    //       setsectionState(prevScreen);\n    //       navigation.navigate(\"Home\");\n    //     }\n    //   }, [settings, section]);\n  }, []);\n\n  if (settings == true) {\n    //edit settings menu\n    return (\n      <View\n        style={{\n          width: \"100%\",\n          height: 120,\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-evenly\",\n          backgroundColor: \"red\",\n        }}\n      >\n        <Button\n          titleStyle={\n            section === \"EditCategories\"\n              ? { color: \"white\", fontWeight: \"700\" }\n              : { color: \"black\", fontWeight: \"700\" }\n          }\n          style={\n            section === \"EditCategories\"\n              ? { backgroundColor: \"blue\" }\n              : { backgroundColor: \"white\" }\n          }\n          onPress={() => {\n            localStorage.setItem(\"localScreen\", \"EditCategories\");\n            localStorage.setItem(\"settingsOn\", true);\n            navigation.navigate(\"EditCategories\");\n            setsectionState(\"EditCategories\");\n          }}\n          title=\"Add Category\"\n        />\n        <Button\n          titleStyle={\n            section === \"EditProductList\"\n              ? { color: \"white\", fontWeight: \"700\" }\n              : { color: \"black\", fontWeight: \"700\" }\n          }\n          style={\n            section === \"EditProductList\"\n              ? { backgroundColor: \"blue\" }\n              : { backgroundColor: \"white\" }\n          }\n          onPress={() => {\n            localStorage.setItem(\"localScreen\", \"EditProductList\");\n            navigation.navigate(\"EditProductList\");\n            localStorage.setItem(\"settingsOn\", true);\n            setsectionState(\"EditProductList\");\n          }}\n          title=\"Add Product\"\n        />\n        <Button\n          titleStyle={\n            section === \"EditWoocommerce\"\n              ? { color: \"white\", fontWeight: \"700\" }\n              : { color: \"black\", fontWeight: \"700\" }\n          }\n          style={\n            section === \"EditWoocommerce\"\n              ? { backgroundColor: \"blue\" }\n              : { backgroundColor: \"white\" }\n          }\n          onPress={() => {\n            localStorage.setItem(\"localScreen\", \"EditWoocommerce\");\n            navigation.navigate(\"EditWoocommerce\");\n            localStorage.setItem(\"settingsOn\", true);\n            setsectionState(\"EditWoocommerce\");\n          }}\n          title=\"Woocommerce\"\n        />\n        <Button\n          titleStyle={\n            section === \"StoreDetails\"\n              ? { color: \"white\", fontWeight: \"700\" }\n              : { color: \"black\", fontWeight: \"700\" }\n          }\n          style={\n            section === \"StoreDetails\"\n              ? { backgroundColor: \"blue\" }\n              : { backgroundColor: \"white\" }\n          }\n          onPress={() => {\n            localStorage.setItem(\"localScreen\", \"StoreDetails\");\n            navigation.navigate(\"StoreDetails\");\n            localStorage.setItem(\"settingsOn\", true);\n            setsectionState(\"StoreDetails\");\n          }}\n          title=\"Store Details\"\n        />\n        <Button\n          titleStyle={\n            section === \"Transactions\"\n              ? { color: \"white\", fontWeight: \"700\" }\n              : { color: \"black\", fontWeight: \"700\" }\n          }\n          style={\n            section === \"Transactions\"\n              ? { backgroundColor: \"blue\" }\n              : { backgroundColor: \"white\" }\n          }\n          onPress={() => {\n            localStorage.setItem(\"localScreen\", \"Transactions\");\n            navigation.navigate(\"Transactions\");\n            localStorage.setItem(\"settingsOn\", true);\n            setsectionState(\"Transactions\");\n          }}\n          title=\"Transaction\"\n        />\n        <Button\n          titleStyle={{ color: \"black\", fontWeight: \"700\" }}\n          style={{ backgroundColor: \"white\" }}\n          onPress={() => {\n            localStorage.removeItem(\"localScreen\");\n            auth.signOut();\n          }}\n          title=\"Logout\"\n        />\n        <Button\n          titleStyle={{ color: \"black\", fontWeight: \"700\" }}\n          style={{ backgroundColor: \"white\" }}\n          onPress={() => {\n            localStorage.removeItem(\"localScreen\");\n            setsectionState();\n            setSettings(false);\n            localStorage.setItem(\"settingsOn\", false);\n          }}\n          title=\"X\"\n        />\n      </View>\n    );\n  }\n  return (\n    <View\n      style={{\n        width: \"100%\",\n        height: 120,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-evenly\",\n        backgroundColor: \"red\",\n      }}\n    >\n      {catalog.categories?.map((category, index) => {\n        if (!section && index === 0) {\n          return (\n            <Button\n              key={index}\n              titleStyle={{ color: \"white\", fontWeight: \"700\" }}\n              style={{ backgroundColor: \"blue\" }}\n              onPress={() => {\n                setsectionState(category);\n              }}\n              title={category}\n            />\n          );\n        }\n\n        return (\n          <Button\n            key={index}\n            titleStyle={\n              section === category\n                ? { color: \"white\", fontWeight: \"700\" }\n                : { color: \"black\", fontWeight: \"700\" }\n            }\n            style={\n              section === category\n                ? { backgroundColor: \"blue\" }\n                : { backgroundColor: \"white\" }\n            }\n            onPress={() => {\n              setsectionState(category);\n              localStorage.setItem(\"localScreen\", category);\n            }}\n            title={category}\n          />\n        );\n      })}\n      <Button\n        titleStyle={{ color: \"black\", fontWeight: \"700\" }}\n        style={{ backgroundColor: \"white\" }}\n        onPress={() => setSettings(true)}\n        title=\"Settings\"\n      />\n    </View>\n  );\n};\n\nexport default CustomHeader;\n","import React, { useState } from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Home from \"screens/authed/HomeScreen\";\nimport Register from \"screens/non-authed/Register\";\nimport EditProductList from \"components/EditProductList\";\nimport AddProduct from \"components/TestAdd\";\nimport WoocommerceSettings from \"components/WoocommerceSettings\";\nimport EditStoreDetails from \"components/EditStoreDetails\";\nimport AddCategory from \"components/AddCategory\";\nimport ViewTransactions from \"screens/authed/ViewTransactions\";\nimport CustomHeader from \"components/CustomHeader\";\n\nconst Stack = createStackNavigator();\n\nexport default function TmpAuthStack() {\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        header: (props) => (\n          <CustomHeader {...props} />\n        ),\n        headerMode: \"screen\",\n      }}\n    >\n      <Stack.Screen name=\"Home\" component={Home} />\n      <Stack.Screen name=\"EditCategories\" component={AddCategory} />\n      <Stack.Screen name=\"EditProductList\" component={EditProductList} />\n      <Stack.Screen\n        name=\"AddProduct\"\n        component={AddProduct}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen name=\"EditWoocommerce\" component={WoocommerceSettings} />\n      <Stack.Screen name=\"StoreDetails\" component={EditStoreDetails} />\n      <Stack.Screen name=\"Transactions\" component={ViewTransactions} />\n    </Stack.Navigator>\n  );\n}\n","import React from \"react\";\nimport TabNav from \"./TabNav\";\nimport TmpAuthStack from \"./TmpAuthStack\";\n\nconst MainAuthed = () => {\n  // return <TabNav />;\n  return <TmpAuthStack />;\n};\n\nexport default MainAuthed;\n","import { Image, StyleSheet, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport {\n  TextInput,\n  IconButton,\n  Button,\n  Text,\n} from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { signIn } from \"state/firebaseFunctions\";\n\nconst Login = ({ navigation }) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const attemptSignIn = () => {\n    if (email && password) {\n     signIn(email, password)\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaView style={styles.safeareaContainer}>\n        <Image\n          source={require(\"assets/pathblazer-logo.png\")}\n          style={styles.logo}\n        />\n        <View style={styles.innerContainer}>\n          <TextInput\n            label=\"Email\"\n            variant=\"outlined\"\n            style={{ width: \"100%\", marginBottom: 10 }}\n            value={email}\n            onChangeText={(val) => setEmail(val)}\n            autoCorrect={false}\n            textContentType={\"emailAddress\"}\n          />\n          <TextInput\n            label=\"Password\"\n            variant=\"outlined\"\n            trailing={(props) => (\n              <IconButton\n                onPress={() => setShowPassword((prevState) => !prevState)}\n                icon={(props) => <Icon name=\"eye\" {...props} />}\n                {...props}\n              />\n            )}\n            value={password}\n            onChangeText={(val) => setPassword(val)}\n            secureTextEntry={!showPassword}\n            style={{ width: \"100%\" }}\n          />\n        </View>\n        <View style={styles.innerContainer}>\n          <Button\n            title=\"Login\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            style={{ marginBottom: 10 }}\n            onPress={attemptSignIn}\n          />\n          <Text variant=\"subtitle1\" style={{ marginBottom: 10 }}>\n            Or\n          </Text>\n          <Button\n            title=\"Register\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"grey\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"Register\")}\n          />\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nexport default Login;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  safeareaContainer: {\n    flex: 1,\n    height: \"60%\",\n    width: \"80%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 250,\n    resizeMode: \"contain\",\n  },\n  innerContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","import { Image, StyleSheet, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport {\n  TextInput,\n  IconButton,\n  Button,\n  Text,\n} from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { signUp } from \"state/firebaseFunctions\";\n\nconst Register = ({ navigation }) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const attemptSignUp = () => {\n    if (email && password) {\n      signUp(email, password);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaView style={styles.safeareaContainer}>\n        <Image\n          source={require(\"assets/pathblazer-logo.png\")}\n          style={styles.logo}\n        />\n        <View style={styles.innerContainer}>\n          <TextInput\n            label=\"Email\"\n            variant=\"outlined\"\n            style={{ width: \"100%\", marginBottom: 10 }}\n            value={email}\n            onChangeText={(val) => setEmail(val)}\n            autoCorrect={false}\n            textContentType={\"emailAddress\"}\n          />\n          <TextInput\n            label=\"Password\"\n            variant=\"outlined\"\n            trailing={(props) => (\n              <IconButton\n                onPress={() => setShowPassword((prevState) => !prevState)}\n                icon={(props) => <Icon name=\"eye\" {...props} />}\n                {...props}\n              />\n            )}\n            value={password}\n            onChangeText={(val) => setPassword(val)}\n            secureTextEntry={!showPassword}\n            style={{ width: \"100%\" }}\n          />\n        </View>\n        <View style={styles.innerContainer}>\n          <Button\n            title=\"Register\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            style={{ marginBottom: 10 }}\n            onPress={attemptSignUp}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Text variant=\"subtitle1\" style={{ marginBottom: 10 }}>\n              Or\n            </Text>\n            <Text\n              variant=\"subtitle1\"\n              style={{ marginBottom: 10, marginLeft: 5, color: \"blue\" }}\n              onPress={() => navigation.goBack()}\n            >\n              Go Back\n            </Text>\n          </View>\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nexport default Register;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  safeareaContainer: {\n    flex: 1,\n    height: \"60%\",\n    width: \"80%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 250,\n    resizeMode: \"contain\",\n  },\n  innerContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Login from \"screens/non-authed/Login\";\nimport Register from \"screens/non-authed/Register\";\n\nconst Stack = createStackNavigator();\n\nexport default function MainNonAuth() {\n  return (\n    <Stack.Navigator screenOptions={{headerShown: false}}>\n      <Stack.Screen name=\"Login\" component={Login} />\n      <Stack.Screen name=\"Register\" component={Register} />\n    </Stack.Navigator>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport MainAuthed from \"./authed/MainAuthed\";\nimport {\n  setStoreDetailState,\n  setTransListState,\n  setUserState,\n  setUserStoreState,\n  setWoocommerceState,\n  storeDetailState,\n  transListState,\n  userState,\n  woocommerceState,\n} from \"state/state\";\nimport MainNonAuth from \"./non-authed/MainNonAuth\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport Spinner from \"components/Spinner\";\nimport { updateTransList } from \"state/firebaseFunctions\";\n\nconst RouteManager = () => {\n  const userS = userState.use();\n  const wooCredentials = woocommerceState.use();\n  const transList = transListState.use();\n  const storeDetails = storeDetailState.use();\n  const [loading, setloading] = useState(true);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUserState(user);\n        db.collection(\"users\")\n          .doc(user.uid)\n          .get()\n          .then((doc) => {\n            setUserStoreState({\n              products: doc.data().products,\n              categories: doc.data().categories,\n            });\n            if (doc.data().transList) {\n              setTransListState(doc.data().transList);\n            }\n            if (doc.data().wooCredentials) {\n              setWoocommerceState(doc.data().wooCredentials);\n            }\n            if (doc.data().storeDetails) {\n              setStoreDetailState(doc.data().storeDetails);\n            }\n          });\n        setTimeout(() => {\n          setloading(false);\n        }, 1);\n      } else {\n        setUserState(null);\n        setUserStoreState({ products: null, categories: null });\n        setTimeout(() => {\n          setloading(false);\n        }, 1);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (userS) {\n      const unsub = db\n        .collection(\"users\")\n        .doc(userS.uid)\n        .onSnapshot((doc) => {\n          setloading(true);\n          setUserStoreState({\n            products: doc.data().products,\n            categories: doc.data().categories,\n          });\n          if (doc.data().transList) {\n            setTransListState(doc.data().transList);\n          }\n          if (doc.data().wooCredentials) {\n            setWoocommerceState(doc.data().wooCredentials);\n          }\n          if (doc.data().storeDetails) {\n            setStoreDetailState(doc.data().storeDetails);\n          }\n          setTimeout(() => {\n            setloading(false);\n          }, 1);\n        });\n      return () => unsub();\n    }\n  }, [userS]);\n\n  useEffect(() => {\n    if (wooCredentials.useWoocommerce === true) {\n      const interval = setInterval(() => {\n        const WooCommerceAPI = require(\"woocommerce-api\");\n\n        const WooCommerce = new WooCommerceAPI({\n          url: wooCredentials.apiUrl,\n          consumerKey: wooCredentials.ck,\n          consumerSecret: wooCredentials.cs,\n          wpAPI: true,\n          version: \"wc/v1\",\n        });\n\n        let page = 1;\n        let orders = [];\n\n        const getOrders = async () => {\n          const response = await WooCommerce.getAsync(\n            `orders?page=${page}&per_page=100`\n          );\n          const data = JSON.parse(response.body);\n          orders = [...orders, ...data];\n          if (data.length === 100) {\n            page++;\n            getOrders();\n          } else {\n            console.log(orders);\n          }\n        };\n\n        getOrders().then(() => {\n          const array1 = transList;\n          const array2 = orders;\n\n          const newArray = [];\n\n          array1.concat(array2).reduce(function (acc, curr) {\n            if (!acc.includes(curr.id)) {\n              acc.push(curr.id);\n              newArray.push(curr);\n            }\n            return acc;\n          }, []);\n\n          //console.log('checking')\n          // console.log('translist: ', transList.filter(e => e.id))\n          // console.log('res: ', orders)\n          // console.log('data: ', data)\n          console.log(\"new array: \", newArray);\n\n          if (newArray.length > transList.length) {\n            console.log(\"new item\");\n            const newItems = structuredClone(newArray).splice(\n              transList.length,\n              newArray.length - transList.length\n            );\n            console.log(\"NEW ITEMS \", newItems);\n            updateTransList(newArray);\n\n            if (newItems.length > 1) {\n              newItems.forEach((e) => {\n                const printData = [];\n\n                printData.push(\n                  \"\\x1B\\x40\", // init\n                  \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                  storeDetails.name,\n                  \"\\x0A\",\n                  storeDetails.address + \"\\x0A\",\n                  storeDetails.website + \"\\x0A\", // text and line break\n                  storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                  e.date_created + \"\\x0A\",\n                  \"\\x0A\",\n                  \"Online Order\" + \"\\x0A\", // text and line break\n                  `Transaction # ${e.number}` + \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n                );\n\n                e.line_items?.map((cartItem) => {\n                  printData.push(\"\\x0A\");\n                  printData.push(`Name: ${cartItem.name}`);\n                  printData.push(\"\\x0A\");\n                  printData.push(`Quantity: ${cartItem.quantity}`);\n                  printData.push(\"\\x0A\");\n                  printData.push(`Price: $${cartItem.price}`);\n                  printData.push(\"\\x0A\");\n\n                  if (cartItem.meta_data) {\n                    cartItem.meta_data?.map((meta, index) => {\n                      if (index === 0) {\n                        printData.push(`${meta.key} : ${meta.value}`);\n                        if (cartItem.meta_data[index + 1].key !== meta.key) {\n                          printData.push(\"\\x0A\");\n                        }\n                      } else {\n                        if (index !== cartItem.meta_data.length - 1) {\n                          if (cartItem.meta_data[index - 1].key === meta.key) {\n                            printData.push(` , ${meta.value}`);\n                          } else {\n                            printData.push(`${meta.key} : ${meta.value}`);\n                          }\n\n                          if (cartItem.meta_data[index + 1].key !== meta.key) {\n                            printData.push(\"\\x0A\");\n                          }\n                        }\n                      }\n                    });\n                  } else {\n                    printData.push(\"\\x0A\" + \"\\x0A\");\n                  }\n                });\n\n                printData.push(\"\\x0A\");\n                printData.push(\"\\x0A\");\n                printData.push(`Customer Details:`);\n                printData.push(\"\\x0A\");\n                printData.push(`Address: ${e.shipping.address_1}`);\n                printData.push(\"\\x0A\");\n                printData.push(`City: ${e.shipping.city}`);\n                printData.push(\"\\x0A\");\n                printData.push(`Zip/Postal Code: ${e.shipping.postcode}`);\n                printData.push(\"\\x0A\");\n                printData.push(`Province/State: ${e.shipping.state}`);\n                printData.push(\"\\x0A\");\n                printData.push(\n                  `Name: ${e.shipping.first_name} ${e.shipping.last_name}`\n                );\n                printData.push(\"\\x0A\");\n                e.shipping_lines.map((line) =>\n                  printData.push(`Shipping Method: ${line.method_title}`)\n                );\n                printData.push(\"\\x0A\");\n                printData.push(\"\\x0A\");\n\n                printData.push(\n                  \"\\x0A\",\n                  \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                  \"\\x0A\" + \"\\x0A\",\n                  \"Payment Method: \" + e.payment_method_title + \"\\x0A\" + \"\\x0A\",\n                  \"Total Including (13% Tax): \" +\n                    \"$\" +\n                    (parseFloat(e.total) + parseFloat(e.total_tax)).toFixed(2) +\n                    \"\\x0A\" +\n                    \"\\x0A\",\n                  \"------------------------------------------\" + \"\\x0A\",\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\" // line break\n                );\n\n                printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n                async () =>\n                  await fetch(\"http://localhost:8080/print\", {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify({\n                      printData: printData,\n                      comSelected: storeDetails.comSelected,\n                    }),\n                  })\n                    .then((response) => response.json())\n                    .then((respData) => {\n                      console.log(respData);\n                    })\n                    .catch((e) => console.log(\"Error with printer\"));\n              });\n            } else {\n              const e = newItems[0];\n              const printData = [];\n\n              printData.push(\n                \"\\x1B\" + \"\\x40\", // init\n                \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                storeDetails.name,\n                \"\\x0A\",\n                storeDetails.address + \"\\x0A\",\n                storeDetails.website + \"\\x0A\", // text and line break\n                storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                e.date_created + \"\\x0A\",\n                \"\\x0A\",\n                \"Online Order\" + \"\\x0A\", // text and line break\n                `Transaction # ${e.number}` + \"\\x0A\",\n                \"\\x0A\",\n                \"\\x0A\",\n                \"\\x0A\",\n                \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n              );\n\n              e.line_items?.map((cartItem) => {\n                printData.push(\"\\x0A\");\n                printData.push(`Name: ${cartItem.name}`);\n                printData.push(\"\\x0A\");\n                printData.push(`Quantity: ${cartItem.quantity}`);\n                printData.push(\"\\x0A\");\n                printData.push(`Price: $${cartItem.price}`);\n                printData.push(\"\\x0A\");\n\n                if (cartItem.meta_data) {\n                  cartItem.meta_data?.map((meta, index) => {\n                    if (index === 0) {\n                      printData.push(`${meta.key} : ${meta.value}`);\n                      if (cartItem.meta_data[index + 1].key !== meta.key) {\n                        printData.push(\"\\x0A\");\n                      }\n                    } else {\n                      if (index !== cartItem.meta_data.length - 1) {\n                        if (cartItem.meta_data[index - 1].key === meta.key) {\n                          printData.push(` , ${meta.value}`);\n                        } else {\n                          printData.push(`${meta.key} : ${meta.value}`);\n                        }\n\n                        if (cartItem.meta_data[index + 1].key !== meta.key) {\n                          printData.push(\"\\x0A\");\n                        }\n                      }\n                    }\n                  });\n                } else {\n                  printData.push(\"\\x0A\" + \"\\x0A\");\n                }\n              });\n\n              printData.push(\"\\x0A\");\n              printData.push(\"\\x0A\");\n              printData.push(`Customer Details:`);\n              printData.push(\"\\x0A\");\n              printData.push(`Address: ${e.shipping.address_1}`);\n              printData.push(\"\\x0A\");\n              printData.push(`City: ${e.shipping.city}`);\n              printData.push(\"\\x0A\");\n              printData.push(`Zip/Postal Code: ${e.shipping.postcode}`);\n              printData.push(\"\\x0A\");\n              printData.push(`Province/State: ${e.shipping.state}`);\n              printData.push(\"\\x0A\");\n              printData.push(\n                `Name: ${e.shipping.first_name} ${e.shipping.last_name}`\n              );\n              printData.push(\"\\x0A\");\n              e.shipping_lines.map((line) =>\n                printData.push(`Shipping Method: ${line.method_title}`)\n              );\n              printData.push(\"\\x0A\");\n              printData.push(\"\\x0A\");\n\n              printData.push(\n                \"\\x0A\",\n                \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                \"\\x0A\" + \"\\x0A\",\n                \"Payment Method: \" + e.payment_method_title + \"\\x0A\" + \"\\x0A\",\n                \"Total Including (13% Tax): \" +\n                  \"$\" +\n                  (parseFloat(e.total) + parseFloat(e.total_tax)).toFixed(2) +\n                  \"\\x0A\" +\n                  \"\\x0A\",\n                \"------------------------------------------\" + \"\\x0A\",\n                \"\\x0A\", // line break\n                \"\\x0A\", // line break\n                \"\\x0A\", // line break\n                \"\\x0A\", // line break\n                \"\\x0A\", // line break\n                \"\\x0A\" // line break\n              );\n\n              printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n              fetch(\"http://localhost:8080/print\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  printData: printData,\n                  comSelected: storeDetails.comSelected,\n                }),\n              })\n                .then((response) => response.json())\n                .then((respData) => {\n                  console.log(respData);\n                })\n                .catch((e) => alert(\"Error with printer\"));\n            }\n          }\n        });\n      }, 5000); // this will check for new orders every minute\n      return () => clearInterval(interval);\n    }\n  }, [wooCredentials, transList]);\n\n  return (\n    <NavigationContainer>\n      {loading ? (\n        <Spinner isModalVisible={true} />\n      ) : (\n        <>{userS ? <MainAuthed /> : <MainNonAuth />}</>\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default RouteManager;\n","import React from \"react\";\nimport RouteManager from \"navigation/RouteManager\";\nimport \"react-native-gesture-handler\";\n\n//Do this before syncing git config --global core.editor \"code --wait\"\n\nconst App = () => {\n  return <RouteManager />;\n};\n\n//hello love u\nexport default App;\n"],"sourceRoot":""}