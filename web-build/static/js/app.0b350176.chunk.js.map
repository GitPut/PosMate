{"version":3,"sources":["assets/dpos-logo.png","assets/random-img1.png","assets/dpos-logo-black.png","components/DisplayTest.tsx","components/useWindowDimensions.tsx","screens/authed/MenuScreen.tsx","state/state.ts","components/DeliveryScreen.tsx","components/CashScreen.tsx","components/ChangeScreen.tsx","state/firebaseConfig.ts","state/firebaseFunctions.ts","screens/authed/CartScreen.tsx","screens/authed/HomeScreen.tsx","components/EditProductList.tsx","components/DropDown.tsx","components/OptionView.tsx","components/TestAdd.tsx","components/WoocommerceSettings.tsx","components/EditStoreDetails.tsx","components/Spinner.tsx","components/AddCategory.tsx","screens/authed/ViewTransactions.tsx","components/ProductOptionDropDown.tsx","components/ProductListing.tsx","screens/authed/SettingsHome.tsx","components/CompletePaymentPhoneOrder.tsx","navigation/authed/TmpAuthStack.tsx","navigation/authed/MainAuthed.tsx","components/CustomButton.tsx","screens/non-authed/Login.tsx","screens/non-authed/Register.tsx","components/WebHomeHeader.tsx","screens/non-authed/WebHome.tsx","navigation/non-authed/MainNonAuth.tsx","navigation/RouteManager.tsx","App.tsx","assets/pathblazer-logo.png"],"names":["module","exports","DisplayTest","navigation","product","productIndex","title","name","onPress","navigate","contentContainerStyle","styles","touchable","style","StyleSheet","create","margin","width","height","backgroundColor","alignItems","justifyContent","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","Dimensions","get","MenuScreen","catalog","section","setsection","View","container","flexDirection","marginTop","alignSelf","categories","map","category","index","TouchableOpacity","Text","color","fontWeight","borderBottomWidth","fontSize","ScrollView","scrollview","wrapper","products","length","filter","e","catagory","props","flexWrap","paddingLeft","paddingRight","userState","entity","setUserState","val","set","cartState","setCartState","userStoreState","setUserStoreState","transListState","setTransListState","woocommerceState","apiUrl","ck","cs","useWoocommerce","setWoocommerceState","storeDetailState","address","phoneNumber","website","comSelected","deliveryPrice","setStoreDetailState","DeliveryScreen","setDeliveryModal","setOngoingDelivery","setName","setPhone","setAddress","phone","deliveryChecked","setDeliveryChecked","modalContainer","sizeRow","value","onValueChange","label","variant","input","onChangeText","autoCorrect","btn","marginBottom","halfRow","toppingsContainer","flex","padding","CashScreen","setCashModal","GetTrans","total","setChangeDue","cash","setCash","parseFloat","toFixed","ChangeScreen","setChangeModal","order","completeOrder","setcurrentOrder","storeDetails","use","data","transNum","customer","fetch","method","headers","body","JSON","stringify","printData","then","response","json","respData","console","log","catch","alert","openCash","element","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","updateData","Promise","resolve","reject","collection","doc","currentUser","uid","update","updateTransList","transList","CartScreen","deliveryModal","cashModal","changeModal","ongoingDelivery","changeDue","cart","cartSub","setCartSub","newVal","i","price","AddToList","payload","local","structuredClone","push","Print","today","Date","toLocaleDateString","toLocaleTimeString","cartItem","description","options","option","extraDetails","id","Math","random","toString","substr","date","completed","cartHeader","iconContainer","Ionicons","size","disabled","Foundation","contentContainer","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","headerTxt","splice","innerTxt","totalContainer","totalTxt","cashButton","btnTxt","cardButton","bigButton","Modal","visible","paddingTop","borderRadius","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","HomeScreen","Image","source","Logo","resizeMode","EditProductList","copy","existingProduct","existingProductIndex","localCatalog","handleRemoveCatagory","DropDown","setValue","show","setShow","trailing","prevState","OptionView","item","setnewProduct","newProduct","newProductOptions","indexOn","setindexOn","optionLblsValues","setoptionLblsValues","sete","optionsList","testMap","settestMap","optionLbls","el","selectedCaseKey","localE","optionLblsValuesLocal","current","selectedCaseValue","from","to","f","moveItem","placeholder","optionType","numOfSelectable","eInnerListStart","indexInnerList","eInnerList","clone","priceIncrease","marginLeft","marginRight","AddProduct","route","params","useRef","handleDataUpdate","copyProductData","goBack","newProductUseRef","FlatList","getItemLayout","offset","keyExtractor","renderItem","WoocommerceSettings","wooCredentials","setapiUrl","setck","setcs","setuseWoocommerce","updateWooCredentials","EditStoreDetails","setname","setphoneNumber","setaddress","setwebsite","setdeliveryPrice","com","setcom","updateStoreDetails","Spinner","isModalVisible","transparent","className","AddCategory","categoryName","setcategoryName","setisModalVisible","handleRemoveCategory","ViewTransactions","settransList","todaysReceiptValue","todaysReceipts","todaysDetails","setTodaysDetails","sort","a","b","seconds","date_created","bDate","getTime","reverse","reduce","accumulator","textAlign","toLocaleString","quantity","line_items","meta_data","meta","key","number","shipping","address_1","city","postcode","state","first_name","last_name","shipping_lines","line","method_title","payment_method_title","total_tax","paddingBottom","ProductOptionDropDown","listIndex","ProductListing","myObj","myObjProfile","setmyObjProfile","settotal","extraInput","setextraInput","DisplayOption","optionVal","setoptionVal","selectedList","checkOp","selected","selectedValueList","isSelected","selectedCaseList","op","opL","toLowerCase","newMyObjProfile","forEach","indexOfOl","selection","borderColor","borderWidth","parseInt","h2Black","newSubtract","indexOfItem","multiline","inputStyle","opsArray","opWVal","numberOfSelected","dropDown","h2White","SettingsHome","CompletePaymentPhoneOrder","currentOrder","cancelled","localChange","Stack","createStackNavigator","TmpAuthStack","Navigator","Screen","component","Home","headerShown","MainAuthed","CustomButton","containerStyle","titleStyle","Login","email","setEmail","password","setPassword","showPassword","setShowPassword","leftColorAccent","rightHalfContainer","loginContainer","textContentType","secureTextEntry","prev","signInWithEmailAndPassword","signIn","Img","img","Register","safeareaContainer","require","logo","innerContainer","icon","uppercase","createUserWithEmailAndPassword","userAuth","user","paid","signUp","WebHomeHeader","back","WebHome","main","MainNonAuth","screenOptions","header","headerMode","RouteManager","userS","loading","setloading","onAuthStateChanged","setTimeout","unsub","onSnapshot","interval","setInterval","WooCommerce","url","consumerKey","consumerSecret","wpAPI","version","page","orders","getOrders","getAsync","parse","array2","newArray","concat","acc","curr","includes","newItems","clearInterval","NavigationContainer","App"],"mappings":"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","file":"static/js/app.0b350176.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dpos-logo.58fecdd6.png\";","module.exports = __webpack_public_path__ + \"static/media/random-img1.a79e0878.png\";","module.exports = __webpack_public_path__ + \"static/media/dpos-logo-black.9464d239.png\";","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { addCartState } from \"state/state\";\nimport ProductOptionDropDown from \"./ProductOptionDropDown\";\n\nconst DisplayTest = ({ navigation, product, productIndex }) => {\n  return (\n    <Button\n      key={productIndex}\n      title={product.name}\n      onPress={() =>\n        navigation.navigate(\"ProductListing\", { product: product })\n      }\n      contentContainerStyle={styles.touchable}\n      style={styles.touchable}\n    />\n  );\n};\n\nexport default DisplayTest;\n\nconst styles = StyleSheet.create({\n  touchable: {\n    margin: 25,\n    width: 300,\n    height: 80,\n    backgroundColor: \"rgba(125,126,132,1)\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import {\n  Dimensions,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport DisplayTest from \"components/DisplayTest\";\nimport useWindowDimensions from \"components/useWindowDimensions\";\nconst wh = Dimensions.get(\"window\").height;\n\nconst MenuScreen = ({ navigation, catalog }) => {\n  const { height, width } = useWindowDimensions();\n  const [section, setsection] = useState(null);\n\n  const InnerBlock = () => {\n    if (catalog.products) {\n      if (catalog.products.length > 0) {\n        if (!section) {\n          return catalog.products\n            .filter((e) => e.catagory === catalog.categories[0])\n            .map((product, index) => (\n              <DisplayTest\n                product={product}\n                productIndex={index}\n                key={index}\n                navigation={navigation}\n              />\n            ));\n        } else {\n          return catalog.products\n            .filter((e) => e.catagory === section)\n            .map((product, index) => (\n              <DisplayTest\n                product={product}\n                productIndex={index}\n                key={index}\n                navigation={navigation}\n              />\n            ));\n        }\n      }\n    }\n  };\n\n  const SectionSelector = () => {\n    return (\n      <View\n        style={{\n          backgroundColor: \"#E6E6E6\",\n          width: \"90%\",\n          height: 50,\n          flexDirection: \"row\",\n          marginTop: 20,\n          justifyContent: \"space-evenly\",\n          alignItems: \"center\",\n          alignSelf: \"center\",\n        }}\n      >\n        {catalog.categories?.map((category, index) => {\n          return (\n            <TouchableOpacity\n              key={index}\n              onPress={() => {\n                setsection(category);\n              }}\n            >\n              <Text\n                style={[\n                  (section === null &&\n                    index === 0 && {\n                      color: \"black\",\n                      fontWeight: \"600\",\n                      borderBottomWidth: 1,\n                    }) ||\n                    (section === category && {\n                      color: \"black\",\n                      fontWeight: \"600\",\n                      borderBottomWidth: 1,\n                    }),\n                  { fontSize: 16 },\n                ]}\n              >\n                {category}\n              </Text>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles({ height, width }).container}>\n      <SectionSelector />\n      <ScrollView\n        style={styles({ height, width }).scrollview}\n        contentContainerStyle={styles({ height, width }).wrapper}\n      >\n        {/* <View style={styles.wrapper}> */}\n        <InnerBlock />\n        {/* </View> */}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default MenuScreen;\n\nconst styles = (props) =>\n  StyleSheet.create({\n    container: {\n      backgroundColor: \"white\",\n      //flex: 2,\n      height: props.height - 80,\n      width: props.width * 0.7,\n    },\n    wrapper: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      paddingLeft: 50,\n      paddingRight: 50,\n    },\n    scrollview: {\n      width: \"100%\",\n    },\n  });\n","import { entity } from \"simpler-state\";\n\nexport const userState = entity(null);\n\nexport const setUserState = (val) => {\n  userState.set(val);\n};\n\nexport const cartState = entity([]);\n\nexport const setCartState = (val) => {\n  cartState.set(val);\n};\n\nexport const addCartState = (val) => {\n  cartState.set((prevState) => [...prevState, val]);\n};\n\nexport const userStoreState = entity({ products: [], categories: [] });\n\nexport const setUserStoreState = (val) => {\n  userStoreState.set(val);\n};\n\nexport const transListState = entity([]);\n\nexport const setTransListState = (val) => {\n  transListState.set(val);\n};\n\nexport const woocommerceState = entity({\n  apiUrl: null,\n  ck: null,\n  cs: null,\n  useWoocommerce: false,\n});\n\nexport const setWoocommerceState = (val) => {\n  woocommerceState.set(val);\n};\n\nexport const storeDetailState = entity({\n  name: null,\n  address: null,\n  phoneNumber: null,\n  website: null,\n  comSelected: null,\n  deliveryPrice: null,\n});\n\nexport const setStoreDetailState = (val) => {\n  storeDetailState.set(val);\n};","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { cartState, setCartState } from \"state/state\";\nimport { Switch } from \"react-native-gesture-handler\";\n\nconst DeliveryScreen = ({\n  setDeliveryModal,\n  setOngoingDelivery,\n  setName,\n  setPhone,\n  setAddress,\n  name,\n  phone,\n  address,\n  deliveryChecked,\n  setDeliveryChecked,\n}) => {\n  return (\n    <ScrollView style={styles.modalContainer}>\n      <View style={styles.sizeRow}>\n        <Text>Enter Phone Order Details</Text>\n        <View>\n          <Text>Delivery?</Text>\n          <Switch\n            value={deliveryChecked}\n            onValueChange={() => {\n              setDeliveryChecked(!deliveryChecked);\n            }}\n          />\n        </View>\n      </View>\n      <TextInput\n        label=\"Name\"\n        variant=\"outlined\"\n        style={styles.input}\n        onChangeText={(val) => setName(val)}\n        autoCorrect={false}\n        value={name}\n      />\n      <TextInput\n        label=\"Phone #\"\n        variant=\"outlined\"\n        style={styles.input}\n        onChangeText={(val) => setPhone(val)}\n        autoCorrect={false}\n        value={phone}\n      />\n      {deliveryChecked && (\n        <TextInput\n          label=\"Address\"\n          variant=\"outlined\"\n          style={styles.input}\n          onChangeText={(val) => setAddress(val)}\n          autoCorrect={false}\n          value={address}\n        />\n      )}\n      <Button\n        title=\"Order\"\n        // onPress={GetTrans}\n        onPress={() => {\n          setDeliveryModal(false);\n          setOngoingDelivery(true);\n        }}\n        contentContainerStyle={styles.btn}\n        style={{ margin: 25 }}\n      />\n      <Button\n        title=\"Cancel\"\n        onPress={() => {\n          setDeliveryModal(false);\n          setOngoingDelivery(null);\n        }}\n        contentContainerStyle={styles.btn}\n        style={{ margin: 25 }}\n      />\n    </ScrollView>\n  );\n};\n\nexport default DeliveryScreen;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n  },\n  btn: {\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  input: {\n    marginTop: 25,\n    marginBottom: 25,\n  },\n});\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, TextInput } from \"@react-native-material/core\";\r\nimport { cartState, setCartState } from \"state/state\";\r\nimport { Switch } from \"react-native-gesture-handler\";\r\n\r\nconst CashScreen = ({ setCashModal, GetTrans, total, setChangeDue }) => {\r\n  const [cash, setCash] = useState(\"\");\r\n\r\n  return (\r\n    <ScrollView style={styles.modalContainer}>\r\n      <View style={styles.sizeRow}>\r\n        <Text>Cash Payment Details</Text>\r\n      </View>\r\n      <Text>Total: {total}</Text>\r\n      <TextInput\r\n        label=\"Enter Cash Given\"\r\n        variant=\"outlined\"\r\n        style={styles.input}\r\n        onChangeText={(val) => {\r\n          setCash(val);\r\n          setChangeDue((parseFloat(val) - total).toFixed(2));\r\n        }}\r\n        autoCorrect={false}\r\n        value={cash}\r\n      />\r\n      <Text>\r\n        Change Due:{\" \"}\r\n        {parseFloat(cash) > total && (parseFloat(cash) - total).toFixed(2)}\r\n      </Text>\r\n      <Button\r\n        title=\"Print\"\r\n        onPress={() => {\r\n          GetTrans(\"Cash\");\r\n          setCashModal(false);\r\n        }}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n      <Button\r\n        title=\"Cancel\"\r\n        onPress={() => setCashModal(false)}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default CashScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  sizeRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n  },\r\n  halfRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"50%\",\r\n  },\r\n  toppingsContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n  },\r\n  touchable: {\r\n    margin: 25,\r\n    width: 300,\r\n  },\r\n  modalContainer: {\r\n    padding: 50,\r\n  },\r\n  btn: {\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n  },\r\n});\r\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, TextInput } from \"@react-native-material/core\";\r\nimport { storeDetailState } from \"state/state\";\r\n\r\nconst ChangeScreen = ({\r\n  setChangeModal,\r\n  order,\r\n  completeOrder,\r\n  setcurrentOrder,\r\n}) => {\r\n  const total = order.total;\r\n  const [cash, setCash] = useState(\"\");\r\n  const storeDetails = storeDetailState.use();\r\n\r\n  const openCash = () => {\r\n    const data = [\r\n      \"\\x1B\" + \"\\x40\", // init\r\n      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\r\n      storeDetails.name,\r\n      \"\\x0A\",\r\n      storeDetails.address + \"\\x0A\",\r\n      storeDetails.website + \"\\x0A\", // text and line break\r\n      storeDetails.phoneNumber + \"\\x0A\", // text and line break\r\n      \"\\x0A\",\r\n      \"Pickup Order Paid\" + \"\\x0A\", // text and line break\r\n      `Transaction # ${order.transNum}` + \"\\x0A\",\r\n      \"\\x0A\",\r\n      `Customer Name: ${order.customer.name}` + \"\\x0A\", // text and line break\r\n      \"\\x0A\",\r\n      `Customer Phone: ${order.customer.phone}` + \"\\x0A\", // text and line break\r\n      \"\\x0A\",\r\n      \"\\x0A\",\r\n      \"\\x0A\",\r\n      \"\\x0A\",\r\n      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\r\n      `Total: $${total}` + \"\\x0A\",\r\n      `Cash Given: $${cash}` + \"\\x0A\",\r\n      `Change Due: $${(parseFloat(cash) - parseFloat(total)).toFixed(2)}` +\r\n        \"\\x0A\",\r\n      \"------------------------------------------\" + \"\\x0A\",\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      //\"\\x1D\" + \"\\x56\" + \"\\x00\",\r\n      \"\\x1D\" + \"\\x56\" + \"\\x30\",\r\n      \"\\x10\" + \"\\x14\" + \"\\x01\" + \"\\x00\" + \"\\x05\",\r\n    ];\r\n\r\n    fetch(\"http://localhost:8080/print\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        printData: data,\r\n        comSelected: storeDetails.comSelected,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((respData) => {\r\n        console.log(respData);\r\n      })\r\n      .catch((e) => alert(\"Error with printer\"));\r\n\r\n    completeOrder();\r\n  };\r\n\r\n  const CancelPayment = () => {\r\n    setChangeModal(false);\r\n    setcurrentOrder({ element: null, index: null });\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.modalContainer}>\r\n      <View style={styles.sizeRow}>\r\n        <Text>Cash Payment Details</Text>\r\n      </View>\r\n      <Text>Total: ${total}</Text>\r\n      <TextInput\r\n        label=\"Enter Cash Given\"\r\n        variant=\"outlined\"\r\n        style={styles.input}\r\n        onChangeText={(val) => setCash(val)}\r\n        autoCorrect={false}\r\n        value={cash}\r\n      />\r\n      <Text>Change Due: {(parseFloat(cash) - total).toFixed(2)}</Text>\r\n      <Button\r\n        title=\"Finsh Payment\"\r\n        onPress={() => {\r\n          openCash();\r\n        }}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n      <Button\r\n        title=\"Cancel\"\r\n        onPress={CancelPayment}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default ChangeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  sizeRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n  },\r\n  halfRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"50%\",\r\n  },\r\n  toppingsContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n  },\r\n  touchable: {\r\n    margin: 25,\r\n    width: 300,\r\n  },\r\n  modalContainer: {\r\n    padding: 50,\r\n  },\r\n  btn: {\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n  },\r\n});\r\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialize Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDmtlrkfZRbFy8P7D4BFXTIkzMDC_DP5n8\",\n  authDomain: \"posmate-5fc0a.firebaseapp.com\",\n  projectId: \"posmate-5fc0a\",\n  storageBucket: \"posmate-5fc0a.appspot.com\",\n  messagingSenderId: \"48463376409\",\n  appId: \"1:48463376409:web:b427a4fbc3c210a5977a88\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// Initialize Cloud Firestore and get a reference to the service\nexport const auth = firebase.auth();\n\nexport const db = firebase.firestore();\n","import { auth, db } from \"./firebaseConfig\";\n\nexport const signIn = (email, password) =>\n  auth.signInWithEmailAndPassword(email, password);\n\nexport const signUp = (email, password) =>\n  auth\n    .createUserWithEmailAndPassword(email, password)\n    .then((userAuth) => {\n      if (userAuth.user) {\n        db.collection(\"users\")\n          .doc(userAuth.user.uid)\n          .set({\n            paid: true,\n            products: [],\n            categories: [],\n            wooCredentials: { ck: null, cs: null, useWoocommerce: false },\n            transList: [],\n            storeDetails: {\n              name: null,\n              address: null,\n              phoneNumber: null,\n              website: null,\n              comSelected: null,\n              deliveryPrice: null,\n            },\n            //company name\n            //adddress\n            //etc\n          });\n      }\n    })\n    .catch((e) => console.log(e));\n\nexport const updateData = (categories, products) => {\n  return new Promise((resolve, reject) => {\n    db.collection(\"users\")\n      .doc(auth.currentUser?.uid)\n      .update({\n        products: products,\n        categories: categories,\n      })\n      .then(() => resolve(\"Promise resolved!\"))\n      .catch(() => reject(\"Promise rejected!\"));\n  });\n};\n\nexport const updateWooCredentials = (wooCredentials) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    wooCredentials: wooCredentials,\n  });\n};\n\nexport const updateTransList = (transList) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    transList: transList,\n  });\n};\n\nexport const updateStoreDetails = (storeDetails) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    storeDetails: storeDetails,\n  });\n};\n","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  TouchableOpacity,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  cartState,\n  cartSubState,\n  setCartState,\n  setTransListState,\n  storeDetailState,\n  transListState,\n} from \"state/state\";\nimport { Button } from \"@react-native-material/core\";\nimport DeliveryScreen from \"components/DeliveryScreen\";\nimport CashScreen from \"components/CashScreen\";\nimport ChangeScreen from \"components/ChangeScreen\";\nimport { updateTransList } from \"state/firebaseFunctions\";\nimport useWindowDimensions from \"components/useWindowDimensions\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Foundation from \"@expo/vector-icons/Foundation\";\n\nconst CartScreen = ({ navigation }) => {\n  const { height, width } = useWindowDimensions();\n  const [deliveryModal, setDeliveryModal] = useState(false);\n  const [cashModal, setCashModal] = useState(false);\n  const [changeModal, setChangeModal] = useState(false);\n  const [ongoingDelivery, setOngoingDelivery] = useState(null);\n  const [name, setName] = useState(null);\n  const [phone, setPhone] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [deliveryChecked, setDeliveryChecked] = useState(false);\n  const [changeDue, setChangeDue] = useState();\n  const cart = cartState.use();\n  const transList = transListState.use();\n  const storeDetails = storeDetailState.use();\n  const [cartSub, setCartSub] = useState(0);\n\n  useEffect(() => {\n    if (cart.length > 0) {\n      let newVal = 0;\n      for (var i = 0; i < cart.length; i++) {\n        newVal += parseFloat(cart[i].price);\n      }\n      setCartSub(newVal);\n    } else {\n      setCartSub(0);\n    }\n  }, [cart]);\n\n  const AddToList = async (payload) => {\n    const local = structuredClone(transList);\n    //local.unshift(payload);\n    console.log(\"trans: \", local);\n    console.log(\"Payload: \", payload);\n    local.push(payload);\n    updateTransList(local);\n    // setTransListState(local);\n  };\n\n  const Print = (method) => {\n    const transNum = transList?.length + 1;\n    if (method === \"deliveryOrder\") {\n      let total =\n        storeDetails.deliveryPrice > 0\n          ? parseFloat(storeDetails.deliveryPrice)\n          : 0;\n      const today = new Date();\n\n      let data = [\n        \"\\x1B\" + \"\\x40\", // init\n        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n        storeDetails.name,\n        \"\\x0A\",\n        storeDetails.address + \"\\x0A\",\n        storeDetails.website + \"\\x0A\", // text and line break\n        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n        today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n        \"\\x0A\",\n        `Transaction # ${transNum}` + \"\\x0A\",\n        \"\\x0A\",\n        `Delivery Order: $${storeDetails.deliveryPrice} Fee` + \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      ];\n\n      cart.map((cartItem) => {\n        total += parseFloat(cartItem.price);\n        data.push(`Name: ${cartItem.name}`);\n        data.push(`Price: $${cartItem.price}`);\n\n        if (cartItem.description) {\n          data.push(\"\\x0A\");\n          data.push(cartItem.description);\n        }\n\n        if (cartItem.options) {\n          data.push(\"\\x0A\");\n          cartItem.options.map((option) => {\n            data.push(option);\n            data.push(\"\\x0A\");\n          });\n        }\n\n        if (cartItem.extraDetails) {\n          data.push(cartItem.extraDetails);\n          data.push(\"\\x0A\");\n        }\n\n        data.push(\"\\x0A\" + \"\\x0A\");\n      });\n\n      total = total * 1.13;\n      total = total.toFixed(2);\n\n      //push ending\n      data.push(\n        \"\\x0A\",\n        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Name: \" + name,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Phone #:  \" + phone,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Address #:  \" + address,\n        \"\\x0A\" + \"\\x0A\",\n        \"Total Including (13% Tax): \" + total + \"\\x0A\" + \"\\x0A\",\n        \"------------------------------------------\" + \"\\x0A\",\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n      );\n      fetch(\"http://localhost:8080/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          printData: data,\n          comSelected: storeDetails.comSelected,\n        }),\n      })\n        .then((response) => response.json())\n        .then((respData) => {\n          console.log(respData);\n        })\n        .catch((e) => alert(\"Error with printer\"));\n\n      AddToList({\n        id: Math.random().toString(36).substr(2, 9) + \"-l\",\n        date: today,\n        transNum: transNum,\n        total: total,\n        method: \"deliveryOrder\",\n        cart: cart,\n        completed: false,\n        customer: {\n          name: name,\n          phone: phone,\n          address: address,\n        },\n      });\n\n      setCartState([]);\n      setDeliveryModal(false);\n    } else if (method === \"pickupOrder\") {\n      let total = 0;\n      const today = new Date();\n\n      let data = [\n        \"\\x1B\" + \"\\x40\", // init\n        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n        storeDetails.name,\n        \"\\x0A\",\n        storeDetails.address + \"\\x0A\",\n        storeDetails.website + \"\\x0A\", // text and line break\n        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n        today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n        \"\\x0A\",\n        `Transaction # ${transNum}` + \"\\x0A\",\n        \"\\x0A\",\n        \"Pickup Order\" + \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      ];\n\n      cart.map((cartItem) => {\n        total += parseFloat(cartItem.price);\n        data.push(`Name: ${cartItem.name}`);\n        data.push(`Price: $${cartItem.price}`);\n\n        if (cartItem.description) {\n          data.push(\"\\x0A\");\n          data.push(cartItem.description);\n        }\n\n        if (cartItem.options) {\n          data.push(\"\\x0A\");\n          cartItem.options.map((option) => {\n            data.push(option);\n            data.push(\"\\x0A\");\n          });\n        }\n\n        if (cartItem.extraDetails) {\n          data.push(cartItem.extraDetails);\n          data.push(\"\\x0A\");\n        }\n\n        data.push(\"\\x0A\" + \"\\x0A\");\n      });\n\n      total = total * 1.13;\n      total = total.toFixed(2);\n\n      //push ending\n      data.push(\n        \"\\x0A\",\n        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Name: \" + name,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Phone #:  \" + phone,\n        \"\\x0A\" + \"\\x0A\",\n        \"Total Including (13% Tax): \" + total + \"\\x0A\" + \"\\x0A\",\n        \"------------------------------------------\" + \"\\x0A\",\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n      );\n      fetch(\"http://localhost:8080/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          printData: data,\n          comSelected: storeDetails.comSelected,\n        }),\n      })\n        .then((response) => response.json())\n        .then((respData) => {\n          console.log(respData);\n        })\n        .catch((e) => alert(\"Error with printer\"));\n\n      AddToList({\n        id: Math.random().toString(36).substr(2, 9) + \"-l\",\n        date: today,\n        transNum: transNum,\n        total: total,\n        method: \"pickupOrder\",\n        cart: cart,\n        completed: false,\n        customer: {\n          name: name,\n          phone: phone,\n          address: address,\n        },\n      });\n\n      setCartState([]);\n      setDeliveryModal(false);\n    } else {\n      let total = 0;\n      const today = new Date();\n\n      let data = [\n        \"\\x1B\" + \"\\x40\", // init\n        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n        storeDetails.name,\n        \"\\x0A\",\n        storeDetails.address + \"\\x0A\",\n        storeDetails.website + \"\\x0A\", // text and line break\n        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n        today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n        \"\\x0A\",\n        `Transaction # ${transNum}` + \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      ];\n\n      cart.map((cartItem) => {\n        total += parseFloat(cartItem.price);\n        data.push(`Name: ${cartItem.name}`);\n        data.push(\"\\x0A\");\n        data.push(`Price: $${cartItem.price}`);\n\n        if (cartItem.description) {\n          data.push(\"\\x0A\");\n          data.push(cartItem.description);\n        }\n\n        if (cartItem.options) {\n          data.push(\"\\x0A\");\n          cartItem.options.map((option) => {\n            data.push(option);\n            data.push(\"\\x0A\");\n          });\n        }\n\n        if (cartItem.extraDetails) {\n          data.push(cartItem.extraDetails);\n          data.push(\"\\x0A\");\n        }\n\n        data.push(\"\\x0A\" + \"\\x0A\");\n      });\n\n      total = total * 1.13;\n      total = total.toFixed(2);\n\n      if (method === \"Cash\") {\n        //push ending\n        data.push(\n          \"\\x0A\",\n          \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n          \"\\x0A\" + \"\\x0A\",\n          \"Payment Method: \" + method + \"\\x0A\" + \"\\x0A\",\n          \"Total Including (13% Tax): \" + \"$\" + total + \"\\x0A\" + \"\\x0A\",\n          \"Change Due: \" + \"$\" + changeDue + \"\\x0A\" + \"\\x0A\",\n          \"------------------------------------------\" + \"\\x0A\",\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n          \"\\x1D\" + \"\\x56\" + \"\\x30\",\n          \"\\x10\" + \"\\x14\" + \"\\x01\" + \"\\x00\" + \"\\x05\"\n        );\n      } else {\n        data.push(\n          \"\\x0A\",\n          \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n          \"\\x0A\" + \"\\x0A\",\n          \"Payment Method: \" + method + \"\\x0A\" + \"\\x0A\",\n          \"Total Including (13% Tax): \" + \"$\" + total + \"\\x0A\" + \"\\x0A\",\n          \"------------------------------------------\" + \"\\x0A\",\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          \"\\x0A\", // line break\n          //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n          \"\\x1D\" + \"\\x56\" + \"\\x30\"\n        );\n      }\n\n      fetch(\"http://localhost:8080/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          printData: data,\n          comSelected: storeDetails.comSelected,\n        }),\n      })\n        .then((response) => response.json())\n        .then((respData) => {\n          console.log(respData);\n        })\n        .catch((e) => alert(\"Error with printer\"));\n\n      AddToList({\n        id: Math.random().toString(36).substr(2, 9) + \"-l\",\n        date: today,\n        transNum: transNum,\n        total: total,\n        method: method,\n        cart: cart,\n      });\n    }\n\n    setCartState([]);\n  };\n\n  const DeliveryBtn = () => {\n    if (ongoingDelivery === null) {\n      return (\n        <View\n          style={{\n            flexDirection: \"row\",\n            width: \"100%\",\n            alignSelf: \"center\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <TouchableOpacity\n            style={styles({ height, width }).cashButton}\n            onPress={() => setCashModal(true)}\n            disabled={cart.length < 1 || ongoingDelivery}\n          >\n            <Text style={styles({ height, width }).btnTxt}>Cash</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles({ height, width }).cardButton}\n            onPress={() => Print(\"Card\")}\n            disabled={cart.length < 1 || ongoingDelivery}\n          >\n            <Text style={styles({ height, width }).btnTxt}>Card</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n    if (ongoingDelivery && cart.length > 0) {\n      return (\n        <TouchableOpacity\n          style={styles({ height, width }).bigButton}\n          onPress={() => {\n            Print(deliveryChecked ? \"deliveryOrder\" : \"pickupOrder\");\n            setOngoingDelivery(null);\n            setName(null);\n            setPhone(null);\n            setAddress(null);\n          }}\n        >\n          <Text style={styles({ height, width }).btnTxt}>Complete</Text>\n        </TouchableOpacity>\n      );\n    } else {\n      return (\n        <TouchableOpacity\n          style={styles({ height, width }).bigButton}\n          onPress={() => setOngoingDelivery(null)}\n        >\n          <Text style={styles({ height, width }).btnTxt}>Cancel</Text>\n        </TouchableOpacity>\n      );\n    }\n  };\n\n  return (\n    <View style={styles({ height, width }).container}>\n      <View style={styles({ height, width }).cartHeader}>\n        <Text style={{ fontSize: 20, width: \"50%\" }}>Bill Total</Text>\n        <TouchableOpacity style={styles({ height, width }).iconContainer}>\n          <Ionicons name=\"person-add\" size={26} color=\"white\" />\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles({ height, width }).iconContainer}\n          onPress={() => setDeliveryModal(true)}\n          disabled={cart.length > 0}\n        >\n          <Foundation name=\"telephone\" size={32} color=\"white\" />\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles({ height, width }).iconContainer}\n          // onPress={() => setChangeModal(true)}\n          onPress={() => navigation.navigate(\"CompletePaymentPhoneOrder\")}\n          disabled={cart.length > 0 || ongoingDelivery}\n        >\n          <Ionicons name=\"checkmark\" size={32} color=\"white\" />\n        </TouchableOpacity>\n      </View>\n      <ScrollView\n        contentContainerStyle={styles({ height, width }).contentContainer}\n      >\n        <View>\n          {cart.map((cartItem, index) => (\n            <View\n              style={{\n                backgroundColor: \"white\",\n                shadowColor: \"rgba(0,0,0,1)\",\n                shadowOffset: {\n                  width: 3,\n                  height: 3,\n                },\n                elevation: 30,\n                shadowOpacity: 0.07,\n                shadowRadius: 10,\n                marginBottom: 20,\n                padding: 15,\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginBottom: 10,\n                }}\n              >\n                <View style={{ width: \"33%\" }}>\n                  <View\n                    style={{\n                      backgroundColor: \"#E6E6E6\",\n                      width: 50,\n                      height: 50,\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Text style={styles({ height, width }).headerTxt}>\n                      {index + 1}\n                    </Text>\n                  </View>\n                </View>\n                <View\n                  style={{\n                    width: \"33%\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Text style={styles({ height, width }).headerTxt}>\n                    {cartItem.name}\n                  </Text>\n                </View>\n                <View\n                  style={{\n                    width: \"33%\",\n                    alignItems: \"flex-end\",\n                  }}\n                >\n                  <Text\n                    style={{ color: \"red\", fontSize: 15, fontWeight: \"600\" }}\n                    onPress={() => {\n                      const local = structuredClone(cart);\n                      local.splice(index, 1);\n                      setCartState(local);\n                    }}\n                  >\n                    X\n                  </Text>\n                </View>\n              </View>\n              <Text style={styles({ height, width }).innerTxt}>\n                Price: ${cartItem.price}\n              </Text>\n              {cartItem.description && (\n                <Text style={styles({ height, width }).innerTxt}>\n                  Description: {cartItem.description}\n                </Text>\n              )}\n              {cartItem.options &&\n                cartItem.options.map((option) => (\n                  <Text style={styles({ height, width }).innerTxt}>\n                    {option}\n                  </Text>\n                ))}\n              {cartItem.extraDetails && (\n                <Text style={styles({ height, width }).innerTxt}>\n                  Extra Info: {cartItem.extraDetails}\n                </Text>\n              )}\n            </View>\n          ))}\n        </View>\n      </ScrollView>\n      <View style={styles({ height, width }).totalContainer}>\n        <Text style={styles({ height, width }).totalTxt}>\n          Sub: ${cartSub.toFixed(2)}\n        </Text>\n        <Text style={styles({ height, width }).totalTxt}>\n          Total: ${(cartSub * 1.13).toFixed(2)}\n        </Text>\n        <DeliveryBtn />\n      </View>\n      <Modal visible={deliveryModal}>\n        <DeliveryScreen\n          setDeliveryModal={setDeliveryModal}\n          setOngoingDelivery={setOngoingDelivery}\n          setName={setName}\n          setPhone={setPhone}\n          setAddress={setAddress}\n          name={name}\n          phone={phone}\n          address={address}\n          deliveryChecked={deliveryChecked}\n          setDeliveryChecked={setDeliveryChecked}\n        />\n      </Modal>\n      <Modal visible={cashModal}>\n        <CashScreen\n          setCashModal={setCashModal}\n          GetTrans={() => Print(\"Cash\")}\n          total={(cartSub * 1.13).toFixed(2)}\n          setChangeDue={setChangeDue}\n        />\n      </Modal>\n      <Modal visible={changeModal}>\n        <ChangeScreen setChangeModal={setChangeModal} />\n      </Modal>\n    </View>\n  );\n};\n\nexport default CartScreen;\n\nconst styles = (props) =>\n  StyleSheet.create({\n    container: {\n      backgroundColor: \"lightgrey\",\n      //flex: 1,\n      height: props.height,\n      width: props.width * 0.3,\n      padding: 20,\n    },\n    contentContainer: {\n      backgroundColor: \"lightgrey\",\n      //flex: 1,\n      height: props.height * 0.88,\n      justifyContent: \"space-between\",\n      width: \"100%\",\n      paddingTop: 20,\n    },\n    totalContainer: {\n      height: props.height * 0.12,\n      paddingTop: 10,\n    },\n    cartHeader: {\n      height: props.height * 0.06,\n      justifyContent: \"space-between\",\n      width: \"100%\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n    },\n    iconContainer: {\n      backgroundColor: \"rgba(125,126,132,1)\",\n      borderRadius: 30,\n      width: 40,\n      height: 40,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    cashButton: {\n      backgroundColor: \"rgba(51,81,243,1)\",\n      borderRadius: 30,\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n      width: \"49.5%\",\n      height: 55,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    cardButton: {\n      backgroundColor: \"rgba(51,81,243,1)\",\n      borderRadius: 30,\n      borderTopRightRadius: 30,\n      borderBottomRightRadius: 30,\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n      width: \"49.5%\",\n      height: 55,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    btnTxt: {\n      fontSize: 20,\n      color: \"white\",\n    },\n    totalTxt: {\n      fontSize: 14,\n      marginBottom: 5,\n    },\n    bigButton: {\n      backgroundColor: \"rgba(51,81,243,1)\",\n      borderRadius: 30,\n      width: \"98%\",\n      height: 55,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    innerTxt: {\n      fontSize: 13,\n      marginBottom: 10,\n    },\n    headerTxt: {\n      fontSize: 15,\n      fontWeight: \"600\",\n    },\n  });\n","import {\n  Dimensions,\n  Image,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport MenuScreen from \"./MenuScreen\";\nimport CartScreen from \"./CartScreen\";\nimport { Button } from \"@react-native-material/core\";\nimport { userStoreState } from \"state/state\";\nimport { auth } from \"state/firebaseConfig\";\nimport Logo from \"assets/dpos-logo.png\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport useWindowDimensions from \"components/useWindowDimensions\";\n\nconst HomeScreen = ({ navigation }) => {\n  const { height, width } = useWindowDimensions();\n  const catalog = userStoreState.use();\n\n  const Header = () => {\n    return (\n      <View\n        style={{\n          width: \"100%\",\n          height: 80,\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          backgroundColor: \"rgba(31,35,48,1)\",\n          paddingLeft: 25,\n          paddingRight: 25,\n        }}\n      >\n        <Image\n          source={Logo}\n          style={{ width: 200, height: 160, resizeMode: \"contain\" }}\n        />\n        <TouchableOpacity onPress={() => navigation.navigate(\"SettingsHome\")}>\n          <Ionicons name=\"settings\" size={32} color=\"white\" />\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  return (\n    <View style={{ flex: 1, height: height, width: width }}>\n      <View style={{ flexDirection: \"row\", height: \"100%\" }}>\n        <View style={{ width: \"70%\", height: \"100%\" }}>\n          <Header />\n          <MenuScreen catalog={catalog} navigation={navigation} />\n        </View>\n        <CartScreen navigation={navigation} />\n      </View>\n    </View>\n  );\n};\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n  },\n});\n","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport TestAdd from \"./TestAdd\";\nimport Spinner from \"./Spinner\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst EditProductList = ({ navigation }) => {\n  const catalog = userStoreState.use();\n\n  function handleRemoveCatagory(index) {\n    const localCatalog = structuredClone(catalog);\n    localCatalog.products.splice(index, 1);\n\n    updateData(localCatalog.categories, localCatalog.products);\n    // setisModalVisible(true);\n  }\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>Current Products</Text>\n      {catalog.categories.length > 0 ? (\n        catalog.products.map((e, index) => {\n          return (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                padding: 15,\n                margin: 10,\n                backgroundColor: \"lightgrey\",\n              }}\n            >\n              <Text style={{ fontSize: 17 }}>Product: {e.name}</Text>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  width: \"20%\",\n                }}\n              >\n                <Button\n                  title=\"Duplicate\"\n                  onPress={() => {\n                    let copy = structuredClone(e);\n                    copy.name = copy.name + \" Copy\";\n                    updateData(\n                      [...catalog.categories],\n                      [...catalog.products, copy]\n                    );\n                  }}\n                  style={{ margin: 10 }}\n                />\n                <Button\n                  title=\"Edit\"\n                  // onPress={() => setProductEditModal(true)}\n                  onPress={() =>\n                    navigation.navigate(\"AddProduct\", {\n                      existingProduct: e,\n                      existingProductIndex: index,\n                    })\n                  }\n                  style={{ margin: 10 }}\n                />\n                <TouchableOpacity\n                  onPress={() => handleRemoveCatagory(index)}\n                  style={{\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    borderRadius: 3,\n                    backgroundColor: \"red\",\n                    padding: 10,\n                    margin: 10,\n                  }}\n                >\n                  <Text\n                    style={{ color: \"white\", fontWeight: \"600\", fontSize: 18 }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          );\n        })\n      ) : (\n        <Text style={{ marginTop: 50, marginBottom: 50 }}>\n          You must add a category before you can add a product...\n        </Text>\n      )}\n      {catalog.products.length < 1 && catalog.categories.length > 0 && (\n        <Text style={{ marginTop: 50, marginBottom: 50 }}>\n          You have no products...\n        </Text>\n      )}\n      <Button\n        title=\"Add New Product\"\n        onPress={() => navigation.navigate(\"AddProduct\")}\n        style={{ margin: 10 }}\n        disabled={catalog.categories.length < 1}\n      />\n      {/* <Spinner isModalVisible={isModalVisible} /> */}\n    </ScrollView>\n  );\n};\n\nexport default EditProductList;\n\nconst styles = StyleSheet.create({});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { ListItem } from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nconst DropDown = ({ label, options, setValue, value, style }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <View style={[styles.container, style]}>\n      <ListItem\n        title={value ? value : label}\n        trailing={(props) => (\n          <Icon name={show ? \"chevron-up\" : \"chevron-down\"} {...props} />\n        )}\n        onPress={() => setShow((prevState) => !prevState)}\n      />\n      {show && (\n        <>\n          {options.map((option) => (\n            <ListItem\n              title={option}\n              onPress={() => {\n                setValue(option);\n                setShow(false);\n              }}\n            />\n          ))}\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default DropDown;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n  },\n});\n","import { View, Text, TouchableOpacity } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\n\nconst OptionView = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n  indexOn,\n  setindexOn,\n}) => {\n  if (indexOn === index) {\n    const [optionLblsValues, setoptionLblsValues] = useState([]);\n    const [e, sete] = useState(item);\n    const [testMap, settestMap] = useState(structuredClone(item.optionsList));\n    var optionLbls = newProduct.options.map(function (el) {\n      if (el.label !== e.label && el.label !== null) {\n        return el.label;\n      }\n    });\n\n    useEffect(() => {\n      if (e.selectedCaseKey !== null) {\n        if (newProduct.options.length > 1) {\n          const local = newProduct.options.filter(\n            (localE) => localE.label == e.selectedCaseKey\n          );\n          const optionLblsValuesLocal =\n            local.length > 0 &&\n            local[0].optionsList.map(function (el) {\n              return el.label;\n            });\n          setoptionLblsValues(optionLblsValuesLocal);\n        } else {\n          newProductOptions.current[index].selectedCaseKey = null;\n          newProductOptions.current[index].selectedCaseValue = null;\n        }\n      }\n    }, [e]);\n\n    return (\n      <View>\n        <View\n          style={{\n            padding: 25,\n            margin: 15,\n            backgroundColor: \"lightgrey\",\n          }}\n        >\n          <TouchableOpacity\n            onPress={() =>\n              indexOn !== index ? setindexOn(index) : setindexOn(null)\n            }\n            style={{\n              padding: 25,\n              margin: 15,\n              backgroundColor: \"lightgrey\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              height: 100,\n            }}\n          >\n            <Text>{item.label}</Text>\n            <TouchableOpacity\n              onPress={() => {\n                newProductOptions.current.push({\n                  ...item,\n                  label: item.label + \" Copy\",\n                });\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(newProductOptions.current.length - 1);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                Copy\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                newProductOptions.current.splice(index, 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(indexOn - 1);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                X\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                function moveItem(from, to) {\n                  // remove `from` item and store it\n                  var f = newProductOptions.current.splice(from, 1)[0];\n                  // insert stored item into position `to`\n                  newProductOptions.current.splice(to, 0, f);\n                }\n\n                moveItem(index, index + 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(null);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                \\/\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                function moveItem(from, to) {\n                  // remove `from` item and store it\n                  var f = newProductOptions.current.splice(from, 1)[0];\n                  // insert stored item into position `to`\n                  newProductOptions.current.splice(to, 0, f);\n                }\n\n                moveItem(index, index - 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(null);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                /\\\n              </Text>\n            </TouchableOpacity>\n          </TouchableOpacity>\n          <TextInput\n            placeholder=\"Enter Select List Label\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, label: val }));\n              newProductOptions.current[index].label = val;\n            }}\n            value={e.label}\n            style={{ marginBottom: 25 }}\n          />\n          {/* optionType */}\n          <DropDown\n            label=\"Option Type\"\n            options={[\"Standard\", \"Dropdown\"]}\n            setValue={(val) => {\n              // sete((prevState) => ({\n              //   ...prevState,\n              //   optionType: val,\n              // }));\n              if (e.optionType) {\n                newProductOptions.current[index].optionType = val;\n              } else {\n                newProductOptions.current[index] = { ...e, optionType: val };\n                console.log(newProductOptions.current[index].optionType);\n              }\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n            }}\n            value={e.optionType}\n            style={{ marginBottom: 25 }}\n          />\n          <TextInput\n            placeholder=\"Enter Number Of Selectable; If There Is\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n              newProductOptions.current[index].numOfSelectable = val;\n            }}\n            value={e.numOfSelectable}\n            style={{ marginBottom: 25 }}\n          />\n          {testMap.map((eInnerListStart, indexInnerList) => {\n            const eInnerList = structuredClone(eInnerListStart);\n            return (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  marginBottom: 25,\n                  alignItems: \"center\",\n                }}\n              >\n                <TextInput\n                  placeholder=\"Enter Option Label\"\n                  onChangeText={(val) => {\n                    const clone = structuredClone(testMap);\n                    clone[indexInnerList].label = val;\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                  value={eInnerList.label}\n                />\n                <TextInput\n                  placeholder=\"Enter price increase\"\n                  //   onChangeText={(val) => {\n                  //     newProductOptions.current[index].optionsList[\n                  //       indexInnerList\n                  //     ].priceIncrease = val;\n                  //     seteInnerList((prevState) => ({\n                  //       ...prevState,\n                  //       priceIncrease: val,\n                  //     }));\n                  //   }}\n                  onChangeText={(val) => {\n                    const clone = structuredClone(testMap);\n                    clone[indexInnerList].priceIncrease = val;\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                  value={eInnerList.priceIncrease}\n                  style={{ marginLeft: 20, marginRight: 20 }}\n                />\n                <TouchableOpacity\n                  onPress={() => {\n                    const clone = structuredClone(testMap);\n                    clone.splice(indexInnerList, 1);\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            );\n          })}\n          <Button\n            title=\"Add Option Choice\"\n            onPress={() => {\n              const clone = structuredClone(testMap);\n              clone.push({\n                label: null,\n                priceIncrease: null,\n              });\n              newProductOptions.current[index].optionsList = clone;\n              settestMap(clone);\n            }}\n            style={{ marginBottom: 25 }}\n          />\n          {optionLbls.length > 1 && (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginBottom: 25,\n              }}\n            >\n              <DropDown\n                label=\"Show if...\"\n                options={optionLbls}\n                setValue={(val) => {\n                  sete((prevState) => ({ ...prevState, selectedCaseKey: val }));\n                  newProductOptions.current[index].selectedCaseKey = val;\n                }}\n                value={e.selectedCaseKey}\n                style={{ marginBottom: 25 }}\n              />\n              <Text>\"=\"</Text>\n              <DropDown\n                label=\"Show if...\"\n                options={optionLblsValues}\n                setValue={(val) => {\n                  sete((prevState) => ({\n                    ...prevState,\n                    selectedCaseValue: val,\n                  }));\n                  newProductOptions.current[index].selectedCaseValue = val;\n                }}\n                value={e.selectedCaseValue}\n                style={{ marginBottom: 25 }}\n              />\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  } else {\n    return (\n      <TouchableOpacity\n        onPress={() =>\n          indexOn !== index ? setindexOn(index) : setindexOn(null)\n        }\n        style={{\n          padding: 25,\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 100,\n        }}\n      >\n        <Text>{item.label}</Text>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.push({\n              ...item,\n              label: item.label + \" Copy\",\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(newProductOptions.current.length - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.splice(index, 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(indexOn - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            X\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            function moveItem(from, to) {\n              // remove `from` item and store it\n              var f = newProductOptions.current.splice(from, 1)[0];\n              // insert stored item into position `to`\n              newProductOptions.current.splice(to, 0, f);\n            }\n\n            moveItem(index, index + 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(null);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            \\/\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            function moveItem(from, to) {\n              // remove `from` item and store it\n              var f = newProductOptions.current.splice(from, 1)[0];\n              // insert stored item into position `to`\n              newProductOptions.current.splice(to, 0, f);\n            }\n\n            moveItem(index, index - 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(null);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            /\\\n          </Text>\n        </TouchableOpacity>\n      </TouchableOpacity>\n    );\n  }\n};\n\nexport default OptionView;\n","import {\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"state/state\";\nimport { updateData } from \"state/firebaseFunctions\";\nimport OptionView from \"./OptionView\";\n\nconst MyListItem = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n  indexOn,\n  setindexOn,\n  setcurrentY,\n}) => {\n  const memoizedItem = useMemo(() => item, [item]);\n\n  if (indexOn !== index) {\n    return (\n      <TouchableOpacity\n        onPress={() => setindexOn(index)}\n        style={{\n          padding: 25,\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 100,\n        }}\n      >\n        <Text>{memoizedItem.label}</Text>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.push({\n              ...memoizedItem,\n              label: memoizedItem.label + \" Copy\",\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(newProductOptions.current.length - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.splice(index, 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(indexOn - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            X\n          </Text>\n        </TouchableOpacity>\n      </TouchableOpacity>\n    );\n  } else {\n    const [optionLblsValues, setoptionLblsValues] = useState([]);\n    const [e, sete] = useState(memoizedItem);\n    var optionLbls = newProduct.options.map(function (el) {\n      if (el.label !== e.label && el.label !== null) {\n        return el.label;\n      }\n    });\n\n    useEffect(() => {\n      if (e.selectedCaseKey !== null) {\n        const local = newProduct.options.filter(\n          (localE) => localE.label == e.selectedCaseKey\n        );\n        const optionLblsValuesLocal =\n          local.length > 0 &&\n          local[0].optionsList.map(function (el) {\n            return el.label;\n          });\n        setoptionLblsValues(optionLblsValuesLocal);\n      }\n    }, [e]);\n\n    return (\n      <View>\n        <View\n          style={{\n            padding: 25,\n            margin: 15,\n            backgroundColor: \"lightgrey\",\n          }}\n        >\n          <TouchableOpacity\n            onPress={() => {\n              newProductOptions.current.push({\n                ...e,\n                label: e.label + \" Copy\",\n              });\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(newProductOptions.current.length - 1);\n            }}\n          >\n            <Text\n              style={{\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\",\n              }}\n            >\n              Copy\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              newProductOptions.current.splice(index, 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <Text\n              style={{\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\",\n              }}\n            >\n              X\n            </Text>\n          </TouchableOpacity>\n          <TextInput\n            placeholder=\"Enter Select List Label\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, label: val }));\n              newProductOptions.current[index].label = val;\n            }}\n            value={e.label}\n            style={{ marginBottom: 25 }}\n          />\n          {/* optionType */}\n          <DropDown\n            label=\"Option Type\"\n            options={[\"Standard\", \"Dropdown\"]}\n            setValue={(val) => {\n              // sete((prevState) => ({\n              //   ...prevState,\n              //   optionType: val,\n              // }));\n              if (e.optionType) {\n                newProductOptions.current[index].optionType = val;\n              } else {\n                newProductOptions.current[index] = { ...e, optionType: val };\n                console.log(newProductOptions.current[index].optionType);\n              }\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n            }}\n            value={e.optionType}\n            style={{ marginBottom: 25 }}\n          />\n          <TextInput\n            placeholder=\"Enter Number Of Selectable; If There Is\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n              newProductOptions.current[index].numOfSelectable = val;\n            }}\n            value={e.numOfSelectable}\n            style={{ marginBottom: 25 }}\n          />\n          {e.optionsList.map((eInnerListStart, indexInnerList) => {\n            const [eInnerList, seteInnerList] = useState(eInnerListStart);\n            return (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  marginBottom: 25,\n                  alignItems: \"center\",\n                }}\n              >\n                <TextInput\n                  placeholder=\"Enter Option Label\"\n                  onChangeText={(val) => {\n                    newProductOptions.current[index].optionsList[\n                      indexInnerList\n                    ].label = val;\n                    seteInnerList((prevState) => ({\n                      ...prevState,\n                      label: val,\n                    }));\n                  }}\n                  value={eInnerList.label}\n                />\n                <TextInput\n                  placeholder=\"Enter price increase\"\n                  onChangeText={(val) => {\n                    newProductOptions.current[index].optionsList[\n                      indexInnerList\n                    ].priceIncrease = val;\n                    seteInnerList((prevState) => ({\n                      ...prevState,\n                      priceIncrease: val,\n                    }));\n                  }}\n                  value={eInnerList.priceIncrease}\n                  style={{ marginLeft: 20, marginRight: 20 }}\n                />\n                <TouchableOpacity\n                  onPress={() => {\n                    newProductOptions.current[index].optionsList.splice(\n                      indexInnerList,\n                      1\n                    );\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: newProductOptions.current,\n                    }));\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            );\n          })}\n          <Button\n            title=\"Add Option Choice\"\n            onPress={() => {\n              newProductOptions.current[index].optionsList.push({\n                label: null,\n                priceIncrease: null,\n              });\n              setcurrentY(window.pageYOffset);\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n            }}\n            style={{ marginBottom: 25 }}\n          />\n          {optionLbls.length > 1 && (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginBottom: 25,\n              }}\n            >\n              <DropDown\n                label=\"Show if...\"\n                options={optionLbls}\n                setValue={(val) => {\n                  sete((prevState) => ({ ...prevState, selectedCaseKey: val }));\n                  newProductOptions.current[index].selectedCaseKey = val;\n                }}\n                value={e.selectedCaseKey}\n                style={{ marginBottom: 25 }}\n              />\n              <Text>\"=\"</Text>\n              <DropDown\n                label=\"Show if...\"\n                options={optionLblsValues}\n                setValue={(val) => {\n                  sete((prevState) => ({\n                    ...prevState,\n                    selectedCaseValue: val,\n                  }));\n                  newProductOptions.current[index].selectedCaseValue = val;\n                }}\n                value={e.selectedCaseValue}\n                style={{ marginBottom: 25 }}\n              />\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n};\n\nconst AddProduct = ({ route, navigation }) => {\n  const { existingProduct, existingProductIndex } = route.params\n    ? route.params\n    : { existingProduct: null, existingProductIndex: null };\n\n  const catalog = userStoreState.use();\n  const [newProduct, setnewProduct] = useState(\n    existingProduct\n      ? existingProduct\n      : {\n          name: null,\n          price: null,\n          catagory: null,\n          options: [],\n          description: null,\n        }\n  );\n  const newProductOptions = useRef(\n    existingProduct ? existingProduct.options : []\n  );\n  const [indexOn, setindexOn] = useState(0);\n\n  // useEffect(() => {\n  //   //setTimeout(() => {\n  //   window.scrollTo({\n  //     top: currentY,\n  //     behavior: \"instant\",\n  //   });\n  //   //}, 500);\n  // }, [currentY]);\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(\n        [...catalog.categories],\n        [...catalog.products, copyProductData]\n      );\n      navigation.goBack();\n    } else if (existingProduct) {\n      let copy = structuredClone(catalog.products);\n      const newProductUseRef = {\n        ...newProduct,\n        options: newProductOptions.current,\n      };\n      copy[existingProductIndex] = newProductUseRef;\n      updateData([...catalog.categories], copy);\n      navigation.goBack();\n    } else {\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\n      navigation.goBack();\n    }\n  }\n\n  const OptionsAddingSection = () => {\n    return (\n      <View>\n        <FlatList\n          // onLayout={() =>\n          //   window.scrollTo({\n          //     top: currentY,\n          //     behavior: \"instant\",\n          //   })\n          // }\n          getItemLayout={(data, index) => ({\n            length: index === indexOn ? 400 * data.optionsList?.length : 100,\n            offset: 400 * index,\n            index,\n          })}\n          data={newProduct.options}\n          keyExtractor={(item) => item.id?.toString()}\n          renderItem={({ item, index }) => (\n            <OptionView\n              item={item}\n              index={index}\n              newProduct={newProduct}\n              setnewProduct={setnewProduct}\n              newProductOptions={newProductOptions}\n              indexOn={indexOn}\n              setindexOn={setindexOn}\n            />\n          )}\n        />\n        <Button\n          title=\"Add Product Option\"\n          onPress={() => {\n            newProductOptions.current.push({\n              label: null,\n              optionsList: [],\n              selectedCaseKey: null,\n              selectedCaseValue: null,\n              numOfSelectable: null,\n              id: Math.random().toString(36).substr(2, 9),\n              optionType: null,\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(newProductOptions.current.length - 1);\n          }}\n          style={{ marginBottom: 25 }}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView\n      style={{ width: \"100%\", height: \"100%\", flex: 1 }}\n      contentContainerStyle={{\n        width: \"93%\",\n        alignSelf: \"center\",\n        marginTop: 25,\n      }}\n    >\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            padding: 20,\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <TouchableOpacity onPress={() => navigation.goBack()}>\n            <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n              X\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              let copy = structuredClone(newProduct);\n              copy.name = copy.name + \" Copy\";\n              handleDataUpdate(copy);\n            }}\n          >\n            <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n              Copy\n            </Text>\n          </TouchableOpacity>\n          <Text style={{ marginBottom: 25 }}>AddProduct</Text>\n        </View>\n        <TextInput\n          placeholder=\"Enter Product Name\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, name: val }));\n          }}\n          value={newProduct.name}\n          style={{ marginBottom: 25 }}\n        />\n        <TextInput\n          placeholder=\"Enter any other items that come with this\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, description: val }));\n          }}\n          style={{ marginBottom: 25 }}\n          value={newProduct.description}\n        />\n        <TextInput\n          placeholder=\"Enter Product Price\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, price: val }));\n          }}\n          style={{ marginBottom: 25 }}\n          value={newProduct.price}\n        />\n        <DropDown\n          label=\"Choose catagory\"\n          options={catalog.categories}\n          setValue={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, catagory: val }));\n          }}\n          value={newProduct.catagory}\n          style={{ marginBottom: 25 }}\n        />\n        <OptionsAddingSection />\n        <Button\n          title=\"Add/Save Product\"\n          onPress={() => {\n            handleDataUpdate();\n          }}\n          style={{\n            marginBottom: 25,\n            marginTop: 25,\n            backgroundColor: \"lightgreen\",\n          }}\n        />\n      </>\n    </ScrollView>\n  );\n};\n\nexport default AddProduct;\n\nconst styles = StyleSheet.create({});\n","import { View, Text, ScrollView } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport { setWoocommerceState, woocommerceState } from \"state/state\";\nimport { updateWooCredentials } from \"state/firebaseFunctions\";\n\nconst WoocommerceSettings = () => {\n  const wooCredentials = woocommerceState.use();\n  const [apiUrl, setapiUrl] = useState(wooCredentials.apiUrl);\n  const [ck, setck] = useState(wooCredentials.ck);\n  const [cs, setcs] = useState(wooCredentials.cs);\n  const [useWoocommerce, setuseWoocommerce] = useState(\n    wooCredentials.useWoocommerce\n  );\n\n  const handleDataUpdate = () => {\n    if (apiUrl !== null && ck !== null && cs !== null) {\n      setWoocommerceState({\n        apiUrl: apiUrl,\n        ck: ck,\n        cs: cs,\n        useWoocommerce: useWoocommerce,\n      });\n      updateWooCredentials({\n        apiUrl: apiUrl,\n        ck: ck,\n        cs: cs,\n        useWoocommerce: useWoocommerce,\n      });\n    }\n  };\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      <TextInput\n        placeholder=\"Enter Woocommerce 'API Url'\"\n        onChangeText={(val) => setapiUrl(val)}\n        style={{ margin: 10 }}\n        value={apiUrl}\n      />\n      <TextInput\n        placeholder=\"Enter Woocommerce 'CK'\"\n        onChangeText={(val) => setck(val)}\n        style={{ margin: 10 }}\n        value={ck}\n      />\n      <TextInput\n        placeholder=\"Enter Woocommerce 'CS'\"\n        onChangeText={(val) => setcs(val)}\n        style={{ margin: 10 }}\n        value={cs}\n      />\n      <Switch\n        value={useWoocommerce}\n        onValueChange={(val) => setuseWoocommerce(val)}\n      />\n      <Button title=\"Save\" onPress={handleDataUpdate} style={{ margin: 10 }} />\n      {/* <Spinner isModalVisible={isModalVisible} /> */}\n    </ScrollView>\n  );\n};\n\nexport default WoocommerceSettings;\n","import { View, Text, ScrollView } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport { setStoreDetailState, storeDetailState } from \"state/state\";\nimport { updateStoreDetails } from \"state/firebaseFunctions\";\nimport DropDown from \"./DropDown\";\n\nconst EditStoreDetails = () => {\n  const storeDetails = storeDetailState.use();\n  const [name, setname] = useState(storeDetails.name);\n  const [phoneNumber, setphoneNumber] = useState(storeDetails.phoneNumber);\n  const [address, setaddress] = useState(storeDetails.address);\n  const [website, setwebsite] = useState(storeDetails.website);\n  const [deliveryPrice, setdeliveryPrice] = useState(\n    storeDetails.deliveryPrice\n  );\n  const [com, setcom] = useState(storeDetails.comSelected);\n\n  const handleDataUpdate = () => {\n    if (name !== null && phoneNumber !== null && address !== null) {\n      setStoreDetailState({\n        name: name,\n        phoneNumber: phoneNumber,\n        address: address,\n        website: website,\n        deliveryPrice: deliveryPrice,\n        comSelected: com,\n      });\n      updateStoreDetails({\n        name: name,\n        phoneNumber: phoneNumber,\n        address: address,\n        website: website,\n        deliveryPrice: deliveryPrice,\n        comSelected: com,\n      });\n    }\n  };\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      <TextInput\n        placeholder=\"Enter Store Name\"\n        onChangeText={(val) => setname(val)}\n        style={{ margin: 10 }}\n        value={name}\n      />\n      <TextInput\n        placeholder=\"Enter Store Website Url\"\n        onChangeText={(val) => setwebsite(val)}\n        style={{ margin: 10 }}\n        value={website}\n      />\n      <TextInput\n        placeholder=\"Enter Store Phone Number\"\n        onChangeText={(val) => setphoneNumber(val)}\n        style={{ margin: 10 }}\n        value={phoneNumber}\n      />\n      <TextInput\n        placeholder=\"Enter Store Address\"\n        onChangeText={(val) => setaddress(val)}\n        style={{ margin: 10 }}\n        value={address}\n      />\n      <TextInput\n        placeholder=\"Enter Delivery Price\"\n        onChangeText={(val) => setdeliveryPrice(val)}\n        style={{ margin: 10 }}\n        value={deliveryPrice}\n      />\n      <DropDown\n        options={[\"COM1\", \"COM2\", \"COM3\", \"COM4\", \"COM5\", \"COM6\", \"What Cum?\"]}\n        label=\"Pick Printer COM\"\n        value={com}\n        setValue={setcom}\n      />\n      <Button title=\"Save\" onPress={handleDataUpdate} style={{ margin: 10 }} />\n      {/* <Spinner isModalVisible={isModalVisible} /> */}\n    </ScrollView>\n  );\n};\n\nexport default EditStoreDetails;\n","import { Modal, StyleSheet, Text, View } from \"react-native\";\nimport React from \"react\";\n\nconst Spinner = ({ isModalVisible }) => {\n  return (\n    <Modal visible={isModalVisible} transparent={true}>\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flex: 1,\n          backgroundColor: \"rgba(52, 52, 52, 0.8)\",\n        }}\n      >\n        <style>\n          {`.loader {\n  border: 16px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 16px solid #3498db;\n  width: 120px;\n  height: 120px;\n  -webkit-animation: spin 2s linear infinite; /* Safari */\n  animation: spin 2s linear infinite;\n}\n\n/* Safari */\n@-webkit-keyframes spin {\n  0% { -webkit-transform: rotate(0deg); }\n  100% { -webkit-transform: rotate(360deg); }\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}`}\n        </style>\n\n        <div className=\"loader\"></div>\n      </View>\n    </Modal>\n  );\n};\n\nexport default Spinner;\n\nconst styles = StyleSheet.create({});\n","import {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport Spinner from \"./Spinner\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst AddCategory = () => {\n  const catalog = userStoreState.use();\n  const [categoryName, setcategoryName] = useState();\n  const [isModalVisible, setisModalVisible] = useState(false);\n\n  function handleDataUpdate() {\n    updateData([...catalog.categories, categoryName], catalog.products);\n    setisModalVisible(true);\n  }\n\n  function handleRemoveCategory(index) {\n    const localCatalog = structuredClone(catalog);\n    localCatalog.categories.splice(index, 1);\n\n    updateData(localCatalog.categories, localCatalog.products);\n    setisModalVisible(true);\n  }\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      {catalog.categories.map((e, index) => {\n        return (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              padding: 15,\n              margin: 10,\n              backgroundColor: \"lightgrey\",\n            }}\n          >\n            <Text style={{ fontSize: 17 }}>{e}</Text>\n            <TouchableOpacity\n              onPress={() => handleRemoveCategory(index)}\n              style={{\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"red\", fontWeight: \"600\" }}>Remove X</Text>\n            </TouchableOpacity>\n          </View>\n        );\n      })}\n      <TextInput\n        placeholder=\"Enter New Category\"\n        onChangeText={(val) => setcategoryName(val)}\n        style={{ margin: 10 }}\n      />\n      <Button\n        title=\"Add New Category\"\n        onPress={handleDataUpdate}\n        style={{ margin: 10 }}\n      />\n      <Spinner isModalVisible={isModalVisible} />\n    </ScrollView>\n  );\n};\n\nexport default AddCategory;\n\nconst styles = StyleSheet.create({});\n","import { ScrollView, StyleSheet, View } from \"react-native\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { Button, Text } from \"@react-native-material/core\";\nimport { storeDetailState, transListState } from \"state/state\";\n\nconst ViewTransactions = () => {\n  const local = transListState.use();\n  const [transList, settransList] = useState([]);\n  const today = new Date();\n  const [todaysDetails, setTodaysDetails] = useState({\n    todaysReceiptValue: 0,\n    todaysReceipts: 0,\n  });\n  const storeDetails = storeDetailState.use();\n\n  useEffect(() => {\n    if (local?.length > 0) {\n      local\n        .sort(function (a, b) {\n          if (a.date && b.date) {\n            return a.date.seconds - b.date.seconds;\n          } else if (a.date && b.date_created) {\n            const bDate = new Date(b.date_created).getTime() / 1000;\n            return a.date.seconds - bDate;\n          } else if (a.date_created && b.date) {\n            const aDate = new Date(a.date_created).getTime() / 1000;\n            return aDate - b.date.seconds;\n          } else {\n            const aDate = new Date(a.date_created).getTime() / 1000;\n            const bDate = new Date(b.date_created).getTime() / 1000;\n            return aDate - bDate;\n          }\n        })\n        .reverse();\n      settransList(local);\n      const todaysReceiptValue = local.reduce((accumulator, current) => {\n        let date;\n        if (current.date) {\n          date = new Date(current.date.seconds * 1000);\n        } else {\n          date = new Date(current.date_created);\n          // console.log(\"seconds is: \", date.getTime() / 1000);\n        }\n        if (date.toLocaleDateString() === today.toLocaleDateString()) {\n          return accumulator + parseFloat(current.total);\n        } else {\n          return accumulator;\n        }\n      }, 0);\n      const todaysReceipts = local.reduce((accumulator, current) => {\n        let date;\n        if (current.date) {\n          date = new Date(current.date.seconds * 1000);\n        } else {\n          date = new Date(current.date_created);\n        }\n\n        if (date.toLocaleDateString() === today.toLocaleDateString()) {\n          return accumulator + 1;\n        } else {\n          return accumulator;\n        }\n      }, 0);\n      setTodaysDetails({\n        todaysReceiptValue: todaysReceiptValue.toFixed(2),\n        todaysReceipts: todaysReceipts,\n      });\n    }\n  }, [local]);\n\n  const PrintTodaysTotal = () => {\n    let data = [\n      \"\\x1B\" + \"\\x40\", // init\n      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n      storeDetails.name,\n      \"\\x0A\",\n      storeDetails.address + \"\\x0A\",\n      storeDetails.website + \"\\x0A\", // text and line break\n      storeDetails.phoneNumber + \"\\x0A\", // text and line break\n      today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      \"\\x0A\" + \"\\x0A\",\n      \"Number Of Receipts: \" + todaysDetails.todaysReceipts + \"\\x0A\" + \"\\x0A\",\n      \"Sub-Total: \" +\n        \"$\" +\n        (todaysDetails.todaysReceiptValue / 1.13).toFixed(2) +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"Tax: \" +\n        \"$\" +\n        ((todaysDetails.todaysReceiptValue / 1.13) * 0.13).toFixed(2) +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"Total Including (13% Tax): \" +\n        \"$\" +\n        todaysDetails.todaysReceiptValue +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"------------------------------------------\" + \"\\x0A\",\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x1D\" + \"\\x56\" + \"\\x30\",\n    ];\n\n    fetch(\"http://localhost:8080/print\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        printData: data,\n        comSelected: storeDetails.comSelected,\n      }),\n    })\n      .then((response) => response.json())\n      .then((respData) => {\n        console.log(respData);\n      })\n      .catch((e) => alert(\"Error with printer\"));\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ textAlign: \"center\", margin: 25 }}>\n        List Of Transactions\n      </Text>\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Price: {todaysDetails.todaysReceiptValue}\n        </Text>\n        <Button\n          style={{ height: 40, alignItems: \"center\", justifyContent: \"center\" }}\n          title=\"Print Todays Receipts\"\n          onPress={PrintTodaysTotal}\n        />\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Receipts: {todaysDetails.todaysReceipts}\n        </Text>\n      </View>\n      <View style={styles.contentContainer}>\n        {transList ? (\n          transList?.map((element, index) => {\n            // if (date.toLocaleDateString() === today.toLocaleDateString()) {\n            //   setTodaysDetails((prevState) => prevState + 1);\n            // }\n\n            const date = element.date\n              ? new Date(element.date.seconds * 1000)\n              : element.date_created\n              ? new Date(element.date_created)\n              : null;\n\n            return (\n              <View\n                style={{ backgroundColor: \"grey\", padding: 30, margin: 10 }}\n                key={index}\n              >\n                <Text>{date.toLocaleString()}</Text>\n                {element.cart?.map((cartItem, index) => (\n                  <View style={{ marginBottom: 20 }} key={index}>\n                    <Text>Name: {cartItem.name}</Text>\n                    <Text>Quantity: {cartItem.quantity}</Text>\n                    <Text>Price: {cartItem.price}</Text>\n                    {cartItem.options &&\n                      cartItem.options?.map((option) => <Text>{option}</Text>)}\n                  </View>\n                ))}\n                {element.line_items?.map((cartItem, index) => (\n                  <View style={{ marginBottom: 20 }} key={index}>\n                    <Text>Name: {cartItem.name}</Text>\n                    <Text>Quantity: {cartItem.quantity}</Text>\n                    <Text>Price: {cartItem.price}</Text>\n                    {cartItem.meta_data?.map((meta, index) => {\n                      if (index === cartItem.meta_data.length - 1) return;\n                      return <Text>{`${meta.key} : ${meta.value}`}</Text>;\n                    })}\n                  </View>\n                ))}\n                <Button\n                  title=\"Print\"\n                  onPress={() => {\n                    if (element.date) {\n                      let total = 0;\n\n                      let data = [\n                        \"\\x1B\" + \"\\x40\", // init\n                        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                        storeDetails.name,\n                        \"\\x0A\",\n                        storeDetails.address + \"\\x0A\",\n                        storeDetails.website + \"\\x0A\", // text and line break\n                        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                        date.toLocaleDateString() +\n                          \" \" +\n                          date.toLocaleTimeString() +\n                          \"\\x0A\",\n                        \"\\x0A\",\n                        `Transaction # ${element.transNum}` + \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n                      ];\n\n                      element.cart?.map((cartItem) => {\n                        total += parseFloat(cartItem.price);\n                        data.push(`Name: ${cartItem.name}`);\n                        data.push(\"\\x0A\");\n                        data.push(`Price: $${cartItem.price}`);\n\n                        if (cartItem.options) {\n                          data.push(\"\\x0A\");\n                          cartItem.options?.map((option) => {\n                            data.push(option);\n                            data.push(\"\\x0A\");\n                          });\n                        }\n                        data.push(\"\\x0A\" + \"\\x0A\");\n                      });\n\n                      total = total * 1.13;\n                      total = total.toFixed(2);\n\n                      //push ending\n                      data.push(\n                        \"\\x0A\",\n                        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                        \"\\x0A\" + \"\\x0A\",\n                        \"Total Including (13% Tax): \" +\n                          \"$\" +\n                          total +\n                          \"\\x0A\" +\n                          \"\\x0A\",\n                        \"------------------------------------------\" + \"\\x0A\",\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n                        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n                      );\n\n                      fetch(\"http://localhost:8080/print\", {\n                        method: \"POST\",\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                          printData: data,\n                          comSelected: storeDetails.comSelected,\n                        }),\n                      })\n                        .then((response) => response.json())\n                        .then((respData) => {\n                          console.log(respData);\n                        })\n                        .catch((e) => alert(\"Error with printer\"));\n                    } else {\n                      const printData = [];\n\n                      printData.push(\n                        \"\\x1B\" + \"\\x40\", // init\n                        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                        storeDetails.name,\n                        \"\\x0A\",\n                        storeDetails.address + \"\\x0A\",\n                        storeDetails.website + \"\\x0A\", // text and line break\n                        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                        element.date_created + \"\\x0A\",\n                        \"\\x0A\",\n                        \"Online Order\" + \"\\x0A\", // text and line break\n                        `Transaction # ${element.number}` + \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n                      );\n\n                      element.line_items?.map((cartItem) => {\n                        printData.push(\"\\x0A\");\n                        printData.push(`Name: ${cartItem.name}`);\n                        printData.push(\"\\x0A\");\n                        printData.push(`Quantity: ${cartItem.quantity}`);\n                        printData.push(\"\\x0A\");\n                        printData.push(`Price: $${cartItem.price}`);\n                        printData.push(\"\\x0A\");\n\n                        if (cartItem.meta_data) {\n                          cartItem.meta_data?.map((meta, index) => {\n                            if (index === 0) {\n                              printData.push(`${meta.key} : ${meta.value}`);\n                              if (\n                                cartItem.meta_data[index + 1].key !== meta.key\n                              ) {\n                                printData.push(\"\\x0A\");\n                              }\n                            } else {\n                              if (index !== cartItem.meta_data.length - 1) {\n                                if (\n                                  cartItem.meta_data[index - 1].key === meta.key\n                                ) {\n                                  printData.push(` , ${meta.value}`);\n                                } else {\n                                  printData.push(`${meta.key} : ${meta.value}`);\n                                }\n\n                                if (\n                                  cartItem.meta_data[index + 1].key !== meta.key\n                                ) {\n                                  printData.push(\"\\x0A\");\n                                }\n                              }\n                            }\n                          });\n                        } else {\n                          printData.push(\"\\x0A\" + \"\\x0A\");\n                        }\n                      });\n\n                      printData.push(\"\\x0A\");\n                      printData.push(\"\\x0A\");\n                      printData.push(`Customer Details:`);\n                      printData.push(\"\\x0A\");\n                      printData.push(`Address: ${element.shipping.address_1}`);\n                      printData.push(\"\\x0A\");\n                      printData.push(`City: ${element.shipping.city}`);\n                      printData.push(\"\\x0A\");\n                      printData.push(\n                        `Zip/Postal Code: ${element.shipping.postcode}`\n                      );\n                      printData.push(\"\\x0A\");\n                      printData.push(\n                        `Province/State: ${element.shipping.state}`\n                      );\n                      printData.push(\"\\x0A\");\n                      printData.push(\n                        `Name: ${element.shipping.first_name} ${element.shipping.last_name}`\n                      );\n                      printData.push(\"\\x0A\");\n                      element.shipping_lines.map((line) =>\n                        printData.push(`Shipping Method: ${line.method_title}`)\n                      );\n                      printData.push(\"\\x0A\");\n                      printData.push(\"\\x0A\");\n\n                      printData.push(\n                        \"\\x0A\",\n                        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                        \"\\x0A\" + \"\\x0A\",\n                        \"Payment Method: \" +\n                          element.payment_method_title +\n                          \"\\x0A\" +\n                          \"\\x0A\",\n                        \"Total Including (13% Tax): \" +\n                          \"$\" +\n                          (\n                            parseFloat(element.total) +\n                            parseFloat(element.total_tax)\n                          ).toFixed(2) +\n                          \"\\x0A\" +\n                          \"\\x0A\",\n                        \"------------------------------------------\" + \"\\x0A\",\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\" // line break\n                      );\n\n                      printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n                      fetch(\"http://localhost:8080/print\", {\n                        method: \"POST\",\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                          printData: printData,\n                          comSelected: storeDetails.comSelected,\n                        }),\n                      })\n                        .then((response) => response.json())\n                        .then((respData) => {\n                          console.log(respData);\n                        })\n                        .catch((e) => alert(\"Error with printer\"));\n                    }\n                  }}\n                />\n              </View>\n            );\n          })\n        ) : (\n          <Text>No receipts yet</Text>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default ViewTransactions;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\",\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { ListItem } from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nconst ProductOptionDropDown = ({ label, options, setValue, value, style }) => {\n  const [show, setShow] = useState(false);\n\n  return (\n    <View style={[styles.container, style]}>\n      <ListItem\n        title={\n          value\n            ? `${value.label} : $${\n                value.priceIncrease !== null ? value.priceIncrease : 0\n              }`\n            : label\n        }\n        trailing={(props) => (\n          <Icon name={show ? \"chevron-up\" : \"chevron-down\"} {...props} />\n        )}\n        onPress={() => setShow((prevState) => !prevState)}\n      />\n      {show && (\n        <>\n          {options.map((option, listIndex) => (\n            <ListItem\n              title={`${option.label} : $${\n                option.priceIncrease !== null ? option.priceIncrease : 0\n              }`}\n              onPress={() => {\n                setValue({\n                  option: {\n                    label: option.label,\n                    priceIncrease:\n                      option.priceIncrease !== null ? option.priceIncrease : 0,\n                  },\n                  listIndex: listIndex,\n                });\n                setShow(false);\n              }}\n            />\n          ))}\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default ProductOptionDropDown;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n  },\n});\n","import {\n  View,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n  StyleSheet,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport ProductOptionDropDown from \"./ProductOptionDropDown\";\nimport { addCartState } from \"state/state\";\n\nconst ProductListing = ({ navigation, route }) => {\n  const { product } = route.params;\n  const myObj = product;\n  const [myObjProfile, setmyObjProfile] = useState(myObj);\n  const [total, settotal] = useState(myObj.price);\n  const [extraInput, setextraInput] = useState(null);\n\n  const DisplayOption = ({ e, index }) => {\n    const [optionVal, setoptionVal] = useState();\n\n    const selectedList = e.optionsList.filter((checkOp) => checkOp.selected);\n\n    if (selectedList.length > 0 && !optionVal) {\n      setoptionVal(selectedList[0]);\n    }\n\n    let isSelected = false;\n\n    const selectedCaseList = myObjProfile.options.filter(\n      (op) => op.label == e.selectedCaseKey\n    );\n\n    let selectedValueList;\n\n    if (selectedCaseList.length > 0) {\n      selectedValueList = selectedCaseList[0].optionsList.filter(\n        (opL) => opL.label == e.selectedCaseValue\n      );\n\n      if (selectedValueList.length > 0) {\n        isSelected = selectedValueList[0].selected === true;\n      }\n    }\n\n    if (e.selectedCaseKey === null || isSelected) {\n      if (e.optionType?.toLowerCase() === \"dropdown\") {\n        return (\n          <View\n            style={{\n              marginBottom: 25,\n              width: \"100%\",\n            }}\n            key={index}\n          >\n            <Text style={{ fontWeight: \"700\", fontSize: 18 }}>\n              Label: {e.label}\n            </Text>\n            <ProductOptionDropDown\n              label={e.label}\n              options={e.optionsList}\n              setValue={({ option, listIndex }) => {\n                const newMyObjProfile = structuredClone(myObjProfile);\n                newMyObjProfile.options[index].optionsList.forEach(\n                  (element, indexOfOl) => {\n                    if (element.selected) {\n                      newMyObjProfile.options[index].optionsList[\n                        indexOfOl\n                      ].selected = false;\n                      settotal((prevState) =>\n                        (\n                          parseFloat(prevState) -\n                          parseFloat(\n                            newMyObjProfile.options[index].optionsList[\n                              indexOfOl\n                            ].priceIncrease !== null\n                              ? newMyObjProfile.options[index].optionsList[\n                                  indexOfOl\n                                ].priceIncrease\n                              : 0\n                          )\n                        ).toFixed(2)\n                      );\n                    }\n                  }\n                );\n\n                newMyObjProfile.options[index].optionsList[listIndex].selected =\n                  true;\n                settotal((prevState) =>\n                  (\n                    parseFloat(prevState) +\n                    parseFloat(\n                      newMyObjProfile.options[index].optionsList[listIndex]\n                        .priceIncrease !== null\n                        ? newMyObjProfile.options[index].optionsList[listIndex]\n                            .priceIncrease\n                        : 0\n                    )\n                  ).toFixed(2)\n                );\n                console.log(option);\n\n                setoptionVal(option);\n                setmyObjProfile(newMyObjProfile);\n              }}\n              value={optionVal}\n              style={{ marginBottom: 25 }}\n            />\n          </View>\n        );\n      } else {\n        return (\n          <View\n            style={{\n              marginBottom: 25,\n              flexWrap: \"wrap\",\n              width: \"100%\",\n            }}\n            key={index}\n          >\n            <Text style={{ fontWeight: \"700\", fontSize: 18 }}>\n              Label: {e.label}\n            </Text>\n            <View style={{ flexWrap: \"wrap\", flexDirection: \"row\" }}>\n              {e.optionsList.map((selection, listIndex) => {\n                return (\n                  <TouchableOpacity\n                    key={listIndex}\n                    style={[\n                      myObjProfile.options[index].optionsList[listIndex]\n                        .selected == true && {\n                        backgroundColor: \"green\",\n                      },\n                      {\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        padding: 10,\n                        margin: 5,\n                        borderColor: \"black\",\n                        borderWidth: 2,\n                        // width: \"50%\",\n                      },\n                    ]}\n                    onPress={() => {\n                      const newMyObjProfile = structuredClone(myObjProfile);\n                      if (\n                        !newMyObjProfile.options[index].optionsList[listIndex]\n                          .selected == false\n                      ) {\n                        newMyObjProfile.options[index].optionsList[\n                          listIndex\n                        ].selected = false;\n                        settotal((prevState) =>\n                          (\n                            parseFloat(prevState) -\n                            parseFloat(\n                              newMyObjProfile.options[index].optionsList[\n                                listIndex\n                              ].priceIncrease !== null\n                                ? newMyObjProfile.options[index].optionsList[\n                                    listIndex\n                                  ].priceIncrease\n                                : 0\n                            )\n                          ).toFixed(2)\n                        );\n                      } else {\n                        if (\n                          newMyObjProfile.options[index].optionsList.filter(\n                            (op) => op.selected === true\n                          ).length < parseInt(e.numOfSelectable) ||\n                          !e.numOfSelectable\n                        ) {\n                          newMyObjProfile.options[index].optionsList[\n                            listIndex\n                          ].selected = true;\n                          settotal((prevState) =>\n                            (\n                              parseFloat(prevState) +\n                              parseFloat(\n                                newMyObjProfile.options[index].optionsList[\n                                  listIndex\n                                ].priceIncrease !== null\n                                  ? newMyObjProfile.options[index].optionsList[\n                                      listIndex\n                                    ].priceIncrease\n                                  : 0\n                              )\n                            ).toFixed(2)\n                          );\n                        }\n                      }\n                      setmyObjProfile(newMyObjProfile);\n                    }}\n                  >\n                    <Text style={styles.h2Black}>Name: {selection.label}</Text>\n                    <View style={{ width: 20 }} />\n                    <Text style={styles.h2Black}>\n                      Price: $\n                      {selection.priceIncrease !== null\n                        ? selection.priceIncrease\n                        : 0}\n                    </Text>\n                  </TouchableOpacity>\n                );\n              })}\n            </View>\n          </View>\n        );\n      }\n    } else if (isSelected === false) {\n      const newMyObjProfile = structuredClone(myObjProfile);\n      let newSubtract = 0;\n      newMyObjProfile.options[index].optionsList.forEach(\n        (item, indexOfItem) => {\n          if (item.selected === true) {\n            newSubtract += parseFloat(\n              newMyObjProfile.options[index].optionsList[indexOfItem]\n                .priceIncrease !== null\n                ? priceIncrease\n                : 0\n            );\n            newMyObjProfile.options[index].optionsList[indexOfItem].selected =\n              false;\n          }\n        }\n      );\n      if (newSubtract > 0) {\n        settotal((prevState) =>\n          (parseFloat(prevState) - newSubtract).toFixed(2)\n        );\n        setmyObjProfile(newMyObjProfile);\n      }\n    }\n    // return null;\n  };\n\n  const AddToCart = () => {\n    const opsArray = [];\n\n    myObjProfile.options.forEach((op) => {\n      let opWVal = `${op.label}: `;\n      const numberOfSelected = op.optionsList.filter(\n        (f) => f.selected === true\n      ).length;\n\n      if (numberOfSelected > 0) {\n        opWVal = `${op.label}: `;\n\n        op.optionsList.map((e, index) => {\n          if (e.selected === true) {\n            if (index < op.optionsList.length - 1 && numberOfSelected > 1) {\n              opWVal += e.label + \" , \";\n            } else {\n              opWVal += e.label;\n            }\n          }\n        });\n        opsArray.push(opWVal);\n      }\n    });\n\n    addCartState({\n      name: myObjProfile.name,\n      price: total,\n      description: myObj.description,\n      options: opsArray,\n      extraDetails: extraInput,\n    });\n\n    navigation.goBack();\n    setmyObjProfile(myObj);\n    settotal(myObjProfile.price);\n    setextraInput(null);\n  };\n\n  return (\n    <ScrollView style={styles.modalContainer}>\n      <Text style={styles.h2Black}>Name: {myObj.name}</Text>\n      {myObj.description && (\n        <Text style={styles.h2Black}>Name: {myObj.description}</Text>\n      )}\n      <Text style={[{ marginBottom: 25 }, styles.h2Black]}>Price: {total}</Text>\n      {myObjProfile.options.map((e, index) => (\n        <DisplayOption e={e} index={index} key={index} />\n      ))}\n      <TextInput\n        placeholder=\"Write any extra info here..\"\n        multiline={true}\n        onChangeText={(val) => setextraInput(val)}\n        value={extraInput}\n        style={{ marginTop: 15, marginBottom: 15 }}\n        inputStyle={{ padding: 10 }}\n      />\n      <Button title=\"Add To Cart\" onPress={AddToCart} style={styles.btn} />\n      <Button\n        title=\"Close\"\n        onPress={() => navigation.goBack()}\n        style={styles.btn}\n      />\n    </ScrollView>\n  );\n};\n\nexport default ProductListing;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 10,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n  },\n  btn: {\n    marginBottom: 25,\n  },\n  dropDown: {\n    marginBottom: 25,\n  },\n  h2White: {\n    fontSize: 17,\n    color: \"white\",\n  },\n  h2Black: {\n    fontSize: 20,\n    color: \"black\",\n  },\n});\n","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst SettingsHome = () => {\n  return (\n    <View>\n      <Text>SettingsHome</Text>\n    </View>\n  )\n}\n\nexport default SettingsHome\n\nconst styles = StyleSheet.create({})","import { Modal, ScrollView, StyleSheet, View } from \"react-native\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { Button, Text } from \"@react-native-material/core\";\nimport { storeDetailState, transListState } from \"state/state\";\nimport { updateTransList } from \"state/firebaseFunctions\";\nimport ChangeScreen from \"./ChangeScreen\";\n\nconst CompletePaymentPhoneOrder = () => {\n  const transList = transListState.use();\n  const [changeModal, setChangeModal] = useState(false);\n  const [currentOrder, setcurrentOrder] = useState({\n    element: null,\n    index: null,\n  });\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ textAlign: \"center\", margin: 25 }}>\n        Current Open Orders\n      </Text>\n      <View style={styles.contentContainer}>\n        {transList ? (\n          transList?.map((element, index) => {\n            if (\n              element.id?.substr(element.id?.length - 2, 2) === \"-l\" &&\n              element.completed === false &&\n              element.cancelled !== true\n            ) {\n              const date = element.date\n                ? new Date(element.date.seconds * 1000)\n                : element.date_created\n                ? new Date(element.date_created)\n                : null;\n\n              return (\n                <View\n                  style={{\n                    backgroundColor: \"grey\",\n                    padding: 30,\n                    margin: 10,\n                  }}\n                  key={index}\n                >\n                  <Text>{date.toLocaleString()}</Text>\n                  {element.cart?.map((cartItem, index) => (\n                    <View style={{ marginBottom: 20 }} key={index}>\n                      <Text>Name: {cartItem.name}</Text>\n                      <Text>Quantity: {cartItem.quantity}</Text>\n                      <Text>Price: {cartItem.price}</Text>\n                      {cartItem.options &&\n                        cartItem.options?.map((option) => (\n                          <Text>{option}</Text>\n                        ))}\n                    </View>\n                  ))}\n                  {element.line_items?.map((cartItem, index) => (\n                    <View style={{ marginBottom: 20 }} key={index}>\n                      <Text>Name: {cartItem.name}</Text>\n                      <Text>Quantity: {cartItem.quantity}</Text>\n                      <Text>Price: {cartItem.price}</Text>\n                      {cartItem.meta_data?.map((meta, index) => {\n                        if (index === cartItem.meta_data.length - 1) return;\n                        return <Text>{`${meta.key} : ${meta.value}`}</Text>;\n                      })}\n                    </View>\n                  ))}\n                  <Text>{element.customer?.name}</Text>\n                  <Text>{element.customer?.phone}</Text>\n                  <Text>{element.customer?.address}</Text>\n                  <Text>\n                    Method:{\" \"}\n                    {element.method === \"pickupOrder\" ? \"Pick Up\" : \"Delivery\"}\n                  </Text>\n                  <Button\n                    title=\"Complete Order\"\n                    onPress={() => {\n                      if (element.method === \"pickupOrder\") {\n                        setChangeModal(true);\n                        setcurrentOrder({ element: element, index: index });\n                      } else {\n                        const localChange = structuredClone(transList);\n                        localChange[index].completed = true;\n                        updateTransList(localChange);\n                      }\n                    }}\n                    style={{ marginBottom: 10 }}\n                  />\n                  <Button\n                    title=\"Cancel Order\"\n                    onPress={() => {\n                      const localChange = structuredClone(transList);\n                      localChange[index].cancelled = true;\n                      updateTransList(localChange);\n                    }}\n                  />\n                </View>\n              );\n            }\n          })\n        ) : (\n          <Text>No Orders Yet</Text>\n        )}\n      </View>\n      <Modal visible={changeModal}>\n        <ChangeScreen\n          setChangeModal={setChangeModal}\n          setcurrentOrder={setcurrentOrder}\n          order={currentOrder.element}\n          completeOrder={() => {\n            const localChange = structuredClone(transList);\n            localChange[currentOrder.index].completed = true;\n            updateTransList(localChange);\n            setChangeModal(false);\n          }}\n        />\n      </Modal>\n    </View>\n  );\n};\n\nexport default CompletePaymentPhoneOrder;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\",\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n});\n","import React, { useState } from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Home from \"screens/authed/HomeScreen\";\nimport Register from \"screens/non-authed/Register\";\nimport EditProductList from \"components/EditProductList\";\nimport AddProduct from \"components/TestAdd\";\nimport WoocommerceSettings from \"components/WoocommerceSettings\";\nimport EditStoreDetails from \"components/EditStoreDetails\";\nimport AddCategory from \"components/AddCategory\";\nimport ViewTransactions from \"screens/authed/ViewTransactions\";\nimport CustomHeader from \"components/CustomHeader\";\nimport ProductListing from \"components/ProductListing\";\nimport SettingsHome from \"screens/authed/SettingsHome\";\nimport CompletePaymentPhoneOrder from \"components/CompletePaymentPhoneOrder\";\n\nconst Stack = createStackNavigator();\n\nexport default function TmpAuthStack() {\n  return (\n    <Stack.Navigator\n    // screenOptions={{\n    //   header: (props) => <CustomHeader {...props} />,\n    //   headerMode: \"screen\",\n    // }}\n    >\n      <Stack.Screen\n        name=\"Home\"\n        component={Home}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen name=\"SettingsHome\" component={SettingsHome} />\n      <Stack.Screen name=\"EditCategories\" component={AddCategory} />\n      <Stack.Screen name=\"EditProductList\" component={EditProductList} />\n      <Stack.Screen\n        name=\"AddProduct\"\n        component={AddProduct}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen name=\"EditWoocommerce\" component={WoocommerceSettings} />\n      <Stack.Screen name=\"StoreDetails\" component={EditStoreDetails} />\n      <Stack.Screen name=\"Transactions\" component={ViewTransactions} />\n      <Stack.Screen\n        name=\"ProductListing\"\n        component={ProductListing}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"CompletePaymentPhoneOrder\"\n        component={CompletePaymentPhoneOrder}\n      />\n    </Stack.Navigator>\n  );\n}\n","import React from \"react\";\nimport TabNav from \"./TabNav\";\nimport TmpAuthStack from \"./TmpAuthStack\";\n\nconst MainAuthed = () => {\n  // return <TabNav />;\n  return <TmpAuthStack />;\n};\n\nexport default MainAuthed;\n","import { View, Text, TouchableOpacity } from \"react-native\";\nimport React from \"react\";\n\nconst CustomButton = ({ containerStyle, titleStyle, title, onPress }) => {\n  return (\n    <TouchableOpacity\n      style={[\n        {\n          backgroundColor: \"rgba(51,81,243,1)\",\n          borderRadius: 30,\n          width: 160,\n          height: 50,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        },\n        containerStyle && containerStyle,\n      ]}\n      onPress={onPress}\n    >\n      <Text\n        style={[\n          { fontSize: 18, color: \"white\", fontWeight: \"600\" },\n          titleStyle && titleStyle,\n        ]}\n      >\n        {title}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nexport default CustomButton;\n","import { Image, StyleSheet, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport {\n  TextInput,\n  IconButton,\n  Button,\n  Text,\n  Switch,\n} from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { signIn } from \"state/firebaseFunctions\";\nimport Img from \"assets/random-img1.png\";\nimport Logo from \"assets/dpos-logo-black.png\";\nimport CustomButton from \"components/CustomButton\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\n\nconst Login = ({ navigation }) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const attemptSignIn = () => {\n    if (email && password) {\n      signIn(email, password);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.leftColorAccent}></View>\n      <View style={styles.rightHalfContainer}>\n        <View style={styles.loginContainer}>\n          <Image\n            source={Logo}\n            style={{ width: 250, height: 160, resizeMode: \"contain\" }}\n          />\n          <Text\n            style={{\n              marginBottom: 35,\n              color: \"rgba(155,155,155,1)\",\n              fontSize: 20,\n            }}\n          >\n            Online E-Transaction Point-of-Sale Software\n          </Text>\n          <Text\n            style={{\n              color: \"rgba(0,0,0,1)\",\n              fontSize: 20,\n              marginBottom: 10,\n              fontWeight: \"600\",\n              marginLeft: \"3%\",\n            }}\n          >\n            Login\n          </Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              backgroundColor: \"rgba(241,241,241,1)\",\n              borderRadius: 30,\n              height: 60,\n              marginBottom: 25,\n            }}\n          >\n            <View\n              style={{\n                width: 60,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgba(218,216,216,1)\",\n                borderRadius: 30,\n                height: 60,\n              }}\n            >\n              <Ionicons\n                name=\"person-circle-outline\"\n                size={32}\n                color=\"rgba(71,106,229,1)\"\n              />\n            </View>\n            <TextInput\n              placeholder=\"Enter email\"\n              style={{ width: \"80%\" }}\n              inputStyle={{ backgroundColor: \"rgba(241,241,241,1)\" }}\n              value={email}\n              onChangeText={(val) => setEmail(val)}\n              autoCorrect={false}\n              textContentType={\"emailAddress\"}\n            />\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              backgroundColor: \"rgba(241,241,241,1)\",\n              borderRadius: 30,\n              height: 60,\n              marginBottom: 25,\n            }}\n          >\n            <View\n              style={{\n                width: 60,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgba(218,216,216,1)\",\n                borderRadius: 30,\n                height: 60,\n              }}\n            >\n              <Ionicons\n                name=\"finger-print\"\n                size={32}\n                color=\"rgba(71,106,229,1)\"\n              />\n            </View>\n            <TextInput\n              placeholder=\"Enter Password\"\n              style={{ width: \"75%\" }}\n              inputStyle={{ backgroundColor: \"rgba(241,241,241,1)\" }}\n              value={password}\n              onChangeText={(val) => setPassword(val)}\n              secureTextEntry={!showPassword}\n            />\n            <View\n              style={{\n                width: 60,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                height: 60,\n              }}\n            >\n              {!showPassword ? (\n                <Ionicons\n                  name=\"eye\"\n                  size={32}\n                  color=\"rgba(74,74,74,1)\"\n                  onPress={() => setShowPassword((prev) => !prev)}\n                />\n              ) : (\n                <Ionicons\n                  name=\"eye-off\"\n                  size={32}\n                  color=\"rgba(74,74,74,1)\"\n                  onPress={() => setShowPassword((prev) => !prev)}\n                />\n              )}\n            </View>\n          </View>\n          <CustomButton title=\"Login\" onPress={attemptSignIn} />\n          <Text\n            style={{\n              color: \"rgba(0,0,0,1)\",\n              fontSize: 15,\n              marginBottom: 10,\n              fontWeight: \"400\",\n              marginLeft: \"3%\",\n              marginTop: 25,\n            }}\n          >\n            Or{\" \"}\n            <Text\n              style={{ color: \"blue\" }}\n              onPress={() => navigation.navigate(\"Register\")}\n            >\n              Register\n            </Text>\n          </Text>\n        </View>\n        <Image source={Img} style={styles.img} />\n      </View>\n      {/* <SafeAreaView style={styles.safeareaContainer}>\n        <Image\n          source={require(\"assets/pathblazer-logo.png\")}\n          style={styles.logo}\n        />\n        <View style={styles.innerContainer}>\n          <TextInput\n            label=\"Email\"\n            variant=\"outlined\"\n            style={{ width: \"100%\", marginBottom: 10 }}\n            value={email}\n            onChangeText={(val) => setEmail(val)}\n            autoCorrect={false}\n            textContentType={\"emailAddress\"}\n          />\n          <TextInput\n            label=\"Password\"\n            variant=\"outlined\"\n            trailing={(props) => (\n              <IconButton\n                onPress={() => setShowPassword((prevState) => !prevState)}\n                icon={(props) => <Icon name=\"eye\" {...props} />}\n                {...props}\n              />\n            )}\n            value={password}\n            onChangeText={(val) => setPassword(val)}\n            secureTextEntry={!showPassword}\n            style={{ width: \"100%\" }}\n          />\n        </View>\n        <View style={styles.innerContainer}>\n          <Button\n            title=\"Login\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            style={{ marginBottom: 10 }}\n            onPress={attemptSignIn}\n          />\n          <Text variant=\"subtitle1\" style={{ marginBottom: 10 }}>\n            Or\n          </Text>\n          <Button\n            title=\"Register\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"grey\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"Register\")}\n          />\n        </View>\n      </SafeAreaView> */}\n    </View>\n  );\n};\n\nexport default Login;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: \"white\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n  },\n  leftColorAccent: {\n    backgroundColor: \"rgba(31,35,48,1)\",\n    borderTopRightRadius: 20,\n    borderBottomRightRadius: 20,\n    width: \"8%\",\n    height: \"100%\",\n  },\n  rightHalfContainer: {\n    width: \"92%\",\n    height: \"100%\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingLeft: 70,\n  },\n  loginContainer: {\n    padding: 20,\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      height: 0,\n      width: 3,\n    },\n    elevation: 150,\n    shadowOpacity: 0.22,\n    shadowRadius: 50,\n    borderRadius: 30,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    width: 518,\n    height: 676,\n  },\n  img: {\n    height: 768,\n    width: 541,\n    resizeMode: \"contain\",\n  },\n});\n","import { Image, StyleSheet, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport {\n  TextInput,\n  IconButton,\n  Button,\n  Text,\n} from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { signUp } from \"state/firebaseFunctions\";\n\nconst Register = ({ navigation }) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const attemptSignUp = () => {\n    if (email && password) {\n      signUp(email, password);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaView style={styles.safeareaContainer}>\n        <Image\n          source={require(\"assets/pathblazer-logo.png\")}\n          style={styles.logo}\n        />\n        <View style={styles.innerContainer}>\n          <TextInput\n            label=\"Email\"\n            variant=\"outlined\"\n            style={{ width: \"100%\", marginBottom: 10 }}\n            value={email}\n            onChangeText={(val) => setEmail(val)}\n            autoCorrect={false}\n            textContentType={\"emailAddress\"}\n          />\n          <TextInput\n            label=\"Password\"\n            variant=\"outlined\"\n            trailing={(props) => (\n              <IconButton\n                onPress={() => setShowPassword((prevState) => !prevState)}\n                icon={(props) => <Icon name=\"eye\" {...props} />}\n                {...props}\n              />\n            )}\n            value={password}\n            onChangeText={(val) => setPassword(val)}\n            secureTextEntry={!showPassword}\n            style={{ width: \"100%\" }}\n          />\n        </View>\n        <View style={styles.innerContainer}>\n          <Button\n            title=\"Register\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            style={{ marginBottom: 10 }}\n            onPress={attemptSignUp}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Text variant=\"subtitle1\" style={{ marginBottom: 10 }}>\n              Or\n            </Text>\n            <Text\n              variant=\"subtitle1\"\n              style={{ marginBottom: 10, marginLeft: 5, color: \"blue\" }}\n              onPress={() => navigation.goBack()}\n            >\n              Go Back\n            </Text>\n          </View>\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nexport default Register;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  safeareaContainer: {\n    flex: 1,\n    height: \"60%\",\n    width: \"80%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 250,\n    resizeMode: \"contain\",\n  },\n  innerContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","import { Button } from \"@react-native-material/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { TouchableOpacity, View, Text, Image } from \"react-native\";\nimport { auth } from \"state/firebaseConfig\";\nimport { sectionState, setsectionState, userStoreState } from \"state/state\";\nimport Logo from \"../assets/dpos-logo.png\";\n\nconst WebHomeHeader = ({ navigation, route, options, back }) => {\n  return (\n    <View\n      style={{\n        width: \"100%\",\n        height: 90,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"rgba(31,35,48,1)\",\n        paddingLeft: 40,\n        paddingRight: 40,\n      }}\n    >\n      <Image\n        source={Logo}\n        style={{ width: 250, height: 160, resizeMode: \"contain\" }}\n      />\n      <TouchableOpacity\n        style={{\n          backgroundColor: \"rgba(51,81,243,1)\",\n          borderRadius: 30,\n          width: 160,\n          height: 50,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => {\n          navigation.navigate(\"Login\");\n        }}\n      >\n        <Text style={{ fontSize: 18, color: \"white\", fontWeight: \"600\" }}>\n          Login\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default WebHomeHeader;\n","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst WebHome = () => {\n  return (\n    <View style={styles.main}>\n      <Text>WebHome</Text>\n    </View>\n  )\n}\n\nexport default WebHome\n\nconst styles = StyleSheet.create({\n    main: {flex: 1,\n    backgroundColor: 'white'}\n})","import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Login from \"screens/non-authed/Login\";\nimport Register from \"screens/non-authed/Register\";\nimport WebHomeHeader from \"components/WebHomeHeader\";\nimport WebHome from \"screens/non-authed/WebHome\";\n\nconst Stack = createStackNavigator();\n\nexport default function MainNonAuth() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        header: (props) => <WebHomeHeader {...props} />,\n        headerMode: \"screen\",\n      }}\n    >\n      <Stack.Screen name=\"WebHome\" component={WebHome} />\n      <Stack.Screen\n        name=\"Login\"\n        component={Login}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"Register\"\n        component={Register}\n        options={{ headerShown: false }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport MainAuthed from \"./authed/MainAuthed\";\nimport {\n  setStoreDetailState,\n  setTransListState,\n  setUserState,\n  setUserStoreState,\n  setWoocommerceState,\n  storeDetailState,\n  transListState,\n  userState,\n  woocommerceState,\n} from \"state/state\";\nimport MainNonAuth from \"./non-authed/MainNonAuth\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport Spinner from \"components/Spinner\";\nimport { updateTransList } from \"state/firebaseFunctions\";\n\nconst RouteManager = () => {\n  const userS = userState.use();\n  const wooCredentials = woocommerceState.use();\n  const transList = transListState.use();\n  const storeDetails = storeDetailState.use();\n  const [loading, setloading] = useState(true);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUserState(user);\n        db.collection(\"users\")\n          .doc(user.uid)\n          .get()\n          .then((doc) => {\n            setUserStoreState({\n              products: doc.data().products,\n              categories: doc.data().categories,\n            });\n            if (doc.data().transList) {\n              setTransListState(doc.data().transList);\n            }\n            if (doc.data().wooCredentials) {\n              setWoocommerceState(doc.data().wooCredentials);\n            }\n            if (doc.data().storeDetails) {\n              setStoreDetailState(doc.data().storeDetails);\n            }\n          });\n        setTimeout(() => {\n          setloading(false);\n        }, 1);\n      } else {\n        setUserState(null);\n        setUserStoreState({ products: null, categories: null });\n        setTimeout(() => {\n          setloading(false);\n        }, 1);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (userS) {\n      const unsub = db\n        .collection(\"users\")\n        .doc(userS.uid)\n        .onSnapshot((doc) => {\n          setloading(true);\n          setUserStoreState({\n            products: doc.data().products,\n            categories: doc.data().categories,\n          });\n          if (doc.data().transList) {\n            setTransListState(doc.data().transList);\n          }\n          if (doc.data().wooCredentials) {\n            setWoocommerceState(doc.data().wooCredentials);\n          }\n          if (doc.data().storeDetails) {\n            setStoreDetailState(doc.data().storeDetails);\n          }\n          setTimeout(() => {\n            setloading(false);\n          }, 1);\n        });\n      return () => unsub();\n    }\n  }, [userS]);\n\n  useEffect(() => {\n    if (wooCredentials.useWoocommerce === true) {\n      const interval = setInterval(() => {\n        const WooCommerceAPI = require(\"woocommerce-api\");\n\n        const WooCommerce = new WooCommerceAPI({\n          url: wooCredentials.apiUrl,\n          consumerKey: wooCredentials.ck,\n          consumerSecret: wooCredentials.cs,\n          wpAPI: true,\n          version: \"wc/v1\",\n        });\n\n        let page = 1;\n        let orders = [];\n\n        const getOrders = async () => {\n          const response = await WooCommerce.getAsync(\n            `orders?page=${page}&per_page=100`\n          );\n          const data = JSON.parse(response.body);\n          orders = [...orders, ...data];\n          if (data.length === 100) {\n            page++;\n            getOrders();\n          } else {\n            console.log(orders);\n          }\n        };\n\n        getOrders().then(() => {\n          const array1 = transList;\n          const array2 = orders;\n\n          const newArray = [];\n\n          array1.concat(array2).reduce(function (acc, curr) {\n            if (!acc.includes(curr.id)) {\n              acc.push(curr.id);\n              newArray.push(curr);\n            }\n            return acc;\n          }, []);\n\n          //console.log('checking')\n          // console.log('translist: ', transList.filter(e => e.id))\n          // console.log('res: ', orders)\n          // console.log('data: ', data)\n          console.log(\"new array: \", newArray);\n\n          if (newArray.length > transList.length) {\n            console.log(\"new item\");\n            const newItems = structuredClone(newArray).splice(\n              transList.length,\n              newArray.length - transList.length\n            );\n            console.log(\"NEW ITEMS \", newItems);\n            updateTransList(newArray);\n\n            if (newItems.length > 1) {\n              newItems.forEach((e) => {\n                const printData = [];\n\n                printData.push(\n                  \"\\x1B\\x40\", // init\n                  \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                  storeDetails.name,\n                  \"\\x0A\",\n                  storeDetails.address + \"\\x0A\",\n                  storeDetails.website + \"\\x0A\", // text and line break\n                  storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                  e.date_created + \"\\x0A\",\n                  \"\\x0A\",\n                  \"Online Order\" + \"\\x0A\", // text and line break\n                  `Transaction # ${e.number}` + \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n                );\n\n                e.line_items?.map((cartItem) => {\n                  printData.push(\"\\x0A\");\n                  printData.push(`Name: ${cartItem.name}`);\n                  printData.push(\"\\x0A\");\n                  printData.push(`Quantity: ${cartItem.quantity}`);\n                  printData.push(\"\\x0A\");\n                  printData.push(`Price: $${cartItem.price}`);\n                  printData.push(\"\\x0A\");\n\n                  if (cartItem.meta_data) {\n                    cartItem.meta_data?.map((meta, index) => {\n                      if (index === 0) {\n                        printData.push(`${meta.key} : ${meta.value}`);\n                        if (cartItem.meta_data[index + 1].key !== meta.key) {\n                          printData.push(\"\\x0A\");\n                        }\n                      } else {\n                        if (index !== cartItem.meta_data.length - 1) {\n                          if (cartItem.meta_data[index - 1].key === meta.key) {\n                            printData.push(` , ${meta.value}`);\n                          } else {\n                            printData.push(`${meta.key} : ${meta.value}`);\n                          }\n\n                          if (cartItem.meta_data[index + 1].key !== meta.key) {\n                            printData.push(\"\\x0A\");\n                          }\n                        }\n                      }\n                    });\n                  } else {\n                    printData.push(\"\\x0A\" + \"\\x0A\");\n                  }\n                });\n\n                printData.push(\"\\x0A\");\n                printData.push(\"\\x0A\");\n                printData.push(`Customer Details:`);\n                printData.push(\"\\x0A\");\n                printData.push(`Address: ${e.shipping.address_1}`);\n                printData.push(\"\\x0A\");\n                printData.push(`City: ${e.shipping.city}`);\n                printData.push(\"\\x0A\");\n                printData.push(`Zip/Postal Code: ${e.shipping.postcode}`);\n                printData.push(\"\\x0A\");\n                printData.push(`Province/State: ${e.shipping.state}`);\n                printData.push(\"\\x0A\");\n                printData.push(\n                  `Name: ${e.shipping.first_name} ${e.shipping.last_name}`\n                );\n                printData.push(\"\\x0A\");\n                e.shipping_lines.map((line) =>\n                  printData.push(`Shipping Method: ${line.method_title}`)\n                );\n                printData.push(\"\\x0A\");\n                printData.push(\"\\x0A\");\n\n                printData.push(\n                  \"\\x0A\",\n                  \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                  \"\\x0A\" + \"\\x0A\",\n                  \"Payment Method: \" + e.payment_method_title + \"\\x0A\" + \"\\x0A\",\n                  \"Total Including (13% Tax): \" +\n                    \"$\" +\n                    (parseFloat(e.total) + parseFloat(e.total_tax)).toFixed(2) +\n                    \"\\x0A\" +\n                    \"\\x0A\",\n                  \"------------------------------------------\" + \"\\x0A\",\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\" // line break\n                );\n\n                printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n                async () =>\n                  await fetch(\"http://localhost:8080/print\", {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify({\n                      printData: printData,\n                      comSelected: storeDetails.comSelected,\n                    }),\n                  })\n                    .then((response) => response.json())\n                    .then((respData) => {\n                      console.log(respData);\n                    })\n                    .catch((e) => console.log(\"Error with printer\"));\n              });\n            } else {\n              const e = newItems[0];\n              const printData = [];\n\n              printData.push(\n                \"\\x1B\" + \"\\x40\", // init\n                \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                storeDetails.name,\n                \"\\x0A\",\n                storeDetails.address + \"\\x0A\",\n                storeDetails.website + \"\\x0A\", // text and line break\n                storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                e.date_created + \"\\x0A\",\n                \"\\x0A\",\n                \"Online Order\" + \"\\x0A\", // text and line break\n                `Transaction # ${e.number}` + \"\\x0A\",\n                \"\\x0A\",\n                \"\\x0A\",\n                \"\\x0A\",\n                \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n              );\n\n              e.line_items?.map((cartItem) => {\n                printData.push(\"\\x0A\");\n                printData.push(`Name: ${cartItem.name}`);\n                printData.push(\"\\x0A\");\n                printData.push(`Quantity: ${cartItem.quantity}`);\n                printData.push(\"\\x0A\");\n                printData.push(`Price: $${cartItem.price}`);\n                printData.push(\"\\x0A\");\n\n                if (cartItem.meta_data) {\n                  cartItem.meta_data?.map((meta, index) => {\n                    if (index === 0) {\n                      printData.push(`${meta.key} : ${meta.value}`);\n                      if (cartItem.meta_data[index + 1].key !== meta.key) {\n                        printData.push(\"\\x0A\");\n                      }\n                    } else {\n                      if (index !== cartItem.meta_data.length - 1) {\n                        if (cartItem.meta_data[index - 1].key === meta.key) {\n                          printData.push(` , ${meta.value}`);\n                        } else {\n                          printData.push(`${meta.key} : ${meta.value}`);\n                        }\n\n                        if (cartItem.meta_data[index + 1].key !== meta.key) {\n                          printData.push(\"\\x0A\");\n                        }\n                      }\n                    }\n                  });\n                } else {\n                  printData.push(\"\\x0A\" + \"\\x0A\");\n                }\n              });\n\n              printData.push(\"\\x0A\");\n              printData.push(\"\\x0A\");\n              printData.push(`Customer Details:`);\n              printData.push(\"\\x0A\");\n              printData.push(`Address: ${e.shipping.address_1}`);\n              printData.push(\"\\x0A\");\n              printData.push(`City: ${e.shipping.city}`);\n              printData.push(\"\\x0A\");\n              printData.push(`Zip/Postal Code: ${e.shipping.postcode}`);\n              printData.push(\"\\x0A\");\n              printData.push(`Province/State: ${e.shipping.state}`);\n              printData.push(\"\\x0A\");\n              printData.push(\n                `Name: ${e.shipping.first_name} ${e.shipping.last_name}`\n              );\n              printData.push(\"\\x0A\");\n              e.shipping_lines.map((line) =>\n                printData.push(`Shipping Method: ${line.method_title}`)\n              );\n              printData.push(\"\\x0A\");\n              printData.push(\"\\x0A\");\n\n              printData.push(\n                \"\\x0A\",\n                \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                \"\\x0A\" + \"\\x0A\",\n                \"Payment Method: \" + e.payment_method_title + \"\\x0A\" + \"\\x0A\",\n                \"Total Including (13% Tax): \" +\n                  \"$\" +\n                  (parseFloat(e.total) + parseFloat(e.total_tax)).toFixed(2) +\n                  \"\\x0A\" +\n                  \"\\x0A\",\n                \"------------------------------------------\" + \"\\x0A\",\n                \"\\x0A\", // line break\n                \"\\x0A\", // line break\n                \"\\x0A\", // line break\n                \"\\x0A\", // line break\n                \"\\x0A\", // line break\n                \"\\x0A\" // line break\n              );\n\n              printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n              fetch(\"http://localhost:8080/print\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  printData: printData,\n                  comSelected: storeDetails.comSelected,\n                }),\n              })\n                .then((response) => response.json())\n                .then((respData) => {\n                  console.log(respData);\n                })\n                .catch((e) => alert(\"Error with printer\"));\n            }\n          }\n        });\n      }, 5000); // this will check for new orders every minute\n      return () => clearInterval(interval);\n    }\n  }, [wooCredentials, transList]);\n\n  return (\n    <NavigationContainer>\n      {loading ? (\n        <Spinner isModalVisible={true} />\n      ) : (\n        <>{userS ? <MainAuthed /> : <MainNonAuth />}</>\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default RouteManager;\n","import React from \"react\";\nimport RouteManager from \"navigation/RouteManager\";\nimport \"react-native-gesture-handler\";\n\n//Do this before syncing git config --global core.editor \"code --wait\"\n\nconst App = () => {\n  return <RouteManager />;\n};\n\n//hello love u\nexport default App;\n","module.exports = __webpack_public_path__ + \"static/media/pathblazer-logo.17137072.png\";"],"sourceRoot":""}