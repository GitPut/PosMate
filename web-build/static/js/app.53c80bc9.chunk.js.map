{"version":3,"sources":["assets/pathblazer-logo.png","state/state.ts","components/DisplayTest.tsx","screens/authed/MenuScreen.tsx","components/DeliveryScreen.tsx","components/CashScreen.tsx","components/ChangeScreen.tsx","state/firebaseConfig.ts","state/firebaseFunctions.ts","screens/authed/CartScreen.tsx","screens/authed/ViewTransactions.tsx","components/Spinner.tsx","components/AddCategory.tsx","components/DropDown.tsx","components/AddProduct.tsx","components/EditProductList.tsx","components/WoocommerceSettings.tsx","components/EditStoreDetails.tsx","screens/authed/HomeScreen.tsx","navigation/authed/TmpAuthStack.tsx","navigation/authed/MainAuthed.tsx","screens/non-authed/Login.tsx","screens/non-authed/Register.tsx","navigation/non-authed/MainNonAuth.tsx","navigation/RouteManager.tsx","App.tsx"],"names":["module","exports","userState","entity","setUserState","val","set","cartState","setCartState","userStoreState","products","categories","setUserStoreState","transListState","setTransListState","woocommerceState","apiUrl","ck","cs","useWoocommerce","setWoocommerceState","storeDetailState","name","address","phoneNumber","website","setStoreDetailState","DisplayTest","product","productIndex","myObj","useState","myObjProfile","setmyObjProfile","price","total","settotal","modalVisible","setModalVisible","DisplayOption","selectedValueList","e","index","isSelected","selectedCaseList","options","filter","op","label","selectedCaseKey","length","optionsList","opL","selectedCaseValue","selected","View","style","marginBottom","Text","fontWeight","fontSize","map","selection","listIndex","TouchableOpacity","backgroundColor","borderColor","borderWidth","flexDirection","justifyContent","padding","margin","onPress","newMyObjProfile","structuredClone","prevState","parseFloat","priceIncrease","parseInt","numOfSelectable","styles","h2Black","newSubtract","forEach","item","indexOfItem","title","touchable","Modal","visible","ScrollView","modalContainer","opsArray","opWVal","numberOfSelected","f","push","toFixed","description","btn","StyleSheet","create","sizeRow","alignItems","halfRow","width","toppingsContainer","flex","flexWrap","marginTop","dropDown","h2White","color","MenuScreen","section","catalog","container","catagory","height","wrapper","paddingLeft","paddingRight","DeliveryScreen","setDeliveryModal","setOngoingDelivery","setName","setPhone","setAddress","phone","deliveryChecked","setDeliveryChecked","value","onValueChange","variant","input","onChangeText","autoCorrect","contentContainerStyle","CashScreen","setCashModal","GetTrans","setChangeDue","cash","setCash","ChangeScreen","setChangeModal","setTotal","storeDetails","use","data","fetch","method","headers","body","JSON","stringify","then","response","json","respData","console","log","catch","alert","openCash","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","updateData","collection","doc","currentUser","uid","update","updateTransList","transList","CartScreen","deliveryModal","cashModal","changeModal","ongoingDelivery","changeDue","cart","cartSub","setCartSub","useEffect","newVal","i","AddToList","payload","local","unshift","Print","transNum","today","Date","toLocaleDateString","toLocaleTimeString","cartItem","option","date","contentContainer","splice","disabled","ViewTransactions","settransList","todaysReceiptValue","todaysReceipts","todaysDetails","setTodaysDetails","sort","a","b","seconds","date_created","bDate","getTime","reverse","reduce","accumulator","current","textAlign","element","toLocaleString","quantity","line_items","meta_data","meta","key","printData","number","shipping","address_1","city","postcode","state","first_name","last_name","shipping_lines","line","method_title","payment_method_title","total_tax","paddingBottom","Spinner","isModalVisible","transparent","className","AddCategory","categoryName","setcategoryName","setisModalVisible","localCatalog","handleRemoveCategory","placeholder","DropDown","setValue","show","setShow","trailing","props","AddProduct","setProductModal","existingProduct","existingProductIndex","newProduct","setnewProduct","inputName","innerList","autoFocusOn","setautoFocusOn","handleDataUpdate","copyProductData","copy","scrollPosition","sessionStorage","getItem","window","scrollTo","removeItem","alignSelf","optionLblsValues","setoptionLblsValues","optionLbls","setoptionLbls","optionLblsLocal","checkUseE","localE","optionLblsValuesLocal","eVals","newOptionsList","setItem","pageYOffset","autoFocus","eInnerList","indexInnerList","marginLeft","marginRight","EditProductList","productModal","productEditModal","setProductEditModal","handleRemoveCatagory","borderRadius","WoocommerceSettings","wooCredentials","setapiUrl","setck","setcs","setuseWoocommerce","updateWooCredentials","EditStoreDetails","setname","setphoneNumber","setaddress","setwebsite","updateStoreDetails","HomeScreen","setSection","settings","setSettings","prevScreen","localStorage","titleStyle","signOut","category","Stack","createStackNavigator","TmpAuthStack","Navigator","screenOptions","headerShown","Screen","component","Home","MainAuthed","Login","navigation","email","setEmail","password","setPassword","showPassword","setShowPassword","safeareaContainer","Image","source","require","logo","innerContainer","textContentType","icon","secureTextEntry","uppercase","signInWithEmailAndPassword","signIn","navigate","resizeMode","Register","createUserWithEmailAndPassword","userAuth","user","paid","signUp","goBack","MainNonAuth","RouteManager","userS","loading","setloading","onAuthStateChanged","get","setTimeout","unsub","onSnapshot","interval","setInterval","Authorization","btoa","array2","newArray","concat","acc","curr","includes","transaction_id","newItems","error","clearInterval","NavigationContainer","App"],"mappings":"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","file":"static/js/app.53c80bc9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pathblazer-logo.17137072.png\";","import { entity } from \"simpler-state\";\n\nexport const userState = entity(null);\n\nexport const setUserState = (val) => {\n  userState.set(val);\n};\n\nexport const cartState = entity([]);\n\nexport const setCartState = (val) => {\n  cartState.set(val);\n};\n\nexport const addCartState = (val) => {\n  cartState.set((prevState) => [...prevState, val]);\n};\n\nexport const userStoreState = entity({ products: [], categories: [] });\n\nexport const setUserStoreState = (val) => {\n  userStoreState.set(val);\n};\n\nexport const transListState = entity([]);\n\nexport const setTransListState = (val) => {\n  transListState.set(val);\n};\n\nexport const woocommerceState = entity({\n  apiUrl: null,\n  ck: null,\n  cs: null,\n  useWoocommerce: false,\n});\n\nexport const setWoocommerceState = (val) => {\n  woocommerceState.set(val);\n};\n\nexport const storeDetailState = entity({\n  name: null,\n  address: null,\n  phoneNumber: null,\n  website: null\n});\n\nexport const setStoreDetailState = (val) => {\n  storeDetailState.set(val);\n};\n","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button } from \"@react-native-material/core\";\nimport { addCartState } from \"state/state\";\n\nconst DisplayTest = ({ product, productIndex }) => {\n  const myObj = product;\n  const [myObjProfile, setmyObjProfile] = useState(myObj);\n  const [total, settotal] = useState(myObj.price);\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const DisplayOption = ({ e, index }) => {\n    let isSelected = false;\n\n    const selectedCaseList = myObjProfile.options.filter(\n      (op) => op.label == e.selectedCaseKey\n    );\n\n    let selectedValueList;\n\n    if (selectedCaseList.length > 0) {\n      selectedValueList = selectedCaseList[0].optionsList.filter(\n        (opL) => opL.label == e.selectedCaseValue\n      );\n\n      if (selectedValueList.length > 0) {\n        isSelected = selectedValueList[0].selected === true;\n      }\n    }\n\n    if (e.selectedCaseKey === null || isSelected) {\n      return (\n        <View style={{ marginBottom: 25 }} key={index}>\n          <Text style={{ fontWeight: \"700\", fontSize: 18 }}>\n            Label: {e.label}\n          </Text>\n          {e.optionsList.map((selection, listIndex) => {\n            return (\n              <TouchableOpacity\n                key={listIndex}\n                style={[\n                  myObjProfile.options[index].optionsList[listIndex].selected ==\n                  true\n                    ? {\n                        backgroundColor: \"green\",\n                      }\n                    : {\n                        borderColor: \"black\",\n                        borderWidth: 2,\n                      },\n                  {\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    padding: 10,\n                    margin: 5,\n                  },\n                ]}\n                onPress={() => {\n                  const newMyObjProfile = structuredClone(myObjProfile);\n                  if (\n                    !newMyObjProfile.options[index].optionsList[listIndex]\n                      .selected == false\n                  ) {\n                    newMyObjProfile.options[index].optionsList[\n                      listIndex\n                    ].selected = false;\n                    settotal(\n                      (prevState) =>\n                        parseFloat(prevState) -\n                        parseFloat(\n                          newMyObjProfile.options[index].optionsList[listIndex]\n                            .priceIncrease\n                        )\n                    );\n                  } else {\n                    if (\n                      newMyObjProfile.options[index].optionsList.filter(\n                        (op) => op.selected === true\n                      ).length < parseInt(e.numOfSelectable) ||\n                      !e.numOfSelectable\n                    ) {\n                      newMyObjProfile.options[index].optionsList[\n                        listIndex\n                      ].selected = true;\n                      settotal(\n                        (prevState) =>\n                          parseFloat(prevState) +\n                          parseFloat(\n                            newMyObjProfile.options[index].optionsList[\n                              listIndex\n                            ].priceIncrease\n                          )\n                      );\n                    }\n                  }\n                  setmyObjProfile(newMyObjProfile);\n                }}\n              >\n                <Text style={styles.h2Black}>Name: {selection.label}</Text>\n                <Text style={styles.h2Black}>\n                  Price: ${selection.priceIncrease}\n                </Text>\n              </TouchableOpacity>\n            );\n          })}\n        </View>\n      );\n    } else if (isSelected === false) {\n      const newMyObjProfile = structuredClone(myObjProfile);\n      let newSubtract = 0;\n      newMyObjProfile.options[index].optionsList.forEach(\n        (item, indexOfItem) => {\n          if (item.selected === true) {\n            newSubtract += parseFloat(\n              newMyObjProfile.options[index].optionsList[indexOfItem]\n                .priceIncrease\n            );\n            newMyObjProfile.options[index].optionsList[indexOfItem].selected =\n              false;\n          }\n        }\n      );\n      if (newSubtract > 0) {\n        settotal((prevState) => parseFloat(prevState) - newSubtract);\n        setmyObjProfile(newMyObjProfile);\n      }\n    }\n    // return null;\n  };\n\n  const AddToCart = () => {\n    const opsArray = [];\n\n    myObjProfile.options.forEach((op) => {\n      let opWVal = `${op.label}: `;\n      const numberOfSelected = op.optionsList.filter(\n        (f) => f.selected === true\n      ).length;\n\n      if (numberOfSelected > 0) {\n        opWVal = `${op.label}: `;\n\n        op.optionsList.map((e, index) => {\n          if (e.selected === true) {\n            if (index < op.optionsList.length - 1 && numberOfSelected > 1) {\n              opWVal += e.label + \" , \";\n            } else {\n              opWVal += e.label;\n            }\n          }\n        });\n        opsArray.push(opWVal);\n      }\n    });\n\n    addCartState({\n      name: myObjProfile.name,\n      price: total.toFixed(2),\n      description: myObj.description,\n      options: opsArray,\n    });\n\n    setModalVisible(false);\n    setmyObjProfile(myObj);\n    settotal(myObjProfile.price);\n  };\n\n  return (\n    <View key={productIndex}>\n      <Button\n        title={myObj.name}\n        onPress={() => setModalVisible(true)}\n        style={styles.touchable}\n      />\n      <Modal visible={modalVisible}>\n        <ScrollView style={styles.modalContainer}>\n          <Text style={styles.h2Black}>Name: {myObj.name}</Text>\n          <Text style={[{ marginBottom: 25 }, styles.h2Black]}>\n            Price: {total}\n          </Text>\n          {myObj.options.map((e, index) => (\n            <DisplayOption e={e} index={index} key={index} />\n          ))}\n          <Button title=\"Add To Cart\" onPress={AddToCart} style={styles.btn} />\n          <Button\n            title=\"Close\"\n            onPress={() => setModalVisible(false)}\n            style={styles.btn}\n          />\n        </ScrollView>\n      </Modal>\n    </View>\n  );\n};\n\nexport default DisplayTest;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 10,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n  },\n  btn: {\n    marginBottom: 25,\n  },\n  dropDown: {\n    marginBottom: 25,\n  },\n  h2White: {\n    fontSize: 17,\n    color: \"white\",\n  },\n  h2Black: {\n    fontSize: 20,\n    color: \"black\",\n  },\n});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport DisplayTest from \"components/DisplayTest\";\n\nconst MenuScreen = ({ section, catalog }) => {\n  const InnerBlock = () => {\n    if (catalog.products) {\n      if (catalog.products.length > 0) {\n        if (!section) {\n          return catalog.products\n            .filter((e) => e.catagory === catalog.categories[0])\n            .map((product, index) => (\n              <DisplayTest product={product} productIndex={index} key={index} />\n            ));\n        } else {\n          return catalog.products\n            .filter((e) => e.catagory === section)\n            .map((product, index) => (\n              <DisplayTest product={product} productIndex={index} key={index} />\n            ));\n        }\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <InnerBlock />\n    </View>\n  );\n};\n\nexport default MenuScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 2,\n    height: \"100%\",\n  },\n  wrapper: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n});\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { cartState, setCartState } from \"state/state\";\nimport { Switch } from \"react-native-gesture-handler\";\n\nconst DeliveryScreen = ({\n  setDeliveryModal,\n  setOngoingDelivery,\n  setName,\n  setPhone,\n  setAddress,\n  name,\n  phone,\n  address,\n  deliveryChecked,\n  setDeliveryChecked,\n}) => {\n  return (\n    <ScrollView style={styles.modalContainer}>\n      <View style={styles.sizeRow}>\n        <Text>Enter Phone Order Details</Text>\n        <View>\n          <Text>Delivery?</Text>\n          <Switch\n            value={deliveryChecked}\n            onValueChange={() => {\n              setDeliveryChecked(!deliveryChecked);\n            }}\n          />\n        </View>\n      </View>\n      <TextInput\n        label=\"Name\"\n        variant=\"outlined\"\n        style={styles.input}\n        onChangeText={(val) => setName(val)}\n        autoCorrect={false}\n        value={name}\n      />\n      <TextInput\n        label=\"Phone #\"\n        variant=\"outlined\"\n        style={styles.input}\n        onChangeText={(val) => setPhone(val)}\n        autoCorrect={false}\n        value={phone}\n      />\n      {deliveryChecked && (\n        <TextInput\n          label=\"Address\"\n          variant=\"outlined\"\n          style={styles.input}\n          onChangeText={(val) => setAddress(val)}\n          autoCorrect={false}\n          value={address}\n        />\n      )}\n      <Button\n        title=\"Order\"\n        // onPress={GetTrans}\n        onPress={() => {\n          setDeliveryModal(false);\n          setOngoingDelivery(true);\n        }}\n        contentContainerStyle={styles.btn}\n        style={{ margin: 25 }}\n      />\n      <Button\n        title=\"Cancel\"\n        onPress={() => {\n          setDeliveryModal(false);\n          setOngoingDelivery(null);\n        }}\n        contentContainerStyle={styles.btn}\n        style={{ margin: 25 }}\n      />\n    </ScrollView>\n  );\n};\n\nexport default DeliveryScreen;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n  },\n  btn: {\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  input: {\n    marginTop: 25,\n    marginBottom: 25,\n  },\n});\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, TextInput } from \"@react-native-material/core\";\r\nimport { cartState, setCartState } from \"state/state\";\r\nimport { Switch } from \"react-native-gesture-handler\";\r\n\r\nconst CashScreen = ({ setCashModal, GetTrans, total, setChangeDue }) => {\r\n  const [cash, setCash] = useState(\"\");\r\n\r\n  return (\r\n    <ScrollView style={styles.modalContainer}>\r\n      <View style={styles.sizeRow}>\r\n        <Text>Cash Payment Details</Text>\r\n      </View>\r\n      <Text>Total: {total}</Text>\r\n      <TextInput\r\n        label=\"Enter Cash Given\"\r\n        variant=\"outlined\"\r\n        style={styles.input}\r\n        onChangeText={(val) => {\r\n          setCash(val);\r\n          setChangeDue((parseFloat(val) - total).toFixed(2));\r\n        }}\r\n        autoCorrect={false}\r\n        value={cash}\r\n      />\r\n      <Text>\r\n        Change Due:{\" \"}\r\n        {parseFloat(cash) > total && (parseFloat(cash) - total).toFixed(2)}\r\n      </Text>\r\n      <Button\r\n        title=\"Print\"\r\n        onPress={() => {\r\n          GetTrans(\"Cash\");\r\n          setCashModal(false);\r\n        }}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n      <Button\r\n        title=\"Cancel\"\r\n        onPress={() => setCashModal(false)}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default CashScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  sizeRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n  },\r\n  halfRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"50%\",\r\n  },\r\n  toppingsContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n  },\r\n  touchable: {\r\n    margin: 25,\r\n    width: 300,\r\n  },\r\n  modalContainer: {\r\n    padding: 50,\r\n  },\r\n  btn: {\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n  },\r\n});\r\n","import { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, TextInput } from \"@react-native-material/core\";\r\nimport { storeDetailState } from \"state/state\";\r\n\r\nconst ChangeScreen = ({ setChangeModal }) => {\r\n  const [total, setTotal] = useState(\"\");\r\n  const [cash, setCash] = useState(\"\");\r\n  const storeDetails = storeDetailState.use();\r\n\r\n  const openCash = () => {\r\n    const data = [\r\n      \"\\x1B\" + \"\\x40\", // init\r\n      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\r\n      storeDetails.name,\r\n      \"\\x0A\",\r\n      storeDetails.address + \"\\x0A\",\r\n      storeDetails.website + \"\\x0A\", // text and line break\r\n      storeDetails.phoneNumber + \"\\x0A\", // text and line break\r\n      \"\\x0A\",\r\n      \"\\x0A\",\r\n      \"\\x0A\",\r\n      \"\\x0A\",\r\n      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\r\n      `Total: $${total}` + \"\\x0A\",\r\n      `Cash Given: $${cash}` + \"\\x0A\",\r\n      `Change Due: $${(parseFloat(cash) - parseFloat(total)).toFixed(2)}` +\r\n        \"\\x0A\",\r\n      \"------------------------------------------\" + \"\\x0A\",\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      \"\\x0A\", // line break\r\n      //\"\\x1D\" + \"\\x56\" + \"\\x00\",\r\n      \"\\x1D\" + \"\\x56\" + \"\\x30\",\r\n      \"\\x10\" + \"\\x14\" + \"\\x01\" + \"\\x00\" + \"\\x05\",\r\n    ];\r\n\r\n    fetch(\"http://localhost:8080/print\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((respData) => {\r\n        console.log(respData);\r\n      })\r\n      .catch((e) => alert(\"Error with printer\"));\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.modalContainer}>\r\n      <View style={styles.sizeRow}>\r\n        <Text>Cash Payment Details</Text>\r\n      </View>\r\n      <TextInput\r\n        label=\"Enter Total\"\r\n        variant=\"outlined\"\r\n        style={styles.input}\r\n        onChangeText={(val) => setTotal(val)}\r\n        autoCorrect={false}\r\n        value={total}\r\n      />\r\n      <TextInput\r\n        label=\"Enter Cash Given\"\r\n        variant=\"outlined\"\r\n        style={styles.input}\r\n        onChangeText={(val) => setCash(val)}\r\n        autoCorrect={false}\r\n        value={cash}\r\n      />\r\n      <Text>Change Due: {(parseFloat(cash) - total).toFixed(2)}</Text>\r\n      <Button\r\n        title=\"Open Cash\"\r\n        onPress={() => {\r\n          openCash();\r\n          setChangeModal(false);\r\n        }}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n      <Button\r\n        title=\"Cancel\"\r\n        onPress={() => setChangeModal(false)}\r\n        contentContainerStyle={styles.btn}\r\n        style={{ margin: 25 }}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default ChangeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  sizeRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n  },\r\n  halfRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"50%\",\r\n  },\r\n  toppingsContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n  },\r\n  touchable: {\r\n    margin: 25,\r\n    width: 300,\r\n  },\r\n  modalContainer: {\r\n    padding: 50,\r\n  },\r\n  btn: {\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n  },\r\n});\r\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialize Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDmtlrkfZRbFy8P7D4BFXTIkzMDC_DP5n8\",\n  authDomain: \"posmate-5fc0a.firebaseapp.com\",\n  projectId: \"posmate-5fc0a\",\n  storageBucket: \"posmate-5fc0a.appspot.com\",\n  messagingSenderId: \"48463376409\",\n  appId: \"1:48463376409:web:b427a4fbc3c210a5977a88\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// Initialize Cloud Firestore and get a reference to the service\nexport const auth = firebase.auth();\n\nexport const db = firebase.firestore();\n","import { auth, db } from \"./firebaseConfig\";\n\nexport const signIn = (email, password) =>\n  auth.signInWithEmailAndPassword(email, password);\n\nexport const signUp = (email, password) =>\n  auth\n    .createUserWithEmailAndPassword(email, password)\n    .then((userAuth) => {\n      if (userAuth.user) {\n        db.collection(\"users\")\n          .doc(userAuth.user.uid)\n          .set({\n            paid: true,\n            products: [],\n            categories: [],\n            wooCredentials: { ck: null, cs: null, useWoocommerce: false },\n            //company name\n            //adddress\n            //etc\n          });\n      }\n    })\n    .catch((e) => console.log(e));\n\nexport const updateData = (categories, products) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    products: products,\n    categories: categories,\n  });\n};\n\nexport const updateWooCredentials = (wooCredentials) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    wooCredentials: wooCredentials,\n  });\n};\n\nexport const updateTransList = (transList) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    transList: transList,\n  });\n};\n\nexport const updateStoreDetails = (storeDetails) => {\n  db.collection(\"users\").doc(auth.currentUser?.uid).update({\n    storeDetails: storeDetails,\n  });\n};","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  cartState,\n  cartSubState,\n  setCartState,\n  setTransListState,\n  storeDetailState,\n  transListState,\n} from \"state/state\";\nimport { Button } from \"@react-native-material/core\";\nimport DeliveryScreen from \"components/DeliveryScreen\";\nimport CashScreen from \"components/CashScreen\";\nimport ChangeScreen from \"components/ChangeScreen\";\nimport { updateTransList } from \"state/firebaseFunctions\";\n\nconst CartScreen = () => {\n  const [deliveryModal, setDeliveryModal] = useState(false);\n  const [cashModal, setCashModal] = useState(false);\n  const [changeModal, setChangeModal] = useState(false);\n  const [ongoingDelivery, setOngoingDelivery] = useState(null);\n  const [name, setName] = useState();\n  const [phone, setPhone] = useState();\n  const [address, setAddress] = useState();\n  const [deliveryChecked, setDeliveryChecked] = useState(false);\n  const [changeDue, setChangeDue] = useState();\n  const cart = cartState.use();\n  const transList = transListState.use();\n  const storeDetails = storeDetailState.use();\n  const [cartSub, setCartSub] = useState(0);\n\n  useEffect(() => {\n    if (cart.length > 0) {\n      let newVal = 0;\n      for (var i = 0; i < cart.length; i++) {\n        newVal += parseFloat(cart[i].price);\n      }\n      setCartSub(newVal);\n    } else {\n      setCartSub(0);\n    }\n  }, [cart]);\n\n  const AddToList = async (payload) => {\n    const local = structuredClone(transList);\n    local.unshift(payload);\n    updateTransList(local);\n    //setTransListState(local);\n  };\n\n  const Print = (method) => {\n    const transNum = transList.length + 1;\n    if (method === \"deliveryOrder\") {\n      let total = 5.5;\n      const today = new Date();\n\n      let data = [\n        \"\\x1B\" + \"\\x40\", // init\n        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n        storeDetails.name,\n        \"\\x0A\",\n        storeDetails.address + \"\\x0A\",\n        storeDetails.website + \"\\x0A\", // text and line break\n        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n        today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n        \"\\x0A\",\n        `Transaction # ${transNum}` + \"\\x0A\",\n        \"\\x0A\",\n        \"Delivery Order: $5.50 Fee\" + \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      ];\n\n      cart.map((cartItem) => {\n        total += parseFloat(cartItem.price);\n        data.push(`Name: ${cartItem.name}`);\n        data.push(\"\\x0A\");\n        data.push(`Price: $${cartItem.price}`);\n\n        if (cartItem.options) {\n          data.push(\"\\x0A\");\n          cartItem.options.map((option) => {\n            data.push(option);\n            data.push(\"\\x0A\");\n          });\n        }\n        data.push(\"\\x0A\" + \"\\x0A\");\n      });\n\n      total = total * 1.13;\n      total = total.toFixed(2);\n\n      //push ending\n      data.push(\n        \"\\x0A\",\n        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Name: \" + name,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Phone #:  \" + phone,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Address #:  \" + address,\n        \"\\x0A\" + \"\\x0A\",\n        \"Total Including (13% Tax): \" + total + \"\\x0A\" + \"\\x0A\",\n        \"------------------------------------------\" + \"\\x0A\",\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n      );\n      fetch(\"http://localhost:8080/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n        .then((respData) => {\n          console.log(respData);\n        })\n        .catch((e) => alert(\"Error with printer\"));\n\n      AddToList({\n        date: today,\n        transNum: transNum,\n        total: total,\n        method: \"deliveryOrder\",\n        cart: cart,\n      });\n\n      setCartState([]);\n      setDeliveryModal(false);\n    }\n    if (method === \"pickupOrder\") {\n      let total = 0;\n      const today = new Date();\n\n      let data = [\n        \"\\x1B\" + \"\\x40\", // init\n        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n        storeDetails.name,\n        \"\\x0A\",\n        storeDetails.address + \"\\x0A\",\n        storeDetails.website + \"\\x0A\", // text and line break\n        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n        today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n        \"\\x0A\",\n        `Transaction # ${transNum}` + \"\\x0A\",\n        \"\\x0A\",\n        \"Pickup Order\" + \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x0A\",\n        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      ];\n\n      cart.map((cartItem) => {\n        total += parseFloat(cartItem.price);\n        data.push(`Name: ${cartItem.name}`);\n        data.push(\"\\x0A\");\n        data.push(`Price: $${cartItem.price}`);\n\n        if (cartItem.options) {\n          data.push(\"\\x0A\");\n          cartItem.options.map((option) => {\n            data.push(option);\n            data.push(\"\\x0A\");\n          });\n        }\n        data.push(\"\\x0A\" + \"\\x0A\");\n      });\n\n      total = total * 1.13;\n      total = total.toFixed(2);\n\n      //push ending\n      data.push(\n        \"\\x0A\",\n        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Name: \" + name,\n        \"\\x0A\" + \"\\x0A\",\n        \"Customer Phone #:  \" + phone,\n        \"\\x0A\" + \"\\x0A\",\n        \"Total Including (13% Tax): \" + total + \"\\x0A\" + \"\\x0A\",\n        \"------------------------------------------\" + \"\\x0A\",\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n      );\n      fetch(\"http://localhost:8080/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n        .then((respData) => {\n          console.log(respData);\n        })\n        .catch((e) => alert(\"Error with printer\"));\n\n      AddToList({\n        date: today,\n        transNum: transNum,\n        total: total,\n        method: \"pickupOrder\",\n        cart: cart,\n      });\n\n      setCartState([]);\n      setDeliveryModal(false);\n    }\n\n    let total = 0;\n    const today = new Date();\n\n    let data = [\n      \"\\x1B\" + \"\\x40\", // init\n      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n      storeDetails.name,\n      \"\\x0A\",\n      storeDetails.address + \"\\x0A\",\n      storeDetails.website + \"\\x0A\", // text and line break\n      storeDetails.phoneNumber + \"\\x0A\", // text and line break\n      today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n      \"\\x0A\",\n      `Transaction # ${transNum}` + \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n    ];\n\n    cart.map((cartItem) => {\n      total += parseFloat(cartItem.price);\n      data.push(`Name: ${cartItem.name}`);\n      data.push(\"\\x0A\");\n      data.push(\"\\x0A\");\n      data.push(`Price: $${cartItem.price}`);\n\n      if (cartItem.options) {\n        data.push(\"\\x0A\");\n        cartItem.options.map((option) => {\n          data.push(option);\n          data.push(\"\\x0A\");\n        });\n      }\n      data.push(\"\\x0A\" + \"\\x0A\");\n    });\n\n    total = total * 1.13;\n    total = total.toFixed(2);\n\n    if (method === \"Cash\") {\n      //push ending\n      data.push(\n        \"\\x0A\",\n        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n        \"\\x0A\" + \"\\x0A\",\n        \"Payment Method: \" + method + \"\\x0A\" + \"\\x0A\",\n        \"Total Including (13% Tax): \" + \"$\" + total + \"\\x0A\" + \"\\x0A\",\n        \"Change Due: \" + \"$\" + changeDue + \"\\x0A\" + \"\\x0A\",\n        \"------------------------------------------\" + \"\\x0A\",\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n        \"\\x1D\" + \"\\x56\" + \"\\x30\",\n        \"\\x10\" + \"\\x14\" + \"\\x01\" + \"\\x00\" + \"\\x05\"\n      );\n    } else {\n      data.push(\n        \"\\x0A\",\n        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n        \"\\x0A\" + \"\\x0A\",\n        \"Payment Method: \" + method + \"\\x0A\" + \"\\x0A\",\n        \"Total Including (13% Tax): \" + \"$\" + total + \"\\x0A\" + \"\\x0A\",\n        \"------------------------------------------\" + \"\\x0A\",\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        \"\\x0A\", // line break\n        //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n      );\n    }\n\n    fetch(\"http://localhost:8080/print\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((respData) => {\n        console.log(respData);\n      })\n      .catch((e) => alert(\"Error with printer\"));\n\n    AddToList({\n      date: today,\n      transNum: transNum,\n      total: total,\n      method: method,\n      cart: cart,\n    });\n\n    setCartState([]);\n  };\n\n  const DeliveryBtn = () => {\n    if (ongoingDelivery === null) {\n      return (\n        <Button\n          title=\"Phone Order\"\n          onPress={() => setDeliveryModal(true)}\n          disabled={cart.length > 0}\n          style={{ marginBottom: 20 }}\n        />\n      );\n    }\n    if (ongoingDelivery && cart.length > 0) {\n      return (\n        <Button\n          title=\"Complete\"\n          onPress={() => {\n            Print(deliveryChecked ? \"deliveryOrder\" : \"pickupOrder\");\n            setOngoingDelivery(null);\n            setName(null);\n            setPhone(null);\n            setAddress(null);\n          }}\n          style={{ marginBottom: 20 }}\n        />\n      );\n    } else {\n      return (\n        <Button\n          title=\"Cancel\"\n          onPress={() => setOngoingDelivery(null)}\n          style={{ marginBottom: 20 }}\n        />\n      );\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={styles.container}\n        contentContainerStyle={styles.contentContainer}\n      >\n        <View>\n          {cart.map((cartItem, index) => (\n            <View style={{ marginBottom: 20 }}>\n              <Text>Name: {cartItem.name}</Text>\n              <Text>Price: {cartItem.price}</Text>\n              {cartItem.description && (\n                <Text>Description: {cartItem.description}</Text>\n              )}\n              {cartItem.options &&\n                cartItem.options.map((option) => <Text>{option}</Text>)}\n              <Text\n                style={{ color: \"blue\" }}\n                onPress={() => {\n                  const local = structuredClone(cart);\n                  local.splice(index, 1);\n                  setCartState(local);\n                }}\n              >\n                Remove\n              </Text>\n            </View>\n          ))}\n        </View>\n        <View>\n          <Text>Sub: {cartSub.toFixed(2)}</Text>\n          <Text>Total: {(cartSub * 1.13).toFixed(2)}</Text>\n          <Button\n            title=\"Cash\"\n            onPress={() => setCashModal(true)}\n            disabled={cart.length < 1 || ongoingDelivery}\n            style={{ marginBottom: 20 }}\n          />\n          <Button\n            title=\"Card\"\n            onPress={() => Print(\"Card\")}\n            disabled={cart.length < 1 || ongoingDelivery}\n            style={{ marginBottom: 20 }}\n          />\n          <DeliveryBtn />\n          <Button\n            title=\"Change\"\n            onPress={() => setChangeModal(true)}\n            disabled={cart.length > 0 || ongoingDelivery}\n          />\n        </View>\n        <Modal visible={deliveryModal}>\n          <DeliveryScreen\n            setDeliveryModal={setDeliveryModal}\n            setOngoingDelivery={setOngoingDelivery}\n            setName={setName}\n            setPhone={setPhone}\n            setAddress={setAddress}\n            name={name}\n            phone={phone}\n            address={address}\n            deliveryChecked={deliveryChecked}\n            setDeliveryChecked={setDeliveryChecked}\n          />\n        </Modal>\n        <Modal visible={cashModal}>\n          <CashScreen\n            setCashModal={setCashModal}\n            GetTrans={() => Print(\"Cash\")}\n            total={(cartSub * 1.13).toFixed(2)}\n            setChangeDue={setChangeDue}\n          />\n        </Modal>\n        <Modal visible={changeModal}>\n          <ChangeScreen setChangeModal={setChangeModal} />\n        </Modal>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default CartScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"lightgrey\",\n    flex: 1,\n    height: \"100%\",\n  },\n  contentContainer: {\n    backgroundColor: \"lightgrey\",\n    flex: 1,\n    height: \"100%\",\n    justifyContent: \"space-between\",\n    padding: 20,\n  },\n});\n","import { ScrollView, StyleSheet, View } from \"react-native\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { Button, Text } from \"@react-native-material/core\";\nimport { storeDetailState, transListState } from \"state/state\";\n\nconst ViewTransactions = () => {\n  const local = transListState.use();\n  const [transList, settransList] = useState();\n  const today = new Date();\n  const [todaysDetails, setTodaysDetails] = useState({\n    todaysReceiptValue: 0,\n    todaysReceipts: 0,\n  });\n  const storeDetails = storeDetailState.use();\n\n  useEffect(() => {\n    local\n      .sort(function (a, b) {\n        if (a.date && b.date) {\n          return a.date.seconds - b.date.seconds;\n        } else if (a.date && b.date_created) {\n          const bDate = new Date(b.date_created).getTime() / 1000;\n          return a.date.seconds - bDate;\n        } else if (a.date_created && b.date) {\n          const aDate = new Date(a.date_created).getTime() / 1000;\n          return aDate - b.date.seconds;\n        } else {\n          const aDate = new Date(a.date_created).getTime() / 1000;\n          const bDate = new Date(b.date_created).getTime() / 1000;\n          return aDate - bDate;\n        }\n      })\n      .reverse();\n    settransList(local);\n    const todaysReceiptValue = local.reduce((accumulator, current) => {\n      let date;\n      if (current.date) {\n        date = new Date(current.date.seconds * 1000);\n      } else {\n        date = new Date(current.date_created);\n        console.log(\"seconds is: \", date.getTime() / 1000);\n      }\n      if (date.toLocaleDateString() === today.toLocaleDateString()) {\n        return accumulator + parseFloat(current.total);\n      } else {\n        return accumulator;\n      }\n    }, 0);\n    const todaysReceipts = local.reduce((accumulator, current) => {\n      let date;\n      if (current.date) {\n        date = new Date(current.date.seconds * 1000);\n      } else {\n        date = new Date(current.date_created);\n      }\n\n      if (date.toLocaleDateString() === today.toLocaleDateString()) {\n        return accumulator + 1;\n      } else {\n        return accumulator;\n      }\n    }, 0);\n    setTodaysDetails({\n      todaysReceiptValue: todaysReceiptValue.toFixed(2),\n      todaysReceipts: todaysReceipts,\n    });\n  }, []);\n\n  const PrintTodaysTotal = () => {\n    let data = [\n      \"\\x1B\" + \"\\x40\", // init\n      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n      storeDetails.name,\n      \"\\x0A\",\n      storeDetails.address + \"\\x0A\",\n      storeDetails.website + \"\\x0A\", // text and line break\n      storeDetails.phoneNumber + \"\\x0A\", // text and line break\n      today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      \"\\x0A\" + \"\\x0A\",\n      \"Number Of Receipts: \" + todaysDetails.todaysReceipts + \"\\x0A\" + \"\\x0A\",\n      \"Sub-Total: \" +\n        \"$\" +\n        (todaysDetails.todaysReceiptValue / 1.13).toFixed(2) +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"Tax: \" +\n        \"$\" +\n        ((todaysDetails.todaysReceiptValue / 1.13) * 0.13).toFixed(2) +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"Total Including (13% Tax): \" +\n        \"$\" +\n        todaysDetails.todaysReceiptValue +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"------------------------------------------\" + \"\\x0A\",\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x1D\" + \"\\x56\" + \"\\x00\",\n      \"\\x1D\" + \"\\x56\" + \"\\x30\",\n    ];\n\n    fetch(\"http://localhost:8080/print\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((respData) => {\n        console.log(respData);\n      })\n      .catch((e) => alert(\"Error with printer\"));\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ textAlign: \"center\", margin: 25 }}>\n        List Of Transactions\n      </Text>\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Price: {todaysDetails.todaysReceiptValue}\n        </Text>\n        <Button\n          style={{ height: 40, alignItems: \"center\", justifyContent: \"center\" }}\n          title=\"Print Todays Receipts\"\n          onPress={PrintTodaysTotal}\n        />\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Receipts: {todaysDetails.todaysReceipts}\n        </Text>\n      </View>\n      <View style={styles.contentContainer}>\n        {transList ? (\n          transList?.map((element, index) => {\n            // if (date.toLocaleDateString() === today.toLocaleDateString()) {\n            //   setTodaysDetails((prevState) => prevState + 1);\n            // }\n\n            const date = element.date\n              ? new Date(element.date.seconds * 1000)\n              : element.date_created\n              ? new Date(element.date_created)\n              : null;\n\n            return (\n              <View\n                style={{ backgroundColor: \"grey\", padding: 30, margin: 10 }}\n                key={index}\n              >\n                <Text>{date.toLocaleString()}</Text>\n                {element.cart?.map((cartItem, index) => (\n                  <View style={{ marginBottom: 20 }} key={index}>\n                    <Text>Name: {cartItem.name}</Text>\n                    <Text>Quantity: {cartItem.quantity}</Text>\n                    <Text>Price: {cartItem.price}</Text>\n                    {cartItem.options &&\n                      cartItem.options?.map((option) => <Text>{option}</Text>)}\n                  </View>\n                ))}\n                {element.line_items?.map((cartItem, index) => (\n                  <View style={{ marginBottom: 20 }} key={index}>\n                    <Text>Name: {cartItem.name}</Text>\n                    <Text>Quantity: {cartItem.quantity}</Text>\n                    <Text>Price: {cartItem.price}</Text>\n                    {cartItem.meta_data?.map((meta, index) => {\n                      if (index === cartItem.meta_data.length - 1) return;\n                      return <Text>{`${meta.key} : ${meta.value}`}</Text>;\n                    })}\n                  </View>\n                ))}\n                <Button\n                  title=\"Print\"\n                  onPress={() => {\n                    if (element.date) {\n                      let total = 0;\n\n                      let data = [\n                        \"\\x1B\" + \"\\x40\", // init\n                        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                        storeDetails.name,\n                        \"\\x0A\",\n                        storeDetails.address + \"\\x0A\",\n                        storeDetails.website + \"\\x0A\", // text and line break\n                        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                        date.toLocaleDateString() +\n                          \" \" +\n                          date.toLocaleTimeString() +\n                          \"\\x0A\",\n                        \"\\x0A\",\n                        `Transaction # ${element.transNum}` + \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n                      ];\n\n                      element.cart?.map((cartItem) => {\n                        total += parseFloat(cartItem.price);\n                        data.push(`Name: ${cartItem.name}`);\n                        data.push(\"\\x0A\");\n                        data.push(`Price: $${cartItem.price}`);\n\n                        if (cartItem.options) {\n                          data.push(\"\\x0A\");\n                          cartItem.options?.map((option) => {\n                            data.push(option);\n                            data.push(\"\\x0A\");\n                          });\n                        }\n                        data.push(\"\\x0A\" + \"\\x0A\");\n                      });\n\n                      total = total * 1.13;\n                      total = total.toFixed(2);\n\n                      //push ending\n                      data.push(\n                        \"\\x0A\",\n                        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                        \"\\x0A\" + \"\\x0A\",\n                        \"Total Including (13% Tax): \" +\n                          \"$\" +\n                          total +\n                          \"\\x0A\" +\n                          \"\\x0A\",\n                        \"------------------------------------------\" + \"\\x0A\",\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n                        \"\\x1D\" + \"\\x56\" + \"\\x30\"\n                      );\n\n                      fetch(\"http://localhost:8080/print\", {\n                        method: \"POST\",\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(data),\n                      })\n                        .then((response) => response.json())\n                        .then((respData) => {\n                          console.log(respData);\n                        })\n                        .catch((e) => alert(\"Error with printer\"));\n                    } else {\n                      const printData = [];\n\n                      printData.push(\n                        \"\\x1B\" + \"\\x40\", // init\n                        \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                        storeDetails.name,\n                        \"\\x0A\",\n                        storeDetails.address + \"\\x0A\",\n                        storeDetails.website + \"\\x0A\", // text and line break\n                        storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                        element.date_created + \"\\x0A\",\n                        \"\\x0A\",\n                        \"Online Order\" + \"\\x0A\", // text and line break\n                        `Transaction # ${element.number}` + \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x0A\",\n                        \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n                      );\n\n                      element.line_items?.map((cartItem) => {\n                        printData.push(\"\\x0A\");\n                        printData.push(`Name: ${cartItem.name}`);\n                        printData.push(\"\\x0A\");\n                        printData.push(`Quantity: ${cartItem.quantity}`);\n                        printData.push(\"\\x0A\");\n                        printData.push(`Price: $${cartItem.price}`);\n                        printData.push(\"\\x0A\");\n\n                        if (cartItem.meta_data) {\n                          cartItem.meta_data?.map((meta, index) => {\n                            if (index === 0) {\n                              printData.push(`${meta.key} : ${meta.value}`);\n                              if (\n                                cartItem.meta_data[index + 1].key !== meta.key\n                              ) {\n                                printData.push(\"\\x0A\");\n                              }\n                            } else {\n                              if (index !== cartItem.meta_data.length - 1) {\n                                if (\n                                  cartItem.meta_data[index - 1].key === meta.key\n                                ) {\n                                  printData.push(` , ${meta.value}`);\n                                } else {\n                                  printData.push(`${meta.key} : ${meta.value}`);\n                                }\n\n                                if (\n                                  cartItem.meta_data[index + 1].key !== meta.key\n                                ) {\n                                  printData.push(\"\\x0A\");\n                                }\n                              }\n                            }\n                          });\n                        } else {\n                          printData.push(\"\\x0A\" + \"\\x0A\");\n                        }\n                      });\n\n                      printData.push(\"\\x0A\");\n                      printData.push(\"\\x0A\");\n                      printData.push(`Customer Details:`);\n                      printData.push(\"\\x0A\");\n                      printData.push(`Address: ${element.shipping.address_1}`);\n                      printData.push(\"\\x0A\");\n                      printData.push(`City: ${element.shipping.city}`);\n                      printData.push(\"\\x0A\");\n                      printData.push(\n                        `Zip/Postal Code: ${element.shipping.postcode}`\n                      );\n                      printData.push(\"\\x0A\");\n                      printData.push(\n                        `Province/State: ${element.shipping.state}`\n                      );\n                      printData.push(\"\\x0A\");\n                      printData.push(\n                        `Name: ${element.shipping.first_name} ${element.shipping.last_name}`\n                      );\n                      printData.push(\"\\x0A\");\n                      element.shipping_lines.map((line) =>\n                        printData.push(`Shipping Method: ${line.method_title}`)\n                      );\n                      printData.push(\"\\x0A\");\n                      printData.push(\"\\x0A\");\n\n                      printData.push(\n                        \"\\x0A\",\n                        \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                        \"\\x0A\" + \"\\x0A\",\n                        \"Payment Method: \" +\n                          element.payment_method_title +\n                          \"\\x0A\" +\n                          \"\\x0A\",\n                        \"Total Including (13% Tax): \" +\n                          \"$\" +\n                          (\n                            parseFloat(element.total) +\n                            parseFloat(element.total_tax)\n                          ).toFixed(2) +\n                          \"\\x0A\" +\n                          \"\\x0A\",\n                        \"------------------------------------------\" + \"\\x0A\",\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\", // line break\n                        \"\\x0A\" // line break\n                      );\n\n                      printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n                      fetch(\"http://localhost:8080/print\", {\n                        method: \"POST\",\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify(printData),\n                      })\n                        .then((response) => response.json())\n                        .then((respData) => {\n                          console.log(respData);\n                        })\n                        .catch((e) => alert(\"Error with printer\"));\n                    }\n                  }}\n                />\n              </View>\n            );\n          })\n        ) : (\n          <Text>No receipts yet</Text>\n        )}\n        {/* {transList &&\n          transList?.map((element, index) => {\n            const date = new Date(element.date);\n            // if (date.toLocaleDateString() === today.toLocaleDateString()) {\n            //   setTodaysDetails((prevState) => prevState + 1);\n            // }\n            return (\n              <View\n                style={{ backgroundColor: \"grey\", padding: 30, margin: 10 }}\n                key={index}\n              >\n                {element.cart?.map((cartItem, index) => (\n                  <View style={{ marginBottom: 20 }} key={index}>\n                    <Text>Name: {cartItem.name}</Text>\n                    <Text>Quantity: {cartItem.quantity}</Text>\n                    <Text>Price: {cartItem.price}</Text>\n                    <Text>Date: {date.toLocaleDateString()}</Text>\n                    {cartItem.options &&\n                      cartItem.options?.map((option) => <Text>{option}</Text>)}\n                  </View>\n                ))}\n                <Button\n                  title=\"Print\"\n                  onPress={() => {\n                    let total = 0;\n                    const qz = require(\"qz-tray\");\n                    const today = new Date();\n\n                    let data = [\n                      \"\\x1B\" + \"\\x40\", // init\n                      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                      storeDetails.name,\n                      \"\\x0A\",\n                      storeDetails.address + \"\\x0A\",\n                      storeDetails.website + \"\\x0A\", // text and line break\n                      storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                      today.toLocaleDateString() +\n                        \" \" +\n                        today.toLocaleTimeString() +\n                        \"\\x0A\",\n                      \"\\x0A\",\n                      `Transaction # ${element.transNum}` + \"\\x0A\",\n                      \"\\x0A\",\n                      \"\\x0A\",\n                      \"\\x0A\",\n                      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n                    ];\n\n                    element.cart?.map((cartItem) => {\n                      total += parseFloat(cartItem.price);\n                      data.push(`Name: ${cartItem.name}`);\n                      data.push(\"\\x0A\");\n                      data.push(`Quantity: ${cartItem.quantity}`);\n                      data.push(\"\\x0A\");\n                      data.push(`Price: $${cartItem.price}`);\n\n                      if (cartItem.options) {\n                        data.push(\"\\x0A\");\n                        cartItem.options?.map((option) => {\n                          data.push(option);\n                          data.push(\"\\x0A\");\n                        });\n                      }\n                      data.push(\"\\x0A\" + \"\\x0A\");\n                    });\n\n                    total = total * 1.13;\n                    total = total.toFixed(2);\n\n                    //push ending\n                    data.push(\n                      \"\\x0A\",\n                      \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                      \"\\x0A\" + \"\\x0A\",\n                      \"Total Including (13% Tax): \" +\n                        \"$\" +\n                        total +\n                        \"\\x0A\" +\n                        \"\\x0A\",\n                      \"------------------------------------------\" + \"\\x0A\",\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n                      \"\\x1D\" + \"\\x56\" + \"\\x30\"\n                    );\n\n                    qz.websocket\n                      .connect()\n                      .then(function () {\n                        let config = qz.configs.create(\"jZebra\");\n                        return qz.print(config, data);\n                      })\n                      .then(qz.websocket.disconnect)\n                      .catch(function (err) {\n                        console.error(err);\n                      });\n                  }}\n                />\n              </View>\n            );\n          })} */}\n      </View>\n    </View>\n  );\n};\n\nexport default ViewTransactions;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\",\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n});\n","import { Modal, StyleSheet, Text, View } from \"react-native\";\nimport React from \"react\";\n\nconst Spinner = ({ isModalVisible }) => {\n  return (\n    <Modal visible={isModalVisible} transparent={true}>\n      <View\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flex: 1,\n          backgroundColor: \"rgba(52, 52, 52, 0.8)\",\n        }}\n      >\n        <style>\n          {`.loader {\n  border: 16px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 16px solid #3498db;\n  width: 120px;\n  height: 120px;\n  -webkit-animation: spin 2s linear infinite; /* Safari */\n  animation: spin 2s linear infinite;\n}\n\n/* Safari */\n@-webkit-keyframes spin {\n  0% { -webkit-transform: rotate(0deg); }\n  100% { -webkit-transform: rotate(360deg); }\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}`}\n        </style>\n\n        <div className=\"loader\"></div>\n      </View>\n    </Modal>\n  );\n};\n\nexport default Spinner;\n\nconst styles = StyleSheet.create({});\n","import {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport Spinner from \"./Spinner\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst AddCategory = () => {\n  const catalog = userStoreState.use();\n  const [categoryName, setcategoryName] = useState();\n  const [isModalVisible, setisModalVisible] = useState(false);\n\n  function handleDataUpdate() {\n    updateData([...catalog.categories, categoryName], catalog.products);\n    setisModalVisible(true);\n  }\n\n  function handleRemoveCategory(index) {\n    const localCatalog = structuredClone(catalog);\n    localCatalog.categories.splice(index, 1);\n\n    updateData(localCatalog.categories, localCatalog.products);\n    setisModalVisible(true);\n  }\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      {catalog.categories.map((e, index) => {\n        return (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              padding: 15,\n              margin: 10,\n              backgroundColor: \"lightgrey\",\n            }}\n          >\n            <Text style={{ fontSize: 17 }}>{e}</Text>\n            <TouchableOpacity\n              onPress={() => handleRemoveCategory(index)}\n              style={{\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"red\", fontWeight: \"600\" }}>Remove X</Text>\n            </TouchableOpacity>\n          </View>\n        );\n      })}\n      <TextInput\n        placeholder=\"Enter New Category\"\n        onChangeText={(val) => setcategoryName(val)}\n        style={{ margin: 10 }}\n      />\n      <Button\n        title=\"Add New Category\"\n        onPress={handleDataUpdate}\n        style={{ margin: 10 }}\n      />\n      <Spinner isModalVisible={isModalVisible} />\n    </ScrollView>\n  );\n};\n\nexport default AddCategory;\n\nconst styles = StyleSheet.create({});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { ListItem } from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nconst DropDown = ({ label, options, setValue, value, style }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <View style={[styles.container, style]}>\n      <ListItem\n        title={value ? value : label}\n        trailing={(props) => (\n          <Icon name={show ? \"chevron-up\" : \"chevron-down\"} {...props} />\n        )}\n        onPress={() => setShow((prevState) => !prevState)}\n      />\n      {show && (\n        <>\n          {options.map((option) => (\n            <ListItem\n              title={option}\n              onPress={() => {\n                setValue(option);\n                setShow(false);\n              }}\n            />\n          ))}\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default DropDown;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n  },\n});\n","import {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"state/state\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst AddProduct = ({\n  setProductModal,\n  setisModalVisible,\n  existingProduct,\n  existingProductIndex,\n}) => {\n  const catalog = userStoreState.use();\n  const [newProduct, setnewProduct] = useState(\n    existingProduct\n      ? existingProduct\n      : {\n          name: null,\n          price: null,\n          catagory: null,\n          options: [],\n          description: null,\n        }\n  );\n  const [autoFocusOn, setautoFocusOn] = useState({\n    index: null,\n    inputName: null,\n    innerList: null,\n  });\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(\n        [...catalog.categories],\n        [...catalog.products, copyProductData]\n      );\n    } else if (existingProduct) {\n      let copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n\n      updateData([...catalog.categories], copy);\n    } else {\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\n    }\n    setisModalVisible(true);\n  }\n\n  useEffect(() => {\n    const scrollPosition = sessionStorage.getItem(\"scrollPosition\");\n    if (scrollPosition) {\n      window.scrollTo(0, parseInt(scrollPosition));\n      sessionStorage.removeItem(\"scrollPosition\");\n    }\n  }, [newProduct]);\n\n  const OptionsAddingSection = () => {\n    return (\n      <View>\n        {newProduct.options.map((e, index) => {\n          const [optionLblsValues, setoptionLblsValues] = useState([]);\n          const [optionLbls, setoptionLbls] = useState([]);\n\n          useEffect(() => {\n            //setnewProduct(newProductSaved.current);\n            if (newProduct.options.length > 1) {\n              const optionLblsLocal = [];\n              newProduct.options.forEach((checkUseE) => {\n                if (checkUseE.label !== e.label)\n                  optionLblsLocal.push(checkUseE.label);\n              });\n              setoptionLbls(optionLblsLocal);\n            }\n          }, []);\n\n          useEffect(() => {\n            if (e.selectedCaseKey !== null) {\n              const local = newProduct.options.filter(\n                (localE) => localE.label == e.selectedCaseKey\n              );\n              const optionLblsValuesLocal = [];\n              local[0].optionsList.forEach((eVals) => {\n                optionLblsValuesLocal.push(eVals.label);\n              });\n              setoptionLblsValues(optionLblsValuesLocal);\n            }\n          }, [optionLbls]);\n\n          return (\n            <View\n              style={{\n                padding: 25,\n                margin: 15,\n                backgroundColor: \"lightgrey\",\n              }}\n            >\n              <TouchableOpacity\n                onPress={() => {\n                  const copy = structuredClone(newProduct);\n                  copy.options.push({\n                    ...e,\n                    label: e.label + \" Copy\",\n                  });\n\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: copy.options,\n                  }));\n                }}\n              >\n                <Text\n                  style={{\n                    marginBottom: 25,\n                    fontWeight: \"700\",\n                    color: \"red\",\n                  }}\n                >\n                  Copy\n                </Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                onPress={() => {\n                  const copy = structuredClone(newProduct);\n                  copy.options.splice(index, 1);\n\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: copy.options,\n                  }));\n                }}\n              >\n                <Text\n                  style={{\n                    marginBottom: 25,\n                    fontWeight: \"700\",\n                    color: \"red\",\n                  }}\n                >\n                  X\n                </Text>\n              </TouchableOpacity>\n              <TextInput\n                placeholder=\"Enter Select List Label\"\n                onChangeText={(val) => {\n                  const newOptionsList = [...newProduct.options];\n                  newOptionsList[index].label = val;\n                  setautoFocusOn({\n                    index: index,\n                    inputName: \"label\",\n                    innerList: false,\n                  });\n                  sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: newOptionsList,\n                  }));\n                }}\n                value={e.label}\n                autoFocus={\n                  autoFocusOn.index === index &&\n                  autoFocusOn.innerList === false &&\n                  autoFocusOn.inputName === \"label\"\n                }\n                style={{ marginBottom: 25 }}\n              />\n              <TextInput\n                placeholder=\"Enter Number Of Selectable; If There Is\"\n                onChangeText={(val) => {\n                  const newOptionsList = [...newProduct.options];\n                  newOptionsList[index].numOfSelectable = val;\n                  setautoFocusOn({\n                    index: index,\n                    inputName: \"numOfSelectable\",\n                    innerList: false,\n                  });\n                  sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: newOptionsList,\n                  }));\n                }}\n                value={e.numOfSelectable}\n                autoFocus={\n                  autoFocusOn.index === index &&\n                  autoFocusOn.innerList === false &&\n                  autoFocusOn.inputName === \"numOfSelectable\"\n                }\n                style={{ marginBottom: 25 }}\n              />\n              {e.optionsList.map((eInnerList, indexInnerList) => {\n                return (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      marginBottom: 25,\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <TextInput\n                      placeholder=\"Enter Option Label\"\n                      onChangeText={(val) => {\n                        const newOptionsList = structuredClone(newProduct);\n                        newOptionsList.options[index].optionsList[\n                          indexInnerList\n                        ].label = val;\n                        setautoFocusOn({\n                          index: indexInnerList,\n                          inputName: \"label\",\n                          innerList: true,\n                        });\n                        sessionStorage.setItem(\n                          \"scrollPosition\",\n                          window.pageYOffset\n                        );\n                        setnewProduct(newOptionsList);\n                      }}\n                      value={eInnerList.label}\n                      autoFocus={\n                        autoFocusOn.index === indexInnerList &&\n                        autoFocusOn.innerList === true &&\n                        autoFocusOn.inputName === \"label\"\n                      }\n                    />\n                    <TextInput\n                      placeholder=\"Enter price increase\"\n                      onChangeText={(val) => {\n                        const newOptionsList = structuredClone(newProduct);\n                        newOptionsList.options[index].optionsList[\n                          indexInnerList\n                        ].priceIncrease = val;\n                        setautoFocusOn({\n                          index: indexInnerList,\n                          inputName: \"priceIncrease\",\n                          innerList: true,\n                        });\n                        sessionStorage.setItem(\n                          \"scrollPosition\",\n                          window.pageYOffset\n                        );\n                        setnewProduct(newOptionsList);\n                      }}\n                      value={eInnerList.priceIncrease}\n                      autoFocus={\n                        autoFocusOn.index === indexInnerList &&\n                        autoFocusOn.innerList === true &&\n                        autoFocusOn.inputName === \"priceIncrease\"\n                      }\n                      style={{ marginLeft: 20, marginRight: 20 }}\n                    />\n                    <TouchableOpacity\n                      onPress={() => {\n                        const copy = structuredClone(newProduct);\n                        copy.options[index].optionsList.splice(\n                          indexInnerList,\n                          1\n                        );\n\n                        setnewProduct((prevState) => ({\n                          ...prevState,\n                          options: copy.options,\n                        }));\n\n                        setnewProduct((prevState) => ({\n                          ...prevState,\n                          options: copy.options,\n                        }));\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontWeight: \"700\",\n                          color: \"red\",\n                        }}\n                      >\n                        X\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                );\n              })}\n              <Button\n                title=\"Add Option Choice\"\n                onPress={() => {\n                  const newOptionsList = [...newProduct.options];\n                  newOptionsList[index].optionsList.push({\n                    label: null,\n                    priceIncrease: null,\n                  });\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: newOptionsList,\n                  }));\n                  setautoFocusOn({\n                    index: newOptionsList[index].optionsList.length - 1,\n                    inputName: \"label\",\n                    innerList: true,\n                  });\n                  sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                }}\n                style={{ marginBottom: 25 }}\n              />\n              {optionLbls.length > 1 && (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    marginBottom: 25,\n                  }}\n                >\n                  <DropDown\n                    label=\"Show if...\"\n                    options={optionLbls}\n                    setValue={(val) => {\n                      const newOptionsList = [...newProduct.options];\n                      newOptionsList[index].selectedCaseKey = val;\n                      setnewProduct((prevState) => ({\n                        ...prevState,\n                        options: newOptionsList,\n                      }));\n                      sessionStorage.setItem(\n                        \"scrollPosition\",\n                        window.pageYOffset\n                      );\n                      setautoFocusOn({\n                        index: null,\n                        inputName: null,\n                        innerList: null,\n                      });\n                    }}\n                    value={e.selectedCaseKey}\n                    style={{ marginBottom: 25 }}\n                  />\n                  <Text>\"=\"</Text>\n                  <DropDown\n                    label=\"Show if...\"\n                    options={optionLblsValues}\n                    setValue={(val) => {\n                      const newOptionsList = [...newProduct.options];\n                      newOptionsList[index].selectedCaseValue = val;\n                      setnewProduct((prevState) => ({\n                        ...prevState,\n                        options: newOptionsList,\n                      }));\n                      sessionStorage.setItem(\n                        \"scrollPosition\",\n                        window.pageYOffset\n                      );\n\n                      setautoFocusOn({\n                        index: null,\n                        inputName: null,\n                        innerList: null,\n                      });\n                    }}\n                    value={e.selectedCaseValue}\n                    style={{ marginBottom: 25 }}\n                  />\n                </View>\n              )}\n            </View>\n          );\n        })}\n        <Button\n          title=\"Add Product Option\"\n          onPress={() => {\n            sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: [\n                ...prevState.options,\n                {\n                  label: null,\n                  optionsList: [],\n                  selectedCaseKey: null,\n                  selectedCaseValue: null,\n                  numOfSelectable: null,\n                },\n              ],\n            }));\n\n            // Not using -1 on length since this is before the new option is added to list\n            setautoFocusOn({\n              index: newProduct.options.length,\n              inputName: \"label\",\n              innerList: false,\n            });\n          }}\n          style={{ marginBottom: 25 }}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView\n      contentContainerStyle={{\n        width: \"93%\",\n        alignSelf: \"center\",\n        marginTop: 25,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 20,\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <TouchableOpacity onPress={() => setProductModal(false)}>\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n            X\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            let copy = structuredClone(newProduct);\n            copy.name = copy.name + \" Copy\";\n            handleDataUpdate(copy);\n          }}\n        >\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <Text style={{ marginBottom: 25 }}>AddProduct</Text>\n      </View>\n      <TextInput\n        placeholder=\"Enter Product Name\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, name: val }));\n        }}\n        value={newProduct.name}\n        style={{ marginBottom: 25 }}\n      />\n      <TextInput\n        placeholder=\"Enter any other items that come with this\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, description: val }));\n        }}\n        style={{ marginBottom: 25 }}\n        value={newProduct.description}\n      />\n      <TextInput\n        placeholder=\"Enter Product Price\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, price: val }));\n        }}\n        style={{ marginBottom: 25 }}\n        value={newProduct.price}\n      />\n      <DropDown\n        label=\"Choose catagory\"\n        options={catalog.categories}\n        setValue={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, catagory: val }));\n        }}\n        value={newProduct.catagory}\n        style={{ marginBottom: 25 }}\n      />\n      <OptionsAddingSection />\n      <Button\n        title=\"Add/Save Product\"\n        onPress={() => handleDataUpdate()}\n        style={{\n          marginBottom: 25,\n          marginTop: 25,\n          backgroundColor: \"lightgreen\",\n        }}\n      />\n    </ScrollView>\n  );\n};\n\nexport default AddProduct;\n\nconst styles = StyleSheet.create({});\n","import {\n  Modal,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport AddProduct from \"./AddProduct\";\nimport Spinner from \"./Spinner\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst EditProductList = () => {\n  const catalog = userStoreState.use();\n  const [productModal, setProductModal] = useState(false);\n  const [productEditModal, setProductEditModal] = useState(false);\n  const [isModalVisible, setisModalVisible] = useState(false);\n\n  function handleRemoveCatagory(index) {\n    const localCatalog = structuredClone(catalog);\n    localCatalog.products.splice(index, 1);\n\n    updateData(localCatalog.categories, localCatalog.products);\n    setisModalVisible(true);\n  }\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>Current Products</Text>\n      {catalog.categories.length > 0 ? (\n        catalog.products.map((e, index) => {\n          return (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                padding: 15,\n                margin: 10,\n                backgroundColor: \"lightgrey\",\n              }}\n            >\n              <Text style={{ fontSize: 17 }}>Product: {e.name}</Text>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                  width: \"10%\",\n                }}\n              >\n                <Button\n                  title=\"Edit\"\n                  onPress={() => setProductEditModal(true)}\n                  style={{ margin: 10 }}\n                />\n                <TouchableOpacity\n                  onPress={() => handleRemoveCatagory(index)}\n                  style={{\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    borderRadius: 3,\n                    backgroundColor: \"red\",\n                    padding: 10,\n                    margin: 10,\n                  }}\n                >\n                  <Text\n                    style={{ color: \"white\", fontWeight: \"600\", fontSize: 18 }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n              </View>\n              <Modal visible={productEditModal}>\n                <AddProduct\n                  setProductModal={setProductEditModal}\n                  setisModalVisible={setisModalVisible}\n                  existingProduct={e}\n                  existingProductIndex={index}\n                />\n              </Modal>\n            </View>\n          );\n        })\n      ) : (\n        <Text style={{ marginTop: 50, marginBottom: 50 }}>\n          You must add a category before you can add a product...\n        </Text>\n      )}\n      {catalog.products.length < 1 && catalog.categories.length > 0 && (\n        <Text style={{ marginTop: 50, marginBottom: 50 }}>\n          You have no products...\n        </Text>\n      )}\n      <Button\n        title=\"Add New Product\"\n        onPress={() => setProductModal(true)}\n        style={{ margin: 10 }}\n        disabled={catalog.categories.length < 1}\n      />\n      <Modal visible={productModal}>\n        <AddProduct\n          setProductModal={setProductModal}\n          setisModalVisible={setisModalVisible}\n        />\n      </Modal>\n      <Spinner isModalVisible={isModalVisible} />\n    </ScrollView>\n  );\n};\n\nexport default EditProductList;\n\nconst styles = StyleSheet.create({});\n","import { View, Text, ScrollView } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport { setWoocommerceState, woocommerceState } from \"state/state\";\nimport { updateWooCredentials } from \"state/firebaseFunctions\";\n\nconst WoocommerceSettings = () => {\n  const wooCredentials = woocommerceState.use();\n  const [apiUrl, setapiUrl] = useState(wooCredentials.apiUrl);\n  const [ck, setck] = useState(wooCredentials.ck);\n  const [cs, setcs] = useState(wooCredentials.cs);\n  const [useWoocommerce, setuseWoocommerce] = useState(\n    wooCredentials.useWoocommerce\n  );\n\n  const handleDataUpdate = () => {\n    if (apiUrl !== null && ck !== null && cs !== null) {\n      setWoocommerceState({\n        apiUrl: apiUrl,\n        ck: ck,\n        cs: cs,\n        useWoocommerce: useWoocommerce,\n      });\n      updateWooCredentials({\n        apiUrl: apiUrl,\n        ck: ck,\n        cs: cs,\n        useWoocommerce: useWoocommerce,\n      });\n    }\n  };\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      <TextInput\n        placeholder=\"Enter Woocommerce 'API Url'\"\n        onChangeText={(val) => setapiUrl(val)}\n        style={{ margin: 10 }}\n        value={apiUrl}\n      />\n      <TextInput\n        placeholder=\"Enter Woocommerce 'CK'\"\n        onChangeText={(val) => setck(val)}\n        style={{ margin: 10 }}\n        value={ck}\n      />\n      <TextInput\n        placeholder=\"Enter Woocommerce 'CS'\"\n        onChangeText={(val) => setcs(val)}\n        style={{ margin: 10 }}\n        value={cs}\n      />\n      <Switch\n        value={useWoocommerce}\n        onValueChange={(val) => setuseWoocommerce(val)}\n      />\n      <Button title=\"Save\" onPress={handleDataUpdate} style={{ margin: 10 }} />\n      {/* <Spinner isModalVisible={isModalVisible} /> */}\n    </ScrollView>\n  );\n};\n\nexport default WoocommerceSettings;\n","import { View, Text, ScrollView } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport { setStoreDetailState, storeDetailState } from \"state/state\";\nimport { updateStoreDetails } from \"state/firebaseFunctions\";\n\nconst EditStoreDetails = () => {\n  const storeDetails = storeDetailState.use();\n  const [name, setname] = useState(storeDetails.name);\n  const [phoneNumber, setphoneNumber] = useState(storeDetails.phoneNumber);\n  const [address, setaddress] = useState(storeDetails.address);\n  const [website, setwebsite] = useState(storeDetails.website);\n\n  const handleDataUpdate = () => {\n    if (name !== null && phoneNumber !== null && address !== null) {\n      setStoreDetailState({\n        name: name,\n        phoneNumber: phoneNumber,\n        address: address,\n        website: website,\n      });\n      updateStoreDetails({\n        name: name,\n        phoneNumber: phoneNumber,\n        address: address,\n        website: website,\n      });\n    }\n  };\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      <TextInput\n        placeholder=\"Enter Store Name\"\n        onChangeText={(val) => setname(val)}\n        style={{ margin: 10 }}\n        value={name}\n      />\n      <TextInput\n        placeholder=\"Enter Store Website Url\"\n        onChangeText={(val) => setwebsite(val)}\n        style={{ margin: 10 }}\n        value={website}\n      />\n      <TextInput\n        placeholder=\"Enter Store Phone Number\"\n        onChangeText={(val) => setphoneNumber(val)}\n        style={{ margin: 10 }}\n        value={phoneNumber}\n      />\n      <TextInput\n        placeholder=\"Enter Store Address\"\n        onChangeText={(val) => setaddress(val)}\n        style={{ margin: 10 }}\n        value={address}\n      />\n      <Button title=\"Save\" onPress={handleDataUpdate} style={{ margin: 10 }} />\n      {/* <Spinner isModalVisible={isModalVisible} /> */}\n    </ScrollView>\n  );\n};\n\nexport default EditStoreDetails;\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport MenuScreen from \"./MenuScreen\";\nimport CartScreen from \"./CartScreen\";\nimport { Button } from \"@react-native-material/core\";\nimport ViewTransactions from \"./ViewTransactions\";\nimport AddCategory from \"components/AddCategory\";\nimport AddProduct from \"components/AddProduct\";\nimport EditProductList from \"components/EditProductList\";\nimport { userStoreState } from \"state/state\";\nimport { auth } from \"state/firebaseConfig\";\nimport WoocommerceSettings from \"components/WoocommerceSettings\";\nimport EditStoreDetails from \"components/EditStoreDetails\";\n\nconst HomeScreen = () => {\n  const catalog = userStoreState.use();\n  const [section, setSection] = useState();\n  const [settings, setSettings] = useState(false);\n\n  useEffect(() => {\n    const prevScreen = localStorage.getItem(\"localScreen\");\n    setSection(prevScreen);\n    if (\n      prevScreen === \"add-category\" ||\n      prevScreen === \"add-product\" ||\n      prevScreen === \"edit-woocommerce\" ||\n      prevScreen === \"edit-store-details\"\n    )\n      setSettings(true);\n  }, []);\n\n  const Menu = () => {\n    if (settings === true) {\n      //edit settings menu\n      return (\n        <View\n          style={{\n            width: \"100%\",\n            height: 120,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-evenly\",\n            backgroundColor: \"red\",\n          }}\n        >\n          <Button\n            titleStyle={\n              section === \"add-category\"\n                ? { color: \"white\", fontWeight: \"700\" }\n                : { color: \"black\", fontWeight: \"700\" }\n            }\n            style={\n              section === \"add-category\"\n                ? { backgroundColor: \"blue\" }\n                : { backgroundColor: \"white\" }\n            }\n            onPress={() => {\n              setSection(\"add-category\");\n              localStorage.setItem(\"localScreen\", \"add-category\");\n            }}\n            title=\"Add Category\"\n          />\n          <Button\n            titleStyle={\n              section === \"add-product\"\n                ? { color: \"white\", fontWeight: \"700\" }\n                : { color: \"black\", fontWeight: \"700\" }\n            }\n            style={\n              section === \"add-product\"\n                ? { backgroundColor: \"blue\" }\n                : { backgroundColor: \"white\" }\n            }\n            onPress={() => {\n              setSection(\"add-product\");\n              localStorage.setItem(\"localScreen\", \"add-product\");\n            }}\n            title=\"Add Product\"\n          />\n          <Button\n            titleStyle={\n              section === \"edit-woocommerce\"\n                ? { color: \"white\", fontWeight: \"700\" }\n                : { color: \"black\", fontWeight: \"700\" }\n            }\n            style={\n              section === \"edit-woocommerce\"\n                ? { backgroundColor: \"blue\" }\n                : { backgroundColor: \"white\" }\n            }\n            onPress={() => {\n              setSection(\"edit-woocommerce\");\n              localStorage.setItem(\"localScreen\", \"edit-woocommerce\");\n            }}\n            title=\"Woocommerce\"\n          />\n          <Button\n            titleStyle={\n              section === \"edit-store-details\"\n                ? { color: \"white\", fontWeight: \"700\" }\n                : { color: \"black\", fontWeight: \"700\" }\n            }\n            style={\n              section === \"edit-store-details\"\n                ? { backgroundColor: \"blue\" }\n                : { backgroundColor: \"white\" }\n            }\n            onPress={() => {\n              setSection(\"edit-store-details\");\n              localStorage.setItem(\"localScreen\", \"edit-store-details\");\n            }}\n            title=\"Store Details\"\n          />\n          <Button\n            titleStyle={{ color: \"black\", fontWeight: \"700\" }}\n            style={{ backgroundColor: \"white\" }}\n            onPress={() => {\n              localStorage.removeItem(\"localScreen\");\n              auth.signOut();\n            }}\n            title=\"Logout\"\n          />\n          <Button\n            titleStyle={{ color: \"black\", fontWeight: \"700\" }}\n            style={{ backgroundColor: \"white\" }}\n            onPress={() => {\n              setSettings(false);\n              setSection();\n              localStorage.removeItem(\"localScreen\");\n            }}\n            title=\"X\"\n          />\n        </View>\n      );\n    }\n    return (\n      <View\n        style={{\n          width: \"100%\",\n          height: 120,\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-evenly\",\n          backgroundColor: \"red\",\n        }}\n      >\n        {catalog.categories?.map((category, index) => {\n          if (!section && index === 0) {\n            return (\n              <Button\n                key={index}\n                titleStyle={{ color: \"white\", fontWeight: \"700\" }}\n                style={{ backgroundColor: \"blue\" }}\n                onPress={() => {\n                  setSection(category);\n                  localStorage.setItem(\"localScreen\", category);\n                }}\n                title={category}\n              />\n            );\n          }\n\n          return (\n            <Button\n              key={index}\n              titleStyle={\n                section === category\n                  ? { color: \"white\", fontWeight: \"700\" }\n                  : { color: \"black\", fontWeight: \"700\" }\n              }\n              style={\n                section === category\n                  ? { backgroundColor: \"blue\" }\n                  : { backgroundColor: \"white\" }\n              }\n              onPress={() => {\n                setSection(category);\n                localStorage.setItem(\"localScreen\", category);\n              }}\n              title={category}\n            />\n          );\n        })}\n        <Button\n          titleStyle={\n            section === \"transList\"\n              ? { color: \"white\", fontWeight: \"700\" }\n              : { color: \"black\", fontWeight: \"700\" }\n          }\n          style={\n            section === \"transList\"\n              ? { backgroundColor: \"blue\" }\n              : { backgroundColor: \"white\" }\n          }\n          onPress={() => {\n            setSection(\"transList\");\n            localStorage.setItem(\"localScreen\", \"transList\");\n          }}\n          title=\"Transaction\"\n        />\n        <Button\n          titleStyle={{ color: \"black\", fontWeight: \"700\" }}\n          style={{ backgroundColor: \"white\" }}\n          onPress={() => setSettings(true)}\n          title=\"Settings\"\n        />\n      </View>\n    );\n  };\n\n  const Screen = () => {\n    if (section === \"add-category\") return <AddCategory />;\n    if (section === \"add-product\") return <EditProductList />;\n    if (section === \"edit-woocommerce\") return <WoocommerceSettings />;\n     if (section === \"edit-store-details\") return <EditStoreDetails />;\n    if (section === \"transList\")\n      return (\n        <View style={{ height: \"85%\" }}>\n          <ViewTransactions />\n        </View>\n      );\n    return (\n      <View style={{ flexDirection: \"row\", height: \"85%\" }}>\n        <MenuScreen catalog={catalog} section={section} />\n        <CartScreen />\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <Menu />\n      <Screen />\n    </View>\n  );\n};\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n  },\n});\n","import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Home from \"screens/authed/HomeScreen\";\nimport Register from \"screens/non-authed/Register\";\n\nconst Stack = createStackNavigator();\n\nexport default function TmpAuthStack() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Home\" component={Home} />\n    </Stack.Navigator>\n  );\n}\n","import React from \"react\";\nimport TabNav from \"./TabNav\";\nimport TmpAuthStack from \"./TmpAuthStack\";\n\nconst MainAuthed = () => {\n  // return <TabNav />;\n  return <TmpAuthStack />;\n};\n\nexport default MainAuthed;\n","import { Image, StyleSheet, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport {\n  TextInput,\n  IconButton,\n  Button,\n  Text,\n} from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { signIn } from \"state/firebaseFunctions\";\n\nconst Login = ({ navigation }) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const attemptSignIn = () => {\n    if (email && password) {\n     signIn(email, password)\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaView style={styles.safeareaContainer}>\n        <Image\n          source={require(\"assets/pathblazer-logo.png\")}\n          style={styles.logo}\n        />\n        <View style={styles.innerContainer}>\n          <TextInput\n            label=\"Email\"\n            variant=\"outlined\"\n            style={{ width: \"100%\", marginBottom: 10 }}\n            value={email}\n            onChangeText={(val) => setEmail(val)}\n            autoCorrect={false}\n            textContentType={\"emailAddress\"}\n          />\n          <TextInput\n            label=\"Password\"\n            variant=\"outlined\"\n            trailing={(props) => (\n              <IconButton\n                onPress={() => setShowPassword((prevState) => !prevState)}\n                icon={(props) => <Icon name=\"eye\" {...props} />}\n                {...props}\n              />\n            )}\n            value={password}\n            onChangeText={(val) => setPassword(val)}\n            secureTextEntry={!showPassword}\n            style={{ width: \"100%\" }}\n          />\n        </View>\n        <View style={styles.innerContainer}>\n          <Button\n            title=\"Login\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            style={{ marginBottom: 10 }}\n            onPress={attemptSignIn}\n          />\n          <Text variant=\"subtitle1\" style={{ marginBottom: 10 }}>\n            Or\n          </Text>\n          <Button\n            title=\"Register\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"grey\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            onPress={() => navigation.navigate(\"Register\")}\n          />\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nexport default Login;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  safeareaContainer: {\n    flex: 1,\n    height: \"60%\",\n    width: \"80%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 250,\n    resizeMode: \"contain\",\n  },\n  innerContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","import { Image, StyleSheet, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport {\n  TextInput,\n  IconButton,\n  Button,\n  Text,\n} from \"@react-native-material/core\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { signUp } from \"state/firebaseFunctions\";\n\nconst Register = ({ navigation }) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const attemptSignUp = () => {\n    if (email && password) {\n      signUp(email, password);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaView style={styles.safeareaContainer}>\n        <Image\n          source={require(\"assets/pathblazer-logo.png\")}\n          style={styles.logo}\n        />\n        <View style={styles.innerContainer}>\n          <TextInput\n            label=\"Email\"\n            variant=\"outlined\"\n            style={{ width: \"100%\", marginBottom: 10 }}\n            value={email}\n            onChangeText={(val) => setEmail(val)}\n            autoCorrect={false}\n            textContentType={\"emailAddress\"}\n          />\n          <TextInput\n            label=\"Password\"\n            variant=\"outlined\"\n            trailing={(props) => (\n              <IconButton\n                onPress={() => setShowPassword((prevState) => !prevState)}\n                icon={(props) => <Icon name=\"eye\" {...props} />}\n                {...props}\n              />\n            )}\n            value={password}\n            onChangeText={(val) => setPassword(val)}\n            secureTextEntry={!showPassword}\n            style={{ width: \"100%\" }}\n          />\n        </View>\n        <View style={styles.innerContainer}>\n          <Button\n            title=\"Register\"\n            uppercase={false}\n            contentContainerStyle={{\n              width: \"100%\",\n              height: 60,\n              backgroundColor: \"black\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            style={{ marginBottom: 10 }}\n            onPress={attemptSignUp}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Text variant=\"subtitle1\" style={{ marginBottom: 10 }}>\n              Or\n            </Text>\n            <Text\n              variant=\"subtitle1\"\n              style={{ marginBottom: 10, marginLeft: 5, color: \"blue\" }}\n              onPress={() => navigation.goBack()}\n            >\n              Go Back\n            </Text>\n          </View>\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nexport default Register;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  safeareaContainer: {\n    flex: 1,\n    height: \"60%\",\n    width: \"80%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 250,\n    resizeMode: \"contain\",\n  },\n  innerContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Login from \"screens/non-authed/Login\";\nimport Register from \"screens/non-authed/Register\";\n\nconst Stack = createStackNavigator();\n\nexport default function MainNonAuth() {\n  return (\n    <Stack.Navigator screenOptions={{headerShown: false}}>\n      <Stack.Screen name=\"Login\" component={Login} />\n      <Stack.Screen name=\"Register\" component={Register} />\n    </Stack.Navigator>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport MainAuthed from \"./authed/MainAuthed\";\nimport {\n  setStoreDetailState,\n  setTransListState,\n  setUserState,\n  setUserStoreState,\n  setWoocommerceState,\n  storeDetailState,\n  transListState,\n  userState,\n  woocommerceState,\n} from \"state/state\";\nimport MainNonAuth from \"./non-authed/MainNonAuth\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport Spinner from \"components/Spinner\";\nimport { updateTransList } from \"state/firebaseFunctions\";\n\nconst RouteManager = () => {\n  const userS = userState.use();\n  const wooCredentials = woocommerceState.use();\n  const transList = transListState.use();\n  const storeDetails = storeDetailState.use();\n  const [loading, setloading] = useState(true);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUserState(user);\n        db.collection(\"users\")\n          .doc(user.uid)\n          .get()\n          .then((doc) => {\n            setUserStoreState({\n              products: doc.data().products,\n              categories: doc.data().categories,\n            });\n            if (doc.data().transList) {\n              setTransListState(doc.data().transList);\n            }\n            if (doc.data().wooCredentials) {\n              setWoocommerceState(doc.data().wooCredentials);\n            }\n            if (doc.data().storeDetails) {\n              setStoreDetailState(doc.data().storeDetails);\n            }\n          });\n        setTimeout(() => {\n          setloading(false);\n        }, 1);\n      } else {\n        setUserState(null);\n        setUserStoreState({ products: null, categories: null });\n        setTimeout(() => {\n          setloading(false);\n        }, 1);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (userS) {\n      const unsub = db\n        .collection(\"users\")\n        .doc(userS.uid)\n        .onSnapshot((doc) => {\n          setloading(true);\n          setUserStoreState({\n            products: doc.data().products,\n            categories: doc.data().categories,\n          });\n          setTransListState(doc.data().transList);\n          if (doc.data().wooCredentials) {\n            setWoocommerceState(doc.data().wooCredentials);\n          }\n          if (doc.data().storeDetails) {\n            setStoreDetailState(doc.data().storeDetails);\n          }\n          setTimeout(() => {\n            setloading(false);\n          }, 1);\n        });\n      return () => unsub();\n    }\n  }, [userS]);\n\n  useEffect(() => {\n    if (wooCredentials.useWoocommerce === true) {\n      const interval = setInterval(() => {\n        fetch(wooCredentials.apiUrl, {\n          headers: {\n            Authorization:\n              \"Basic \" + btoa(`${wooCredentials.ck}:${wooCredentials.cs}`),\n          },\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            // do something with the data, like checking for new orders\n            //console.log(data);\n\n            const array1 = transList;\n            const array2 = data;\n\n            const newArray = [];\n\n            array1.concat(array2).reduce(function (acc, curr) {\n              if (!acc.includes(curr.transaction_id)) {\n                acc.push(curr.transaction_id);\n                newArray.push(curr);\n              }\n              return acc;\n            }, []);\n            if (newArray.length > transList.length) {\n              const newItems = structuredClone(newArray).splice(\n                transList.length,\n                newArray.length - transList.length\n              );\n\n              updateTransList(newArray);\n\n              if (newItems.length > 1) {\n                newItems.forEach((e) => {\n                  const printData = [];\n\n                  printData.push(\n                    \"\\x1B\\x40\", // init\n                    \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                    storeDetails.name,\n                    \"\\x0A\",\n                    storeDetails.address + \"\\x0A\",\n                    storeDetails.website + \"\\x0A\", // text and line break\n                    storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                    e.date_created + \"\\x0A\",\n                    \"\\x0A\",\n                    \"Online Order\" + \"\\x0A\", // text and line break\n                    `Transaction # ${e.number}` + \"\\x0A\",\n                    \"\\x0A\",\n                    \"\\x0A\",\n                    \"\\x0A\",\n                    \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n                  );\n\n                  e.line_items?.map((cartItem) => {\n                    printData.push(\"\\x0A\");\n                    printData.push(`Name: ${cartItem.name}`);\n                    printData.push(\"\\x0A\");\n                    printData.push(`Quantity: ${cartItem.quantity}`);\n                    printData.push(\"\\x0A\");\n                    printData.push(`Price: $${cartItem.price}`);\n                    printData.push(\"\\x0A\");\n\n                    if (cartItem.meta_data) {\n                      cartItem.meta_data?.map((meta, index) => {\n                        if (index === 0) {\n                          printData.push(`${meta.key} : ${meta.value}`);\n                          if (cartItem.meta_data[index + 1].key !== meta.key) {\n                            printData.push(\"\\x0A\");\n                          }\n                        } else {\n                          if (index !== cartItem.meta_data.length - 1) {\n                            if (\n                              cartItem.meta_data[index - 1].key === meta.key\n                            ) {\n                              printData.push(` , ${meta.value}`);\n                            } else {\n                              printData.push(`${meta.key} : ${meta.value}`);\n                            }\n\n                            if (\n                              cartItem.meta_data[index + 1].key !== meta.key\n                            ) {\n                              printData.push(\"\\x0A\");\n                            }\n                          }\n                        }\n                      });\n                    } else {\n                      printData.push(\"\\x0A\" + \"\\x0A\");\n                    }\n                  });\n\n                  printData.push(\"\\x0A\");\n                  printData.push(\"\\x0A\");\n                  printData.push(`Customer Details:`);\n                  printData.push(\"\\x0A\");\n                  printData.push(`Address: ${e.shipping.address_1}`);\n                  printData.push(\"\\x0A\");\n                  printData.push(`City: ${e.shipping.city}`);\n                  printData.push(\"\\x0A\");\n                  printData.push(`Zip/Postal Code: ${e.shipping.postcode}`);\n                  printData.push(\"\\x0A\");\n                  printData.push(`Province/State: ${e.shipping.state}`);\n                  printData.push(\"\\x0A\");\n                  printData.push(\n                    `Name: ${e.shipping.first_name} ${e.shipping.last_name}`\n                  );\n                  printData.push(\"\\x0A\");\n                  e.shipping_lines.map((line) =>\n                    printData.push(`Shipping Method: ${line.method_title}`)\n                  );\n                  printData.push(\"\\x0A\");\n                  printData.push(\"\\x0A\");\n\n                  printData.push(\n                    \"\\x0A\",\n                    \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                    \"\\x0A\" + \"\\x0A\",\n                    \"Payment Method: \" +\n                      e.payment_method_title +\n                      \"\\x0A\" +\n                      \"\\x0A\",\n                    \"Total Including (13% Tax): \" +\n                      \"$\" +\n                      (parseFloat(e.total) + parseFloat(e.total_tax)).toFixed(\n                        2\n                      ) +\n                      \"\\x0A\" +\n                      \"\\x0A\",\n                    \"------------------------------------------\" + \"\\x0A\",\n                    \"\\x0A\", // line break\n                    \"\\x0A\", // line break\n                    \"\\x0A\", // line break\n                    \"\\x0A\", // line break\n                    \"\\x0A\", // line break\n                    \"\\x0A\" // line break\n                  );\n\n                  printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n                  fetch(\"http://localhost:8080/print\", {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(printData),\n                  })\n                    .then((response) => response.json())\n                    .then((respData) => {\n                      console.log(respData);\n                    })\n                    .catch((e) => alert(\"Error with printer\"));\n                });\n              } else {\n                const e = newItems[0];\n                const printData = [];\n\n                printData.push(\n                  \"\\x1B\" + \"\\x40\", // init\n                  \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                  storeDetails.name,\n                  \"\\x0A\",\n                  storeDetails.address + \"\\x0A\",\n                  storeDetails.website + \"\\x0A\", // text and line break\n                  storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                  e.date_created + \"\\x0A\",\n                  \"\\x0A\",\n                  \"Online Order\" + \"\\x0A\", // text and line break\n                  `Transaction # ${e.number}` + \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x0A\",\n                  \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n                );\n\n                e.line_items?.map((cartItem) => {\n                  printData.push(\"\\x0A\");\n                  printData.push(`Name: ${cartItem.name}`);\n                  printData.push(\"\\x0A\");\n                  printData.push(`Quantity: ${cartItem.quantity}`);\n                  printData.push(\"\\x0A\");\n                  printData.push(`Price: $${cartItem.price}`);\n                  printData.push(\"\\x0A\");\n\n                  if (cartItem.meta_data) {\n                    cartItem.meta_data?.map((meta, index) => {\n                      if (index === 0) {\n                        printData.push(`${meta.key} : ${meta.value}`);\n                        if (cartItem.meta_data[index + 1].key !== meta.key) {\n                          printData.push(\"\\x0A\");\n                        }\n                      } else {\n                        if (index !== cartItem.meta_data.length - 1) {\n                          if (cartItem.meta_data[index - 1].key === meta.key) {\n                            printData.push(` , ${meta.value}`);\n                          } else {\n                            printData.push(`${meta.key} : ${meta.value}`);\n                          }\n\n                          if (cartItem.meta_data[index + 1].key !== meta.key) {\n                            printData.push(\"\\x0A\");\n                          }\n                        }\n                      }\n                    });\n                  } else {\n                    printData.push(\"\\x0A\" + \"\\x0A\");\n                  }\n                });\n\n                 printData.push(\"\\x0A\");\n                 printData.push(\"\\x0A\");\n                 printData.push(`Customer Details:`);\n                 printData.push(\"\\x0A\");\n                 printData.push(`Address: ${e.shipping.address_1}`);\n                 printData.push(\"\\x0A\");\n                 printData.push(`City: ${e.shipping.city}`);\n                 printData.push(\"\\x0A\");\n                 printData.push(`Zip/Postal Code: ${e.shipping.postcode}`);\n                 printData.push(\"\\x0A\");\n                 printData.push(`Province/State: ${e.shipping.state}`);\n                 printData.push(\"\\x0A\");\n                 printData.push(\n                   `Name: ${e.shipping.first_name} ${e.shipping.last_name}`\n                 );\n                 printData.push(\"\\x0A\");\n                 e.shipping_lines.map((line) =>\n                   printData.push(`Shipping Method: ${line.method_title}`)\n                 );\n                 printData.push(\"\\x0A\");\n                 printData.push(\"\\x0A\");\n\n                printData.push(\n                  \"\\x0A\",\n                  \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                  \"\\x0A\" + \"\\x0A\",\n                  \"Payment Method: \" + e.payment_method_title + \"\\x0A\" + \"\\x0A\",\n                  \"Total Including (13% Tax): \" +\n                    \"$\" +\n                    (parseFloat(e.total) + parseFloat(e.total_tax)).toFixed(2) +\n                    \"\\x0A\" +\n                    \"\\x0A\",\n                  \"------------------------------------------\" + \"\\x0A\",\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\", // line break\n                  \"\\x0A\" // line break\n                );\n\n                printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n                fetch(\"http://localhost:8080/print\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify(printData),\n                })\n                  .then((response) => response.json())\n                  .then((respData) => {\n                    console.log(respData);\n                  })\n                  .catch((e) => alert(\"Error with printer\"));\n              }\n            }\n          })\n          .catch((error) => {\n            alert(\n              \"Error has errored with woocommerce api. Try refreshing or updating creditials\"\n            );\n            clearInterval(interval);\n          });\n      }, 5000); // this will check for new orders every minute\n      return () => clearInterval(interval);\n    }\n  }, [wooCredentials, transList]);\n\n  return (\n    <NavigationContainer>\n      {loading ? (\n        <Spinner isModalVisible={true} />\n      ) : (\n        <>{userS ? <MainAuthed /> : <MainNonAuth />}</>\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default RouteManager;\n","import React from \"react\";\nimport RouteManager from \"navigation/RouteManager\";\nimport \"react-native-gesture-handler\";\n\n//Do this before syncing git config --global core.editor \"code --wait\"\n\nconst App = () => {\n  return <RouteManager />;\n};\n\n//hello love u\nexport default App;\n"],"sourceRoot":""}