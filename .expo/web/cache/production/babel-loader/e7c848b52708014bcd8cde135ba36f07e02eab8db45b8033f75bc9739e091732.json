{"ast":null,"code":"import{useEffect,useRef}from'react';import findNodeHandle from\"react-native-web/dist/exports/findNodeHandle\";import{useEvent}from\"./utils\";import{useSharedValue}from\"./useSharedValue\";var scrollEventNames=['onScroll','onScrollBeginDrag','onScrollEndDrag','onMomentumScrollBegin','onMomentumScrollEnd'];var _worklet_9547124911235_init_data={code:\"function anonymous(event){const{offsetRef}=this._closure;offsetRef.current.value=event.contentOffset.x===0?event.contentOffset.y:event.contentOffset.x;}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useScrollViewOffset.js\"};export function useScrollViewOffset(aref,initialRef){var offsetRef=useRef(initialRef!==undefined?initialRef:useSharedValue(0));var event=useEvent(function(){var _f=function _f(event){offsetRef.current.value=event.contentOffset.x===0?event.contentOffset.y:event.contentOffset.x;};_f._closure={offsetRef:offsetRef};_f.__initData=_worklet_9547124911235_init_data;_f.__workletHash=9547124911235;return _f;}(),scrollEventNames);useEffect(function(){var _event$current;var viewTag=findNodeHandle(aref.current);(_event$current=event.current)===null||_event$current===void 0?void 0:_event$current.registerForEvents(viewTag);},[aref.current]);return offsetRef.current;}","map":{"version":3,"mappings":"AAAA,OAAoBA,SAAS,CAAEC,MAAM,KAAQ,OAAO,0EAMpD,OAASC,QAAQ,eACjB,OAASC,cAAc,wBAEvB,GAAMC,iBAAgB,CAAG,CACvB,UAAU,CACV,mBAAmB,CACnB,iBAAiB,CACjB,uBAAuB,CACvB,qBAAqB,CACtB,8UAED,MAAO,SAASC,oBAAmBA,CACjCC,IAAoC,CACpCC,UAAgC,CACX,CACrB,GAAMC,UAAS,CAAGP,MAAM,CACtBM,UAAU,GAAKE,SAAS,CAAGF,UAAU,CAAGJ,cAAc,CAAC,CAAC,CAAC,CAC1D,CAED,GAAMO,MAAK,CAAGR,QAAQ,+BAAeQ,KAAkB,CAAK,CAE1DF,SAAS,CAACG,OAAO,CAACC,KAAK,CACrBF,KAAK,CAACG,aAAa,CAACC,CAAC,GAAK,CAAC,CACvBJ,KAAK,CAACG,aAAa,CAACE,CAAC,CACrBL,KAAK,CAACG,aAAa,CAACC,CAAC,CAC7B,CAAC,wBA1BHN,SAASQ,8FA0BJZ,gBAAgB,CAAC,CAEpBJ,SAAS,CAAC,UAAM,oBACd,GAAMiB,QAAO,CAAGD,cAAc,CAACV,IAAI,CAACK,OAAO,CAAC,CAC5C,qBAAK,CAACA,OAAO,yCAAbO,eAAeC,iBAAiB,CAACF,OAAO,CAAW,CACrD,CAAC,CAAE,CAACX,IAAI,CAACK,OAAO,CAAC,CAAC,CAElB,MAAOH,UAAS,CAACG,OAAO,CAC1B","names":["useEffect","useRef","useEvent","useSharedValue","scrollEventNames","useScrollViewOffset","aref","initialRef","offsetRef","undefined","event","current","value","contentOffset","x","y","findNodeHandle","viewTag","_event$current","registerForEvents"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useScrollViewOffset.ts"],"sourcesContent":["import { RefObject, useEffect, useRef } from 'react';\n\nimport type Animated from 'react-native-reanimated';\nimport { ScrollEvent } from './useAnimatedScrollHandler';\nimport { SharedValue } from '../commonTypes';\nimport { findNodeHandle } from 'react-native';\nimport { useEvent } from './utils';\nimport { useSharedValue } from './useSharedValue';\n\nconst scrollEventNames = [\n  'onScroll',\n  'onScrollBeginDrag',\n  'onScrollEndDrag',\n  'onMomentumScrollBegin',\n  'onMomentumScrollEnd',\n];\n\nexport function useScrollViewOffset(\n  aref: RefObject<Animated.ScrollView>,\n  initialRef?: SharedValue<number>\n): SharedValue<number> {\n  const offsetRef = useRef(\n    initialRef !== undefined ? initialRef : useSharedValue(0)\n  );\n\n  const event = useEvent<ScrollEvent>((event: ScrollEvent) => {\n    'worklet';\n    offsetRef.current.value =\n      event.contentOffset.x === 0\n        ? event.contentOffset.y\n        : event.contentOffset.x;\n  }, scrollEventNames);\n\n  useEffect(() => {\n    const viewTag = findNodeHandle(aref.current);\n    event.current?.registerForEvents(viewTag as number);\n  }, [aref.current]);\n\n  return offsetRef.current;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}