{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"spacing\",\"shouldWrapChildren\",\"childrenStyle\",\"children\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import View from\"react-native-web/dist/exports/View\";import Flex from\"./Flex\";import Selector from\"./Selector\";import{useSpacing}from\"./SpacingFuncContext\";import{getValidChildren}from\"./utilities\";var Wrap=function Wrap(_ref){var _ref$spacing=_ref.spacing,spacing=_ref$spacing===void 0?0:_ref$spacing,_ref$shouldWrapChildr=_ref.shouldWrapChildren,shouldWrapChildren=_ref$shouldWrapChildr===void 0?false:_ref$shouldWrapChildr,childrenStyle=_ref.childrenStyle,children=_ref.children,rest=_objectWithoutProperties(_ref,_excluded);var spacingValue=useSpacing(spacing);var validChildren=getValidChildren(children);var clones=!shouldWrapChildren?validChildren:validChildren.map(function(child,index){var key=typeof child.key!=='undefined'?child.key:index;return React.createElement(WrapItem,{key:key},child);});return React.createElement(Flex,_extends({mt:-spacing,ms:-spacing,inline:true,wrap:true},rest),React.createElement(Selector,{childrenStyle:[{marginTop:spacingValue,marginStart:spacingValue},childrenStyle]},clones));};export default Wrap;var WrapItem=function WrapItem(props){return React.createElement(View,props);};","map":{"version":3,"mappings":"sbAAA,MAAOA,MAAP,KAAkB,OAAlB,sDAGA,MAAOC,KAAP,cAEA,MAAOC,SAAP,kBACA,OAASC,UAAT,4BACA,OAASC,gBAAT,mBAkBA,GAAMC,KAAyB,CAAG,QAA5BA,KAAyB,CAAGC,KAM5B,uBALJC,OAAO,CAAPA,OAAO,uBAAG,CADuB,oCAM7BD,KAJJE,kBAAkB,CAAlBA,kBAAkB,gCAAG,KAFY,uBAGjCC,aAHiC,CAM7BH,KAHJG,aAHiC,CAIjCC,QAJiC,CAM7BJ,KAFJI,QAJiC,CAK9BC,8BACCL,gBACJ,GAAMM,aAAY,CAAGT,UAAU,CAACI,OAAD,CAA/B,CAEA,GAAMM,cAAa,CAAGT,gBAAgB,CAACM,QAAD,CAAtC,CAEA,GAAMI,OAAM,CAAG,CAACN,kBAAD,CACXK,aADW,CAEXA,aAAa,CAACE,GAAd,CAAkB,SAACC,KAAD,CAAQC,KAAR,CAAkB,CAClC,GAAMC,IAAG,CAAG,MAAOF,MAAK,CAACE,GAAb,GAAqB,WAArB,CAAmCF,KAAK,CAACE,GAAzC,CAA+CD,KAA3D,CACA,MAAOjB,qBAACmB,QAAD,EAAUD,GAAG,CAAEA,GAAf,EAAqBF,KAArB,CAAP,CACD,CAHD,CAFJ,CAOA,MACEhB,qBAACC,IAAD,WAAMmB,EAAE,CAAE,CAACb,OAAX,CAAoBc,EAAE,CAAE,CAACd,OAAzB,CAAkCe,MAAM,KAAxC,CAAyCC,IAAI,KAA7C,EAAkDZ,IAAlD,EACEX,oBAACE,QAAD,EACEO,aAAa,CAAE,CACb,CAAEe,SAAS,CAAEZ,YAAb,CAA2Ba,WAAW,CAAEb,YAAxC,CADa,CAEbH,aAFa,CADjB,EAMGK,MANH,CADF,CADF,CAYD,CA9BD,CAgCA,cAAeT,KAAf,CAEA,GAAMc,SAAkB,CAAIO,QAAtBP,SAAkB,CAAIO,KAAD,QAAW1B,qBAAC2B,IAAD,CAAUD,KAAV,CAAtC","names":["React","Flex","Selector","useSpacing","getValidChildren","Wrap","_ref","spacing","shouldWrapChildren","childrenStyle","children","rest","spacingValue","validChildren","clones","map","child","index","key","WrapItem","mt","ms","inline","wrap","marginTop","marginStart","props","View"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-flex-layout/lib/module/Wrap.tsx"],"sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport type { FlexProps } from './Flex';\nimport Flex from './Flex';\nimport type { SelectorProps } from './Selector';\nimport Selector from './Selector';\nimport { useSpacing } from './SpacingFuncContext';\nimport { getValidChildren } from './utilities';\n\nexport interface WrapProps extends FlexProps, SelectorProps {\n  /**\n   * The space between each child (even if it wraps).\n   *\n   * @default 0\n   */\n  spacing?: number;\n\n  /**\n   * If `true`, the children will be wrapped in a `Box` and the `Box` will take the spacing properties.\n   *\n   * @default false\n   */\n  shouldWrapChildren?: boolean;\n}\n\nconst Wrap: React.FC<WrapProps> = ({\n  spacing = 0,\n  shouldWrapChildren = false,\n  childrenStyle,\n  children,\n  ...rest\n}) => {\n  const spacingValue = useSpacing(spacing);\n\n  const validChildren = getValidChildren(children);\n\n  const clones = !shouldWrapChildren\n    ? validChildren\n    : validChildren.map((child, index) => {\n        const key = typeof child.key !== 'undefined' ? child.key : index;\n        return <WrapItem key={key}>{child}</WrapItem>;\n      });\n\n  return (\n    <Flex mt={-spacing} ms={-spacing} inline wrap {...rest}>\n      <Selector\n        childrenStyle={[\n          { marginTop: spacingValue, marginStart: spacingValue },\n          childrenStyle,\n        ]}\n      >\n        {clones}\n      </Selector>\n    </Flex>\n  );\n};\n\nexport default Wrap;\n\nconst WrapItem: React.FC = (props) => <View {...props} />;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}