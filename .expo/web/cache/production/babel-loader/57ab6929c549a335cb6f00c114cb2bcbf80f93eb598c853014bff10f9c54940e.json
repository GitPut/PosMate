{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"orientation\",\"thickness\",\"color\",\"style\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useMemo}from'react';import Box from\"./Box\";var Divider=function Divider(_ref){var _ref$orientation=_ref.orientation,orientation=_ref$orientation===void 0?'horizontal':_ref$orientation,_ref$thickness=_ref.thickness,thickness=_ref$thickness===void 0?1:_ref$thickness,_ref$color=_ref.color,color=_ref$color===void 0?'#E0E0E0':_ref$color,style=_ref.style,rest=_objectWithoutProperties(_ref,_excluded);var dividerStyle=useMemo(function(){if(orientation==='horizontal')return{height:thickness,backgroundColor:color};else return{width:thickness,backgroundColor:color};},[orientation,thickness,color]);return React.createElement(Box,_extends({style:[dividerStyle,style]},rest));};export default Divider;","map":{"version":3,"mappings":"saAAA,MAAOA,MAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CAEA,MAAOC,IAAP,aAyBA,GAAMC,QAA+B,CAAG,QAAlCA,QAA+B,CAAGC,KAMlC,2BALJC,WAAW,CAAXA,WAAW,2BAAG,YADyB,iCAMnCD,KAJJE,SAAS,CAATA,SAAS,yBAAG,CAF2B,2BAMnCF,KAHJG,KAAK,CAALA,KAAK,qBAAG,SAH+B,YAIvCC,KAJuC,CAMnCJ,KAFJI,KAJuC,CAKpCC,8BACCL,gBACJ,GAAMM,aAAY,CAAGT,OAAO,CAAC,UAAM,CACjC,GAAII,WAAW,GAAK,YAApB,CACE,MAAO,CAAEM,MAAM,CAAEL,SAAV,CAAqBM,eAAe,CAAEL,KAAtC,CAAP,CADF,IAEK,OAAO,CAAEM,KAAK,CAAEP,SAAT,CAAoBM,eAAe,CAAEL,KAArC,CAAP,CACN,CAJ2B,CAIzB,CAACF,WAAD,CAAcC,SAAd,CAAyBC,KAAzB,CAJyB,CAA5B,CAMA,MAAOP,qBAACE,GAAD,WAAKM,KAAK,CAAE,CAACE,YAAD,CAAeF,KAAf,CAAZ,EAAuCC,IAAvC,EAAP,CACD,CAdD,CAgBA,cAAeN,QAAf","names":["React","useMemo","Box","Divider","_ref","orientation","thickness","color","style","rest","dividerStyle","height","backgroundColor","width"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-flex-layout/lib/module/Divider.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport type { BoxProps } from './Box';\nimport Box from './Box';\n\nexport interface DividerProps extends BoxProps {\n  /**\n   * The orientation of the divider.\n   *\n   * @default 'horizontal'\n   */\n  orientation?: 'horizontal' | 'vertical';\n\n  /**\n   * The thickness of the divider.\n   *\n   * @default 1\n   */\n  thickness?: number;\n\n  /**\n   * The color of the divider.\n   *\n   * @default '#E0E0E0'\n   */\n  color?: string;\n}\n\nconst Divider: React.FC<DividerProps> = ({\n  orientation = 'horizontal',\n  thickness = 1,\n  color = '#E0E0E0',\n  style,\n  ...rest\n}) => {\n  const dividerStyle = useMemo(() => {\n    if (orientation === 'horizontal')\n      return { height: thickness, backgroundColor: color };\n    else return { width: thickness, backgroundColor: color };\n  }, [orientation, thickness, color]);\n\n  return <Box style={[dividerStyle, style]} {...rest} />;\n};\n\nexport default Divider;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}