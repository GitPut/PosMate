{"ast":null,"code":"import{addWhitelistedNativeProps}from\"../ConfigHelper\";export function createAnimatedPropAdapter(adapter,nativeProps){var nativePropsToAdd={};nativeProps===null||nativeProps===void 0?void 0:nativeProps.forEach(function(prop){nativePropsToAdd[prop]=true;});addWhitelistedNativeProps(nativePropsToAdd);return adapter;}var _worklet_14940100618166_init_data={code:\"function anonymous(props){const keys=Object.keys(props);if(keys.includes('transform')){if(Array.isArray(props.transform)){var _props$x,_props$y;if(props.transform.length!==6){throw new Error(\\\"invalid transform length of \\\"+props.transform.length+\\\", should be 6\\\");}const transform=props.transform;const x=(_props$x=props.x)!==null&&_props$x!==void 0?_props$x:0;const y=(_props$y=props.y)!==null&&_props$y!==void 0?_props$y:0;props.transform=[{translateX:transform[0]*x+transform[2]*y+transform[4]},{translateY:transform[1]*x+transform[3]*y+transform[5]}];}else if(typeof props.transform==='string'){const transform=props.transform;const arr=transform.replace('translate(','').replace(')','').split(' ');props.transform=[{translateX:parseFloat(arr[0])},{translateY:parseFloat(arr[1])}];}}}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/PropAdapters.js\"};export var SVGAdapter=createAnimatedPropAdapter(function(){var _f=function _f(props){var keys=Object.keys(props);if(keys.includes('transform')){if(Array.isArray(props.transform)){var _props$x,_props$y;if(props.transform.length!==6){throw new Error(`invalid transform length of ${props.transform.length}, should be 6`);}var transform=props.transform;var x=(_props$x=props.x)!=null?_props$x:0;var y=(_props$y=props.y)!=null?_props$y:0;props.transform=[{translateX:transform[0]*x+transform[2]*y+transform[4]},{translateY:transform[1]*x+transform[3]*y+transform[5]}];}else if(typeof props.transform==='string'){var _transform=props.transform;var arr=_transform.replace('translate(','').replace(')','').split(' ');props.transform=[{translateX:parseFloat(arr[0])},{translateY:parseFloat(arr[1])}];}}};_f._closure={};_f.__initData=_worklet_14940100618166_init_data;_f.__workletHash=14940100618166;return _f;}());var _worklet_15417865581686_init_data={code:\"function anonymous(props){const keys=Object.keys(props);if(keys.includes('value')){props.text=props.value;delete props.value;}}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/PropAdapters.js\"};export var TextInputAdapter=createAnimatedPropAdapter(function(){var _f=function _f(props){var keys=Object.keys(props);if(keys.includes('value')){props.text=props.value;delete props.value;}};_f._closure={};_f.__initData=_worklet_15417865581686_init_data;_f.__workletHash=15417865581686;return _f;}(),['text']);","map":{"version":3,"mappings":"AAAA,OAASA,yBAAyB,uBAGlC,MAAO,SAASC,0BAAyBA,CACvCC,OAA+B,CAC/BC,WAAsB,CACE,CACxB,GAAMC,iBAA4C,CAAG,CAAC,CAAC,CAEvDD,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEE,OAAO,CAAEC,aAAI,CAAK,CAC7BF,gBAAgB,CAACE,IAAI,CAAC,CAAG,IAAI,CAC/B,CAAC,CAAC,CACFN,yBAAyB,CAACI,gBAAgB,CAAC,CAC3C,MAAOF,QAAO,CAChB,i8BAIA,MAAO,IAAMK,WAAkC,CAAGN,yBAAyB,+BACxEO,KAAK,CAAK,CAET,GAAMC,KAAI,CAAGC,MAAM,CAACD,IAAI,CAACD,KAAK,CAAC,CAE/B,GAAIC,IAAI,CAACE,QAAQ,CAAC,WAAW,CAAC,CAAE,CAC9B,GAAIC,KAAK,CAACC,OAAO,CAACL,KAAK,CAACM,SAAS,CAAC,CAAE,uBAElC,GAAIN,KAAK,CAACM,SAAS,CAACC,MAAM,GAAK,CAAC,CAAE,CAChC,KAAM,IAAIC,MAAK,CACZ,+BAA8BR,KAAK,CAACM,SAAS,CAACC,MAAO,eAAc,CACrE,CACH,CACA,GAAMD,UAAmB,CAAGN,KAAK,CAACM,SAAqB,CACvD,GAAMG,EAAS,WAAIT,KAAK,CAACS,CAAC,iBAAe,CAAC,CAC1C,GAAMC,EAAS,WAAIV,KAAK,CAACU,CAAC,iBAAe,CAAC,CAC1CV,KAAK,CAACM,SAAS,CAAG,CAChB,CAAEK,UAAU,CAAEL,SAAS,CAAC,CAAC,CAAC,CAAGG,CAAC,CAAGH,SAAS,CAAC,CAAC,CAAC,CAAGI,CAAC,CAAGJ,SAAS,CAAC,CAAC,CAAE,CAAC,CAClE,CAAEM,UAAU,CAAEN,SAAS,CAAC,CAAC,CAAC,CAAGG,CAAC,CAAGH,SAAS,CAAC,CAAC,CAAC,CAAGI,CAAC,CAAGJ,SAAS,CAAC,CAAC,CAAE,CAAC,CACnE,CACH,CAAC,IAAM,IAAI,MAAON,MAAK,CAACM,SAAS,GAAK,QAAQ,CAAE,CAG9C,GAAMA,WAAiB,CAAGN,KAAK,CAACM,SAAmB,CACnD,GAAMO,IAAG,CAAGP,UAAS,CAClBQ,OAAO,CAAC,YAAY,CAAE,EAAE,CAAC,CACzBA,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,CAChBC,KAAK,CAAC,GAAG,CAAC,CACbf,KAAK,CAACM,SAAS,CAAG,CAChB,CAAEK,UAAU,CAAEK,UAAU,CAACH,GAAG,CAAC,CAAC,CAAC,CAAE,CAAC,CAClC,CAAED,UAAU,CAAEI,UAAU,CAACH,GAAG,CAAC,CAAC,CAAC,CAAE,CAAC,CACnC,CACH,CACF,CAEF,CAAC,8GACF,0SAED,MAAO,IAAMI,iBAAgB,CAAGxB,yBAAyB,+BACtDO,KAAK,CAAK,CAET,GAAMC,KAAI,CAAGC,MAAM,CAACD,IAAI,CAACD,KAAK,CAAC,CAE/B,GAAIC,IAAI,CAACE,QAAQ,CAAC,OAAO,CAAC,CAAE,CAC1BH,KAAK,CAACkB,IAAI,CAAGlB,KAAK,CAACmB,KAAK,CACxB,MAAOnB,MAAK,CAACmB,KAAK,CACpB,CACF,CAAC,8GACD,CAAC,MAAM,CAAC,CACT","names":["addWhitelistedNativeProps","createAnimatedPropAdapter","adapter","nativeProps","nativePropsToAdd","forEach","prop","SVGAdapter","props","keys","Object","includes","Array","isArray","transform","length","Error","x","y","translateX","translateY","arr","replace","split","parseFloat","TextInputAdapter","text","value"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/PropAdapters.ts"],"sourcesContent":["import { addWhitelistedNativeProps } from '../ConfigHelper';\nimport { AdapterWorkletFunction } from './commonTypes';\n\nexport function createAnimatedPropAdapter(\n  adapter: AdapterWorkletFunction,\n  nativeProps?: string[]\n): AdapterWorkletFunction {\n  const nativePropsToAdd: { [key: string]: boolean } = {};\n  // eslint-disable-next-line no-unused-expressions\n  nativeProps?.forEach((prop) => {\n    nativePropsToAdd[prop] = true;\n  });\n  addWhitelistedNativeProps(nativePropsToAdd);\n  return adapter;\n}\n\n// ADAPTERS\n\nexport const SVGAdapter: AdapterWorkletFunction = createAnimatedPropAdapter(\n  (props) => {\n    'worklet';\n    const keys = Object.keys(props);\n    // transform\n    if (keys.includes('transform')) {\n      if (Array.isArray(props.transform)) {\n        // case of array with 6 values => https://github.com/react-native-svg/react-native-svg/blob/b2e2c355204ff4b10973d3afce1495f7e4167ff7/src/elements/Shape.tsx#L200\n        if (props.transform.length !== 6) {\n          throw new Error(\n            `invalid transform length of ${props.transform.length}, should be 6`\n          );\n        }\n        const transform: number[] = props.transform as number[];\n        const x: number = (props.x as number) ?? 0;\n        const y: number = (props.y as number) ?? 0;\n        props.transform = [\n          { translateX: transform[0] * x + transform[2] * y + transform[4] },\n          { translateY: transform[1] * x + transform[3] * y + transform[5] },\n        ];\n      } else if (typeof props.transform === 'string') {\n        // case of string 'translate(translateX translateY)'\n        // todo: handle other cases of transform string like here https://github.com/react-native-svg/react-native-svg/blob/b2e2c355204ff4b10973d3afce1495f7e4167ff7/src/lib/extract/extractTransform.ts#L184\n        const transform: string = props.transform as string;\n        const arr = transform\n          .replace('translate(', '')\n          .replace(')', '')\n          .split(' ');\n        props.transform = [\n          { translateX: parseFloat(arr[0]) },\n          { translateY: parseFloat(arr[1]) },\n        ];\n      }\n    }\n    // todo: other props\n  }\n);\n\nexport const TextInputAdapter = createAnimatedPropAdapter(\n  (props) => {\n    'worklet';\n    const keys = Object.keys(props);\n    // convert text to value like RN does here: https://github.com/facebook/react-native/blob/f2c6279ca497b34d5a2bfbb6f2d33dc7a7bea02a/Libraries/Components/TextInput/TextInput.js#L878\n    if (keys.includes('value')) {\n      props.text = props.value;\n      delete props.value;\n    }\n  },\n  ['text']\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}