{"ast":null,"code":"import{useMemo}from'react';import chroma from'chroma-js';import{useTheme}from\"../base/ThemeContext\";export var usePaletteColor=function usePaletteColor(main,on){var _useTheme=useTheme(),palette=_useTheme.palette;return useMemo(function(){var _main=main;if(palette[main])_main=palette[main].main;else if(main.startsWith('on-')&&palette[main.replace('on-','')])_main=palette[main.replace('on-','')].on;var _on;if(on){if(palette[on])_on=palette[on].main;else if(on.startsWith('on-')&&palette[on.replace('on-','')])_on=palette[on.replace('on-','')].on;else _on=on;}else{_on=chroma.contrast(_main,'white')>4.5?'#FFFFFF':'#000000';}return{main:_main,on:_on};},[palette,main,on]);};","map":{"version":3,"mappings":"AAAA,OAASA,OAAT,KAAwB,OAAxB,CACA,MAAOC,OAAP,KAAmB,WAAnB,CACA,OAAuBC,QAAvB,4BAeA,MAAO,IAAMC,gBAAe,CAAG,QAAlBA,gBAAe,CAAIC,IAAD,CAAcC,EAAd,CAA2C,CACxE,cAAoBH,QAAQ,EAA5B,CAAQI,0BAER,MAAON,QAAO,CAAC,UAAM,CACnB,GAAIO,MAAK,CAAGH,IAAZ,CACA,GAAIE,OAAO,CAACF,IAAD,CAAX,CAAmBG,KAAK,CAAGD,OAAO,CAACF,IAAD,CAAP,CAAcA,IAAtB,CAAnB,IACK,IAAIA,IAAI,CAACI,UAAL,CAAgB,KAAhB,GAA0BF,OAAO,CAACF,IAAI,CAACK,OAAL,CAAa,KAAb,CAAoB,EAApB,CAAD,CAArC,CAAgEF,KAAK,CAAGD,OAAO,CAACF,IAAI,CAACK,OAAL,CAAa,KAAb,CAAoB,EAApB,CAAD,CAAP,CAAiCJ,EAAzC,CAErE,GAAIK,IAAJ,CACA,GAAIL,EAAJ,CAAQ,CACN,GAAIC,OAAO,CAACD,EAAD,CAAX,CAAiBK,GAAG,CAAGJ,OAAO,CAACD,EAAD,CAAP,CAAYD,IAAlB,CAAjB,IACK,IAAIC,EAAE,CAACG,UAAH,CAAc,KAAd,GAAwBF,OAAO,CAACD,EAAE,CAACI,OAAH,CAAW,KAAX,CAAkB,EAAlB,CAAD,CAAnC,CAA4DC,GAAG,CAAGJ,OAAO,CAACD,EAAE,CAACI,OAAH,CAAW,KAAX,CAAkB,EAAlB,CAAD,CAAP,CAA+BJ,EAArC,CAA5D,IACAK,IAAG,CAAGL,EAAN,CACN,CAJD,IAIO,CACLK,GAAG,CAAGT,MAAM,CAACU,QAAP,CAAgBJ,KAAhB,CAAuB,OAAvB,EAAkC,GAAlC,CAAwC,SAAxC,CAAoD,SAA1D,CACD,CAED,MAAO,CAAEH,IAAI,CAAEG,KAAR,CAAeF,EAAE,CAAEK,GAAnB,CAAP,CACD,CAfa,CAeX,CAACJ,OAAD,CAAUF,IAAV,CAAgBC,EAAhB,CAfW,CAAd,CAgBD,CAnBM","names":["useMemo","chroma","useTheme","usePaletteColor","main","on","palette","_main","startsWith","replace","_on","contrast"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/@react-native-material/core/lib/module/hooks/use-palette-color.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport chroma from 'chroma-js';\nimport { PaletteColor, useTheme } from '../base/ThemeContext';\n\nexport type Color =\n  | 'primary'\n  | 'secondary'\n  | 'background'\n  | 'surface'\n  | 'error'\n  | 'on-primary'\n  | 'on-secondary'\n  | 'on-background'\n  | 'on-surface'\n  | 'on-error'\n  | string;\n\nexport const usePaletteColor = (main: Color, on?: Color): PaletteColor => {\n  const { palette } = useTheme();\n\n  return useMemo(() => {\n    let _main = main;\n    if (palette[main]) _main = palette[main].main;\n    else if (main.startsWith('on-') && palette[main.replace('on-', '')]) _main = palette[main.replace('on-', '')].on;\n\n    let _on: string;\n    if (on) {\n      if (palette[on]) _on = palette[on].main;\n      else if (on.startsWith('on-') && palette[on.replace('on-', '')]) _on = palette[on.replace('on-', '')].on;\n      else _on = on;\n    } else {\n      _on = chroma.contrast(_main, 'white') > 4.5 ? '#FFFFFF' : '#000000';\n    }\n\n    return { main: _main, on: _on };\n  }, [palette, main, on]);\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}