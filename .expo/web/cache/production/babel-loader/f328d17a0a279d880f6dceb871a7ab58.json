{"ast":null,"code":"import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import React from\"react\";import{Button}from\"@react-native-material/core\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProductOptionMultiChoiceDropdown=function ProductOptionMultiChoiceDropdown(_ref){var myObjProfile=_ref.myObjProfile,setmyObjProfile=_ref.setmyObjProfile,index=_ref.index,e=_ref.e;return _jsx(View,{style:{flexDirection:\"row\",flexWrap:\"wrap\",width:\"100%\"},children:e.optionsList.map(function(selection,listIndex){return _jsx(View,{style:[styles.multiOption,myObjProfile.options[index].optionsList[listIndex].selected==true?{backgroundColor:\"rgba(205,213,255,1)\",borderWidth:2,borderColor:\"rgba(205,213,255,1)\"}:{borderWidth:2,borderColor:\"rgba(203,202,202,1)\"}],children:_jsxs(View,{style:{flexDirection:\"row\",width:\"100%\",alignItems:\"center\",justifyContent:\"space-between\"},children:[_jsx(Button,{title:\"-\",style:{width:30,justifyContent:\"center\",alignItems:\"center\"},onPress:function onPress(){var newMyObjProfile=structuredClone(myObjProfile);var thisItemCountsAs=selection.countsAs?parseInt(selection.countsAs):1;if(newMyObjProfile.options[index].optionsList[listIndex].selectedTimes>0){newMyObjProfile.options[index].optionsList[listIndex].selectedTimes-=1*thisItemCountsAs;}setmyObjProfile(newMyObjProfile);}}),_jsx(Text,{style:{padding:5},children:myObjProfile.options[index].optionsList[listIndex].selectedTimes>0?myObjProfile.options[index].optionsList[listIndex].selectedTimes+\" x \"+selection.label+\" \"+(selection.priceIncrease?\"(+$\"+selection.priceIncrease+\")\":\"\"):\"0 x \"+selection.label+\" \"+(selection.priceIncrease?\"(+$\"+selection.priceIncrease+\")\":\"\")}),_jsx(Button,{title:\"+\",style:{width:30,justifyContent:\"center\",alignItems:\"center\"},onPress:function onPress(){var newMyObjProfile=structuredClone(myObjProfile);var selectedItems=newMyObjProfile.options[index].optionsList.filter(function(op){return op.selectedTimes>0;});var thisItemSelectedTimes=selection.selectedTimes?parseInt(selection.selectedTimes):1;var thisItemCountsAs=selection.countsAs?parseInt(selection.countsAs):1;var selectedTimesTotal=thisItemCountsAs;selectedItems.map(function(op){selectedTimesTotal+=op.countsAs?parseInt(op.selectedTimes)*parseInt(op.countsAs):parseInt(op.selectedTimes);});if(parseInt(e.numOfSelectable)>=selectedTimesTotal||!e.numOfSelectable||parseInt(e.numOfSelectable)===0){console.log(\"selectedTimesTotal: \",selectedTimesTotal,\" e.numOfSelectable: \",e.numOfSelectable);if(newMyObjProfile.options[index].optionsList[listIndex].selectedTimes){newMyObjProfile.options[index].optionsList[listIndex].selectedTimes+=1;}else{newMyObjProfile.options[index].optionsList[listIndex].selectedTimes=1;}setmyObjProfile(newMyObjProfile);}else{console.log(\"Didnt Work \",\"selectedTimesTotal: \",selectedTimesTotal,\" e.numOfSelectable: \",e.numOfSelectable);}}})]})},listIndex);})});};export default ProductOptionMultiChoiceDropdown;var styles=StyleSheet.create({multiOption:{borderRadius:10,shadowColor:\"rgba(0,0,0,1)\",shadowOffset:{width:3,height:3},elevation:30,shadowOpacity:0.03,shadowRadius:10,alignItems:\"center\",justifyContent:\"space-around\",padding:5,margin:5,width:\"32%\"}});","map":{"version":3,"names":["React","Button","ProductOptionMultiChoiceDropdown","myObjProfile","setmyObjProfile","index","e","flexDirection","flexWrap","width","optionsList","map","selection","listIndex","styles","multiOption","options","selected","backgroundColor","borderWidth","borderColor","alignItems","justifyContent","newMyObjProfile","structuredClone","thisItemCountsAs","countsAs","parseInt","selectedTimes","padding","label","priceIncrease","selectedItems","filter","op","thisItemSelectedTimes","selectedTimesTotal","numOfSelectable","console","log","StyleSheet","create","borderRadius","shadowColor","shadowOffset","height","elevation","shadowOpacity","shadowRadius","margin"],"sources":["/Users/peterputros/Desktop/PosMate/components/product/ProductOptionMultiChoiceDropdown.tsx"],"sourcesContent":["import { View, Text, StyleSheet } from \"react-native\";\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { Button } from \"@react-native-material/core\";\n\nconst ProductOptionMultiChoiceDropdown = ({\n  myObjProfile,\n  setmyObjProfile,\n  index,\n  e,\n}) => {\n  return (\n    <View style={{ flexDirection: \"row\", flexWrap: \"wrap\", width: \"100%\" }}>\n      {e.optionsList.map((selection, listIndex) => {\n        return (\n          <View\n            key={listIndex}\n            style={[\n              styles.multiOption,\n              myObjProfile.options[index].optionsList[listIndex].selected ==\n              true\n                ? {\n                    backgroundColor: \"rgba(205,213,255,1)\",\n                    borderWidth: 2,\n                    borderColor: \"rgba(205,213,255,1)\",\n                  }\n                : {\n                    borderWidth: 2,\n                    borderColor: \"rgba(203,202,202,1)\",\n                  },\n            ]}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Button\n                title=\"-\"\n                style={{\n                  width: 30,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n                onPress={() => {\n                  const newMyObjProfile = structuredClone(myObjProfile);\n                  //filter out all options[index].optionsList that have selectedTimes > 0 then map through and multiply by countsAs\n                  const thisItemCountsAs = selection.countsAs\n                    ? parseInt(selection.countsAs)\n                    : 1;\n\n                  if (\n                    newMyObjProfile.options[index].optionsList[listIndex]\n                      .selectedTimes > 0\n                  ) {\n                    newMyObjProfile.options[index].optionsList[\n                      listIndex\n                    ].selectedTimes -= 1 * thisItemCountsAs;\n                  }\n\n                  setmyObjProfile(newMyObjProfile);\n                }}\n              />\n              <Text style={{ padding: 5 }}>\n                {myObjProfile.options[index].optionsList[listIndex]\n                  .selectedTimes > 0\n                  ? `${\n                      myObjProfile.options[index].optionsList[listIndex]\n                        .selectedTimes\n                    } x ${selection.label} ${\n                      selection.priceIncrease\n                        ? `(+$${selection.priceIncrease})`\n                        : \"\"\n                    }`\n                  : `0 x ${selection.label} ${\n                      selection.priceIncrease\n                        ? `(+$${selection.priceIncrease})`\n                        : \"\"\n                    }`}\n              </Text>\n              <Button\n                title=\"+\"\n                style={{\n                  width: 30,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n                onPress={() => {\n                  const newMyObjProfile = structuredClone(myObjProfile);\n                  //filter out all options[index].optionsList that have selectedTimes > 0 then map through and multiply by countsAs\n\n                  const selectedItems = newMyObjProfile.options[\n                    index\n                  ].optionsList.filter((op) => op.selectedTimes > 0);\n\n                  const thisItemSelectedTimes = selection.selectedTimes\n                    ? parseInt(selection.selectedTimes)\n                    : 1;\n                  const thisItemCountsAs = selection.countsAs\n                    ? parseInt(selection.countsAs)\n                    : 1;\n\n                  let selectedTimesTotal = thisItemCountsAs;\n\n                  selectedItems.map((op) => {\n                    selectedTimesTotal += op.countsAs\n                      ? parseInt(op.selectedTimes) * parseInt(op.countsAs)\n                      : parseInt(op.selectedTimes);\n                  });\n\n                  if (\n                    parseInt(e.numOfSelectable) >= selectedTimesTotal ||\n                    !e.numOfSelectable ||\n                    parseInt(e.numOfSelectable) === 0\n                  ) {\n                    console.log(\n                      \"selectedTimesTotal: \",\n                      selectedTimesTotal,\n                      \" e.numOfSelectable: \",\n                      e.numOfSelectable\n                    );\n                    if (\n                      newMyObjProfile.options[index].optionsList[listIndex]\n                        .selectedTimes\n                    ) {\n                      newMyObjProfile.options[index].optionsList[\n                        listIndex\n                      ].selectedTimes += 1;\n                    } else {\n                      newMyObjProfile.options[index].optionsList[\n                        listIndex\n                      ].selectedTimes = 1;\n                    }\n                    setmyObjProfile(newMyObjProfile);\n                  } else {\n                    console.log(\n                      \"Didnt Work \",\n                      \"selectedTimesTotal: \",\n                      selectedTimesTotal,\n                      \" e.numOfSelectable: \",\n                      e.numOfSelectable\n                    );\n                  }\n                }}\n              />\n            </View>\n          </View>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default ProductOptionMultiChoiceDropdown;\n\nconst styles = StyleSheet.create({\n  multiOption: {\n    borderRadius: 10,\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3,\n    },\n    elevation: 30,\n    shadowOpacity: 0.03,\n    shadowRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    padding: 5,\n    margin: 5,\n    width: \"32%\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}