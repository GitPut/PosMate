{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{withStyleAnimation}from\"../animation/styleAnimation\";import{makeUIMutable}from\"../mutables\";import{LayoutAnimationType}from\"./animationBuilder\";import{runOnUIImmediately}from\"../threads\";var TAG_OFFSET=1e9;var _worklet_12344586717869_init_data={code:\"function startObservingProgress(tag,sharedValue,animationType){const{LayoutAnimationType,TAG_OFFSET}=this._closure;const isSharedTransition=animationType===LayoutAnimationType.SHARED_ELEMENT_TRANSITION;sharedValue.addListener(tag+TAG_OFFSET,function(){_notifyAboutProgress(tag,sharedValue.value,isSharedTransition);});}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\"};var startObservingProgress=function(){var _f=function _f(tag,sharedValue,animationType){var isSharedTransition=animationType===LayoutAnimationType.SHARED_ELEMENT_TRANSITION;sharedValue.addListener(tag+TAG_OFFSET,function(){_notifyAboutProgress(tag,sharedValue.value,isSharedTransition);});};_f._closure={LayoutAnimationType:LayoutAnimationType,TAG_OFFSET:TAG_OFFSET};_f.__initData=_worklet_12344586717869_init_data;_f.__workletHash=12344586717869;return _f;}();var _worklet_7748945961414_init_data={code:\"function stopObservingProgress(tag,sharedValue,cancelled,removeView){const{TAG_OFFSET}=this._closure;sharedValue.removeListener(tag+TAG_OFFSET);_notifyAboutEnd(tag,cancelled,removeView);}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\"};var stopObservingProgress=function(){var _f=function _f(tag,sharedValue,cancelled,removeView){sharedValue.removeListener(tag+TAG_OFFSET);_notifyAboutEnd(tag,cancelled,removeView);};_f._closure={TAG_OFFSET:TAG_OFFSET};_f.__initData=_worklet_7748945961414_init_data;_f.__workletHash=7748945961414;return _f;}();var _worklet_10724871536758_init_data={code:\"function createLayoutAnimationManager(){const{LayoutAnimationType,makeUIMutable,stopObservingProgress,withStyleAnimation,startObservingProgress}=this._closure;const enteringAnimationForTag=new Map();const mutableValuesForTag=new Map();return{start:function(tag,type,yogaValues,config){const style=config(yogaValues);let currentAnimation=style.animations;if(type===LayoutAnimationType.ENTERING){enteringAnimationForTag.set(tag,currentAnimation);}else if(type===LayoutAnimationType.LAYOUT){const enteringAnimation=enteringAnimationForTag.get(tag);if(enteringAnimation){currentAnimation={...enteringAnimation,...style.animations};}}let value=mutableValuesForTag.get(tag);if(value===undefined){value=makeUIMutable(style.initialValues);mutableValuesForTag.set(tag,value);}else{stopObservingProgress(tag,value,false,false);value._value=style.initialValues;}const animation=withStyleAnimation(currentAnimation);animation.callback=function(finished){if(finished){enteringAnimationForTag.delete(tag);mutableValuesForTag.delete(tag);const shouldRemoveView=type===LayoutAnimationType.EXITING;stopObservingProgress(tag,value,finished,shouldRemoveView);}style.callback&&style.callback(finished===undefined?false:finished);};startObservingProgress(tag,value,type);value.value=animation;},stop:function(tag){const value=mutableValuesForTag.get(tag);if(!value){return;}stopObservingProgress(tag,value,true,true);}};}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\"};var createLayoutAnimationManager=function(){var _f=function _f(){var enteringAnimationForTag=new Map();var mutableValuesForTag=new Map();return{start:function start(tag,type,yogaValues,config){var style=config(yogaValues);var currentAnimation=style.animations;if(type===LayoutAnimationType.ENTERING){enteringAnimationForTag.set(tag,currentAnimation);}else if(type===LayoutAnimationType.LAYOUT){var enteringAnimation=enteringAnimationForTag.get(tag);if(enteringAnimation){currentAnimation=_objectSpread(_objectSpread({},enteringAnimation),style.animations);}}var value=mutableValuesForTag.get(tag);if(value===undefined){value=makeUIMutable(style.initialValues);mutableValuesForTag.set(tag,value);}else{stopObservingProgress(tag,value,false,false);value._value=style.initialValues;}var animation=withStyleAnimation(currentAnimation);animation.callback=function(finished){if(finished){enteringAnimationForTag.delete(tag);mutableValuesForTag.delete(tag);var shouldRemoveView=type===LayoutAnimationType.EXITING;stopObservingProgress(tag,value,finished,shouldRemoveView);}style.callback&&style.callback(finished===undefined?false:finished);};startObservingProgress(tag,value,type);value.value=animation;},stop:function stop(tag){var value=mutableValuesForTag.get(tag);if(!value){return;}stopObservingProgress(tag,value,true,true);}};};_f._closure={LayoutAnimationType:LayoutAnimationType,makeUIMutable:makeUIMutable,stopObservingProgress:stopObservingProgress,withStyleAnimation:withStyleAnimation,startObservingProgress:startObservingProgress};_f.__initData=_worklet_10724871536758_init_data;_f.__workletHash=10724871536758;return _f;}();var _worklet_14970837540764_init_data={code:\"function anonymous(){const{createLayoutAnimationManager}=this._closure;global.LayoutAnimationsManager=createLayoutAnimationManager();}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\"};runOnUIImmediately(function(){var _f=function _f(){global.LayoutAnimationsManager=createLayoutAnimationManager();};_f._closure={createLayoutAnimationManager:createLayoutAnimationManager};_f.__initData=_worklet_14970837540764_init_data;_f.__workletHash=14970837540764;return _f;}())();","map":{"version":3,"mappings":"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","names":["withStyleAnimation","makeUIMutable","LayoutAnimationType","runOnUIImmediately","TAG_OFFSET","startObservingProgress","tag","sharedValue","animationType","isSharedTransition","SHARED_ELEMENT_TRANSITION","addListener","_notifyAboutProgress","value","stopObservingProgress","cancelled","removeView","removeListener","_notifyAboutEnd","createLayoutAnimationManager","enteringAnimationForTag","Map","mutableValuesForTag","start","type","yogaValues","config","style","currentAnimation","animations","ENTERING","set","LAYOUT","enteringAnimation","get","undefined","initialValues","_value","animation","callback","finished","delete","shouldRemoveView","EXITING","stop","global","LayoutAnimationsManager"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.ts"],"sourcesContent":["import { withStyleAnimation } from '../animation/styleAnimation';\nimport { SharedValue } from '../commonTypes';\nimport { makeUIMutable } from '../mutables';\nimport {\n  LayoutAnimationFunction,\n  LayoutAnimationType,\n  LayoutAnimationsValues,\n} from './animationBuilder';\nimport { runOnUIImmediately } from '../threads';\n\nconst TAG_OFFSET = 1e9;\n\nfunction startObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<number>,\n  animationType: LayoutAnimationType\n): void {\n  'worklet';\n  const isSharedTransition =\n    animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n  sharedValue.addListener(tag + TAG_OFFSET, () => {\n    _notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n  });\n}\n\nfunction stopObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<number>,\n  cancelled: boolean,\n  removeView: boolean\n): void {\n  'worklet';\n  sharedValue.removeListener(tag + TAG_OFFSET);\n  _notifyAboutEnd(tag, cancelled, removeView);\n}\n\nfunction createLayoutAnimationManager() {\n  'worklet';\n  const enteringAnimationForTag = new Map();\n  const mutableValuesForTag = new Map();\n\n  return {\n    start(\n      tag: number,\n      type: LayoutAnimationType,\n      yogaValues: LayoutAnimationsValues,\n      config: LayoutAnimationFunction\n    ) {\n      const style = config(yogaValues);\n      let currentAnimation = style.animations;\n\n      if (type === LayoutAnimationType.ENTERING) {\n        enteringAnimationForTag.set(tag, currentAnimation);\n      } else if (type === LayoutAnimationType.LAYOUT) {\n        // When layout animation is requested, but entering is still running, we merge\n        // new layout animation targets into the ongoing animation\n        const enteringAnimation = enteringAnimationForTag.get(tag);\n        if (enteringAnimation) {\n          currentAnimation = { ...enteringAnimation, ...style.animations };\n        }\n      }\n\n      let value = mutableValuesForTag.get(tag);\n      if (value === undefined) {\n        value = makeUIMutable(style.initialValues);\n        mutableValuesForTag.set(tag, value);\n      } else {\n        stopObservingProgress(tag, value, false, false);\n        value._value = style.initialValues;\n      }\n\n      // @ts-ignore The line below started failing because I added types to the method – don't have time to fix it right now\n      const animation = withStyleAnimation(currentAnimation);\n\n      animation.callback = (finished?: boolean) => {\n        if (finished) {\n          enteringAnimationForTag.delete(tag);\n          mutableValuesForTag.delete(tag);\n          const shouldRemoveView = type === LayoutAnimationType.EXITING;\n          stopObservingProgress(tag, value, finished, shouldRemoveView);\n        }\n        style.callback &&\n          style.callback(finished === undefined ? false : finished);\n      };\n\n      startObservingProgress(tag, value, type);\n      value.value = animation;\n    },\n    stop(tag: number) {\n      const value = mutableValuesForTag.get(tag);\n      if (!value) {\n        return;\n      }\n      stopObservingProgress(tag, value, true, true);\n    },\n  };\n}\n\nrunOnUIImmediately(() => {\n  'worklet';\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\n})();\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}