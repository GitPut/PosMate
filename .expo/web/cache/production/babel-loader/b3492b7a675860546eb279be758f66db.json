{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"label\",\"variant\",\"size\",\"color\",\"tintColor\",\"loading\",\"loadingIndicator\",\"loadingIndicatorPosition\",\"visible\",\"style\",\"pressableContainerStyle\",\"contentContainerStyle\",\"iconContainerStyle\",\"labelContainerStyle\",\"labelStyle\",\"loadingOverlayContainerStyle\",\"pressEffect\",\"pressEffectColor\",\"onPress\",\"onPressIn\",\"onPressOut\",\"onLongPress\",\"onBlur\",\"onFocus\",\"onMouseEnter\",\"onMouseLeave\",\"delayLongPress\",\"disabled\",\"hitSlop\",\"pressRetentionOffset\",\"android_disableSound\",\"android_ripple\",\"testOnly_pressed\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useCallback,useEffect,useMemo,useRef,useState}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Surface from\"./Surface\";import Pressable from\"./Pressable\";import Text from\"./Text\";import ActivityIndicator from\"./ActivityIndicator\";import{usePaletteColor}from\"./hooks/use-palette-color\";import{useStyles}from\"./hooks/use-styles\";import{useAnimatedElevation}from\"./hooks/use-animated-elevation\";var FAB=function FAB(_ref){var icon=_ref.icon,label=_ref.label,_ref$variant=_ref.variant,variant=_ref$variant===void 0?'standard':_ref$variant,_ref$size=_ref.size,size=_ref$size===void 0?'default':_ref$size,_ref$color=_ref.color,color=_ref$color===void 0?'secondary':_ref$color,tintColor=_ref.tintColor,_ref$loading=_ref.loading,loading=_ref$loading===void 0?false:_ref$loading,loadingIndicator=_ref.loadingIndicator,_ref$loadingIndicator=_ref.loadingIndicatorPosition,loadingIndicatorPosition=_ref$loadingIndicator===void 0?'icon':_ref$loadingIndicator,_ref$visible=_ref.visible,visible=_ref$visible===void 0?true:_ref$visible,style=_ref.style,pressableContainerStyle=_ref.pressableContainerStyle,contentContainerStyle=_ref.contentContainerStyle,iconContainerStyle=_ref.iconContainerStyle,labelContainerStyle=_ref.labelContainerStyle,labelStyle=_ref.labelStyle,loadingOverlayContainerStyle=_ref.loadingOverlayContainerStyle,pressEffect=_ref.pressEffect,pressEffectColor=_ref.pressEffectColor,onPress=_ref.onPress,onPressIn=_ref.onPressIn,onPressOut=_ref.onPressOut,onLongPress=_ref.onLongPress,onBlur=_ref.onBlur,onFocus=_ref.onFocus,onMouseEnter=_ref.onMouseEnter,onMouseLeave=_ref.onMouseLeave,delayLongPress=_ref.delayLongPress,disabled=_ref.disabled,hitSlop=_ref.hitSlop,pressRetentionOffset=_ref.pressRetentionOffset,android_disableSound=_ref.android_disableSound,android_ripple=_ref.android_ripple,testOnly_pressed=_ref.testOnly_pressed,rest=_objectWithoutProperties(_ref,_excluded);var palette=usePaletteColor(color,tintColor);var hasIcon=useMemo(function(){return icon||loading&&loadingIndicatorPosition==='icon';},[icon,loading,loadingIndicatorPosition]);var styles=useStyles(function(){return{container:{backgroundColor:palette.main,borderRadius:size==='default'?28:20},pressableContainer:{borderRadius:size==='default'?28:20,overflow:'hidden'},pressable:{flexDirection:'row',alignItems:'center',paddingStart:variant==='extended'?hasIcon?size==='default'?12:6:size==='default'?20:10:size==='default'?16:8,paddingEnd:variant==='extended'?size==='default'?20:10:size==='default'?16:8,paddingVertical:size==='default'?16:8},iconContainer:{justifyContent:'center',alignItems:'center',width:24,height:24},labelContainer:{marginStart:hasIcon?size==='default'?12:6:0},loadingOverlayContainer:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{justifyContent:'center',alignItems:'center',backgroundColor:palette.main})};},[variant,size,palette,hasIcon]);var animated=useRef(new Animated.Value(visible?1:0)).current;useEffect(function(){Animated.timing(animated,{toValue:visible?1:0,duration:200,useNativeDriver:false}).start();},[visible]);var getLoadingIndicator=function getLoadingIndicator(){if(!loadingIndicator)return React.createElement(ActivityIndicator,{color:palette.on});switch(typeof loadingIndicator){case'string':return React.createElement(Text,{variant:\"button\",style:{color:palette.on}},loadingIndicator);case'function':return loadingIndicator({color:palette.on});default:return loadingIndicator;}};var getIcon=function getIcon(){if(loading&&loadingIndicatorPosition==='icon')return getLoadingIndicator();return typeof icon==='function'?icon({color:palette.on,size:24}):icon;};var getLabel=function getLabel(){switch(typeof label){case'string':return React.createElement(Text,{variant:\"button\",selectable:false,style:[{color:palette.on},labelStyle]},label);case'function':return label({color:palette.on});default:return label;}};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pressed=_useState2[0],setPressed=_useState2[1];var handlePressIn=useCallback(function(event){onPressIn===null||onPressIn===void 0?void 0:onPressIn(event);setPressed(true);},[onPressIn]);var handlePressOut=useCallback(function(event){onPressOut===null||onPressOut===void 0?void 0:onPressOut(event);setPressed(false);},[onPressOut]);var animatedElevation=useAnimatedElevation(pressed?12:6);return React.createElement(Surface,_extends({style:[animatedElevation,styles.container,{transform:[{scale:animated}]},style]},rest),React.createElement(View,{style:[styles.pressableContainer,pressableContainerStyle]},React.createElement(Pressable,{style:[styles.pressable,contentContainerStyle],pressEffect:pressEffect,pressEffectColor:pressEffectColor!==null&&pressEffectColor!==void 0?pressEffectColor:palette.on,onPress:onPress,onPressIn:handlePressIn,onPressOut:handlePressOut,onLongPress:onLongPress,onBlur:onBlur,onFocus:onFocus,onMouseEnter:onMouseEnter,onMouseLeave:onMouseLeave,delayLongPress:delayLongPress,disabled:disabled,hitSlop:hitSlop,pressRetentionOffset:pressRetentionOffset,android_disableSound:android_disableSound,android_ripple:android_ripple,testOnly_pressed:testOnly_pressed},hasIcon&&React.createElement(View,{style:[styles.iconContainer,iconContainerStyle]},getIcon()),variant==='extended'&&React.createElement(View,{style:[styles.labelContainer,labelContainerStyle]},getLabel()),loading&&loadingIndicatorPosition==='overlay'&&React.createElement(View,{style:[styles.loadingOverlayContainer,loadingOverlayContainerStyle]},getLoadingIndicator()))));};export default FAB;","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useMemo","useRef","useState","Surface","Pressable","Text","ActivityIndicator","usePaletteColor","useStyles","useAnimatedElevation","FAB","_ref","icon","label","variant","size","color","tintColor","loading","loadingIndicator","loadingIndicatorPosition","visible","style","pressableContainerStyle","contentContainerStyle","iconContainerStyle","labelContainerStyle","labelStyle","loadingOverlayContainerStyle","pressEffect","pressEffectColor","onPress","onPressIn","onPressOut","onLongPress","onBlur","onFocus","onMouseEnter","onMouseLeave","delayLongPress","disabled","hitSlop","pressRetentionOffset","android_disableSound","android_ripple","testOnly_pressed","rest","palette","hasIcon","styles","container","backgroundColor","main","borderRadius","pressableContainer","overflow","pressable","flexDirection","alignItems","paddingStart","paddingEnd","paddingVertical","iconContainer","justifyContent","width","height","labelContainer","marginStart","loadingOverlayContainer","StyleSheet","absoluteFillObject","animated","Animated","Value","current","timing","toValue","duration","useNativeDriver","start","getLoadingIndicator","on","getIcon","getLabel","selectable","pressed","setPressed","handlePressIn","event","handlePressOut","animatedElevation","transform","scale","View"],"sources":["FAB.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Animated, GestureResponderEvent, StyleProp, StyleSheet, TextStyle, View, ViewStyle } from 'react-native';\nimport Surface, { SurfaceProps } from './Surface';\nimport Pressable, { PressableProps } from './Pressable';\nimport Text from './Text';\nimport ActivityIndicator from './ActivityIndicator';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useStyles } from './hooks/use-styles';\nimport { useAnimatedElevation } from './hooks/use-animated-elevation';\n\nexport interface FABProps extends Omit<SurfaceProps, 'hitSlop'>, Omit<PressableProps, 'style' | 'children'> {\n  icon?: React.ReactElement | ((props: { color: string; size: number }) => React.ReactElement | null) | null;\n\n  label?: string | React.ReactElement | ((props: { color: string }) => React.ReactElement | null) | null;\n\n  variant?: 'standard' | 'extended';\n\n  size?: 'default' | 'mini';\n\n  color?: Color;\n\n  tintColor?: Color;\n\n  loading?: boolean;\n\n  loadingIndicator?: string | React.ReactElement | ((props: { color: string }) => React.ReactElement | null) | null;\n\n  loadingIndicatorPosition?: 'icon' | 'overlay';\n\n  visible?: boolean;\n\n  pressableContainerStyle?: StyleProp<ViewStyle>;\n\n  contentContainerStyle?: PressableProps['style'];\n\n  iconContainerStyle?: StyleProp<ViewStyle>;\n\n  labelContainerStyle?: StyleProp<ViewStyle>;\n\n  labelStyle?: StyleProp<TextStyle>;\n\n  loadingOverlayContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst FAB: React.FC<FABProps> = ({\n  icon,\n  label,\n  variant = 'standard',\n  size = 'default',\n  color = 'secondary',\n  tintColor,\n  loading = false,\n  loadingIndicator,\n  loadingIndicatorPosition = 'icon',\n  visible = true,\n  style,\n  pressableContainerStyle,\n  contentContainerStyle,\n  iconContainerStyle,\n  labelContainerStyle,\n  labelStyle,\n  loadingOverlayContainerStyle,\n\n  pressEffect,\n  pressEffectColor,\n  onPress,\n  onPressIn,\n  onPressOut,\n  onLongPress,\n  onBlur,\n  onFocus,\n  onMouseEnter,\n  onMouseLeave,\n  delayLongPress,\n  disabled,\n  hitSlop,\n  pressRetentionOffset,\n  android_disableSound,\n  android_ripple,\n  testOnly_pressed,\n  ...rest\n}) => {\n  const palette = usePaletteColor(color, tintColor);\n\n  const hasIcon = useMemo(\n    () => icon || (loading && loadingIndicatorPosition === 'icon'),\n    [icon, loading, loadingIndicatorPosition]\n  );\n\n  const styles = useStyles(\n    () => ({\n      container: {\n        backgroundColor: palette.main,\n        borderRadius: size === 'default' ? 28 : 20,\n      },\n      pressableContainer: {\n        borderRadius: size === 'default' ? 28 : 20,\n        overflow: 'hidden',\n      },\n      pressable: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingStart:\n          variant === 'extended'\n            ? hasIcon\n              ? size === 'default'\n                ? 12\n                : 6\n              : size === 'default'\n              ? 20\n              : 10\n            : size === 'default'\n            ? 16\n            : 8,\n        paddingEnd: variant === 'extended' ? (size === 'default' ? 20 : 10) : size === 'default' ? 16 : 8,\n        paddingVertical: size === 'default' ? 16 : 8,\n      },\n      iconContainer: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 24,\n        height: 24,\n      },\n      labelContainer: {\n        marginStart: hasIcon ? (size === 'default' ? 12 : 6) : 0,\n      },\n      loadingOverlayContainer: {\n        ...StyleSheet.absoluteFillObject,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: palette.main,\n      },\n    }),\n    [variant, size, palette, hasIcon]\n  );\n\n  const animated = useRef(new Animated.Value(visible ? 1 : 0)).current;\n\n  useEffect(() => {\n    Animated.timing(animated, {\n      toValue: visible ? 1 : 0,\n      duration: 200,\n      useNativeDriver: false,\n    }).start();\n  }, [visible]);\n\n  const getLoadingIndicator = () => {\n    if (!loadingIndicator) return <ActivityIndicator color={palette.on} />;\n    switch (typeof loadingIndicator) {\n      case 'string':\n        return (\n          <Text variant=\"button\" style={{ color: palette.on }}>\n            {loadingIndicator}\n          </Text>\n        );\n      case 'function':\n        return loadingIndicator({ color: palette.on });\n      default:\n        return loadingIndicator;\n    }\n  };\n\n  const getIcon = () => {\n    if (loading && loadingIndicatorPosition === 'icon') return getLoadingIndicator();\n    return typeof icon === 'function' ? icon({ color: palette.on, size: 24 }) : icon;\n  };\n\n  const getLabel = () => {\n    switch (typeof label) {\n      case 'string':\n        return (\n          <Text variant=\"button\" selectable={false} style={[{ color: palette.on }, labelStyle]}>\n            {label}\n          </Text>\n        );\n      case 'function':\n        return label({ color: palette.on });\n      default:\n        return label;\n    }\n  };\n\n  const [pressed, setPressed] = useState(false);\n\n  const handlePressIn = useCallback(\n    (event: GestureResponderEvent) => {\n      onPressIn?.(event);\n      setPressed(true);\n    },\n    [onPressIn]\n  );\n\n  const handlePressOut = useCallback(\n    (event: GestureResponderEvent) => {\n      onPressOut?.(event);\n      setPressed(false);\n    },\n    [onPressOut]\n  );\n\n  const animatedElevation = useAnimatedElevation(pressed ? 12 : 6);\n\n  return (\n    <Surface style={[animatedElevation, styles.container, { transform: [{ scale: animated }] }, style]} {...rest}>\n      <View style={[styles.pressableContainer, pressableContainerStyle]}>\n        <Pressable\n          style={[styles.pressable, contentContainerStyle]}\n          pressEffect={pressEffect}\n          pressEffectColor={pressEffectColor ?? palette.on}\n          onPress={onPress}\n          onPressIn={handlePressIn}\n          onPressOut={handlePressOut}\n          onLongPress={onLongPress}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          delayLongPress={delayLongPress}\n          disabled={disabled}\n          hitSlop={hitSlop}\n          pressRetentionOffset={pressRetentionOffset}\n          android_disableSound={android_disableSound}\n          android_ripple={android_ripple}\n          testOnly_pressed={testOnly_pressed}\n        >\n          {hasIcon && <View style={[styles.iconContainer, iconContainerStyle]}>{getIcon()}</View>}\n          {variant === 'extended' && <View style={[styles.labelContainer, labelContainerStyle]}>{getLabel()}</View>}\n\n          {loading && loadingIndicatorPosition === 'overlay' && (\n            <View style={[styles.loadingOverlayContainer, loadingOverlayContainerStyle]}>{getLoadingIndicator()}</View>\n          )}\n        </Pressable>\n      </View>\n    </Surface>\n  );\n};\n\nexport default FAB;\n"]},"metadata":{},"sourceType":"module"}