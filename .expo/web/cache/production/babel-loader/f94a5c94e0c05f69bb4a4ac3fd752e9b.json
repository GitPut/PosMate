{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React,{useEffect,useRef,useState}from'react';import{Upload}from\"../../EntryFile/imagePath\";import Select2 from'react-select2-wrapper';import'react-select2-wrapper/css/select2.css';import{employeesState,setEmployeesState,setUserStoreState,userState,userStoreState}from\"../../../../../state/state\";import{updateData}from\"../../../../../state/firebaseFunctions\";import FlatList from\"react-native-web/dist/exports/FlatList\";import Image from\"react-native-web/dist/exports/Image\";import Modal from\"react-native-web/dist/exports/Modal\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import OptionView from\"../../../../../components/product/OptionView\";import Button from\"react-native-web/dist/exports/Button\";import{Link,useHistory,useParams}from'react-router-dom';import{auth,db,storage}from\"../../../../../state/firebaseConfig\";import DatePicker from\"react-datepicker\";import{Text}from'@react-native-material/core';import{Entypo}from'@expo/vector-icons';import tw from'twrnc';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var EditEmployee=function EditEmployee(){var _useParams=useParams(),employeeId=_useParams.employeeId;var employees=employeesState.use();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),employee=_useState2[0],setemployee=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),dateSelected=_useState4[0],setdateSelected=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),startTime=_useState6[0],setstartTime=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),endTime=_useState8[0],setendTime=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),allHours=_useState10[0],setallHours=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),paidSelected=_useState12[0],setpaidSelected=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),unPaidSelected=_useState14[0],setunPaidSelected=_useState14[1];var history=useHistory();var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),error=_useState16[0],seterror=_useState16[1];useEffect(function(){if(employees.length>0){var myEmployee=employees.filter(function(e){return e.id===employeeId;})[0];if(!myEmployee){history.push(\"/authed/report/employeesreport\");return;}setemployee(myEmployee);db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(myEmployee.id.toString()).collection(\"hours\").get().then(function(snapshot){console.log('Made it before empty check');if(snapshot.empty)return;var hours=[];snapshot.forEach(function(doc){console.log('doc.data()',doc.data());hours.push(_objectSpread(_objectSpread({},doc.data()),{},{id:doc.id}));});setallHours(hours);});}else{history.push(\"/authed/report/employeesreport\");return;}},[]);useEffect(function(){console.log('All Hours: ',allHours);console.log('Paid Selected: ',paidSelected);console.log('Unpaid Selected: ',unPaidSelected);},[allHours,paidSelected,unPaidSelected]);function handleDataUpdate(){if(!employee.name){seterror('Please enter a employee name');return;}db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).update({name:employee.name,pin:employee.pin});var newEmployeesList=_toConsumableArray(employees);var index=newEmployeesList.findIndex(function(e){return e.id===employee.id;});newEmployeesList[index]=employee;setEmployeesState(newEmployeesList);}return _jsx(_Fragment,{children:_jsx(\"div\",{className:\"page-wrapper\",children:_jsxs(\"div\",{className:\"content\",children:[_jsx(\"div\",{className:\"page-header\",children:_jsxs(\"div\",{className:\"page-title\",children:[_jsx(\"h4\",{children:\"Employee Edit\"}),_jsx(\"h6\",{children:\"Edit your employee details\"})]})}),employee&&_jsx(\"div\",{className:\"card\",children:_jsx(\"div\",{className:\"card-body\",children:_jsxs(\"div\",{className:\"row\",children:[_jsxs(View,{style:{flexDirection:'row',alignItems:'center',justifyContent:'space-between'},children:[_jsxs(View,{style:{flexDirection:'row',alignItems:'center',width:'80%'},children:[_jsx(TouchableOpacity,{onPress:function onPress(){return history.push(\"/authed/report/employeesreport\");},children:_jsx(Entypo,{name:\"chevron-thin-left\",size:24,color:\"black\"})}),_jsx(\"div\",{className:\"col-lg-3 col-sm-6 col-12\",style:{marginLeft:20},children:_jsxs(\"div\",{className:\"form-group\",children:[_jsx(\"label\",{children:\"Employee Name\"}),_jsx(\"input\",{type:\"text\",placeholder:\"Employee Name\",value:employee==null?void 0:employee.name,onChange:function onChange(event){return setemployee(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{name:event.target.value});});},onBlur:handleDataUpdate})]})}),_jsx(View,{style:{width:10}}),_jsx(\"div\",{className:\"col-lg-3 col-sm-6 col-12\",children:_jsxs(\"div\",{className:\"form-group\",children:[_jsx(\"label\",{children:\"Employee Pin\"}),_jsx(\"input\",{type:\"text\",placeholder:\"Employee Pin\",value:employee==null?void 0:employee.pin,onChange:function onChange(event){return setemployee(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{pin:event.target.value});});},onBlur:handleDataUpdate})]})})]}),_jsx(TouchableOpacity,{onPress:function onPress(){db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).delete();var newEmployeesList=_toConsumableArray(employees);var filteredEmployeesList=newEmployeesList.filter(function(e){return e.id!==employee.id;});setEmployeesState(filteredEmployeesList);history.push(\"/authed/report/employeesreport\");},style:tw.style(['bg-red-500','p-2','rounded-md']),children:_jsx(Text,{style:tw.style(['text-white']),children:\"Remove Employee\"})})]}),_jsxs(View,{style:{marginBottom:50},children:[_jsx(Text,{children:\"Add Hours\"}),_jsxs(View,{style:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',width:'100%',marginTop:10},children:[_jsxs(View,{style:{flexDirection:'row',alignItems:'center'},children:[_jsx(Text,{children:\"Date:\"}),_jsx(\"div\",{children:_jsx(\"input\",{id:\"dateSelected\",\"aria-label\":\"Date\",type:\"date\",onChange:function onChange(event){console.log('event.target.value',event.target.value);var date=new Date(event.target.value.replace(/-/g,'\\/'));setdateSelected(date);}})})]}),_jsxs(View,{style:{flexDirection:'row',alignItems:'center'},children:[_jsx(Text,{children:\"Start Time:\"}),_jsx(\"div\",{children:_jsx(\"input\",{id:\"startTime\",\"aria-label\":\"Time\",type:\"time\",onChange:function onChange(event){console.log('Time target value: ',event.target.value);setstartTime(event.target.value);}})})]}),_jsxs(View,{style:{flexDirection:'row',alignItems:'center'},children:[_jsx(Text,{children:\"End Time:\"}),_jsx(\"div\",{children:_jsx(\"input\",{id:\"endTime\",\"aria-label\":\"Time\",type:\"time\",onChange:function onChange(event){return setendTime(event.target.value);}})})]}),_jsx(TouchableOpacity,{onPress:function onPress(){if(!dateSelected||!startTime||!endTime)return;console.log('dateSelected in add button: ',dateSelected);db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").add({date:dateSelected,startTime:startTime,endTime:endTime,paid:false}).then(function(docRef){setallHours([].concat(_toConsumableArray(allHours),[{date:dateSelected,startTime:startTime,endTime:endTime,id:docRef.id,paid:false}]));});setdateSelected(null);setstartTime(null);setendTime(null);document.getElementById('dateSelected').value=null;document.getElementById('startTime').value=null;document.getElementById('endTime').value=null;},style:tw.style(['bg-blue-500','p-2','rounded-md']),children:_jsx(Text,{style:tw.style(['text-white']),children:\"Add\"})})]}),_jsxs(View,{style:{marginTop:50},children:[_jsx(Text,{children:\"Unpaid\"}),_jsxs(View,{style:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',marginBottom:20},children:[_jsxs(View,{style:{alignItems:'center',flex:1},children:[\" \",_jsx(\"input\",{id:\"unPaidCheckAll\",value:unPaidSelected.length===allHours.filter(function(e){return!e.paid;}).length?true:false,\"aria-label\":\"Checkbox\",type:\"checkbox\",onChange:function onChange(event){if(unPaidSelected.length===allHours.filter(function(e){return!e.paid;}).length){setunPaidSelected([]);}else{setunPaidSelected(allHours.filter(function(e){return!e.paid;}));}}})]}),_jsxs(View,{style:{alignItems:'center',flex:2},children:[\" \",_jsx(Text,{children:\"Date\"}),\" \"]}),_jsxs(View,{style:{alignItems:'center',flex:1},children:[\" \",_jsx(Text,{children:\"Clock In\"})]}),_jsxs(View,{style:{alignItems:'center',flex:1},children:[\" \",_jsx(Text,{children:\"Clock Out\"})]}),_jsxs(View,{style:{alignItems:'center',flex:2,flexDirection:'row',justifyContent:'flex-end'},children:[_jsx(TouchableOpacity,{onPress:function onPress(){var newHours=_toConsumableArray(allHours);unPaidSelected.forEach(function(hour){db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).delete();newHours.splice(allHours.indexOf(hour),1);});setallHours(function(prev){return prev.filter(function(e){return!unPaidSelected.includes(e);});});setunPaidSelected([]);document.getElementById('unPaidCheckAll').checked=false;},style:tw.style(['bg-red-500','p-2','rounded-md']),children:_jsx(Text,{style:tw.style(['text-white']),children:\"Delete\"})}),_jsx(View,{style:{width:10}}),_jsx(TouchableOpacity,{onPress:function onPress(){var newHours=_toConsumableArray(allHours);unPaidSelected.forEach(function(hour){db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).update({paid:true});newHours[allHours.indexOf(hour)].paid=true;});setallHours(newHours);setunPaidSelected([]);document.getElementById('unPaidCheckAll').checked=false;},style:tw.style(['bg-blue-500','p-2','rounded-md']),children:_jsx(Text,{style:tw.style(['text-white']),children:\"Mark as Paid\"})})]})]}),_jsx(View,{style:{width:'100%',height:1,backgroundColor:'black',marginBottom:10}}),allHours.length>0&&allHours.map(function(hour,index){if(hour.paid)return;var date=hour.date.seconds?new Date(hour.date.seconds*1000):new Date(hour.date);var isChecked=unPaidSelected.filter(function(e){return e.id===hour.id;}).length>0;var ref=document.getElementById(\"unpaidSelected\"+index);if(ref){if(isChecked){document.getElementById(\"unpaidSelected\"+index).checked=true;}else{document.getElementById(\"unpaidSelected\"+index).checked=false;}}return _jsxs(View,{style:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',marginBottom:10},children:[_jsxs(View,{style:{alignItems:'center',flex:1},children:[\" \",_jsx(\"input\",{value:isChecked,id:\"unpaidSelected\"+index,\"aria-label\":\"Checkbox\",type:\"checkbox\",onChange:function onChange(event){if(isChecked){setunPaidSelected(function(prev){return prev.filter(function(item){return item!==hour;});});}else{setunPaidSelected(function(prev){return[].concat(_toConsumableArray(prev),[hour]);});}}})]}),_jsxs(View,{style:{alignItems:'center',flex:2},children:[\" \",_jsx(Text,{children:date.toDateString()}),\" \"]}),_jsxs(View,{style:{alignItems:'center',flex:1},children:[\" \",_jsx(Text,{children:hour.startTime})]}),_jsxs(View,{style:{alignItems:'center',flex:1},children:[\" \",_jsx(Text,{children:hour.endTime})]}),_jsxs(View,{style:{alignItems:'center',flex:2,flexDirection:'row',justifyContent:'flex-end'},children:[_jsx(TouchableOpacity,{onPress:function onPress(){db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).delete();var newHours=_toConsumableArray(allHours);newHours.splice(index,1);setallHours(newHours);},style:tw.style(['bg-red-500','p-2','rounded-md']),children:_jsx(Text,{style:tw.style(['text-white']),children:\"Delete\"})}),_jsx(View,{style:{width:10}}),_jsx(TouchableOpacity,{onPress:function onPress(){db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).update({paid:true});var newHours=_toConsumableArray(allHours);newHours[index].paid=true;setallHours(newHours);},style:tw.style(['bg-blue-500','p-2','rounded-md']),children:_jsx(Text,{style:tw.style(['text-white']),children:\"Mark as Paid\"})})]})]},index);})]}),_jsxs(View,{style:{marginTop:50},children:[_jsx(Text,{children:\"Paid\"}),_jsxs(View,{style:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',marginBottom:20},children:[_jsxs(View,{style:{alignItems:'center',flex:1},children:[\" \",_jsx(\"input\",{id:\"paidCheckAll\",value:paidSelected.length===allHours.filter(function(e){return e.paid;}).length?true:false,\"aria-label\":\"Checkbox\",type:\"checkbox\",onChange:function onChange(event){if(paidSelected.length===allHours.filter(function(e){return e.paid;}).length){setpaidSelected([]);}else{setpaidSelected(allHours.filter(function(e){return e.paid;}));}}})]}),_jsxs(View,{style:{alignItems:'center',flex:2},children:[\" \",_jsx(Text,{children:\"Date\"}),\" \"]}),_jsxs(View,{style:{alignItems:'center',flex:1},children:[\" \",_jsx(Text,{children:\"Clock In\"})]}),_jsxs(View,{style:{alignItems:'center',flex:1},children:[\" \",_jsx(Text,{children:\"Clock Out\"})]}),_jsxs(View,{style:{alignItems:'center',flex:2,flexDirection:'row',justifyContent:'flex-end'},children:[_jsx(TouchableOpacity,{onPress:function onPress(){var newHours=_toConsumableArray(allHours);paidSelected.forEach(function(hour){db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).delete();newHours.splice(allHours.indexOf(hour),1);});setallHours(function(prev){return prev.filter(function(e){return!paidSelected.includes(e);});});setpaidSelected([]);document.getElementById('paidCheckAll').checked=false;},style:tw.style(['bg-red-500','p-2','rounded-md']),children:_jsx(Text,{style:tw.style(['text-white']),children:\"Delete\"})}),_jsx(View,{style:{width:10}}),_jsx(TouchableOpacity,{onPress:function onPress(){var newHours=_toConsumableArray(allHours);paidSelected.forEach(function(hour){db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).update({paid:false});newHours[allHours.indexOf(hour)].paid=false;});setallHours(newHours);setpaidSelected([]);document.getElementById('paidCheckAll').checked=false;},style:tw.style(['bg-blue-500','p-2','rounded-md']),children:_jsx(Text,{style:tw.style(['text-white']),children:\"Mark as unPaid\"})})]})]}),_jsx(View,{style:{width:'100%',height:1,backgroundColor:'black',marginBottom:10}}),allHours.length>0&&allHours.map(function(hour,index){if(!hour.paid)return;var date=hour.date.seconds?new Date(hour.date.seconds*1000):new Date(hour.date);var isChecked=paidSelected.filter(function(e){return e.id===hour.id;}).length>0;var ref=document.getElementById(\"paidSelected\"+index);if(ref){if(isChecked){document.getElementById(\"paidSelected\"+index).checked=true;}else{document.getElementById(\"paidSelected\"+index).checked=false;}}return _jsxs(View,{style:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',marginBottom:10},children:[_jsxs(View,{style:{alignItems:'center',flex:1},children:[\" \",_jsx(\"input\",{value:isChecked,id:\"paidSelected\"+index,\"aria-label\":\"Checkbox\",type:\"checkbox\",onChange:function onChange(event){if(isChecked){setpaidSelected(function(prev){return prev.filter(function(item){return item!==hour;});});}else{setpaidSelected(function(prev){return[].concat(_toConsumableArray(prev),[hour]);});}}})]}),_jsxs(View,{style:{alignItems:'center',flex:2},children:[\" \",_jsx(Text,{children:date.toDateString()}),\" \"]}),_jsxs(View,{style:{alignItems:'center',flex:1},children:[\" \",_jsx(Text,{children:hour.startTime})]}),_jsxs(View,{style:{alignItems:'center',flex:1},children:[\" \",_jsx(Text,{children:hour.endTime})]}),_jsxs(View,{style:{alignItems:'center',flex:2,flexDirection:'row',justifyContent:'flex-end'},children:[_jsx(TouchableOpacity,{onPress:function onPress(){db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).delete();var newHours=_toConsumableArray(allHours);newHours.splice(index,1);setallHours(newHours);},style:tw.style(['bg-red-500','p-2','rounded-md']),children:_jsx(Text,{style:tw.style(['text-white']),children:\"Delete\"})}),_jsx(View,{style:{width:10}}),_jsx(TouchableOpacity,{onPress:function onPress(){db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).update({paid:false});var newHours=_toConsumableArray(allHours);newHours[index].paid=false;setallHours(newHours);},style:tw.style(['bg-blue-500','p-2','rounded-md']),children:_jsx(Text,{style:tw.style(['text-white']),children:\"Mark as unPaid\"})})]})]},index);})]})]})]})})}),_jsx(Modal,{visible:error,transparent:true,children:_jsx(TouchableOpacity,{onPress:function onPress(){return seterror(false);},style:{height:\"100%\",width:\"100%\",justifyContent:\"center\",alignItems:\"center\",padding:\"20%\",backgroundColor:\"rgba(0,0,0,0.5)\"},children:_jsx(\"div\",{\"data-wf-user-form-error\":\"true\",className:\" error-message \",children:_jsx(\"div\",{className:\"user-form-error-msg\",children:error})})})})]})})});};export default EditEmployee;","map":{"version":3,"names":["React","useEffect","useRef","useState","Upload","Select2","employeesState","setEmployeesState","setUserStoreState","userState","userStoreState","updateData","OptionView","Link","useHistory","useParams","auth","db","storage","DatePicker","Text","Entypo","tw","EditEmployee","employeeId","employees","use","employee","setemployee","dateSelected","setdateSelected","startTime","setstartTime","endTime","setendTime","allHours","setallHours","paidSelected","setpaidSelected","unPaidSelected","setunPaidSelected","history","error","seterror","length","myEmployee","filter","e","id","push","collection","doc","currentUser","uid","toString","get","then","snapshot","console","log","empty","hours","forEach","data","handleDataUpdate","name","update","pin","newEmployeesList","index","findIndex","flexDirection","alignItems","justifyContent","width","marginLeft","event","prevState","target","value","delete","filteredEmployeesList","style","marginBottom","marginTop","date","Date","replace","add","paid","docRef","document","getElementById","flex","newHours","hour","splice","indexOf","prev","includes","checked","height","backgroundColor","map","seconds","isChecked","ref","item","toDateString","padding"],"sources":["/Users/peterputros/Desktop/PosMate/pages/authed/main/MainPage/report/EditEmployee.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { Upload } from '../../EntryFile/imagePath';\nimport Select2 from 'react-select2-wrapper';\nimport 'react-select2-wrapper/css/select2.css';\nimport { employeesState, setEmployeesState, setUserStoreState, userState, userStoreState } from 'state/state';\nimport { updateData } from 'state/firebaseFunctions';\nimport { FlatList, Image, Modal, TouchableOpacity, View } from 'react-native';\nimport OptionView from 'components/product/OptionView';\nimport { Button } from 'react-native';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { auth, db, storage } from 'state/firebaseConfig';\n\nimport DatePicker from \"react-datepicker\";\nimport { Text } from '@react-native-material/core';\nimport { Entypo } from '@expo/vector-icons';\nimport tw from 'twrnc';\n\nconst EditEmployee = () => {\n    const { employeeId } = useParams()\n    const employees = employeesState.use()\n    const [employee, setemployee] = useState(null);\n    const [dateSelected, setdateSelected] = useState(null)\n    const [startTime, setstartTime] = useState(null)\n    const [endTime, setendTime] = useState(null)\n    const [allHours, setallHours] = useState([])\n    const [paidSelected, setpaidSelected] = useState([])\n    const [unPaidSelected, setunPaidSelected] = useState([])\n\n    const history = useHistory();\n    const [error, seterror] = useState(false)\n\n    useEffect(() => {\n        if (employees.length > 0) {\n            const myEmployee = employees.filter(e => e.id === employeeId)[0]\n\n            if (!myEmployee) {\n                history.push(\"/authed/report/employeesreport\")\n                return\n            }\n\n            setemployee(myEmployee)\n            db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(myEmployee.id.toString()).collection(\"hours\").get().then((snapshot) => {\n                console.log('Made it before empty check')\n                if (snapshot.empty) return\n                const hours = []\n                snapshot.forEach((doc) => {\n                    console.log('doc.data()', doc.data())\n                    hours.push({ ...doc.data(), id: doc.id })\n                })\n                setallHours(hours)\n            }\n            )\n        } else {\n            history.push(\"/authed/report/employeesreport\")\n            return\n        }\n    }, [])\n\n    useEffect(() => {\n        console.log('All Hours: ', allHours)\n        console.log('Paid Selected: ', paidSelected)\n        console.log('Unpaid Selected: ', unPaidSelected)\n\n    }, [allHours, paidSelected, unPaidSelected])\n\n\n\n    function handleDataUpdate() {\n        if (!employee.name) {\n            seterror('Please enter a employee name')\n            return\n        }\n        db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).update({\n            name: employee.name,\n            pin: employee.pin\n        })\n        const newEmployeesList = [...employees]\n        const index = newEmployeesList.findIndex(e => e.id === employee.id)\n        newEmployeesList[index] = employee\n        setEmployeesState(newEmployeesList)\n        // history.push(\"/authed/report/employeesreport\")\n    }\n\n    return (\n        <>\n            <div className=\"page-wrapper\">\n                <div className=\"content\">\n                    <div className=\"page-header\">\n                        <div className=\"page-title\">\n                            <h4>Employee Edit</h4>\n                            <h6>Edit your employee details</h6>\n                        </div>\n                    </div>\n                    {/* /add */}\n                    {employee && <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>\n                                    <View style={{ flexDirection: 'row', alignItems: 'center', width: '80%' }}>\n                                        <TouchableOpacity onPress={() => history.push(\"/authed/report/employeesreport\")} >\n                                            <Entypo name=\"chevron-thin-left\" size={24} color=\"black\" />\n                                        </TouchableOpacity>\n                                        <div className=\"col-lg-3 col-sm-6 col-12\" style={{ marginLeft: 20 }}>\n                                            <div className=\"form-group\">\n                                                <label>Employee Name</label>\n                                                <input type=\"text\" placeholder=\"Employee Name\" value={employee?.name} onChange={(event) => setemployee((prevState) => ({\n                                                    ...prevState,\n                                                    name: event.target.value,\n                                                }))} onBlur={handleDataUpdate} />\n                                            </div>\n                                        </div>\n                                        <View style={{ width: 10 }} />\n                                        <div className=\"col-lg-3 col-sm-6 col-12\">\n                                            <div className=\"form-group\">\n                                                <label>Employee Pin</label>\n                                                <input type=\"text\" placeholder=\"Employee Pin\" value={employee?.pin} onChange={(event) => setemployee((prevState) => ({\n                                                    ...prevState,\n                                                    pin: event.target.value,\n                                                }))} onBlur={handleDataUpdate} />\n                                            </div>\n                                        </div>\n                                    </View>\n\n                                    {/* <Button title='Remove Employee' onPress={() => {\n                                        db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).delete()\n                                        const newEmployeesList = [...employees]\n                                        const filteredEmployeesList = newEmployeesList.filter(e => e.id !== employee.id)\n                                        setEmployeesState(filteredEmployeesList)\n                                        history.push(\"/authed/report/employeesreport\")\n                                    }}\n                                        color={'red'}\n                                    /> */}\n                                    <TouchableOpacity onPress={() => {\n                                        db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).delete()\n                                        const newEmployeesList = [...employees]\n                                        const filteredEmployeesList = newEmployeesList.filter(e => e.id !== employee.id)\n                                        setEmployeesState(filteredEmployeesList)\n                                        history.push(\"/authed/report/employeesreport\")\n                                    }}\n                                        style={tw.style(['bg-red-500', 'p-2', 'rounded-md'])}\n                                    >\n                                        <Text style={tw.style(['text-white'])}>Remove Employee</Text>\n                                    </TouchableOpacity>\n                                </View>\n\n                                <View style={{ marginBottom: 50 }}>\n                                    <Text>Add Hours</Text>\n                                    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', width: '100%', marginTop: 10 }}>\n                                        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                                            <Text>Date:</Text>\n                                            <div>\n                                                <input id='dateSelected' aria-label=\"Date\" type=\"date\" onChange={(event) => {\n                                                    console.log('event.target.value', event.target.value)\n                                                    const date = new Date(event.target.value.replace(/-/g, '\\/'));\n                                                    setdateSelected(date)\n                                                }\n                                                } />\n                                            </div>\n                                        </View>\n                                        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                                            <Text>Start Time:</Text>\n                                            <div>\n                                                <input id='startTime' aria-label=\"Time\" type=\"time\" onChange={(event) => {\n                                                    console.log('Time target value: ', event.target.value)\n                                                    setstartTime(event.target.value)\n                                                }\n                                                } />\n                                            </div>\n                                        </View>\n                                        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                                            <Text>End Time:</Text>\n                                            <div>\n                                                <input id='endTime' aria-label=\"Time\" type=\"time\" onChange={event => setendTime(event.target.value)} />\n                                            </div>\n                                        </View>\n                                        {/* <Button title=\"Add\" onPress={() => {\n                                            if (!dateSelected || !startTime || !endTime) return\n                                            console.log('dateSelected in add button: ', dateSelected)\n                                            db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").add({\n                                                date: dateSelected,\n                                                startTime: startTime,\n                                                endTime: endTime\n                                            }).then((docRef) => {\n                                                setallHours([...allHours, {\n                                                    date: dateSelected,\n                                                    startTime: startTime,\n                                                    endTime: endTime,\n                                                    id: docRef.id\n                                                }])\n                                            })\n                                            setdateSelected(null)\n                                            setstartTime(null)\n                                            setendTime(null)\n                                            document.getElementById('dateSelected').value = null\n                                            document.getElementById('startTime').value = null\n                                            document.getElementById('endTime').value = null\n                                        }} /> */}\n                                        <TouchableOpacity onPress={() => {\n                                            if (!dateSelected || !startTime || !endTime) return\n                                            console.log('dateSelected in add button: ', dateSelected)\n                                            db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").add({\n                                                date: dateSelected,\n                                                startTime: startTime,\n                                                endTime: endTime,\n                                                paid: false\n                                            }).then((docRef) => {\n                                                setallHours([...allHours, {\n                                                    date: dateSelected,\n                                                    startTime: startTime,\n                                                    endTime: endTime,\n                                                    id: docRef.id,\n                                                    paid: false\n                                                }])\n                                            })\n                                            setdateSelected(null)\n                                            setstartTime(null)\n                                            setendTime(null)\n                                            document.getElementById('dateSelected').value = null\n                                            document.getElementById('startTime').value = null\n                                            document.getElementById('endTime').value = null\n                                        }}\n                                            style={tw.style(['bg-blue-500', 'p-2', 'rounded-md'])}\n                                        >\n                                            <Text style={tw.style(['text-white'])}>Add</Text>\n                                        </TouchableOpacity>\n                                    </View>\n                                    <View style={{ marginTop: 50 }}>\n                                        <Text>Unpaid</Text>\n                                        <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', marginBottom: 20 }}>\n                                            <View style={{ alignItems: 'center', flex: 1 }}> <input id=\"unPaidCheckAll\" value={unPaidSelected.length === allHours.filter(e => !e.paid).length ? true : false} aria-label=\"Checkbox\" type=\"checkbox\" onChange={(event) => {\n                                                if (unPaidSelected.length === allHours.filter(e => !e.paid).length) {\n                                                    setunPaidSelected([])\n                                                } else {\n                                                    setunPaidSelected(allHours.filter(e => !e.paid))\n                                                }\n                                            }} /></View>\n                                            <View style={{ alignItems: 'center', flex: 2 }}> <Text>Date</Text> </View>\n                                            <View style={{ alignItems: 'center', flex: 1 }}> <Text>Clock In</Text></View>\n                                            <View style={{ alignItems: 'center', flex: 1 }}> <Text>Clock Out</Text></View>\n                                            <View style={{ alignItems: 'center', flex: 2, flexDirection: 'row', justifyContent: 'flex-end' }}>\n                                                {/* <Button title=\"Delete\" onPress={() => {\n                                                    const newHours = [...allHours]\n                                                    unPaidSelected.forEach(hour => {\n                                                        db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).delete()\n                                                        newHours.splice(allHours.indexOf(hour), 1)\n                                                    }\n                                                    )\n                                                    setallHours(prev => prev.filter(e => !unPaidSelected.includes(e)))\n                                                    setunPaidSelected([])\n                                                    document.getElementById('unPaidCheckAll').checked = false;\n                                                }\n                                                } /> */}\n                                                <TouchableOpacity onPress={() => {\n                                                    const newHours = [...allHours]\n                                                    unPaidSelected.forEach(hour => {\n                                                        db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).delete()\n                                                        newHours.splice(allHours.indexOf(hour), 1)\n                                                    }\n                                                    )\n                                                    setallHours(prev => prev.filter(e => !unPaidSelected.includes(e)))\n                                                    setunPaidSelected([])\n                                                    document.getElementById('unPaidCheckAll').checked = false;\n                                                }}\n                                                    style={tw.style(['bg-red-500', 'p-2', 'rounded-md'])}\n                                                >\n                                                    <Text style={tw.style(['text-white'])}>Delete</Text>\n                                                </TouchableOpacity>\n                                                <View style={{ width: 10 }} />\n                                                {/* <Button title='Mark as Paid' onPress={() => {\n                                                    const newHours = [...allHours]\n                                                    unPaidSelected.forEach(hour => {\n                                                        db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).update({\n                                                            paid: true\n                                                        })\n                                                        newHours[allHours.indexOf(hour)].paid = true\n                                                    }\n                                                    )\n                                                    setallHours(newHours)\n                                                    setunPaidSelected([])\n                                                    document.getElementById('unPaidCheckAll').checked = false;\n                                                }\n                                                } /> */}\n                                                <TouchableOpacity onPress={() => {\n                                                    const newHours = [...allHours]\n                                                    unPaidSelected.forEach(hour => {\n                                                        db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).update({\n                                                            paid: true\n                                                        })\n                                                        newHours[allHours.indexOf(hour)].paid = true\n                                                    }\n                                                    )\n                                                    setallHours(newHours)\n                                                    setunPaidSelected([])\n                                                    document.getElementById('unPaidCheckAll').checked = false;\n                                                }}\n                                                    style={tw.style(['bg-blue-500', 'p-2', 'rounded-md'])}\n                                                >\n                                                    <Text style={tw.style(['text-white'])}>Mark as Paid</Text>\n                                                </TouchableOpacity>\n                                            </View>\n                                        </View>\n                                        <View style={{ width: '100%', height: 1, backgroundColor: 'black', marginBottom: 10 }} />\n                                        {allHours.length > 0 && allHours.map((hour, index) => {\n                                            if (hour.paid) return\n\n                                            const date = hour.date.seconds ? new Date(hour.date.seconds * 1000) : new Date(hour.date)\n                                            const isChecked = unPaidSelected.filter(e => e.id === hour.id).length > 0\n                                            const ref = document.getElementById(`unpaidSelected${index}`)\n\n                                            if (ref) {\n                                                if (isChecked) {\n                                                    document.getElementById(`unpaidSelected${index}`).checked = true;\n                                                } else {\n                                                    document.getElementById(`unpaidSelected${index}`).checked = false;\n                                                }\n                                            }\n\n                                            return (\n                                                <View key={index} style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', marginBottom: 10 }}>\n                                                    <View style={{ alignItems: 'center', flex: 1 }}> <input value={isChecked} id={`unpaidSelected${index}`} aria-label=\"Checkbox\" type=\"checkbox\" onChange={(event) => {\n                                                        if (isChecked) {\n                                                            setunPaidSelected(prev => prev.filter((item) => item !== hour))\n                                                        } else {\n                                                            setunPaidSelected(prev => [...prev, hour])\n                                                        }\n                                                    }} /></View>\n                                                    <View style={{ alignItems: 'center', flex: 2 }}> <Text>{date.toDateString()}</Text> </View>\n                                                    <View style={{ alignItems: 'center', flex: 1 }}> <Text>{hour.startTime}</Text></View>\n                                                    <View style={{ alignItems: 'center', flex: 1 }}> <Text>{hour.endTime}</Text></View>\n                                                    <View style={{ alignItems: 'center', flex: 2, flexDirection: 'row', justifyContent: 'flex-end' }}>\n                                                        {/* <Button title=\"Delete\" onPress={() => {\n                                                            db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).delete()\n                                                            const newHours = [...allHours]\n                                                            newHours.splice(index, 1)\n                                                            setallHours(newHours)\n                                                        }\n                                                        } /> */}\n                                                        <TouchableOpacity onPress={() => {\n                                                            db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).delete()\n                                                            const newHours = [...allHours]\n                                                            newHours.splice(index, 1)\n                                                            setallHours(newHours)\n                                                        }}\n                                                            style={tw.style(['bg-red-500', 'p-2', 'rounded-md'])}\n                                                        >\n                                                            <Text style={tw.style(['text-white'])}>Delete</Text>\n                                                        </TouchableOpacity>\n                                                        <View style={{ width: 10 }} />\n                                                        {/* <Button title='Mark as Paid' onPress={() => {\n                                                            db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).update({\n                                                                paid: true\n                                                            })\n                                                            const newHours = [...allHours]\n                                                            newHours[index].paid = true\n                                                            setallHours(newHours)\n                                                        }\n                                                        } /> */}\n                                                        <TouchableOpacity onPress={() => {\n                                                            db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).update({\n                                                                paid: true\n                                                            })\n                                                            const newHours = [...allHours]\n                                                            newHours[index].paid = true\n                                                            setallHours(newHours)\n                                                        }}\n                                                            style={tw.style(['bg-blue-500', 'p-2', 'rounded-md'])}\n                                                        >\n                                                            <Text style={tw.style(['text-white'])}>Mark as Paid</Text>\n                                                        </TouchableOpacity>\n                                                    </View>\n                                                </View>\n                                            )\n                                        }\n                                        )}\n                                    </View>\n                                    <View style={{ marginTop: 50 }}>\n                                        <Text>Paid</Text>\n                                        <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', marginBottom: 20 }}>\n                                            <View style={{ alignItems: 'center', flex: 1 }}> <input id=\"paidCheckAll\" value={paidSelected.length === allHours.filter(e => e.paid).length ? true : false} aria-label=\"Checkbox\" type=\"checkbox\" onChange={(event) => {\n                                                if (paidSelected.length === allHours.filter(e => e.paid).length) {\n                                                    setpaidSelected([])\n                                                } else {\n                                                    setpaidSelected(allHours.filter(e => e.paid))\n                                                }\n                                            }} /></View>\n                                            <View style={{ alignItems: 'center', flex: 2 }}> <Text>Date</Text> </View>\n                                            <View style={{ alignItems: 'center', flex: 1 }}> <Text>Clock In</Text></View>\n                                            <View style={{ alignItems: 'center', flex: 1 }}> <Text>Clock Out</Text></View>\n                                            <View style={{ alignItems: 'center', flex: 2, flexDirection: 'row', justifyContent: 'flex-end' }}>\n                                                {/* <Button title=\"Delete\" onPress={() => {\n                                                    const newHours = [...allHours]\n                                                    paidSelected.forEach(hour => {\n                                                        db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).delete()\n                                                        newHours.splice(allHours.indexOf(hour), 1)\n                                                    }\n                                                    )\n                                                    setallHours(prev => prev.filter(e => !paidSelected.includes(e)))\n                                                    setpaidSelected([])\n                                                    document.getElementById('paidCheckAll').checked = false;\n                                                }\n                                                } /> */}\n                                                <TouchableOpacity onPress={() => {\n                                                    const newHours = [...allHours]\n                                                    paidSelected.forEach(hour => {\n                                                        db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).delete()\n                                                        newHours.splice(allHours.indexOf(hour), 1)\n                                                    }\n                                                    )\n                                                    setallHours(prev => prev.filter(e => !paidSelected.includes(e)))\n                                                    setpaidSelected([])\n                                                    document.getElementById('paidCheckAll').checked = false;\n                                                }}\n                                                    style={tw.style(['bg-red-500', 'p-2', 'rounded-md'])}\n                                                >\n                                                    <Text style={tw.style(['text-white'])}>Delete</Text>\n                                                </TouchableOpacity>\n                                                <View style={{ width: 10 }} />\n                                                {/* <Button title='Mark as unPaid' onPress={() => {\n                                                    const newHours = [...allHours]\n                                                    paidSelected.forEach(hour => {\n                                                        db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).update({\n                                                            paid: false\n                                                        })\n                                                        newHours[allHours.indexOf(hour)].paid = false\n                                                    }\n                                                    )\n                                                    setallHours(newHours)\n                                                    setpaidSelected([])\n                                                    document.getElementById('paidCheckAll').checked = false;\n                                                }\n                                                } /> */}\n                                                <TouchableOpacity onPress={() => {\n                                                    const newHours = [...allHours]\n                                                    paidSelected.forEach(hour => {\n                                                        db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).update({\n                                                            paid: false\n                                                        })\n                                                        newHours[allHours.indexOf(hour)].paid = false\n                                                    }\n                                                    )\n                                                    setallHours(newHours)\n                                                    setpaidSelected([])\n                                                    document.getElementById('paidCheckAll').checked = false;\n                                                }}\n                                                    style={tw.style(['bg-blue-500', 'p-2', 'rounded-md'])}\n                                                >\n                                                    <Text style={tw.style(['text-white'])}>Mark as unPaid</Text>\n                                                </TouchableOpacity>\n                                            </View>\n                                        </View>\n                                        <View style={{ width: '100%', height: 1, backgroundColor: 'black', marginBottom: 10 }} />\n                                        {allHours.length > 0 && allHours.map((hour, index) => {\n                                            if (!hour.paid) return\n\n                                            const date = hour.date.seconds ? new Date(hour.date.seconds * 1000) : new Date(hour.date)\n                                            const isChecked = paidSelected.filter(e => e.id === hour.id).length > 0\n                                            const ref = document.getElementById(`paidSelected${index}`)\n\n                                            if (ref) {\n                                                if (isChecked) {\n                                                    document.getElementById(`paidSelected${index}`).checked = true;\n                                                } else {\n                                                    document.getElementById(`paidSelected${index}`).checked = false;\n                                                }\n                                            }\n\n                                            return (\n                                                <View key={index} style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', marginBottom: 10 }}>\n                                                    <View style={{ alignItems: 'center', flex: 1 }}> <input value={isChecked} id={`paidSelected${index}`} aria-label=\"Checkbox\" type=\"checkbox\" onChange={(event) => {\n                                                        if (isChecked) {\n                                                            setpaidSelected(prev => prev.filter((item) => item !== hour))\n                                                        } else {\n                                                            setpaidSelected(prev => [...prev, hour])\n                                                        }\n                                                    }} /></View>\n                                                    <View style={{ alignItems: 'center', flex: 2 }}> <Text>{date.toDateString()}</Text> </View>\n                                                    <View style={{ alignItems: 'center', flex: 1 }}> <Text>{hour.startTime}</Text></View>\n                                                    <View style={{ alignItems: 'center', flex: 1 }}> <Text>{hour.endTime}</Text></View>\n                                                    <View style={{ alignItems: 'center', flex: 2, flexDirection: 'row', justifyContent: 'flex-end' }}>\n                                                        {/* <Button title=\"Delete\" onPress={() => {\n                                                            db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).delete()\n                                                            const newHours = [...allHours]\n                                                            newHours.splice(index, 1)\n                                                            setallHours(newHours)\n                                                        }\n                                                        } /> */}\n                                                        <TouchableOpacity onPress={() => {\n                                                            db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).delete()\n                                                            const newHours = [...allHours]\n                                                            newHours.splice(index, 1)\n                                                            setallHours(newHours)\n                                                        }}\n                                                            style={tw.style(['bg-red-500', 'p-2', 'rounded-md'])}\n                                                        >\n                                                            <Text style={tw.style(['text-white'])}>Delete</Text>\n                                                        </TouchableOpacity>\n                                                        <View style={{ width: 10 }} />\n                                                        {/* <Button title='Mark as unPaid' onPress={() => {\n                                                            db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).update({\n                                                                paid: false\n                                                            })\n                                                            const newHours = [...allHours]\n                                                            newHours[index].paid = false\n                                                            setallHours(newHours)\n                                                        }\n                                                        } /> */}\n                                                        <TouchableOpacity onPress={() => {\n                                                            db.collection(\"users\").doc(auth.currentUser.uid).collection(\"employees\").doc(employee.id.toString()).collection(\"hours\").doc(hour.id.toString()).update({\n                                                                paid: false\n                                                            })\n                                                            const newHours = [...allHours]\n                                                            newHours[index].paid = false\n                                                            setallHours(newHours)\n                                                        }}\n                                                            style={tw.style(['bg-blue-500', 'p-2', 'rounded-md'])}\n                                                        >\n                                                            <Text style={tw.style(['text-white'])}>Mark as unPaid</Text>\n                                                        </TouchableOpacity>\n                                                    </View>\n                                                </View>\n                                            )\n                                        }\n                                        )}\n                                    </View>\n                                </View>\n\n                                {/* <div className=\"col-lg-12\">\n                                    <button className=\"btn btn-submit me-2\" onClick={handleDataUpdate}>\n                                        Update\n                                    </button>\n                                    <Link style={{ textDecoration: 'none' }} to=\"/authed/report/employeesreport\" className=\"btn btn-cancel\">\n                                        Cancel\n                                    </Link>\n                                </div> */}\n                            </div>\n                        </div>\n                    </div>}\n                    <Modal visible={error} transparent={true}>\n                        <TouchableOpacity\n                            onPress={() => seterror(false)}\n                            style={{\n                                height: \"100%\",\n                                width: \"100%\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                padding: \"20%\",\n                                backgroundColor: \"rgba(0,0,0,0.5)\",\n                            }}\n                        >\n                            <div\n                                data-wf-user-form-error=\"true\"\n                                className=\" error-message \"\n                            >\n                                <div className=\"user-form-error-msg\">\n                                    {error}\n                                </div>\n                            </div>\n                        </TouchableOpacity>\n                    </Modal>\n                    {/* /add */}\n                </div>\n            </div>\n        </>\n    )\n}\nexport default EditEmployee;"],"mappings":"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"},"metadata":{},"sourceType":"module"}