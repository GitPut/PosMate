{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"color\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{createContext,useContext}from'react';import{usePaletteColor}from\"../hooks/use-palette-color\";export var IconComponentContext=createContext(null);export var useIconComponent=function useIconComponent(){return useContext(IconComponentContext);};export var IconComponentProvider=function IconComponentProvider(_ref){var IconComponent=_ref.IconComponent,children=_ref.children;return React.createElement(IconComponentContext.Provider,{value:IconComponent!==null&&IconComponent!==void 0?IconComponent:null},children);};export var Icon=function Icon(_ref2){var _ref2$color=_ref2.color,color=_ref2$color===void 0?'on-background':_ref2$color,rest=_objectWithoutProperties(_ref2,_excluded);var IconComponent=useIconComponent();if(!IconComponent){throw new Error('`IconComponent` is undefined. Seems like you forgot to wrap your component with `Provider`.');}var _usePaletteColor=usePaletteColor(color),main=_usePaletteColor.main;return React.createElement(IconComponent,_extends({},rest,{color:main}));};","map":{"version":3,"mappings":"oYAAA,MAAOA,MAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,KAAiD,OAAjD,CACA,OAAgBC,eAAhB,kCAQA,MAAO,IAAMC,qBAAoB,CAAGH,aAAa,CAAuB,IAAvB,CAA1C,CAEP,MAAO,IAAMI,iBAAgB,CAAG,QAAnBA,iBAAgB,SAASH,WAAU,CAACE,oBAAD,CAAzC,GAEP,MAAO,IAAME,sBAA2D,CAAG,QAA9DA,sBAA2D,CAAGC,KAAiC,IAA9BC,cAAF,CAAgCD,KAA9BC,aAAF,CAAiBC,SAAeF,KAAfE,SAC3F,MAAOT,qBAACI,oBAAD,CAAsBM,QAAtB,EAA+BC,KAAK,CAAEH,aAAF,SAAEA,aAAF,UAAEA,aAAF,CAAmB,IAAvD,EAA8DC,QAA9D,CAAP,CACD,CAFM,CAcP,MAAO,IAAMG,KAAyB,CAAG,QAA5BA,KAAyB,CAAGC,MAA0C,uBAAvCC,KAAK,CAALA,KAAK,sBAAG,eAAV,aAA8BC,8BAAWF,iBACjF,GAAML,cAAa,CAAGH,gBAAgB,EAAtC,CACA,GAAI,CAACG,aAAL,CAAoB,CAClB,KAAM,IAAIQ,MAAJ,CAAU,6FAAV,CAAN,CACD,CACD,qBAAiBb,eAAe,CAACW,KAAD,CAAhC,CAAQG,2BACR,MAAOjB,qBAACQ,aAAD,aAAmBO,IAAnB,EAAyBD,KAAK,CAAEG,IAAhC,GAAP,CACD,CAPM","names":["React","createContext","useContext","usePaletteColor","IconComponentContext","useIconComponent","IconComponentProvider","_ref","IconComponent","children","Provider","value","Icon","_ref2","color","rest","Error","main"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/@react-native-material/core/lib/module/base/IconComponentContext.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nimport { Color, usePaletteColor } from '../hooks/use-palette-color';\n\nexport type IconComponent = React.ComponentType<IconProps>;\n\nexport interface IconComponentProviderProps {\n  IconComponent?: IconComponent | null;\n}\n\nexport const IconComponentContext = createContext<IconComponent | null>(null);\n\nexport const useIconComponent = () => useContext(IconComponentContext);\n\nexport const IconComponentProvider: React.FC<IconComponentProviderProps> = ({ IconComponent, children }) => {\n  return <IconComponentContext.Provider value={IconComponent ?? null}>{children}</IconComponentContext.Provider>;\n};\n\nexport interface IconProps {\n  name: string;\n\n  size?: number;\n\n  color?: Color;\n\n  [key: string]: any;\n}\n\nexport const Icon: React.FC<IconProps> = ({ color = 'on-background', ...rest }) => {\n  const IconComponent = useIconComponent();\n  if (!IconComponent) {\n    throw new Error('`IconComponent` is undefined. Seems like you forgot to wrap your component with `Provider`.');\n  }\n  const { main } = usePaletteColor(color);\n  return <IconComponent {...rest} color={main} />;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}