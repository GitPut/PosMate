{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"spacing\",\"divider\",\"dividerStyle\",\"shouldWrapChildren\",\"childrenStyle\",\"children\"],_excluded2=[\"reverse\"],_excluded3=[\"reverse\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useMemo}from'react';import View from\"react-native-web/dist/exports/View\";import Flex from\"./Flex\";import Selector,{notLastChild}from\"./Selector\";import Divider from\"./Divider\";import{useSpacing}from\"./SpacingFuncContext\";import{getValidChildren}from\"./utilities\";var Stack=function Stack(_ref){var _ref$spacing=_ref.spacing,spacing=_ref$spacing===void 0?0:_ref$spacing,_ref$divider=_ref.divider,divider=_ref$divider===void 0?false:_ref$divider,dividerStyle=_ref.dividerStyle,_ref$shouldWrapChildr=_ref.shouldWrapChildren,shouldWrapChildren=_ref$shouldWrapChildr===void 0?false:_ref$shouldWrapChildr,childrenStyle=_ref.childrenStyle,children=_ref.children,rest=_objectWithoutProperties(_ref,_excluded);var spacingValue=useSpacing(spacing);var direction=useMemo(function(){return rest.inline?'row':rest.direction||'column';},[rest.inline,rest.direction]);var spacingStyle=useMemo(function(){switch(direction){case'column':return{marginBottom:spacingValue};case'row':return{marginEnd:spacingValue};case'column-reverse':return{marginTop:spacingValue};case'row-reverse':return{marginStart:spacingValue};}},[spacingValue,direction]);var shouldUseChildren=!shouldWrapChildren&&!divider;var validChildren=getValidChildren(children);var clones=shouldUseChildren?validChildren:validChildren.map(function(child,index){var key=typeof child.key!=='undefined'?child.key:index;var isLast=index+1===validChildren.length;var wrappedChild=React.createElement(StackItem,{key:key},child);var _child=shouldWrapChildren?wrappedChild:child;if(!divider)return _child;var dividerElement=React.isValidElement(divider)?divider:React.createElement(Divider,{orientation:direction==='row'||direction==='row-reverse'?'vertical':'horizontal'});var clonedDivider=React.cloneElement(dividerElement,{key:`${key}-divider`,style:[dividerElement.props.style,dividerStyle]});var _divider=isLast?null:clonedDivider;return[_child,_divider];});return React.createElement(Flex,rest,React.createElement(Selector,{childrenStyle:[notLastChild(spacingStyle),childrenStyle]},clones));};export default Stack;var StackItem=function StackItem(props){return React.createElement(View,props);};export var HStack=function HStack(_ref2){var reverse=_ref2.reverse,rest=_objectWithoutProperties(_ref2,_excluded2);return React.createElement(Stack,_extends({},rest,{direction:reverse?'row-reverse':'row'}));};export var VStack=function VStack(_ref3){var reverse=_ref3.reverse,rest=_objectWithoutProperties(_ref3,_excluded3);return React.createElement(Stack,_extends({},rest,{direction:reverse?'column-reverse':'column'}));};","map":{"version":3,"mappings":"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","names":["React","useMemo","Flex","Selector","notLastChild","Divider","useSpacing","getValidChildren","Stack","_ref","spacing","divider","dividerStyle","shouldWrapChildren","childrenStyle","children","rest","spacingValue","direction","inline","spacingStyle","marginBottom","marginEnd","marginTop","marginStart","shouldUseChildren","validChildren","clones","map","child","index","key","isLast","length","wrappedChild","StackItem","_child","dividerElement","isValidElement","orientation","clonedDivider","cloneElement","style","props","_divider","View","HStack","_ref2","reverse","VStack","_ref3"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-flex-layout/lib/module/Stack.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport type { FlexProps } from './Flex';\nimport Flex from './Flex';\nimport type { SelectorProps } from './Selector';\nimport Selector, { notLastChild } from './Selector';\nimport Divider from './Divider';\nimport { useSpacing } from './SpacingFuncContext';\nimport { getValidChildren } from './utilities';\n\nexport interface StackProps extends FlexProps, SelectorProps {\n  /**\n   * The spacing between items in the stack.\n   *\n   * @default 0\n   */\n  spacing?: number;\n\n  /**\n   * If `true`, each stack item will show a divider.\n   *\n   * @default false\n   */\n  divider?: React.ReactElement;\n\n  /**\n   * A style object to apply to each divider.\n   */\n  dividerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * If `true`, the children will be wrapped in a `Box` and the `Box` will take the spacing properties.\n   *\n   * @default false\n   */\n  shouldWrapChildren?: boolean;\n}\n\nconst Stack: React.FC<StackProps> = ({\n  spacing = 0,\n  divider = false,\n  dividerStyle,\n  shouldWrapChildren = false,\n  childrenStyle,\n  children,\n  ...rest\n}) => {\n  const spacingValue = useSpacing(spacing);\n\n  const direction = useMemo(() => {\n    return rest.inline ? 'row' : rest.direction || 'column';\n  }, [rest.inline, rest.direction]);\n\n  const spacingStyle = useMemo(() => {\n    switch (direction) {\n      case 'column':\n        return { marginBottom: spacingValue };\n      case 'row':\n        return { marginEnd: spacingValue };\n      case 'column-reverse':\n        return { marginTop: spacingValue };\n      case 'row-reverse':\n        return { marginStart: spacingValue };\n    }\n  }, [spacingValue, direction]);\n\n  const shouldUseChildren = !shouldWrapChildren && !divider;\n\n  const validChildren = getValidChildren(children);\n\n  const clones = shouldUseChildren\n    ? validChildren\n    : validChildren.map((child, index) => {\n        const key = typeof child.key !== 'undefined' ? child.key : index;\n        const isLast = index + 1 === validChildren.length;\n        const wrappedChild = <StackItem key={key}>{child}</StackItem>;\n        const _child = shouldWrapChildren ? wrappedChild : child;\n\n        if (!divider) return _child;\n\n        const dividerElement = React.isValidElement(divider) ? (\n          divider\n        ) : (\n          <Divider\n            orientation={\n              direction === 'row' || direction === 'row-reverse'\n                ? 'vertical'\n                : 'horizontal'\n            }\n          />\n        );\n\n        const clonedDivider = React.cloneElement(dividerElement, {\n          key: `${key}-divider`,\n          style: [dividerElement.props.style, dividerStyle],\n        });\n\n        const _divider = isLast ? null : clonedDivider;\n\n        return [_child, _divider];\n      });\n\n  return (\n    <Flex {...rest}>\n      <Selector childrenStyle={[notLastChild(spacingStyle), childrenStyle]}>\n        {clones}\n      </Selector>\n    </Flex>\n  );\n};\n\nexport default Stack;\n\nconst StackItem: React.FC = (props) => <View {...props} />;\n\nexport interface HStackProps extends Omit<StackProps, 'inline' | 'direction'> {\n  reverse?: boolean;\n}\n\nexport const HStack: React.FC<HStackProps> = ({ reverse, ...rest }) => {\n  return <Stack {...rest} direction={reverse ? 'row-reverse' : 'row'} />;\n};\n\nexport interface VStackProps extends Omit<StackProps, 'inline' | 'direction'> {\n  reverse?: boolean;\n}\n\nexport const VStack: React.FC<VStackProps> = ({ reverse, ...rest }) => {\n  return <Stack {...rest} direction={reverse ? 'column-reverse' : 'column'} />;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}