{"ast":null,"code":"import{useEvent,useHandler}from\"./Hooks\";export var EventType=function(EventType){EventType[EventType[\"UNDETERMINED\"]=0]=\"UNDETERMINED\";EventType[EventType[\"FAILED\"]=1]=\"FAILED\";EventType[EventType[\"BEGAN\"]=2]=\"BEGAN\";EventType[EventType[\"CANCELLED\"]=3]=\"CANCELLED\";EventType[EventType[\"ACTIVE\"]=4]=\"ACTIVE\";EventType[EventType[\"END\"]=5]=\"END\";return EventType;}({});var _worklet_4138724704923_init_data={code:\"function anonymous(e){const{useWeb,EventType,handlers,context}=this._closure;const event=useWeb?e.nativeEvent:e;if(event.state===EventType.BEGAN&&handlers.onStart){handlers.onStart(event,context);}if(event.state===EventType.ACTIVE&&handlers.onActive){handlers.onActive(event,context);}if(event.oldState===EventType.ACTIVE&&event.state===EventType.END&&handlers.onEnd){handlers.onEnd(event,context);}if(event.oldState===EventType.BEGAN&&event.state===EventType.FAILED&&handlers.onFail){handlers.onFail(event,context);}if(event.oldState===EventType.ACTIVE&&event.state===EventType.CANCELLED&&handlers.onCancel){handlers.onCancel(event,context);}if((event.oldState===EventType.BEGAN||event.oldState===EventType.ACTIVE)&&event.state!==EventType.BEGAN&&event.state!==EventType.ACTIVE&&handlers.onFinish){handlers.onFinish(event,context,event.state===EventType.CANCELLED||event.state===EventType.FAILED);}}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedGestureHandler.js\"};export function useAnimatedGestureHandler(handlers,dependencies){var _useHandler=useHandler(handlers,dependencies),context=_useHandler.context,doDependenciesDiffer=_useHandler.doDependenciesDiffer,useWeb=_useHandler.useWeb;var handler=function(){var _f=function _f(e){var event=useWeb?e.nativeEvent:e;if(event.state===EventType.BEGAN&&handlers.onStart){handlers.onStart(event,context);}if(event.state===EventType.ACTIVE&&handlers.onActive){handlers.onActive(event,context);}if(event.oldState===EventType.ACTIVE&&event.state===EventType.END&&handlers.onEnd){handlers.onEnd(event,context);}if(event.oldState===EventType.BEGAN&&event.state===EventType.FAILED&&handlers.onFail){handlers.onFail(event,context);}if(event.oldState===EventType.ACTIVE&&event.state===EventType.CANCELLED&&handlers.onCancel){handlers.onCancel(event,context);}if((event.oldState===EventType.BEGAN||event.oldState===EventType.ACTIVE)&&event.state!==EventType.BEGAN&&event.state!==EventType.ACTIVE&&handlers.onFinish){handlers.onFinish(event,context,event.state===EventType.CANCELLED||event.state===EventType.FAILED);}};_f._closure={useWeb:useWeb,EventType:EventType,handlers:handlers,context:context};_f.__initData=_worklet_4138724704923_init_data;_f.__workletHash=4138724704923;return _f;}();if(useWeb){return handler;}return useEvent(handler,['onGestureHandlerStateChange','onGestureHandlerEvent'],doDependenciesDiffer);}","map":{"version":3,"mappings":"AAIA,OAASA,QAAQ,CAAEC,UAAU,eAgB7B,UAAYC,UAAS,UAATA,SAAS,EAATA,SAAS,CAATA,SAAS,mCAATA,SAAS,CAATA,SAAS,uBAATA,SAAS,CAATA,SAAS,qBAATA,SAAS,CAATA,SAAS,6BAATA,SAAS,CAATA,SAAS,uBAATA,SAAS,CAATA,SAAS,uBAATA,UAAS,skCAqBrB,MAAO,SAASC,0BAAyBA,CAIvCC,QAAsC,CACtCC,YAA6B,CACuC,CACpE,gBAAkDJ,UAAU,CAC1DG,QAAQ,CACRC,YAAY,CACb,CAHOC,OAAO,aAAPA,OAAO,CAAEC,oBAAoB,aAApBA,oBAAoB,CAAEC,0BAKvC,GAAMC,QAAO,+BAAIC,CAAI,CAAK,CAExB,GAAMC,MAAK,CAAGH,MAAM,CAAGE,CAAC,CAACE,WAAW,CAAGF,CAAC,CAExC,GAAIC,KAAK,CAACE,KAAK,GAAKX,SAAS,CAACY,KAAK,EAAIV,QAAQ,CAACW,OAAO,CAAE,CACvDX,QAAQ,CAACW,OAAO,CAACJ,KAAK,CAAEL,OAAO,CAAC,CAClC,CACA,GAAIK,KAAK,CAACE,KAAK,GAAKX,SAAS,CAACc,MAAM,EAAIZ,QAAQ,CAACa,QAAQ,CAAE,CACzDb,QAAQ,CAACa,QAAQ,CAACN,KAAK,CAAEL,OAAO,CAAC,CACnC,CACA,GACEK,KAAK,CAACO,QAAQ,GAAKhB,SAAS,CAACc,MAAM,EACnCL,KAAK,CAACE,KAAK,GAAKX,SAAS,CAACiB,GAAG,EAC7Bf,QAAQ,CAACgB,KAAK,CACd,CACAhB,QAAQ,CAACgB,KAAK,CAACT,KAAK,CAAEL,OAAO,CAAC,CAChC,CACA,GACEK,KAAK,CAACO,QAAQ,GAAKhB,SAAS,CAACY,KAAK,EAClCH,KAAK,CAACE,KAAK,GAAKX,SAAS,CAACmB,MAAM,EAChCjB,QAAQ,CAACkB,MAAM,CACf,CACAlB,QAAQ,CAACkB,MAAM,CAACX,KAAK,CAAEL,OAAO,CAAC,CACjC,CACA,GACEK,KAAK,CAACO,QAAQ,GAAKhB,SAAS,CAACc,MAAM,EACnCL,KAAK,CAACE,KAAK,GAAKX,SAAS,CAACqB,SAAS,EACnCnB,QAAQ,CAACoB,QAAQ,CACjB,CACApB,QAAQ,CAACoB,QAAQ,CAACb,KAAK,CAAEL,OAAO,CAAC,CACnC,CACA,GACE,CAACK,KAAK,CAACO,QAAQ,GAAKhB,SAAS,CAACY,KAAK,EACjCH,KAAK,CAACO,QAAQ,GAAKhB,SAAS,CAACc,MAAM,GACrCL,KAAK,CAACE,KAAK,GAAKX,SAAS,CAACY,KAAK,EAC/BH,KAAK,CAACE,KAAK,GAAKX,SAAS,CAACc,MAAM,EAChCZ,QAAQ,CAACqB,QAAQ,CACjB,CACArB,QAAQ,CAACqB,QAAQ,CACfd,KAAK,CACLL,OAAO,CACPK,KAAK,CAACE,KAAK,GAAKX,SAAS,CAACqB,SAAS,EAAIZ,KAAK,CAACE,KAAK,GAAKX,SAAS,CAACmB,MAAM,CACxE,CACH,CACF,CAAC,qBA7ESnB,MAAS,mJA6ElB,CAED,GAAIM,MAAM,CAAE,CACV,MAAOC,QAAO,CAChB,CAEA,MAAOT,SAAQ,CACbS,OAAO,CACP,CAAC,6BAA6B,CAAE,uBAAuB,CAAC,CACxDF,oBAAoB,CACrB,CACH","names":["useEvent","useHandler","EventType","useAnimatedGestureHandler","handlers","dependencies","context","doDependenciesDiffer","useWeb","handler","e","event","nativeEvent","state","BEGAN","onStart","ACTIVE","onActive","oldState","END","onEnd","FAILED","onFail","CANCELLED","onCancel","onFinish"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedGestureHandler.ts"],"sourcesContent":["import { MutableRefObject } from 'react';\nimport { Context, WorkletFunction } from '../commonTypes';\nimport WorkletEventHandler from '../WorkletEventHandler';\nimport { DependencyList } from './commonTypes';\nimport { useEvent, useHandler } from './Hooks';\n\ninterface Handler<T, TContext extends Context> extends WorkletFunction {\n  (event: T, context: TContext, isCanceledOrFailed?: boolean): void;\n}\n\nexport interface GestureHandlers<T, TContext extends Context> {\n  [key: string]: Handler<T, TContext> | undefined;\n  onStart?: Handler<T, TContext>;\n  onActive?: Handler<T, TContext>;\n  onEnd?: Handler<T, TContext>;\n  onFail?: Handler<T, TContext>;\n  onCancel?: Handler<T, TContext>;\n  onFinish?: Handler<T, TContext>;\n}\n\nexport enum EventType {\n  UNDETERMINED = 0,\n  FAILED,\n  BEGAN,\n  CANCELLED,\n  ACTIVE,\n  END,\n}\n\nexport interface GestureHandlerStateChangeNativeEvent {\n  handlerTag: number;\n  numberOfPointers: number;\n  state: EventType;\n  oldState: EventType;\n}\n\nexport interface GestureHandlerEvent<T>\n  extends GestureHandlerStateChangeNativeEvent {\n  nativeEvent: T;\n}\n\nexport function useAnimatedGestureHandler<\n  T extends GestureHandlerEvent<T>,\n  TContext extends Context\n>(\n  handlers: GestureHandlers<T, TContext>,\n  dependencies?: DependencyList\n): MutableRefObject<WorkletEventHandler<T> | null> | ((e: T) => void) {\n  const { context, doDependenciesDiffer, useWeb } = useHandler<T, TContext>(\n    handlers,\n    dependencies\n  );\n\n  const handler = (e: T) => {\n    'worklet';\n    const event = useWeb ? e.nativeEvent : e;\n\n    if (event.state === EventType.BEGAN && handlers.onStart) {\n      handlers.onStart(event, context);\n    }\n    if (event.state === EventType.ACTIVE && handlers.onActive) {\n      handlers.onActive(event, context);\n    }\n    if (\n      event.oldState === EventType.ACTIVE &&\n      event.state === EventType.END &&\n      handlers.onEnd\n    ) {\n      handlers.onEnd(event, context);\n    }\n    if (\n      event.oldState === EventType.BEGAN &&\n      event.state === EventType.FAILED &&\n      handlers.onFail\n    ) {\n      handlers.onFail(event, context);\n    }\n    if (\n      event.oldState === EventType.ACTIVE &&\n      event.state === EventType.CANCELLED &&\n      handlers.onCancel\n    ) {\n      handlers.onCancel(event, context);\n    }\n    if (\n      (event.oldState === EventType.BEGAN ||\n        event.oldState === EventType.ACTIVE) &&\n      event.state !== EventType.BEGAN &&\n      event.state !== EventType.ACTIVE &&\n      handlers.onFinish\n    ) {\n      handlers.onFinish(\n        event,\n        context,\n        event.state === EventType.CANCELLED || event.state === EventType.FAILED\n      );\n    }\n  };\n\n  if (useWeb) {\n    return handler;\n  }\n\n  return useEvent<T>(\n    handler,\n    ['onGestureHandlerStateChange', 'onGestureHandlerEvent'],\n    doDependenciesDiffer\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}