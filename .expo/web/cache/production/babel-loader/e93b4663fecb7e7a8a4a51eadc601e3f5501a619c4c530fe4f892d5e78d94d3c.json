{"ast":null,"code":"import React,{createContext,useContext,useMemo}from'react';import useColorScheme from\"react-native-web/dist/exports/useColorScheme\";import{darkTheme,defaultTheme}from\"./defaultTheme\";export var ThemeContext=createContext(defaultTheme);export var useTheme=function useTheme(){return useContext(ThemeContext);};export var ThemeProvider=function ThemeProvider(_ref){var theme=_ref.theme,children=_ref.children;var colorScheme=useColorScheme();var value=useMemo(function(){return theme?theme:colorScheme==='dark'?darkTheme:defaultTheme;},[colorScheme,theme]);return React.createElement(ThemeContext.Provider,{value:value},children);};","map":{"version":3,"mappings":"AAAA,MAAOA,MAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,OAA3C,KAA0D,OAA1D,0EAEA,OAASC,SAAT,CAAoBC,YAApB,sBA+EA,MAAO,IAAMC,aAAY,CAAGL,aAAa,CAAQI,YAAR,CAAlC,CAEP,MAAO,IAAME,SAAQ,CAAG,QAAXA,SAAQ,SAASL,WAAU,CAACI,YAAD,CAAjC,GAEP,MAAO,IAAME,cAA2C,CAAG,QAA9CA,cAA2C,CAAGC,KAAyB,IAAtBC,MAAF,CAAwBD,KAAtBC,KAAF,CAASC,SAAeF,KAAfE,SACnE,GAAMC,YAAW,CAAGC,cAAc,EAAlC,CAEA,GAAMC,MAAK,CAAGX,OAAO,CACnB,iBAAOO,MAAK,CAAGA,KAAH,CAAWE,WAAW,GAAK,MAAhB,CAAyBR,SAAzB,CAAqCC,YADzC,GAEnB,CAACO,WAAD,CAAcF,KAAd,CAFmB,CAArB,CAKA,MAAOV,qBAACM,YAAD,CAAcS,QAAd,EAAuBD,KAAK,CAAEA,KAA9B,EAAsCH,QAAtC,CAAP,CACD,CATM","names":["React","createContext","useContext","useMemo","darkTheme","defaultTheme","ThemeContext","useTheme","ThemeProvider","_ref","theme","children","colorScheme","useColorScheme","value","Provider"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/@react-native-material/core/lib/module/base/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useMemo } from 'react';\nimport { ImageStyle, TextStyle, useColorScheme, ViewStyle } from 'react-native';\nimport { darkTheme, defaultTheme } from './defaultTheme';\n\nexport type ColorScheme = 'light' | 'dark';\n\nexport type Elevation =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport type Elevations = Record<Elevation, ViewStyle | TextStyle | ImageStyle>;\n\nexport type PaletteColorName = 'primary' | 'secondary' | 'background' | 'surface' | 'error' | string;\n\nexport type PaletteColor = { main: string; on: string };\n\nexport type Palette = Record<PaletteColorName, PaletteColor>;\n\nexport type ShapeCategory = 'small' | 'medium' | 'large';\n\nexport interface ShapeBorderRadius {\n  borderTopStartRadius: number;\n  borderTopEndRadius: number;\n  borderBottomStartRadius: number;\n  borderBottomEndRadius: number;\n}\n\nexport type Shapes = Record<ShapeCategory, ShapeBorderRadius>;\n\nexport type TypographyVariant =\n  | 'h1'\n  | 'h2'\n  | 'h3'\n  | 'h4'\n  | 'h5'\n  | 'h6'\n  | 'subtitle1'\n  | 'subtitle2'\n  | 'body1'\n  | 'body2'\n  | 'button'\n  | 'caption'\n  | 'overline';\n\nexport type Typography = Record<TypographyVariant, TextStyle>;\n\nexport interface Theme {\n  colorScheme: ColorScheme;\n  elevations: Elevations;\n  palette: Palette;\n  shapes: Shapes;\n  typography: Typography;\n}\n\nexport interface ThemeProviderProps {\n  theme?: Theme;\n}\n\nexport const ThemeContext = createContext<Theme>(defaultTheme);\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ theme, children }) => {\n  const colorScheme = useColorScheme();\n\n  const value = useMemo(\n    () => (theme ? theme : colorScheme === 'dark' ? darkTheme : defaultTheme),\n    [colorScheme, theme]\n  );\n\n  return <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}