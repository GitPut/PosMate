{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"styleInterpolator\",\"interpolationIndex\",\"current\",\"gesture\",\"next\",\"layout\",\"insets\",\"overlay\",\"overlayEnabled\",\"shadowEnabled\",\"gestureEnabled\",\"gestureDirection\",\"pageOverflowEnabled\",\"headerDarkContent\",\"children\",\"containerStyle\",\"contentStyle\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import Color from'color';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import InteractionManager from\"react-native-web/dist/exports/InteractionManager\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{forModalPresentationIOS}from\"../../TransitionConfigs/CardStyleInterpolators\";import CardAnimationContext from\"../../utils/CardAnimationContext\";import getDistanceForDirection from\"../../utils/getDistanceForDirection\";import getInvertedMultiplier from\"../../utils/getInvertedMultiplier\";import memoize from\"../../utils/memoize\";import{GestureState,PanGestureHandler}from\"../GestureHandler\";import ModalStatusBarManager from\"../ModalStatusBarManager\";import CardSheet from\"./CardSheet\";var GESTURE_VELOCITY_IMPACT=0.3;var TRUE=1;var FALSE=0;var GESTURE_RESPONSE_DISTANCE_HORIZONTAL=50;var GESTURE_RESPONSE_DISTANCE_VERTICAL=135;var useNativeDriver=Platform.OS!=='web';var hasOpacityStyle=function hasOpacityStyle(style){if(style){var flattenedStyle=StyleSheet.flatten(style);return flattenedStyle.opacity!=null;}return false;};var Card=function(_React$Component){_inherits(Card,_React$Component);var _super=_createSuper(Card);function Card(){var _this;_classCallCheck(this,Card);_this=_super.apply(this,arguments);_defineProperty(_assertThisInitialized(_this),\"isCurrentlyMounted\",false);_defineProperty(_assertThisInitialized(_this),\"isClosing\",new Animated.Value(FALSE));_defineProperty(_assertThisInitialized(_this),\"inverted\",new Animated.Value(getInvertedMultiplier(_this.props.gestureDirection)));_defineProperty(_assertThisInitialized(_this),\"layout\",{width:new Animated.Value(_this.props.layout.width),height:new Animated.Value(_this.props.layout.height)});_defineProperty(_assertThisInitialized(_this),\"isSwiping\",new Animated.Value(FALSE));_defineProperty(_assertThisInitialized(_this),\"interactionHandle\",void 0);_defineProperty(_assertThisInitialized(_this),\"pendingGestureCallback\",void 0);_defineProperty(_assertThisInitialized(_this),\"lastToValue\",void 0);_defineProperty(_assertThisInitialized(_this),\"animate\",function(_ref){var closing=_ref.closing,velocity=_ref.velocity;var _this$props=_this.props,gesture=_this$props.gesture,transitionSpec=_this$props.transitionSpec,onOpen=_this$props.onOpen,onClose=_this$props.onClose,onTransition=_this$props.onTransition;var toValue=_this.getAnimateToValue(_objectSpread(_objectSpread({},_this.props),{},{closing:closing}));_this.lastToValue=toValue;_this.isClosing.setValue(closing?TRUE:FALSE);var spec=closing?transitionSpec.close:transitionSpec.open;var animation=spec.animation==='spring'?Animated.spring:Animated.timing;_this.setPointerEventsEnabled(!closing);_this.handleStartInteraction();clearTimeout(_this.pendingGestureCallback);onTransition===null||onTransition===void 0?void 0:onTransition({closing:closing,gesture:velocity!==undefined});animation(gesture,_objectSpread(_objectSpread({},spec.config),{},{velocity:velocity,toValue:toValue,useNativeDriver:useNativeDriver,isInteraction:false})).start(function(_ref2){var finished=_ref2.finished;_this.handleEndInteraction();clearTimeout(_this.pendingGestureCallback);if(finished){if(closing){onClose();}else{onOpen();}if(_this.isCurrentlyMounted){_this.forceUpdate();}}});});_defineProperty(_assertThisInitialized(_this),\"getAnimateToValue\",function(_ref3){var closing=_ref3.closing,layout=_ref3.layout,gestureDirection=_ref3.gestureDirection;if(!closing){return 0;}return getDistanceForDirection(layout,gestureDirection);});_defineProperty(_assertThisInitialized(_this),\"setPointerEventsEnabled\",function(enabled){var _this$ref$current;var pointerEvents=enabled?'box-none':'none';(_this$ref$current=_this.ref.current)===null||_this$ref$current===void 0?void 0:_this$ref$current.setPointerEvents(pointerEvents);});_defineProperty(_assertThisInitialized(_this),\"handleStartInteraction\",function(){if(_this.interactionHandle===undefined){_this.interactionHandle=InteractionManager.createInteractionHandle();}});_defineProperty(_assertThisInitialized(_this),\"handleEndInteraction\",function(){if(_this.interactionHandle!==undefined){InteractionManager.clearInteractionHandle(_this.interactionHandle);_this.interactionHandle=undefined;}});_defineProperty(_assertThisInitialized(_this),\"handleGestureStateChange\",function(_ref4){var nativeEvent=_ref4.nativeEvent;var _this$props2=_this.props,layout=_this$props2.layout,onClose=_this$props2.onClose,onGestureBegin=_this$props2.onGestureBegin,onGestureCanceled=_this$props2.onGestureCanceled,onGestureEnd=_this$props2.onGestureEnd,gestureDirection=_this$props2.gestureDirection,gestureVelocityImpact=_this$props2.gestureVelocityImpact;switch(nativeEvent.state){case GestureState.ACTIVE:_this.isSwiping.setValue(TRUE);_this.handleStartInteraction();onGestureBegin===null||onGestureBegin===void 0?void 0:onGestureBegin();break;case GestureState.CANCELLED:{_this.isSwiping.setValue(FALSE);_this.handleEndInteraction();var velocity=gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?nativeEvent.velocityY:nativeEvent.velocityX;_this.animate({closing:_this.props.closing,velocity:velocity});onGestureCanceled===null||onGestureCanceled===void 0?void 0:onGestureCanceled();break;}case GestureState.END:{_this.isSwiping.setValue(FALSE);var distance;var translation;var _velocity;if(gestureDirection==='vertical'||gestureDirection==='vertical-inverted'){distance=layout.height;translation=nativeEvent.translationY;_velocity=nativeEvent.velocityY;}else{distance=layout.width;translation=nativeEvent.translationX;_velocity=nativeEvent.velocityX;}var closing=(translation+_velocity*gestureVelocityImpact)*getInvertedMultiplier(gestureDirection)>distance/2?_velocity!==0||translation!==0:_this.props.closing;_this.animate({closing:closing,velocity:_velocity});if(closing){_this.pendingGestureCallback=setTimeout(function(){onClose();_this.forceUpdate();},32);}onGestureEnd===null||onGestureEnd===void 0?void 0:onGestureEnd();break;}}});_defineProperty(_assertThisInitialized(_this),\"getInterpolatedStyle\",memoize(function(styleInterpolator,animation){return styleInterpolator(animation);}));_defineProperty(_assertThisInitialized(_this),\"getCardAnimation\",memoize(function(interpolationIndex,current,next,layout,insetTop,insetRight,insetBottom,insetLeft){return{index:interpolationIndex,current:{progress:current},next:next&&{progress:next},closing:_this.isClosing,swiping:_this.isSwiping,inverted:_this.inverted,layouts:{screen:layout},insets:{top:insetTop,right:insetRight,bottom:insetBottom,left:insetLeft}};}));_defineProperty(_assertThisInitialized(_this),\"ref\",React.createRef());return _this;}_createClass(Card,[{key:\"componentDidMount\",value:function componentDidMount(){this.animate({closing:this.props.closing});this.isCurrentlyMounted=true;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this$props3=this.props,layout=_this$props3.layout,gestureDirection=_this$props3.gestureDirection,closing=_this$props3.closing;var width=layout.width,height=layout.height;if(width!==prevProps.layout.width){this.layout.width.setValue(width);}if(height!==prevProps.layout.height){this.layout.height.setValue(height);}if(gestureDirection!==prevProps.gestureDirection){this.inverted.setValue(getInvertedMultiplier(gestureDirection));}var toValue=this.getAnimateToValue(this.props);if(this.getAnimateToValue(prevProps)!==toValue||this.lastToValue!==toValue){this.animate({closing:closing});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.props.gesture.stopAnimation();this.isCurrentlyMounted=false;this.handleEndInteraction();}},{key:\"gestureActivationCriteria\",value:function gestureActivationCriteria(){var _this$props4=this.props,layout=_this$props4.layout,gestureDirection=_this$props4.gestureDirection,gestureResponseDistance=_this$props4.gestureResponseDistance;var enableTrackpadTwoFingerGesture=true;var distance=gestureResponseDistance!==undefined?gestureResponseDistance:gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?GESTURE_RESPONSE_DISTANCE_VERTICAL:GESTURE_RESPONSE_DISTANCE_HORIZONTAL;if(gestureDirection==='vertical'){return{maxDeltaX:15,minOffsetY:5,hitSlop:{bottom:-layout.height+distance},enableTrackpadTwoFingerGesture:enableTrackpadTwoFingerGesture};}else if(gestureDirection==='vertical-inverted'){return{maxDeltaX:15,minOffsetY:-5,hitSlop:{top:-layout.height+distance},enableTrackpadTwoFingerGesture:enableTrackpadTwoFingerGesture};}else{var hitSlop=-layout.width+distance;var invertedMultiplier=getInvertedMultiplier(gestureDirection);if(invertedMultiplier===1){return{minOffsetX:5,maxDeltaY:20,hitSlop:{right:hitSlop},enableTrackpadTwoFingerGesture:enableTrackpadTwoFingerGesture};}else{return{minOffsetX:-5,maxDeltaY:20,hitSlop:{left:hitSlop},enableTrackpadTwoFingerGesture:enableTrackpadTwoFingerGesture};}}}},{key:\"render\",value:function render(){var _this$props5=this.props,styleInterpolator=_this$props5.styleInterpolator,interpolationIndex=_this$props5.interpolationIndex,current=_this$props5.current,gesture=_this$props5.gesture,next=_this$props5.next,layout=_this$props5.layout,insets=_this$props5.insets,overlay=_this$props5.overlay,overlayEnabled=_this$props5.overlayEnabled,shadowEnabled=_this$props5.shadowEnabled,gestureEnabled=_this$props5.gestureEnabled,gestureDirection=_this$props5.gestureDirection,pageOverflowEnabled=_this$props5.pageOverflowEnabled,headerDarkContent=_this$props5.headerDarkContent,children=_this$props5.children,customContainerStyle=_this$props5.containerStyle,contentStyle=_this$props5.contentStyle,rest=_objectWithoutProperties(_this$props5,_excluded);var interpolationProps=this.getCardAnimation(interpolationIndex,current,next,layout,insets.top,insets.right,insets.bottom,insets.left);var interpolatedStyle=this.getInterpolatedStyle(styleInterpolator,interpolationProps);var containerStyle=interpolatedStyle.containerStyle,cardStyle=interpolatedStyle.cardStyle,overlayStyle=interpolatedStyle.overlayStyle,shadowStyle=interpolatedStyle.shadowStyle;var handleGestureEvent=gestureEnabled?Animated.event([{nativeEvent:gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?{translationY:gesture}:{translationX:gesture}}],{useNativeDriver:useNativeDriver}):undefined;var _StyleSheet$flatten=StyleSheet.flatten(contentStyle||{}),backgroundColor=_StyleSheet$flatten.backgroundColor;var isTransparent=typeof backgroundColor==='string'?Color(backgroundColor).alpha()===0:false;return React.createElement(CardAnimationContext.Provider,{value:interpolationProps},Platform.OS==='ios'&&overlayEnabled&&next&&getIsModalPresentation(styleInterpolator)?React.createElement(ModalStatusBarManager,{dark:headerDarkContent,layout:layout,insets:insets,style:cardStyle}):null,React.createElement(Animated.View,{style:{opacity:current},collapsable:false}),React.createElement(View,_extends({pointerEvents:\"box-none\"},rest),overlayEnabled?React.createElement(View,{pointerEvents:\"box-none\",style:StyleSheet.absoluteFill},overlay({style:overlayStyle})):null,React.createElement(Animated.View,{style:[styles.container,containerStyle,customContainerStyle],pointerEvents:\"box-none\"},React.createElement(PanGestureHandler,_extends({enabled:layout.width!==0&&gestureEnabled,onGestureEvent:handleGestureEvent,onHandlerStateChange:this.handleGestureStateChange},this.gestureActivationCriteria()),React.createElement(Animated.View,{needsOffscreenAlphaCompositing:hasOpacityStyle(cardStyle),style:[styles.container,cardStyle]},shadowEnabled&&shadowStyle&&!isTransparent?React.createElement(Animated.View,{style:[styles.shadow,gestureDirection==='horizontal'?[styles.shadowHorizontal,styles.shadowLeft]:gestureDirection==='horizontal-inverted'?[styles.shadowHorizontal,styles.shadowRight]:gestureDirection==='vertical'?[styles.shadowVertical,styles.shadowTop]:[styles.shadowVertical,styles.shadowBottom],{backgroundColor:backgroundColor},shadowStyle],pointerEvents:\"none\"}):null,React.createElement(CardSheet,{ref:this.ref,enabled:pageOverflowEnabled,layout:layout,style:contentStyle},children))))));}}]);return Card;}(React.Component);export{Card as default};_defineProperty(Card,\"defaultProps\",{shadowEnabled:false,gestureEnabled:true,gestureVelocityImpact:GESTURE_VELOCITY_IMPACT,overlay:function overlay(_ref5){var style=_ref5.style;return style?React.createElement(Animated.View,{pointerEvents:\"none\",style:[styles.overlay,style]}):null;}});export var getIsModalPresentation=function getIsModalPresentation(cardStyleInterpolator){return cardStyleInterpolator===forModalPresentationIOS||cardStyleInterpolator.name==='forModalPresentationIOS';};var styles=StyleSheet.create({container:{flex:1},overlay:{flex:1,backgroundColor:'#000'},shadow:{position:'absolute',shadowRadius:5,shadowColor:'#000',shadowOpacity:0.3},shadowHorizontal:{top:0,bottom:0,width:3,shadowOffset:{width:-1,height:1}},shadowLeft:{left:0},shadowRight:{right:0},shadowVertical:{left:0,right:0,height:3,shadowOffset:{width:1,height:-1}},shadowTop:{top:0},shadowBottom:{bottom:0}});","map":{"version":3,"mappings":"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","names":["Color","React","forModalPresentationIOS","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","memoize","GestureState","PanGestureHandler","ModalStatusBarManager","CardSheet","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","Platform","OS","hasOpacityStyle","style","flattenedStyle","StyleSheet","flatten","opacity","Card","Animated","Value","props","gestureDirection","width","layout","height","closing","_ref","velocity","gesture","transitionSpec","onOpen","onClose","onTransition","toValue","getAnimateToValue","lastToValue","isClosing","setValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","finished","_ref2","handleEndInteraction","isCurrentlyMounted","forceUpdate","_ref3","enabled","pointerEvents","ref","current","setPointerEvents","interactionHandle","InteractionManager","createInteractionHandle","clearInteractionHandle","nativeEvent","_ref4","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","ACTIVE","isSwiping","CANCELLED","velocityY","velocityX","animate","END","distance","translation","translationY","translationX","setTimeout","styleInterpolator","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","inverted","layouts","screen","insets","top","right","bottom","left","createRef","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","stopAnimation","gestureActivationCriteria","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","render","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","headerDarkContent","children","customContainerStyle","containerStyle","contentStyle","rest","interpolationProps","getCardAnimation","interpolatedStyle","getInterpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","backgroundColor","isTransparent","alpha","Provider","value","getIsModalPresentation","dark","View","collapsable","absoluteFill","styles","container","onGestureEvent","onHandlerStateChange","handleGestureStateChange","needsOffscreenAlphaCompositing","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","Component","_ref5","cardStyleInterpolator","name","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"sources":["Card.tsx"],"sourcesContent":["import Color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  InteractionManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\nimport type {\n  GestureDirection,\n  Layout,\n  StackCardInterpolationProps,\n  StackCardStyleInterpolator,\n  TransitionSpec,\n} from '../../types';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport {\n  GestureState,\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport ModalStatusBarManager from '../ModalStatusBarManager';\nimport CardSheet, { CardSheetRef } from './CardSheet';\n\ntype Props = ViewProps & {\n  interpolationIndex: number;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation;\n  current: Animated.AnimatedInterpolation;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  headerDarkContent: boolean | undefined;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransition: (props: { closing: boolean; gesture: boolean }) => void;\n  onGestureBegin: () => void;\n  onGestureCanceled: () => void;\n  onGestureEnd: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: number;\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nconst hasOpacityStyle = (style: any) => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n\n  return false;\n};\n\nexport default class Card extends React.Component<Props> {\n  static defaultProps = {\n    shadowEnabled: false,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n    this.isCurrentlyMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    const toValue = this.getAnimateToValue(this.props);\n\n    if (\n      this.getAnimateToValue(prevProps) !== toValue ||\n      this.lastToValue !== toValue\n    ) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.gesture.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n\n  private isCurrentlyMounted = false;\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private lastToValue: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const { gesture, transitionSpec, onOpen, onClose, onTransition } =\n      this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    this.lastToValue = toValue;\n\n    this.isClosing.setValue(closing ? TRUE : FALSE);\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransition?.({ closing, gesture: velocity !== undefined });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.ref.current?.setPointerEvents(pointerEvents);\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.ACTIVE:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({ closing: this.props.closing, velocity });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = setTimeout(() => {\n            onClose();\n\n            // Trigger an update after we dispatch the action to remove the screen\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n            this.forceUpdate();\n          }, 32) as any as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      animation: StackCardInterpolationProps\n    ) => styleInterpolator(animation)\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimation = memoize(\n    (\n      interpolationIndex: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index: interpolationIndex,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n    const enableTrackpadTwoFingerGesture = true;\n\n    const distance =\n      gestureResponseDistance !== undefined\n        ? gestureResponseDistance\n        : gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ? GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      }\n    }\n  }\n\n  private ref = React.createRef<CardSheetRef>();\n\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      headerDarkContent,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolationProps = this.getCardAnimation(\n      interpolationIndex,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      interpolationProps\n    );\n\n    const { containerStyle, cardStyle, overlayStyle, shadowStyle } =\n      interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent =\n      typeof backgroundColor === 'string'\n        ? Color(backgroundColor).alpha() === 0\n        : false;\n\n    return (\n      <CardAnimationContext.Provider value={interpolationProps}>\n        {\n          // StatusBar messes with translucent status bar on Android\n          // So we should only enable it on iOS\n          Platform.OS === 'ios' &&\n          overlayEnabled &&\n          next &&\n          getIsModalPresentation(styleInterpolator) ? (\n            <ModalStatusBarManager\n              dark={headerDarkContent}\n              layout={layout}\n              insets={insets}\n              style={cardStyle}\n            />\n          ) : null\n        }\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View pointerEvents=\"box-none\" {...rest}>\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View\n                needsOffscreenAlphaCompositing={hasOpacityStyle(cardStyle)}\n                style={[styles.container, cardStyle]}\n              >\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\n                        : gestureDirection === 'horizontal-inverted'\n                        ? [styles.shadowHorizontal, styles.shadowRight]\n                        : gestureDirection === 'vertical'\n                        ? [styles.shadowVertical, styles.shadowTop]\n                        : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.ref}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nexport const getIsModalPresentation = (\n  cardStyleInterpolator: StackCardStyleInterpolator\n) => {\n  return (\n    cardStyleInterpolator === forModalPresentationIOS ||\n    // Handle custom modal presentation interpolators as well\n    cardStyleInterpolator.name === 'forModalPresentationIOS'\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowLeft: {\n    left: 0,\n  },\n  shadowRight: {\n    right: 0,\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}