{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var CircularBuffer=function(){function CircularBuffer(size){_classCallCheck(this,CircularBuffer);_defineProperty(this,\"bufferSize\",void 0);_defineProperty(this,\"buffer\",void 0);_defineProperty(this,\"index\",void 0);_defineProperty(this,\"actualSize\",void 0);this.bufferSize=size;this.buffer=new Array(size);this.index=0;this.actualSize=0;}_createClass(CircularBuffer,[{key:\"size\",get:function get(){return this.actualSize;}},{key:\"push\",value:function push(element){this.buffer[this.index]=element;this.index=(this.index+1)%this.bufferSize;this.actualSize=Math.min(this.actualSize+1,this.bufferSize);}},{key:\"get\",value:function get(at){if(this.actualSize===this.bufferSize){var index=(this.index+at)%this.bufferSize;if(index<0){index+=this.bufferSize;}return this.buffer[index];}else{return this.buffer[at];}}},{key:\"clear\",value:function clear(){this.buffer=new Array(this.bufferSize);this.index=0;this.actualSize=0;}}]);return CircularBuffer;}();export{CircularBuffer as default};","map":{"version":3,"mappings":"yTAAqBA,eAAN,YAMbC,wBAAYC,IAAD,CAAe,qMACxB,KAAKC,UAAL,CAAkBD,IAAlB,CACA,KAAKE,MAAL,CAAc,GAAIC,MAAJ,CAAaH,IAAb,CAAd,CACA,KAAKI,KAAL,CAAa,CAAb,CACA,KAAKC,UAAL,CAAkB,CAAlB,CACD,8CAEc,cAAW,CACxB,MAAO,MAAKA,UAAZ,CACD,qBAEMC,cAAKC,OAAD,CAAmB,CAC5B,KAAKL,MAAL,CAAY,KAAKE,KAAjB,EAA0BG,OAA1B,CACA,KAAKH,KAAL,CAAa,CAAC,KAAKA,KAAL,CAAa,CAAd,EAAmB,KAAKH,UAArC,CACA,KAAKI,UAAL,CAAkBG,IAAI,CAACC,GAAL,CAAS,KAAKJ,UAAL,CAAkB,CAA3B,CAA8B,KAAKJ,UAAnC,CAAlB,CACD,oBAEMS,aAAIC,EAAD,CAAgB,CACxB,GAAI,KAAKN,UAAL,GAAoB,KAAKJ,UAA7B,CAAyC,CACvC,GAAIG,MAAK,CAAG,CAAC,KAAKA,KAAL,CAAaO,EAAd,EAAoB,KAAKV,UAArC,CACA,GAAIG,KAAK,CAAG,CAAZ,CAAe,CACbA,KAAK,EAAI,KAAKH,UAAd,CACD,CAED,MAAO,MAAKC,MAAL,CAAYE,KAAZ,CAAP,CACD,CAPD,IAOO,CACL,MAAO,MAAKF,MAAL,CAAYS,EAAZ,CAAP,CACD,CACF,sBAEMC,gBAAc,CACnB,KAAKV,MAAL,CAAc,GAAIC,MAAJ,CAAa,KAAKF,UAAlB,CAAd,CACA,KAAKG,KAAL,CAAa,CAAb,CACA,KAAKC,UAAL,CAAkB,CAAlB,CACD,sCAxCkBP,cAAN","names":["CircularBuffer","constructor","size","bufferSize","buffer","Array","index","actualSize","push","element","Math","min","get","at","clear"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-gesture-handler/lib/module/web/tools/CircularBuffer.ts"],"sourcesContent":["export default class CircularBuffer<T> {\n  private bufferSize: number;\n  private buffer: T[];\n  private index: number;\n  private actualSize: number;\n\n  constructor(size: number) {\n    this.bufferSize = size;\n    this.buffer = new Array<T>(size);\n    this.index = 0;\n    this.actualSize = 0;\n  }\n\n  public get size(): number {\n    return this.actualSize;\n  }\n\n  public push(element: T): void {\n    this.buffer[this.index] = element;\n    this.index = (this.index + 1) % this.bufferSize;\n    this.actualSize = Math.min(this.actualSize + 1, this.bufferSize);\n  }\n\n  public get(at: number): T {\n    if (this.actualSize === this.bufferSize) {\n      let index = (this.index + at) % this.bufferSize;\n      if (index < 0) {\n        index += this.bufferSize;\n      }\n\n      return this.buffer[index];\n    } else {\n      return this.buffer[at];\n    }\n  }\n\n  public clear(): void {\n    this.buffer = new Array<T>(this.bufferSize);\n    this.index = 0;\n    this.actualSize = 0;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}