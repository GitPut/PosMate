{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{configureProps as jsiConfigureProps}from\"./reanimated2/core\";var UI_THREAD_PROPS_WHITELIST={opacity:true,transform:true,backgroundColor:true,borderRightColor:true,borderBottomColor:true,borderColor:true,borderEndColor:true,borderLeftColor:true,borderStartColor:true,borderTopColor:true,shadowOpacity:true,shadowRadius:true,scaleX:true,scaleY:true,translateX:true,translateY:true};var NATIVE_THREAD_PROPS_WHITELIST={borderBottomWidth:true,borderEndWidth:true,borderLeftWidth:true,borderRightWidth:true,borderStartWidth:true,borderTopWidth:true,borderWidth:true,bottom:true,flex:true,flexGrow:true,flexShrink:true,height:true,left:true,margin:true,marginBottom:true,marginEnd:true,marginHorizontal:true,marginLeft:true,marginRight:true,marginStart:true,marginTop:true,marginVertical:true,maxHeight:true,maxWidth:true,minHeight:true,minWidth:true,padding:true,paddingBottom:true,paddingEnd:true,paddingHorizontal:true,paddingLeft:true,paddingRight:true,paddingStart:true,paddingTop:true,paddingVertical:true,right:true,start:true,top:true,width:true,zIndex:true,borderBottomEndRadius:true,borderBottomLeftRadius:true,borderBottomRightRadius:true,borderBottomStartRadius:true,borderRadius:true,borderTopEndRadius:true,borderTopLeftRadius:true,borderTopRightRadius:true,borderTopStartRadius:true,elevation:true,fontSize:true,lineHeight:true,textShadowRadius:true,letterSpacing:true,display:true,backfaceVisibility:true,overflow:true,resizeMode:true,fontStyle:true,fontWeight:true,textAlign:true,textDecorationLine:true,fontFamily:true,textAlignVertical:true,fontVariant:true,textDecorationStyle:true,textTransform:true,writingDirection:true,color:true,tintColor:true,shadowColor:true,placeholderTextColor:true};function configureProps(){jsiConfigureProps(Object.keys(UI_THREAD_PROPS_WHITELIST),Object.keys(NATIVE_THREAD_PROPS_WHITELIST));}export function addWhitelistedNativeProps(props){var oldSize=Object.keys(NATIVE_THREAD_PROPS_WHITELIST).length;NATIVE_THREAD_PROPS_WHITELIST=_objectSpread(_objectSpread({},NATIVE_THREAD_PROPS_WHITELIST),props);if(oldSize!==Object.keys(NATIVE_THREAD_PROPS_WHITELIST).length){configureProps();}}export function addWhitelistedUIProps(props){var oldSize=Object.keys(UI_THREAD_PROPS_WHITELIST).length;UI_THREAD_PROPS_WHITELIST=_objectSpread(_objectSpread({},UI_THREAD_PROPS_WHITELIST),props);if(oldSize!==Object.keys(UI_THREAD_PROPS_WHITELIST).length){configureProps();}}var PROCESSED_VIEW_NAMES=new Set();export function adaptViewConfig(viewConfig){var viewName=viewConfig.uiViewClassName;var props=viewConfig.validAttributes;if(!PROCESSED_VIEW_NAMES.has(viewName)){var propsToAdd={};Object.keys(props).forEach(function(key){if(!(key in NATIVE_THREAD_PROPS_WHITELIST)&&!(key in UI_THREAD_PROPS_WHITELIST)){propsToAdd[key]=true;}});addWhitelistedUIProps(propsToAdd);PROCESSED_VIEW_NAMES.add(viewName);}}configureProps();","map":{"version":3,"mappings":"w0BAAA,OAASA,cAAc,GAAIC,kBAAiB,0BAK5C,GAAIC,0BAAkD,CAAG,CACvDC,OAAO,CAAE,IAAI,CACbC,SAAS,CAAE,IAAI,CAEfC,eAAe,CAAE,IAAI,CACrBC,gBAAgB,CAAE,IAAI,CACtBC,iBAAiB,CAAE,IAAI,CACvBC,WAAW,CAAE,IAAI,CACjBC,cAAc,CAAE,IAAI,CACpBC,eAAe,CAAE,IAAI,CACrBC,gBAAgB,CAAE,IAAI,CACtBC,cAAc,CAAE,IAAI,CAEpBC,aAAa,CAAE,IAAI,CACnBC,YAAY,CAAE,IAAI,CAElBC,MAAM,CAAE,IAAI,CACZC,MAAM,CAAE,IAAI,CACZC,UAAU,CAAE,IAAI,CAChBC,UAAU,CAAE,IACd,CAAC,CAKD,GAAIC,8BAAsD,CAAG,CAC3DC,iBAAiB,CAAE,IAAI,CACvBC,cAAc,CAAE,IAAI,CACpBC,eAAe,CAAE,IAAI,CACrBC,gBAAgB,CAAE,IAAI,CACtBC,gBAAgB,CAAE,IAAI,CACtBC,cAAc,CAAE,IAAI,CACpBC,WAAW,CAAE,IAAI,CACjBC,MAAM,CAAE,IAAI,CACZC,IAAI,CAAE,IAAI,CACVC,QAAQ,CAAE,IAAI,CACdC,UAAU,CAAE,IAAI,CAChBC,MAAM,CAAE,IAAI,CACZC,IAAI,CAAE,IAAI,CACVC,MAAM,CAAE,IAAI,CACZC,YAAY,CAAE,IAAI,CAClBC,SAAS,CAAE,IAAI,CACfC,gBAAgB,CAAE,IAAI,CACtBC,UAAU,CAAE,IAAI,CAChBC,WAAW,CAAE,IAAI,CACjBC,WAAW,CAAE,IAAI,CACjBC,SAAS,CAAE,IAAI,CACfC,cAAc,CAAE,IAAI,CACpBC,SAAS,CAAE,IAAI,CACfC,QAAQ,CAAE,IAAI,CACdC,SAAS,CAAE,IAAI,CACfC,QAAQ,CAAE,IAAI,CACdC,OAAO,CAAE,IAAI,CACbC,aAAa,CAAE,IAAI,CACnBC,UAAU,CAAE,IAAI,CAChBC,iBAAiB,CAAE,IAAI,CACvBC,WAAW,CAAE,IAAI,CACjBC,YAAY,CAAE,IAAI,CAClBC,YAAY,CAAE,IAAI,CAClBC,UAAU,CAAE,IAAI,CAChBC,eAAe,CAAE,IAAI,CACrBC,KAAK,CAAE,IAAI,CACXC,KAAK,CAAE,IAAI,CACXC,GAAG,CAAE,IAAI,CACTC,KAAK,CAAE,IAAI,CACXC,MAAM,CAAE,IAAI,CACZC,qBAAqB,CAAE,IAAI,CAC3BC,sBAAsB,CAAE,IAAI,CAC5BC,uBAAuB,CAAE,IAAI,CAC7BC,uBAAuB,CAAE,IAAI,CAC7BC,YAAY,CAAE,IAAI,CAClBC,kBAAkB,CAAE,IAAI,CACxBC,mBAAmB,CAAE,IAAI,CACzBC,oBAAoB,CAAE,IAAI,CAC1BC,oBAAoB,CAAE,IAAI,CAC1BC,SAAS,CAAE,IAAI,CACfC,QAAQ,CAAE,IAAI,CACdC,UAAU,CAAE,IAAI,CAChBC,gBAAgB,CAAE,IAAI,CACtBC,aAAa,CAAE,IAAI,CAEnBC,OAAO,CAAE,IAAI,CACbC,kBAAkB,CAAE,IAAI,CACxBC,QAAQ,CAAE,IAAI,CACdC,UAAU,CAAE,IAAI,CAChBC,SAAS,CAAE,IAAI,CACfC,UAAU,CAAE,IAAI,CAChBC,SAAS,CAAE,IAAI,CACfC,kBAAkB,CAAE,IAAI,CACxBC,UAAU,CAAE,IAAI,CAChBC,iBAAiB,CAAE,IAAI,CACvBC,WAAW,CAAE,IAAI,CACjBC,mBAAmB,CAAE,IAAI,CACzBC,aAAa,CAAE,IAAI,CACnBC,gBAAgB,CAAE,IAAI,CAEtBC,KAAK,CAAE,IAAI,CACXC,SAAS,CAAE,IAAI,CACfC,WAAW,CAAE,IAAI,CACjBC,oBAAoB,CAAE,IACxB,CAAC,CAED,QAAS3F,eAAcA,EAAS,CAC9BC,iBAAiB,CACf2F,MAAM,CAACC,IAAI,CAAC3F,yBAAyB,CAAC,CACtC0F,MAAM,CAACC,IAAI,CAAC1E,6BAA6B,CAAC,CAC3C,CACH,CAEA,MAAO,SAAS2E,0BAAyBA,CACvCC,KAA8B,CACxB,CACN,GAAMC,QAAO,CAAGJ,MAAM,CAACC,IAAI,CAAC1E,6BAA6B,CAAC,CAAC8E,MAAM,CACjE9E,6BAA6B,gCACxBA,6BAA6B,EAC7B4E,MACJ,CACD,GAAIC,OAAO,GAAKJ,MAAM,CAACC,IAAI,CAAC1E,6BAA6B,CAAC,CAAC8E,MAAM,CAAE,CACjEjG,cAAc,EAAE,CAClB,CACF,CAEA,MAAO,SAASkG,sBAAqBA,CAACH,KAA8B,CAAQ,CAC1E,GAAMC,QAAO,CAAGJ,MAAM,CAACC,IAAI,CAAC3F,yBAAyB,CAAC,CAAC+F,MAAM,CAC7D/F,yBAAyB,gCAAQA,yBAAyB,EAAK6F,MAAO,CACtE,GAAIC,OAAO,GAAKJ,MAAM,CAACC,IAAI,CAAC3F,yBAAyB,CAAC,CAAC+F,MAAM,CAAE,CAC7DjG,cAAc,EAAE,CAClB,CACF,CAEA,GAAMmG,qBAAoB,CAAG,GAAIC,IAAG,EAAE,CAWtC,MAAO,SAASC,gBAAeA,CAACC,UAAsB,CAAQ,CAC5D,GAAMC,SAAQ,CAAGD,UAAU,CAACE,eAAe,CAC3C,GAAMT,MAAK,CAAGO,UAAU,CAACG,eAAe,CAGxC,GAAI,CAACN,oBAAoB,CAACO,GAAG,CAACH,QAAQ,CAAC,CAAE,CACvC,GAAMI,WAAmC,CAAG,CAAC,CAAC,CAC9Cf,MAAM,CAACC,IAAI,CAACE,KAAK,CAAC,CAACa,OAAO,CAAEC,YAAG,CAAK,CAGlC,GACE,EAAEA,GAAG,GAAI1F,8BAA6B,CAAC,EACvC,EAAE0F,GAAG,GAAI3G,0BAAyB,CAAC,CACnC,CACAyG,UAAU,CAACE,GAAG,CAAC,CAAG,IAAI,CACxB,CACF,CAAC,CAAC,CACFX,qBAAqB,CAACS,UAAU,CAAC,CAEjCR,oBAAoB,CAACW,GAAG,CAACP,QAAQ,CAAC,CACpC,CACF,CAEAvG,cAAc,EAAE","names":["configureProps","jsiConfigureProps","UI_THREAD_PROPS_WHITELIST","opacity","transform","backgroundColor","borderRightColor","borderBottomColor","borderColor","borderEndColor","borderLeftColor","borderStartColor","borderTopColor","shadowOpacity","shadowRadius","scaleX","scaleY","translateX","translateY","NATIVE_THREAD_PROPS_WHITELIST","borderBottomWidth","borderEndWidth","borderLeftWidth","borderRightWidth","borderStartWidth","borderTopWidth","borderWidth","bottom","flex","flexGrow","flexShrink","height","left","margin","marginBottom","marginEnd","marginHorizontal","marginLeft","marginRight","marginStart","marginTop","marginVertical","maxHeight","maxWidth","minHeight","minWidth","padding","paddingBottom","paddingEnd","paddingHorizontal","paddingLeft","paddingRight","paddingStart","paddingTop","paddingVertical","right","start","top","width","zIndex","borderBottomEndRadius","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStartRadius","borderRadius","borderTopEndRadius","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","elevation","fontSize","lineHeight","textShadowRadius","letterSpacing","display","backfaceVisibility","overflow","resizeMode","fontStyle","fontWeight","textAlign","textDecorationLine","fontFamily","textAlignVertical","fontVariant","textDecorationStyle","textTransform","writingDirection","color","tintColor","shadowColor","placeholderTextColor","Object","keys","addWhitelistedNativeProps","props","oldSize","length","addWhitelistedUIProps","PROCESSED_VIEW_NAMES","Set","adaptViewConfig","viewConfig","viewName","uiViewClassName","validAttributes","has","propsToAdd","forEach","key","add"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/ConfigHelper.ts"],"sourcesContent":["import { configureProps as jsiConfigureProps } from './reanimated2/core';\n\n/**\n * Styles allowed to be direcly updated in UI thread\n */\nlet UI_THREAD_PROPS_WHITELIST: Record<string, boolean> = {\n  opacity: true,\n  transform: true,\n  /* colors */\n  backgroundColor: true,\n  borderRightColor: true,\n  borderBottomColor: true,\n  borderColor: true,\n  borderEndColor: true,\n  borderLeftColor: true,\n  borderStartColor: true,\n  borderTopColor: true,\n  /* ios styles */\n  shadowOpacity: true,\n  shadowRadius: true,\n  /* legacy android transform properties */\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true,\n};\n\n/**\n * Whitelist of view props that can be updated in native thread via UIManagerModule\n */\nlet NATIVE_THREAD_PROPS_WHITELIST: Record<string, boolean> = {\n  borderBottomWidth: true,\n  borderEndWidth: true,\n  borderLeftWidth: true,\n  borderRightWidth: true,\n  borderStartWidth: true,\n  borderTopWidth: true,\n  borderWidth: true,\n  bottom: true,\n  flex: true,\n  flexGrow: true,\n  flexShrink: true,\n  height: true,\n  left: true,\n  margin: true,\n  marginBottom: true,\n  marginEnd: true,\n  marginHorizontal: true,\n  marginLeft: true,\n  marginRight: true,\n  marginStart: true,\n  marginTop: true,\n  marginVertical: true,\n  maxHeight: true,\n  maxWidth: true,\n  minHeight: true,\n  minWidth: true,\n  padding: true,\n  paddingBottom: true,\n  paddingEnd: true,\n  paddingHorizontal: true,\n  paddingLeft: true,\n  paddingRight: true,\n  paddingStart: true,\n  paddingTop: true,\n  paddingVertical: true,\n  right: true,\n  start: true,\n  top: true,\n  width: true,\n  zIndex: true,\n  borderBottomEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderRadius: true,\n  borderTopEndRadius: true,\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  elevation: true,\n  fontSize: true,\n  lineHeight: true,\n  textShadowRadius: true,\n  letterSpacing: true,\n  /* strings */\n  display: true,\n  backfaceVisibility: true,\n  overflow: true,\n  resizeMode: true,\n  fontStyle: true,\n  fontWeight: true,\n  textAlign: true,\n  textDecorationLine: true,\n  fontFamily: true,\n  textAlignVertical: true,\n  fontVariant: true,\n  textDecorationStyle: true,\n  textTransform: true,\n  writingDirection: true,\n  /* text color */\n  color: true,\n  tintColor: true,\n  shadowColor: true,\n  placeholderTextColor: true,\n};\n\nfunction configureProps(): void {\n  jsiConfigureProps(\n    Object.keys(UI_THREAD_PROPS_WHITELIST),\n    Object.keys(NATIVE_THREAD_PROPS_WHITELIST)\n  );\n}\n\nexport function addWhitelistedNativeProps(\n  props: Record<string, boolean>\n): void {\n  const oldSize = Object.keys(NATIVE_THREAD_PROPS_WHITELIST).length;\n  NATIVE_THREAD_PROPS_WHITELIST = {\n    ...NATIVE_THREAD_PROPS_WHITELIST,\n    ...props,\n  };\n  if (oldSize !== Object.keys(NATIVE_THREAD_PROPS_WHITELIST).length) {\n    configureProps();\n  }\n}\n\nexport function addWhitelistedUIProps(props: Record<string, boolean>): void {\n  const oldSize = Object.keys(UI_THREAD_PROPS_WHITELIST).length;\n  UI_THREAD_PROPS_WHITELIST = { ...UI_THREAD_PROPS_WHITELIST, ...props };\n  if (oldSize !== Object.keys(UI_THREAD_PROPS_WHITELIST).length) {\n    configureProps();\n  }\n}\n\nconst PROCESSED_VIEW_NAMES = new Set();\n\ninterface ViewConfig {\n  uiViewClassName: string;\n  validAttributes: Record<string, unknown>;\n}\n/**\n * updates UI props whitelist for given view host instance\n * this will work just once for every view name\n */\n\nexport function adaptViewConfig(viewConfig: ViewConfig): void {\n  const viewName = viewConfig.uiViewClassName;\n  const props = viewConfig.validAttributes;\n\n  // update whitelist of UI props for this view name only once\n  if (!PROCESSED_VIEW_NAMES.has(viewName)) {\n    const propsToAdd: Record<string, boolean> = {};\n    Object.keys(props).forEach((key) => {\n      // we don't want to add native props as they affect layout\n      // we also skip props which repeat here\n      if (\n        !(key in NATIVE_THREAD_PROPS_WHITELIST) &&\n        !(key in UI_THREAD_PROPS_WHITELIST)\n      ) {\n        propsToAdd[key] = true;\n      }\n    });\n    addWhitelistedUIProps(propsToAdd);\n\n    PROCESSED_VIEW_NAMES.add(viewName);\n  }\n}\n\nconfigureProps();\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}