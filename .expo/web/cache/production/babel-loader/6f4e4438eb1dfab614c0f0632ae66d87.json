{"ast":null,"code":"import React,{useEffect}from'react';import{Route,Switch}from'react-router-dom';import HomeScreen from\"../../pages/authed/pos/HomeScreen\";import DefaultLayout from\"../../pages/authed/main/InitialPage/Sidebar/DefaultLayout\";import{useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AuthRoute=function AuthRoute(props){var location=props.location;var history=useHistory();useEffect(function(){var _location$pathname,_location$pathname2;var isLoginSettings=localStorage.getItem(\"isAuthedBackend\");if(!((_location$pathname=location.pathname)!=null&&_location$pathname.includes(\"/authed\"))||(_location$pathname2=location.pathname)!=null&&_location$pathname2.includes(\"/authed\")&&isLoginSettings===false){history.push(\"/pos\");}},[]);return _jsxs(Switch,{children:[_jsx(Route,{path:\"/pos\",component:HomeScreen}),_jsx(Route,{path:\"/authed\",component:DefaultLayout})]});};export default AuthRoute;","map":{"version":3,"names":["React","useEffect","Route","Switch","HomeScreen","DefaultLayout","useHistory","AuthRoute","props","location","history","isLoginSettings","localStorage","getItem","pathname","includes","push"],"sources":["/Users/peterputros/Desktop/PosMate/navigation/authed/AuthRoute.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport HomeScreen from 'pages/authed/pos/HomeScreen';\nimport DefaultLayout from 'pages/authed/main/InitialPage/Sidebar/DefaultLayout';\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthRoute = (props) => {\n    const { location } = props;\n    const history = useHistory();\n\n    useEffect(() => {\n        const isLoginSettings = localStorage.getItem(\"isAuthedBackend\")\n        if (!location.pathname?.includes(\"/authed\") || location.pathname?.includes(\"/authed\") && isLoginSettings === false) {\n            history.push(\"/pos\");\n        }\n        // else {\n        //     history.push(\"/authed\");\n        // }\n        // //CHANGE BACK ONCE PUBLISHING\n    }, [])\n\n    // useEffect(() => {\n    //     if (\n    //         location.pathname !== '/pos' &&\n    //         location.pathname !== '/authed'\n    //     ) {\n    //         history.push(\"/pos\");\n    //     }\n    // }\n    //     , [location.pathname])\n\n\n\n    return (\n        <Switch>\n            {/* <Route path=\"/signIn\" component={SignIn} />\n                <Route path=\"/forgetPassword\" component={ForgetPassword} />\n                <Route path=\"/signUp\" component={SignUp} /> */}\n            <Route path=\"/pos\" component={HomeScreen} />\n            <Route path=\"/authed\" component={DefaultLayout} />\n\n            {/* <Route path=\"/error-404\" component={Error404} />\n                <Route path=\"/error-500\" component={Error500} />\n                <Route path=\"/pos\" component={Pos} /> */}\n\n        </Switch>\n    )\n}\n\nexport default AuthRoute"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CAChD,MAAOC,WAAU,yCACjB,MAAOC,cAAa,iEACpB,OAASC,UAAU,KAAQ,kBAAkB,CAAC,wFAE9C,GAAMC,UAAS,CAAG,QAAZA,UAAS,CAAIC,KAAK,CAAK,CACzB,GAAQC,SAAQ,CAAKD,KAAK,CAAlBC,QAAQ,CAChB,GAAMC,QAAO,CAAGJ,UAAU,EAAE,CAE5BL,SAAS,CAAC,UAAM,4CACZ,GAAMU,gBAAe,CAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAC/D,GAAI,sBAACJ,QAAQ,CAACK,QAAQ,SAAjB,mBAAmBC,QAAQ,CAAC,SAAS,CAAC,GAAI,qBAAAN,QAAQ,CAACK,QAAQ,SAAjB,oBAAmBC,QAAQ,CAAC,SAAS,CAAC,EAAIJ,eAAe,GAAK,KAAK,CAAE,CAChHD,OAAO,CAACM,IAAI,CAAC,MAAM,CAAC,CACxB,CAKJ,CAAC,CAAE,EAAE,CAAC,CAcN,MACI,OAAC,MAAM,YAIH,KAAC,KAAK,EAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAEZ,UAAW,EAAG,CAC5C,KAAC,KAAK,EAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAEC,aAAc,EAAG,GAM7C,CAEjB,CAAC,CAED,cAAeE,UAAS"},"metadata":{},"sourceType":"module"}