{"ast":null,"code":"import React,{useMemo}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import chroma from'chroma-js';import{useSurfaceColorValue}from\"./hooks/use-surface-color\";import{useTheme}from\"./base/ThemeContext\";var DialogContent=function DialogContent(_ref){var children=_ref.children;var theme=useTheme();var backgroundColor=useSurfaceColorValue(24);var scale=useMemo(function(){return chroma.scale([backgroundColor,theme.palette.surface.on]);},[backgroundColor,theme.palette.surface.on]);return React.createElement(View,{style:[styles.container,{borderColor:scale(0.08).hex()}]},children);};var styles=StyleSheet.create({container:{paddingHorizontal:24,paddingBottom:20}});export default DialogContent;","map":{"version":3,"mappings":"AAAA,MAAOA,MAAP,EAAgBC,OAAhB,KAA+B,OAA/B,uHAEA,MAAOC,OAAP,KAAmB,WAAnB,CACA,OAASC,oBAAT,iCACA,OAASC,QAAT,2BAIA,GAAMC,cAA2C,CAAG,QAA9CA,cAA2C,CAAGC,KAAkB,IAAfC,UAAeD,KAAfC,SACrD,GAAMC,MAAK,CAAGJ,QAAQ,EAAtB,CAEA,GAAMK,gBAAe,CAAGN,oBAAoB,CAAC,EAAD,CAA5C,CAEA,GAAMO,MAAK,CAAGT,OAAO,CACnB,iBAAMC,OAAM,CAACQ,KAAP,CAAa,CAACD,eAAD,CAAkBD,KAAK,CAACG,OAAN,CAAcC,OAAd,CAAsBC,EAAxC,CAAb,CADa,GAEnB,CAACJ,eAAD,CAAkBD,KAAK,CAACG,OAAN,CAAcC,OAAd,CAAsBC,EAAxC,CAFmB,CAArB,CAKA,MAAOb,qBAACc,IAAD,EAAMC,KAAK,CAAE,CAACC,MAAM,CAACC,SAAR,CAAmB,CAAEC,WAAW,CAAER,KAAK,CAAC,IAAD,CAAL,CAAYS,GAAZ,EAAf,CAAnB,CAAb,EAAsEZ,QAAtE,CAAP,CACD,CAXD,CAaA,GAAMS,OAAM,CAAGI,UAAU,CAACC,MAAX,CAAkB,CAC/BJ,SAAS,CAAE,CACTK,iBAAiB,CAAE,EADV,CAETC,aAAa,CAAE,EAFN,CADoB,CAAlB,CAAf,CASA,cAAelB,cAAf","names":["React","useMemo","chroma","useSurfaceColorValue","useTheme","DialogContent","_ref","children","theme","backgroundColor","scale","palette","surface","on","View","style","styles","container","borderColor","hex","StyleSheet","create","paddingHorizontal","paddingBottom"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/@react-native-material/core/lib/module/DialogContent.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport chroma from 'chroma-js';\nimport { useSurfaceColorValue } from './hooks/use-surface-color';\nimport { useTheme } from './base/ThemeContext';\n\nexport interface DialogContentProps {}\n\nconst DialogContent: React.FC<DialogContentProps> = ({ children }) => {\n  const theme = useTheme();\n\n  const backgroundColor = useSurfaceColorValue(24);\n\n  const scale = useMemo(\n    () => chroma.scale([backgroundColor, theme.palette.surface.on]),\n    [backgroundColor, theme.palette.surface.on]\n  );\n\n  return <View style={[styles.container, { borderColor: scale(0.08).hex() }]}>{children}</View>;\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 24,\n    paddingBottom: 20,\n    // borderTopWidth: 1,\n    // borderBottomWidth: 1,\n  },\n});\n\nexport default DialogContent;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}