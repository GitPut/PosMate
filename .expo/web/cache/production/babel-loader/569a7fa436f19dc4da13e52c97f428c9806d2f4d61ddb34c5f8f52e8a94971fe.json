{"ast":null,"code":"import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"./Text\";import Divider from\"./Divider\";import{useStyles}from\"./hooks/use-styles\";var Banner=function Banner(_ref){var text=_ref.text,illustration=_ref.illustration,buttons=_ref.buttons,style=_ref.style,contentContainerStyle=_ref.contentContainerStyle,illustrationContainerStyle=_ref.illustrationContainerStyle,textContainerStyle=_ref.textContainerStyle,textStyle=_ref.textStyle,actionsContainerStyle=_ref.actionsContainerStyle;var styles=useStyles(function(_ref2){var palette=_ref2.palette;return{container:{backgroundColor:palette.surface.main},contentContainer:{flexDirection:'row',marginTop:24,marginBottom:4,marginHorizontal:16},illustrationContainer:{marginEnd:16},textContainer:{flex:1},text:{color:palette.surface.on},actionsContainer:{flexDirection:'row',justifyContent:'flex-end',alignItems:'center',margin:8}};},[]);return React.createElement(View,{style:[styles.container,style]},React.createElement(View,{style:[styles.contentContainer,contentContainerStyle]},illustration&&React.createElement(View,{style:[styles.illustrationContainer,illustrationContainerStyle]},typeof illustration==='function'?illustration({size:40}):illustration),React.createElement(View,{style:[styles.textContainer,textContainerStyle]},typeof text==='string'?React.createElement(Text,{variant:\"body2\",style:[styles.text,textStyle]},text):text)),React.createElement(View,{style:[styles.actionsContainer,actionsContainerStyle]},Array.isArray(buttons)?buttons.map(function(button,index){return React.createElement(React.Fragment,{key:index},button,index!==buttons.length-1&&React.createElement(View,{style:{width:8}}));}):buttons),React.createElement(Divider,null));};export default Banner;","map":{"version":3,"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,sDAEA,MAAOC,KAAP,cACA,MAAOC,QAAP,iBACA,OAASC,SAAT,0BAsBA,GAAMC,OAA6B,CAAG,QAAhCA,OAA6B,CAAGC,KAUhC,IATJC,KADqC,CAUjCD,KATJC,IADqC,CAErCC,YAFqC,CAUjCF,KARJE,YAFqC,CAGrCC,OAHqC,CAUjCH,KAPJG,OAHqC,CAIrCC,KAJqC,CAUjCJ,KANJI,KAJqC,CAKrCC,qBALqC,CAUjCL,KALJK,qBALqC,CAMrCC,0BANqC,CAUjCN,KAJJM,0BANqC,CAOrCC,kBAPqC,CAUjCP,KAHJO,kBAPqC,CAQrCC,SARqC,CAUjCR,KAFJQ,SARqC,CASrCC,sBACIT,KADJS,sBAEA,GAAMC,OAAM,CAAGZ,SAAS,CACtB,mBAAGa,SAAHC,MAAGD,QAAH,MAAkB,CAChBE,SAAS,CAAE,CACTC,eAAe,CAAEH,OAAO,CAACI,OAAR,CAAgBC,IADxB,CADK,CAIhBC,gBAAgB,CAAE,CAChBC,aAAa,CAAE,KADC,CAEhBC,SAAS,CAAE,EAFK,CAGhBC,YAAY,CAAE,CAHE,CAIhBC,gBAAgB,CAAE,EAJF,CAJF,CAUhBC,qBAAqB,CAAE,CACrBC,SAAS,CAAE,EADU,CAVP,CAahBC,aAAa,CAAE,CACbC,IAAI,CAAE,CADO,CAbC,CAgBhBxB,IAAI,CAAE,CACJyB,KAAK,CAAEf,OAAO,CAACI,OAAR,CAAgBY,EADnB,CAhBU,CAmBhBC,gBAAgB,CAAE,CAChBV,aAAa,CAAE,KADC,CAEhBW,cAAc,CAAE,UAFA,CAGhBC,UAAU,CAAE,QAHI,CAIhBC,MAAM,CAAE,CAJQ,CAnBF,CAAlB,EADsB,CA2BtB,EA3BsB,CAAxB,CA8BA,MACEpC,qBAACqC,IAAD,EAAM5B,KAAK,CAAE,CAACM,MAAM,CAACG,SAAR,CAAmBT,KAAnB,CAAb,EACET,oBAACqC,IAAD,EAAM5B,KAAK,CAAE,CAACM,MAAM,CAACO,gBAAR,CAA0BZ,qBAA1B,CAAb,EACGH,YAAY,EACXP,oBAACqC,IAAD,EAAM5B,KAAK,CAAE,CAACM,MAAM,CAACY,qBAAR,CAA+BhB,0BAA/B,CAAb,EACG,MAAOJ,aAAP,GAAwB,UAAxB,CAAqCA,YAAY,CAAC,CAAE+B,IAAI,CAAE,EAAR,CAAD,CAAjD,CAAkE/B,YADrE,CAFJ,CAMEP,oBAACqC,IAAD,EAAM5B,KAAK,CAAE,CAACM,MAAM,CAACc,aAAR,CAAuBjB,kBAAvB,CAAb,EACG,MAAON,KAAP,GAAgB,QAAhB,CACCN,oBAACC,IAAD,EAAMsC,OAAO,CAAC,OAAd,CAAsB9B,KAAK,CAAE,CAACM,MAAM,CAACT,IAAR,CAAcO,SAAd,CAA7B,EACGP,IADH,CADD,CAKCA,IANJ,CANF,CADF,CAiBEN,oBAACqC,IAAD,EAAM5B,KAAK,CAAE,CAACM,MAAM,CAACkB,gBAAR,CAA0BnB,qBAA1B,CAAb,EACG0B,KAAK,CAACC,OAAN,CAAcjC,OAAd,EACGA,OAAO,CAACkC,GAAR,CAAY,SAACC,MAAD,CAASC,KAAT,QACV5C,qBAACA,KAAD,CAAO6C,QAAP,EAAgBC,GAAG,CAAEF,KAArB,EACGD,MADH,CAEGC,KAAK,GAAKpC,OAAO,CAACuC,MAAR,CAAiB,CAA3B,EAAgC/C,oBAACqC,IAAD,EAAM5B,KAAK,CAAE,CAAEuC,KAAK,CAAE,CAAT,CAAb,EAFnC,CADF,GADH,CAOGxC,OARN,CAjBF,CA2BER,oBAACE,OAAD,MA3BF,CADF,CA+BD,CAxED,CA0EA,cAAeE,OAAf","names":["React","Text","Divider","useStyles","Banner","_ref","text","illustration","buttons","style","contentContainerStyle","illustrationContainerStyle","textContainerStyle","textStyle","actionsContainerStyle","styles","palette","_ref2","container","backgroundColor","surface","main","contentContainer","flexDirection","marginTop","marginBottom","marginHorizontal","illustrationContainer","marginEnd","textContainer","flex","color","on","actionsContainer","justifyContent","alignItems","margin","View","size","variant","Array","isArray","map","button","index","Fragment","key","length","width"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/@react-native-material/core/lib/module/Banner.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleProp, TextStyle, View, ViewStyle } from 'react-native';\nimport Text from './Text';\nimport Divider from './Divider';\nimport { useStyles } from './hooks/use-styles';\n\nexport interface BannerProps {\n  text: string | React.ReactElement | null;\n\n  illustration?: React.ReactElement | ((props: { size: number }) => React.ReactElement | null) | null;\n\n  buttons: React.ReactElement | React.ReactElement[] | null;\n\n  style?: StyleProp<ViewStyle>;\n\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  illustrationContainerStyle?: StyleProp<ViewStyle>;\n\n  textContainerStyle?: StyleProp<ViewStyle>;\n\n  textStyle?: StyleProp<TextStyle>;\n\n  actionsContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst Banner: React.FC<BannerProps> = ({\n  text,\n  illustration,\n  buttons,\n  style,\n  contentContainerStyle,\n  illustrationContainerStyle,\n  textContainerStyle,\n  textStyle,\n  actionsContainerStyle,\n}) => {\n  const styles = useStyles(\n    ({ palette }) => ({\n      container: {\n        backgroundColor: palette.surface.main,\n      },\n      contentContainer: {\n        flexDirection: 'row',\n        marginTop: 24,\n        marginBottom: 4,\n        marginHorizontal: 16,\n      },\n      illustrationContainer: {\n        marginEnd: 16,\n      },\n      textContainer: {\n        flex: 1,\n      },\n      text: {\n        color: palette.surface.on,\n      },\n      actionsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        margin: 8,\n      },\n    }),\n    []\n  );\n\n  return (\n    <View style={[styles.container, style]}>\n      <View style={[styles.contentContainer, contentContainerStyle]}>\n        {illustration && (\n          <View style={[styles.illustrationContainer, illustrationContainerStyle]}>\n            {typeof illustration === 'function' ? illustration({ size: 40 }) : illustration}\n          </View>\n        )}\n        <View style={[styles.textContainer, textContainerStyle]}>\n          {typeof text === 'string' ? (\n            <Text variant=\"body2\" style={[styles.text, textStyle]}>\n              {text}\n            </Text>\n          ) : (\n            text\n          )}\n        </View>\n      </View>\n      <View style={[styles.actionsContainer, actionsContainerStyle]}>\n        {Array.isArray(buttons)\n          ? buttons.map((button, index) => (\n              <React.Fragment key={index}>\n                {button}\n                {index !== buttons.length - 1 && <View style={{ width: 8 }} />}\n              </React.Fragment>\n            ))\n          : buttons}\n      </View>\n      <Divider />\n    </View>\n  );\n};\n\nexport default Banner;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}