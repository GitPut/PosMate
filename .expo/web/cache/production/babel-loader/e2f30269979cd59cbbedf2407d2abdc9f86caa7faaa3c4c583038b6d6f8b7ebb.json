{"ast":null,"code":"import{isColor,convertToRGBA,rgbaArrayToRGBAColor,toGammaSpace,toLinearSpace}from\"../Colors\";import NativeReanimatedModule from\"../NativeReanimated\";var IN_STYLE_UPDATER=false;export function initialUpdaterRun(updater){IN_STYLE_UPDATER=true;var result=updater();IN_STYLE_UPDATER=false;return result;}var _worklet_10298453511432_init_data={code:\"function recognizePrefixSuffix(value){if(typeof value==='string'){var _match$;const match=value.match(/([A-Za-z]*)(-?\\\\d*\\\\.?\\\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);if(!match){throw Error(\\\"Couldn't parse animation value. Check if there isn't any typo.\\\");}const prefix=match[1];const suffix=match[4];const number=match[2]+((_match$=match[3])!==null&&_match$!==void 0?_match$:'');return{prefix:prefix,suffix:suffix,strippedValue:parseFloat(number)};}else{return{strippedValue:value};}}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/animation/util.js\"};var recognizePrefixSuffix=function(){var _f=function _f(value){if(typeof value==='string'){var _match$;var match=value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);if(!match){throw Error(\"Couldn't parse animation value. Check if there isn't any typo.\");}var prefix=match[1];var suffix=match[4];var number=match[2]+((_match$=match[3])!=null?_match$:'');return{prefix:prefix,suffix:suffix,strippedValue:parseFloat(number)};}else{return{strippedValue:value};}};_f._closure={};_f.__initData=_worklet_10298453511432_init_data;_f.__workletHash=10298453511432;return _f;}();var _worklet_5025297271636_init_data={code:\"function decorateAnimation(animation){const{recognizePrefixSuffix,isColor,toLinearSpace,convertToRGBA,rgbaArrayToRGBAColor,toGammaSpace}=this._closure;if(animation.isHigherOrder){return;}const baseOnStart=animation.onStart;const baseOnFrame=animation.onFrame;const animationCopy=Object.assign({},animation);delete animationCopy.callback;const prefNumberSuffOnStart=function(animation,value,timestamp,previousAnimation){var _animation$__prefix,_animation$__suffix;const{prefix:prefix,suffix:suffix,strippedValue:strippedValue}=recognizePrefixSuffix(value);animation.__prefix=prefix;animation.__suffix=suffix;animation.strippedCurrent=strippedValue;const{strippedValue:strippedToValue}=recognizePrefixSuffix(animation.toValue);animation.current=strippedValue;animation.startValue=strippedValue;animation.toValue=strippedToValue;if(previousAnimation&&previousAnimation!==animation){const{prefix:paPrefix,suffix:paSuffix,strippedValue:paStrippedValue}=recognizePrefixSuffix(previousAnimation.current);previousAnimation.current=paStrippedValue;previousAnimation.__prefix=paPrefix;previousAnimation.__suffix=paSuffix;}baseOnStart(animation,strippedValue,timestamp,previousAnimation);animation.current=((_animation$__prefix=animation.__prefix)!==null&&_animation$__prefix!==void 0?_animation$__prefix:'')+animation.current+((_animation$__suffix=animation.__suffix)!==null&&_animation$__suffix!==void 0?_animation$__suffix:'');if(previousAnimation&&previousAnimation!==animation){var _previousAnimation$__,_previousAnimation$__2;previousAnimation.current=((_previousAnimation$__=previousAnimation.__prefix)!==null&&_previousAnimation$__!==void 0?_previousAnimation$__:'')+previousAnimation.current+((_previousAnimation$__2=previousAnimation.__suffix)!==null&&_previousAnimation$__2!==void 0?_previousAnimation$__2:'');}};const prefNumberSuffOnFrame=function(animation,timestamp){var _animation$__prefix2,_animation$__suffix2;animation.current=animation.strippedCurrent;const res=baseOnFrame(animation,timestamp);animation.strippedCurrent=animation.current;animation.current=((_animation$__prefix2=animation.__prefix)!==null&&_animation$__prefix2!==void 0?_animation$__prefix2:'')+animation.current+((_animation$__suffix2=animation.__suffix)!==null&&_animation$__suffix2!==void 0?_animation$__suffix2:'');return res;};const tab=['R','G','B','A'];const colorOnStart=function(animation,value,timestamp,previousAnimation){let RGBAValue;let RGBACurrent;let RGBAToValue;const res=[];if(isColor(value)){RGBACurrent=toLinearSpace(convertToRGBA(animation.current));RGBAValue=toLinearSpace(convertToRGBA(value));if(animation.toValue){RGBAToValue=toLinearSpace(convertToRGBA(animation.toValue));}}tab.forEach(function(i,index){animation[i]=Object.assign({},animationCopy);animation[i].current=RGBACurrent[index];animation[i].toValue=RGBAToValue?RGBAToValue[index]:undefined;animation[i].onStart(animation[i],RGBAValue[index],timestamp,previousAnimation?previousAnimation[i]:undefined);res.push(animation[i].current);});animation.current=rgbaArrayToRGBAColor(toGammaSpace(res));};const colorOnFrame=function(animation,timestamp){const RGBACurrent=toLinearSpace(convertToRGBA(animation.current));const res=[];let finished=true;tab.forEach(function(i,index){animation[i].current=RGBACurrent[index];finished&=animation[i].onFrame(animation[i],timestamp);res.push(animation[i].current);});animation.current=rgbaArrayToRGBAColor(toGammaSpace(res));return finished;};const arrayOnStart=function(animation,value,timestamp,previousAnimation){value.forEach(function(v,i){animation[i]=Object.assign({},animationCopy);animation[i].current=v;animation[i].toValue=animation.toValue[i];animation[i].onStart(animation[i],v,timestamp,previousAnimation?previousAnimation[i]:undefined);});animation.current=value;};const arrayOnFrame=function(animation,timestamp){let finished=true;animation.current.forEach(function(v,i){finished&=animation[i].onFrame(animation[i],timestamp);animation.current[i]=animation[i].current;});return finished;};const objectOnStart=function(animation,value,timestamp,previousAnimation){for(const key in value){animation[key]=Object.assign({},animationCopy);animation[key].onStart=animation.onStart;animation[key].current=value[key];animation[key].toValue=animation.toValue[key];animation[key].onStart(animation[key],value[key],timestamp,previousAnimation?previousAnimation[key]:undefined);}animation.current=value;};const objectOnFrame=function(animation,timestamp){let finished=true;const newObject={};for(const key in animation.current){finished&=animation[key].onFrame(animation[key],timestamp);newObject[key]=animation[key].current;}animation.current=newObject;return finished;};animation.onStart=function(animation,value,timestamp,previousAnimation){if(isColor(value)){colorOnStart(animation,value,timestamp,previousAnimation);animation.onFrame=colorOnFrame;return;}else if(Array.isArray(value)){arrayOnStart(animation,value,timestamp,previousAnimation);animation.onFrame=arrayOnFrame;return;}else if(typeof value==='string'){prefNumberSuffOnStart(animation,value,timestamp,previousAnimation);animation.onFrame=prefNumberSuffOnFrame;return;}else if(typeof value==='object'&&value!==null){objectOnStart(animation,value,timestamp,previousAnimation);animation.onFrame=objectOnFrame;return;}baseOnStart(animation,value,timestamp,previousAnimation);};}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/animation/util.js\"};var decorateAnimation=function(){var _f=function _f(animation){if(animation.isHigherOrder){return;}var baseOnStart=animation.onStart;var baseOnFrame=animation.onFrame;var animationCopy=Object.assign({},animation);delete animationCopy.callback;var prefNumberSuffOnStart=function prefNumberSuffOnStart(animation,value,timestamp,previousAnimation){var _animation$__prefix,_animation$__suffix;var _recognizePrefixSuffi=recognizePrefixSuffix(value),prefix=_recognizePrefixSuffi.prefix,suffix=_recognizePrefixSuffi.suffix,strippedValue=_recognizePrefixSuffi.strippedValue;animation.__prefix=prefix;animation.__suffix=suffix;animation.strippedCurrent=strippedValue;var _recognizePrefixSuffi2=recognizePrefixSuffix(animation.toValue),strippedToValue=_recognizePrefixSuffi2.strippedValue;animation.current=strippedValue;animation.startValue=strippedValue;animation.toValue=strippedToValue;if(previousAnimation&&previousAnimation!==animation){var _recognizePrefixSuffi3=recognizePrefixSuffix(previousAnimation.current),paPrefix=_recognizePrefixSuffi3.prefix,paSuffix=_recognizePrefixSuffi3.suffix,paStrippedValue=_recognizePrefixSuffi3.strippedValue;previousAnimation.current=paStrippedValue;previousAnimation.__prefix=paPrefix;previousAnimation.__suffix=paSuffix;}baseOnStart(animation,strippedValue,timestamp,previousAnimation);animation.current=((_animation$__prefix=animation.__prefix)!=null?_animation$__prefix:'')+animation.current+((_animation$__suffix=animation.__suffix)!=null?_animation$__suffix:'');if(previousAnimation&&previousAnimation!==animation){var _previousAnimation$__,_previousAnimation$__2;previousAnimation.current=((_previousAnimation$__=previousAnimation.__prefix)!=null?_previousAnimation$__:'')+previousAnimation.current+((_previousAnimation$__2=previousAnimation.__suffix)!=null?_previousAnimation$__2:'');}};var prefNumberSuffOnFrame=function prefNumberSuffOnFrame(animation,timestamp){var _animation$__prefix2,_animation$__suffix2;animation.current=animation.strippedCurrent;var res=baseOnFrame(animation,timestamp);animation.strippedCurrent=animation.current;animation.current=((_animation$__prefix2=animation.__prefix)!=null?_animation$__prefix2:'')+animation.current+((_animation$__suffix2=animation.__suffix)!=null?_animation$__suffix2:'');return res;};var tab=['R','G','B','A'];var colorOnStart=function colorOnStart(animation,value,timestamp,previousAnimation){var RGBAValue;var RGBACurrent;var RGBAToValue;var res=[];if(isColor(value)){RGBACurrent=toLinearSpace(convertToRGBA(animation.current));RGBAValue=toLinearSpace(convertToRGBA(value));if(animation.toValue){RGBAToValue=toLinearSpace(convertToRGBA(animation.toValue));}}tab.forEach(function(i,index){animation[i]=Object.assign({},animationCopy);animation[i].current=RGBACurrent[index];animation[i].toValue=RGBAToValue?RGBAToValue[index]:undefined;animation[i].onStart(animation[i],RGBAValue[index],timestamp,previousAnimation?previousAnimation[i]:undefined);res.push(animation[i].current);});animation.current=rgbaArrayToRGBAColor(toGammaSpace(res));};var colorOnFrame=function colorOnFrame(animation,timestamp){var RGBACurrent=toLinearSpace(convertToRGBA(animation.current));var res=[];var finished=true;tab.forEach(function(i,index){animation[i].current=RGBACurrent[index];finished&=animation[i].onFrame(animation[i],timestamp);res.push(animation[i].current);});animation.current=rgbaArrayToRGBAColor(toGammaSpace(res));return finished;};var arrayOnStart=function arrayOnStart(animation,value,timestamp,previousAnimation){value.forEach(function(v,i){animation[i]=Object.assign({},animationCopy);animation[i].current=v;animation[i].toValue=animation.toValue[i];animation[i].onStart(animation[i],v,timestamp,previousAnimation?previousAnimation[i]:undefined);});animation.current=value;};var arrayOnFrame=function arrayOnFrame(animation,timestamp){var finished=true;animation.current.forEach(function(v,i){finished&=animation[i].onFrame(animation[i],timestamp);animation.current[i]=animation[i].current;});return finished;};var objectOnStart=function objectOnStart(animation,value,timestamp,previousAnimation){for(var key in value){animation[key]=Object.assign({},animationCopy);animation[key].onStart=animation.onStart;animation[key].current=value[key];animation[key].toValue=animation.toValue[key];animation[key].onStart(animation[key],value[key],timestamp,previousAnimation?previousAnimation[key]:undefined);}animation.current=value;};var objectOnFrame=function objectOnFrame(animation,timestamp){var finished=true;var newObject={};for(var key in animation.current){finished&=animation[key].onFrame(animation[key],timestamp);newObject[key]=animation[key].current;}animation.current=newObject;return finished;};animation.onStart=function(animation,value,timestamp,previousAnimation){if(isColor(value)){colorOnStart(animation,value,timestamp,previousAnimation);animation.onFrame=colorOnFrame;return;}else if(Array.isArray(value)){arrayOnStart(animation,value,timestamp,previousAnimation);animation.onFrame=arrayOnFrame;return;}else if(typeof value==='string'){prefNumberSuffOnStart(animation,value,timestamp,previousAnimation);animation.onFrame=prefNumberSuffOnFrame;return;}else if(typeof value==='object'&&value!==null){objectOnStart(animation,value,timestamp,previousAnimation);animation.onFrame=objectOnFrame;return;}baseOnStart(animation,value,timestamp,previousAnimation);};};_f._closure={recognizePrefixSuffix:recognizePrefixSuffix,isColor:isColor,toLinearSpace:toLinearSpace,convertToRGBA:convertToRGBA,rgbaArrayToRGBAColor:rgbaArrayToRGBAColor,toGammaSpace:toGammaSpace};_f.__initData=_worklet_5025297271636_init_data;_f.__workletHash=5025297271636;return _f;}();var IS_NATIVE=NativeReanimatedModule.native;var _worklet_5669416685110_init_data={code:\"function defineAnimation(starting,factory){const{IN_STYLE_UPDATER,decorateAnimation,IS_NATIVE}=this._closure;if(IN_STYLE_UPDATER){return starting;}const create=function(){'worklet';const animation=factory();decorateAnimation(animation);return animation;};if(_WORKLET||!IS_NATIVE){return create();}return create;}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/animation/util.js\"};var _worklet_10032225637057_init_data={code:\"function anonymous(){const{factory,decorateAnimation}=this._closure;const animation=factory();decorateAnimation(animation);return animation;}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/animation/util.js\"};export var defineAnimation=function(){var _f=function _f(starting,factory){if(IN_STYLE_UPDATER){return starting;}var create=function(){var _f=function _f(){var animation=factory();decorateAnimation(animation);return animation;};_f._closure={factory:factory,decorateAnimation:decorateAnimation};_f.__initData=_worklet_10032225637057_init_data;_f.__workletHash=10032225637057;return _f;}();if(_WORKLET||!IS_NATIVE){return create();}return create;};_f._closure={IN_STYLE_UPDATER:IN_STYLE_UPDATER,decorateAnimation:decorateAnimation,IS_NATIVE:IS_NATIVE};_f.__initData=_worklet_5669416685110_init_data;_f.__workletHash=5669416685110;return _f;}();var _worklet_15056882569526_init_data={code:\"function cancelAnimation(sharedValue){sharedValue.value=sharedValue.value;}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/animation/util.js\"};export var cancelAnimation=function(){var _f=function _f(sharedValue){sharedValue.value=sharedValue.value;};_f._closure={};_f.__initData=_worklet_15056882569526_init_data;_f.__workletHash=15056882569526;return _f;}();var _worklet_2698183829986_init_data={code:\"function withStartValue(startValue,animation){const{defineAnimation}=this._closure;return defineAnimation(startValue,function(){'worklet';if(!_WORKLET&&typeof animation==='function'){animation=animation();}animation.current=startValue;return animation;});}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/animation/util.js\"};var _worklet_16537752614189_init_data={code:\"function anonymous(){const{animation,startValue}=this._closure;if(!_WORKLET&&typeof animation==='function'){animation=animation();}animation.current=startValue;return animation;}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/animation/util.js\"};export var withStartValue=function(){var _f=function _f(startValue,animation){return defineAnimation(startValue,function(){var _f=function _f(){if(!_WORKLET&&typeof animation==='function'){animation=animation();}animation.current=startValue;return animation;};_f._closure={animation:animation,startValue:startValue};_f.__initData=_worklet_16537752614189_init_data;_f.__workletHash=16537752614189;return _f;}());};_f._closure={defineAnimation:defineAnimation};_f.__initData=_worklet_2698183829986_init_data;_f.__workletHash=2698183829986;return _f;}();","map":{"version":3,"mappings":"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","names":["isColor","convertToRGBA","rgbaArrayToRGBAColor","toGammaSpace","toLinearSpace","NativeReanimatedModule","IN_STYLE_UPDATER","initialUpdaterRun","updater","result","recognizePrefixSuffix","value","match","Error","prefix","suffix","number","strippedValue","parseFloat","decorateAnimation","animation","isHigherOrder","baseOnStart","onStart","baseOnFrame","onFrame","animationCopy","Object","assign","callback","prefNumberSuffOnStart","timestamp","previousAnimation","__prefix","__suffix","strippedCurrent","toValue","strippedToValue","current","startValue","paPrefix","paSuffix","paStrippedValue","prefNumberSuffOnFrame","res","tab","colorOnStart","RGBAValue","RGBACurrent","RGBAToValue","forEach","i","index","undefined","push","colorOnFrame","finished","arrayOnStart","v","arrayOnFrame","objectOnStart","key","objectOnFrame","newObject","Array","isArray","IS_NATIVE","native","defineAnimation","starting","factory","create","_WORKLET","cancelAnimation","sharedValue","withStartValue"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/animation/util.ts"],"sourcesContent":["import {\n  HigherOrderAnimation,\n  NextAnimation,\n  DelayAnimation,\n  RepeatAnimation,\n  SequenceAnimation,\n  StyleLayoutAnimation,\n} from './commonTypes';\n/* global _WORKLET */\nimport {\n  ParsedColorArray,\n  isColor,\n  convertToRGBA,\n  rgbaArrayToRGBAColor,\n  toGammaSpace,\n  toLinearSpace,\n} from '../Colors';\n\nimport {\n  AnimatedStyle,\n  SharedValue,\n  AnimatableValue,\n  Animation,\n  AnimationObject,\n  Timestamp,\n  AnimatableValueObject,\n} from '../commonTypes';\nimport NativeReanimatedModule from '../NativeReanimated';\n\nlet IN_STYLE_UPDATER = false;\n\nexport type UserUpdater = () => AnimatedStyle;\n\nexport function initialUpdaterRun<T>(updater: () => T): T {\n  IN_STYLE_UPDATER = true;\n  const result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\n\ninterface RecognizedPrefixSuffix {\n  prefix?: string;\n  suffix?: string;\n  strippedValue: number;\n}\n\nfunction recognizePrefixSuffix(value: string | number): RecognizedPrefixSuffix {\n  'worklet';\n  if (typeof value === 'string') {\n    const match = value.match(\n      /([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/\n    );\n    if (!match) {\n      throw Error(\n        \"Couldn't parse animation value. Check if there isn't any typo.\"\n      );\n    }\n    const prefix = match[1];\n    const suffix = match[4];\n    // number with scientific notation\n    const number = match[2] + (match[3] ?? '');\n    return { prefix, suffix, strippedValue: parseFloat(number) };\n  } else {\n    return { strippedValue: value };\n  }\n}\n\nfunction decorateAnimation<T extends AnimationObject | StyleLayoutAnimation>(\n  animation: T\n): void {\n  'worklet';\n  if ((animation as HigherOrderAnimation).isHigherOrder) {\n    return;\n  }\n\n  const baseOnStart = (animation as Animation<AnimationObject>).onStart;\n  const baseOnFrame = (animation as Animation<AnimationObject>).onFrame;\n  const animationCopy = Object.assign({}, animation);\n  delete animationCopy.callback;\n\n  const prefNumberSuffOnStart = (\n    animation: Animation<AnimationObject>,\n    value: string | number,\n    timestamp: number,\n    previousAnimation: Animation<AnimationObject>\n  ) => {\n    // recognize prefix, suffix, and updates stripped value on animation start\n    const { prefix, suffix, strippedValue } = recognizePrefixSuffix(value);\n    animation.__prefix = prefix;\n    animation.__suffix = suffix;\n    animation.strippedCurrent = strippedValue;\n    const { strippedValue: strippedToValue } = recognizePrefixSuffix(\n      animation.toValue as string | number\n    );\n    animation.current = strippedValue;\n    animation.startValue = strippedValue;\n    animation.toValue = strippedToValue;\n    if (previousAnimation && previousAnimation !== animation) {\n      const {\n        prefix: paPrefix,\n        suffix: paSuffix,\n        strippedValue: paStrippedValue,\n      } = recognizePrefixSuffix(previousAnimation.current as string | number);\n      previousAnimation.current = paStrippedValue;\n      previousAnimation.__prefix = paPrefix;\n      previousAnimation.__suffix = paSuffix;\n    }\n\n    baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n\n    animation.current =\n      (animation.__prefix ?? '') +\n      animation.current +\n      (animation.__suffix ?? '');\n\n    if (previousAnimation && previousAnimation !== animation) {\n      previousAnimation.current =\n        (previousAnimation.__prefix ?? '') +\n        previousAnimation.current +\n        (previousAnimation.__suffix ?? '');\n    }\n  };\n  const prefNumberSuffOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: number\n  ) => {\n    animation.current = animation.strippedCurrent;\n    const res = baseOnFrame(animation, timestamp);\n    animation.strippedCurrent = animation.current;\n    animation.current =\n      (animation.__prefix ?? '') +\n      animation.current +\n      (animation.__suffix ?? '');\n    return res;\n  };\n\n  const tab = ['R', 'G', 'B', 'A'];\n  const colorOnStart = (\n    animation: Animation<AnimationObject>,\n    value: string | number,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ): void => {\n    let RGBAValue: ParsedColorArray;\n    let RGBACurrent: ParsedColorArray;\n    let RGBAToValue: ParsedColorArray;\n    const res: Array<number> = [];\n    if (isColor(value)) {\n      RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n      RGBAValue = toLinearSpace(convertToRGBA(value));\n      if (animation.toValue) {\n        RGBAToValue = toLinearSpace(convertToRGBA(animation.toValue));\n      }\n    }\n    tab.forEach((i, index) => {\n      animation[i] = Object.assign({}, animationCopy);\n      animation[i].current = RGBACurrent[index];\n      animation[i].toValue = RGBAToValue ? RGBAToValue[index] : undefined;\n      animation[i].onStart(\n        animation[i],\n        RGBAValue[index],\n        timestamp,\n        previousAnimation ? previousAnimation[i] : undefined\n      );\n      res.push(animation[i].current);\n    });\n\n    animation.current = rgbaArrayToRGBAColor(\n      toGammaSpace(res as ParsedColorArray)\n    );\n  };\n\n  const colorOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: Timestamp\n  ): boolean => {\n    const RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n    const res: Array<number> = [];\n    let finished = true;\n    tab.forEach((i, index) => {\n      animation[i].current = RGBACurrent[index];\n      // @ts-ignore: disable-next-line\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      res.push(animation[i].current);\n    });\n\n    animation.current = rgbaArrayToRGBAColor(\n      toGammaSpace(res as ParsedColorArray)\n    );\n    return finished;\n  };\n\n  const arrayOnStart = (\n    animation: Animation<AnimationObject>,\n    value: Array<number>,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ): void => {\n    value.forEach((v, i) => {\n      animation[i] = Object.assign({}, animationCopy);\n      animation[i].current = v;\n      animation[i].toValue = (animation.toValue as Array<number>)[i];\n      animation[i].onStart(\n        animation[i],\n        v,\n        timestamp,\n        previousAnimation ? previousAnimation[i] : undefined\n      );\n    });\n\n    animation.current = value;\n  };\n\n  const arrayOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: Timestamp\n  ): boolean => {\n    let finished = true;\n    (animation.current as Array<number>).forEach((v, i) => {\n      // @ts-ignore: disable-next-line\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      (animation.current as Array<number>)[i] = animation[i].current;\n    });\n\n    return finished;\n  };\n\n  const objectOnStart = (\n    animation: Animation<AnimationObject>,\n    value: AnimatableValueObject,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ): void => {\n    for (const key in value) {\n      animation[key] = Object.assign({}, animationCopy);\n      animation[key].onStart = animation.onStart;\n\n      animation[key].current = value[key];\n      animation[key].toValue = (animation.toValue as AnimatableValueObject)[\n        key\n      ];\n      animation[key].onStart(\n        animation[key],\n        value[key],\n        timestamp,\n        previousAnimation ? previousAnimation[key] : undefined\n      );\n    }\n    animation.current = value;\n  };\n\n  const objectOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: Timestamp\n  ): boolean => {\n    let finished = true;\n    const newObject: AnimatableValueObject = {};\n    for (const key in animation.current as AnimatableValueObject) {\n      // @ts-ignore: disable-next-line\n      finished &= animation[key].onFrame(animation[key], timestamp);\n      newObject[key] = animation[key].current;\n    }\n    animation.current = newObject;\n    return finished;\n  };\n\n  animation.onStart = (\n    animation: Animation<AnimationObject>,\n    value: number,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ) => {\n    if (isColor(value)) {\n      colorOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = colorOnFrame;\n      return;\n    } else if (Array.isArray(value)) {\n      arrayOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = arrayOnFrame;\n      return;\n    } else if (typeof value === 'string') {\n      prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = prefNumberSuffOnFrame;\n      return;\n    } else if (typeof value === 'object' && value !== null) {\n      objectOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = objectOnFrame;\n      return;\n    }\n    baseOnStart(animation, value, timestamp, previousAnimation);\n  };\n}\n\ntype AnimationToDecoration<T extends AnimationObject | StyleLayoutAnimation> =\n  T extends StyleLayoutAnimation\n    ? Record<string, unknown>\n    : T extends DelayAnimation\n    ? NextAnimation<DelayAnimation>\n    : T extends RepeatAnimation\n    ? NextAnimation<RepeatAnimation>\n    : T extends SequenceAnimation\n    ? NextAnimation<SequenceAnimation>\n    : AnimatableValue | T;\n\nconst IS_NATIVE = NativeReanimatedModule.native;\n\nexport function defineAnimation<\n  T extends AnimationObject | StyleLayoutAnimation\n>(starting: AnimationToDecoration<T>, factory: () => T): T {\n  'worklet';\n  if (IN_STYLE_UPDATER) {\n    return starting as T;\n  }\n  const create = () => {\n    'worklet';\n    const animation = factory();\n    decorateAnimation<T>(animation);\n    return animation;\n  };\n\n  if (_WORKLET || !IS_NATIVE) {\n    return create();\n  }\n  // @ts-ignore: eslint-disable-line\n  return create;\n}\n\nexport function cancelAnimation<T>(sharedValue: SharedValue<T>): void {\n  'worklet';\n  // setting the current value cancels the animation if one is currently running\n  sharedValue.value = sharedValue.value; // eslint-disable-line no-self-assign\n}\n\n// TODO it should work only if there was no animation before.\nexport function withStartValue(\n  startValue: AnimatableValue,\n  animation: NextAnimation<AnimationObject>\n): Animation<AnimationObject> {\n  'worklet';\n  return defineAnimation(startValue, () => {\n    'worklet';\n    if (!_WORKLET && typeof animation === 'function') {\n      animation = animation();\n    }\n    (animation as Animation<AnimationObject>).current = startValue;\n    return animation as Animation<AnimationObject>;\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}