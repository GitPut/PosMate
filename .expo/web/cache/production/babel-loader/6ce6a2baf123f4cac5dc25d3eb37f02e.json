{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{useMemo}from'react';import{useSpacingFunc}from'react-native-flex-layout';import{useTheme}from\"../base/ThemeContext\";import{useWindowSizeClass}from\"../base/WindowSizeClassContext\";import{useWindowSize}from\"./use-window-size\";import{useSurfaceScale}from\"./use-surface-scale\";import{useSurfaceColor}from\"./use-surface-color\";export var useStyles=function useStyles(factory,deps){var theme=useTheme();var surfaceScale=useSurfaceScale();var surfaceColor=useSurfaceColor();var windowSizeClass=useWindowSizeClass();var windowSize=useWindowSize();var spacing=useSpacingFunc();return useMemo(function(){return factory(_objectSpread(_objectSpread({},theme),{},{surfaceScale:surfaceScale,surfaceColor:surfaceColor,windowSizeClass:windowSizeClass,windowSize:windowSize,spacing:spacing}));},[factory,theme,surfaceScale,surfaceColor,windowSizeClass,windowSize,spacing,deps]);};","map":{"version":3,"mappings":"w0BAAA,OAAyBA,OAAzB,KAAwC,OAAxC,CAGA,OAAsBC,cAAtB,KAA4C,0BAA5C,CACA,OAAgBC,QAAhB,4BACA,OAASC,kBAAT,sCACA,OAASC,aAAT,yBACA,OAASC,eAAT,2BACA,OAASC,eAAT,2BAIA,MAAO,IAAMC,UAAS,CAAG,QAAZA,UAAS,CACpBC,OADuB,CAUvBC,IAVuB,CAWjB,CACN,GAAMC,MAAK,CAAGR,QAAQ,EAAtB,CACA,GAAMS,aAAY,CAAGN,eAAe,EAApC,CACA,GAAMO,aAAY,CAAGN,eAAe,EAApC,CACA,GAAMO,gBAAe,CAAGV,kBAAkB,EAA1C,CACA,GAAMW,WAAU,CAAGV,aAAa,EAAhC,CACA,GAAMW,QAAO,CAAGd,cAAc,EAA9B,CAEA,MAAOD,QAAO,CACZ,iBAAMQ,QAAO,gCAAME,KAAL,MAAYC,YAAZ,CAAYA,YAAZ,CAA0BC,YAA1B,CAA0BA,YAA1B,CAAwCC,eAAxC,CAAwCA,eAAxC,CAAyDC,UAAzD,CAAyDA,UAAzD,CAAqEC,kBADvE,GAEZ,CAACP,OAAD,CAAUE,KAAV,CAAiBC,YAAjB,CAA+BC,YAA/B,CAA6CC,eAA7C,CAA8DC,UAA9D,CAA0EC,OAA1E,CAAmFN,IAAnF,CAFY,CAAd,CAID,CAvBM","names":["useMemo","useSpacingFunc","useTheme","useWindowSizeClass","useWindowSize","useSurfaceScale","useSurfaceColor","useStyles","factory","deps","theme","surfaceScale","surfaceColor","windowSizeClass","windowSize","spacing"],"sources":["use-styles.ts"],"sourcesContent":["import { DependencyList, useMemo } from 'react';\nimport type { ImageStyle, TextStyle, ViewStyle } from 'react-native';\nimport type chroma from 'chroma-js';\nimport { SpacingFunc, useSpacingFunc } from 'react-native-flex-layout';\nimport { Theme, useTheme } from '../base/ThemeContext';\nimport { useWindowSizeClass, WindowSizeClass } from '../base/WindowSizeClassContext';\nimport { useWindowSize, WindowSize } from './use-window-size';\nimport { useSurfaceScale } from './use-surface-scale';\nimport { useSurfaceColor } from './use-surface-color';\n\ntype NamedStyles<T> = { [P in keyof T]: ViewStyle | TextStyle | ImageStyle };\n\nexport const useStyles = <T extends NamedStyles<T>>(\n  factory: (\n    utils: Theme & {\n      surfaceScale: chroma.Scale<chroma.Color>;\n      surfaceColor: chroma.Scale<chroma.Color>;\n      windowSizeClass: WindowSizeClass;\n      windowSize: WindowSize;\n      spacing: SpacingFunc;\n    }\n  ) => T,\n  deps?: DependencyList | undefined\n): T => {\n  const theme = useTheme();\n  const surfaceScale = useSurfaceScale();\n  const surfaceColor = useSurfaceColor();\n  const windowSizeClass = useWindowSizeClass();\n  const windowSize = useWindowSize();\n  const spacing = useSpacingFunc();\n\n  return useMemo(\n    () => factory({ ...theme, surfaceScale, surfaceColor, windowSizeClass, windowSize, spacing }),\n    [factory, theme, surfaceScale, surfaceColor, windowSizeClass, windowSize, spacing, deps]\n  );\n};\n"]},"metadata":{},"sourceType":"module"}