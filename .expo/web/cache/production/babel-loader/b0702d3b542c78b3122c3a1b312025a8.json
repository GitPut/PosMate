{"ast":null,"code":"import React from'react';import View from\"react-native-web/dist/exports/View\";import chroma from'chroma-js';import{useTheme}from\"./base/ThemeContext\";var Divider=function Divider(_ref){var color=_ref.color,inset=_ref.inset,leadingInset=_ref.leadingInset,trailingInset=_ref.trailingInset,style=_ref.style;var _useTheme=useTheme(),palette=_useTheme.palette;return React.createElement(View,{style:[{height:1,backgroundColor:color!==null&&color!==void 0?color:chroma(palette.surface.on).alpha(0.08).hex(),marginStart:inset!==null&&inset!==void 0?inset:leadingInset,marginEnd:inset!==null&&inset!==void 0?inset:trailingInset},style]});};export default Divider;","map":{"version":3,"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,sDAEA,MAAOC,OAAP,KAAmB,WAAnB,CACA,OAASC,QAAT,2BAcA,GAAMC,QAA+B,CAAG,QAAlCA,QAA+B,CAAGC,KAA0D,IAAvDC,MAAF,CAAyDD,KAAvDC,KAAF,CAASC,KAAT,CAAyDF,KAAhDE,KAAT,CAAgBC,YAAhB,CAAyDH,KAAzCG,YAAhB,CAA8BC,aAA9B,CAAyDJ,KAA3BI,aAA9B,CAA6CC,MAAYL,KAAZK,MACpF,cAAoBP,QAAQ,EAA5B,CAAQQ,0BACR,MACEV,qBAACW,IAAD,EACEF,KAAK,CAAE,CACL,CACEG,MAAM,CAAE,CADV,CAEEC,eAAe,CAAER,KAAF,SAAEA,KAAF,UAAEA,KAAF,CAAWJ,MAAM,CAACS,OAAO,CAACI,OAAR,CAAgBC,EAAjB,CAAN,CAA2BC,KAA3B,CAAiC,IAAjC,EAAuCC,GAAvC,EAF5B,CAGEC,WAAW,CAAEZ,KAAF,SAAEA,KAAF,UAAEA,KAAF,CAAWC,YAHxB,CAIEY,SAAS,CAAEb,KAAF,SAAEA,KAAF,UAAEA,KAAF,CAAWE,aAJtB,CADK,CAOLC,KAPK,CADT,EADF,CAaD,CAfD,CAiBA,cAAeN,QAAf","names":["React","chroma","useTheme","Divider","_ref","color","inset","leadingInset","trailingInset","style","palette","View","height","backgroundColor","surface","on","alpha","hex","marginStart","marginEnd"],"sources":["Divider.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport chroma from 'chroma-js';\nimport { useTheme } from './base/ThemeContext';\n\nexport interface DividerProps {\n  color?: string | undefined;\n\n  inset?: number | undefined;\n\n  leadingInset?: number | undefined;\n\n  trailingInset?: number | undefined;\n\n  style?: StyleProp<ViewStyle> | undefined;\n}\n\nconst Divider: React.FC<DividerProps> = ({ color, inset, leadingInset, trailingInset, style }) => {\n  const { palette } = useTheme();\n  return (\n    <View\n      style={[\n        {\n          height: 1,\n          backgroundColor: color ?? chroma(palette.surface.on).alpha(0.08).hex(),\n          marginStart: inset ?? leadingInset,\n          marginEnd: inset ?? trailingInset,\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nexport default Divider;\n"]},"metadata":{},"sourceType":"module"}