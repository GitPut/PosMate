{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import React,{useState}from\"react\";import{Button,Text}from\"@react-native-material/core\";import{transListState}from\"../../state/state\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ViewTransactions=function ViewTransactions(){var res={transList:transListState.use()};var _useState=useState([]),_useState2=_slicedToArray(_useState,2),transList=_useState2[0],setTransList=_useState2[1];var today=new Date();var _useState3=useState({todaysReceiptValue:0,todaysReceipts:0}),_useState4=_slicedToArray(_useState3,2),todaysDetails=_useState4[0],setTodaysDetails=_useState4[1];return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:{textAlign:\"center\",margin:25},children:\"List Of Transactions\"}),_jsxs(View,{style:{flexDirection:\"row\",width:\"100%\",alignItems:\"center\",justifyContent:\"center\"},children:[_jsxs(Text,{style:{textAlign:\"center\",margin:25},children:[\"Todays Total Price: \",todaysDetails.todaysReceiptValue]}),_jsx(Button,{style:{height:40,alignItems:\"center\",justifyContent:\"center\"},title:\"Print Todays Receipts\"}),_jsxs(Text,{style:{textAlign:\"center\",margin:25},children:[\"Todays Total Receipts: \",todaysDetails.todaysReceipts]})]}),_jsx(View,{style:styles.contentContainer})]});};export default ViewTransactions;var styles=StyleSheet.create({container:{backgroundColor:\"white\",flex:1,height:\"100%\"},contentContainer:{flex:1,flexDirection:\"row\",flexWrap:\"wrap\",justifyContent:\"space-between\",paddingLeft:50,paddingRight:50,paddingBottom:50,height:\"100%\",width:\"100%\",alignItems:\"center\"}});","map":{"version":3,"names":["React","useState","Button","Text","transListState","ViewTransactions","res","transList","use","setTransList","today","Date","todaysReceiptValue","todaysReceipts","todaysDetails","setTodaysDetails","styles","container","textAlign","margin","flexDirection","width","alignItems","justifyContent","height","contentContainer","StyleSheet","create","backgroundColor","flex","flexWrap","paddingLeft","paddingRight","paddingBottom"],"sources":["/Users/peterputros/Desktop/PosMate-1/screens/authed/ViewTransactions.tsx"],"sourcesContent":["import { ScrollView, StyleSheet, View } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Text } from \"@react-native-material/core\";\nimport { transListState } from \"state/state\";\n\nconst ViewTransactions = () => {\n  const res = { transList: transListState.use() };\n  const [transList, setTransList] = useState([]);\n  const today = new Date();\n  const [todaysDetails, setTodaysDetails] = useState({\n    todaysReceiptValue: 0,\n    todaysReceipts: 0,\n  });\n\n  // useEffect(() => {\n  //   // GetTrans();\n  //   const reversed = res.transList.reverse();\n  //   setTransList(reversed);\n  //   const todaysReceiptValue = res.transList.reduce((accumulator, current) => {\n  //     const date = new Date(current.date);\n  //     if (date.toLocaleDateString() === today.toLocaleDateString()) {\n  //       return accumulator + parseFloat(current.total);\n  //     } else {\n  //       return accumulator;\n  //     }\n  //   }, 0);\n  //   const todaysReceipts = res.transList.reduce((accumulator, current) => {\n  //     const date = new Date(current.date);\n  //     if (date.toLocaleDateString() === today.toLocaleDateString()) {\n  //       return accumulator + 1;\n  //     } else {\n  //       return accumulator;\n  //     }\n  //   }, 0);\n  //   setTodaysDetails({\n  //     todaysReceiptValue: todaysReceiptValue.toFixed(2),\n  //     todaysReceipts: todaysReceipts,\n  //   });\n  // }, []);\n\n  // const PrintTodaysTotal = () => {\n  //   const qz = require(\"qz-tray\");\n\n  //   let data = [\n  //     \"\\x1B\" + \"\\x40\", // init\n  //     \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n  //     \"Tomas Pizza\",\n  //     \"\\x0A\",\n  //     \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n  //     \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n  //     \"(519) 650-0409\" + \"\\x0A\", // text and line break\n  //     today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n  //     \"\\x0A\",\n  //     \"\\x0A\",\n  //     \"\\x0A\",\n  //     \"\\x0A\",\n  //     \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n  //     \"\\x0A\" + \"\\x0A\",\n  //     \"Number Of Receipts: \" + todaysDetails.todaysReceipts + \"\\x0A\" + \"\\x0A\",\n  //     \"Sub-Total: \" +\n  //       \"$\" +\n  //       (todaysDetails.todaysReceiptValue / 1.13).toFixed(2) +\n  //       \"\\x0A\" +\n  //       \"\\x0A\",\n  //     \"Tax: \" +\n  //       \"$\" +\n  //       ((todaysDetails.todaysReceiptValue / 1.13) * 0.13).toFixed(2) +\n  //       \"\\x0A\" +\n  //       \"\\x0A\",\n  //     \"Total Including (13% Tax): \" +\n  //       \"$\" +\n  //       todaysDetails.todaysReceiptValue +\n  //       \"\\x0A\" +\n  //       \"\\x0A\",\n  //     \"------------------------------------------\" + \"\\x0A\",\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x1D\" + \"\\x56\" + \"\\x00\",\n  //     \"\\x1D\" + \"\\x56\" + \"\\x30\",\n  //   ];\n\n  //   qz.websocket\n  //     .connect()\n  //     .then(function () {\n  //       let config = qz.configs.create(\"jZebra\");\n  //       return qz.print(config, data);\n  //     })\n  //     .then(qz.websocket.disconnect)\n  //     .catch(function (err) {\n  //       console.error(err);\n  //     });\n  // };\n\n  // const Print = () => {\n  //   const qz = require(\"qz-tray\");\n\n  //   const todaysReceiptsList = transList.filter(\n  //     (i) =>\n  //       new Date(i.date).toLocaleDateString() === today.toLocaleDateString()\n  //   );\n\n  //   let data = [];\n\n  //   todaysReceiptsList.forEach((element) => {\n  //     let total = 0;\n  //     data.push(\n  //       \"\\x1B\" + \"\\x40\", // init\n  //       \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n  //       \"Tomas Pizza\",\n  //       \"\\x0A\",\n  //       \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n  //       \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n  //       \"(519) 650-0409\" + \"\\x0A\", // text and line break\n  //       today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n  //       \"\\x0A\",\n  //       `Transaction # ${element.transNum}` + \"\\x0A\",\n  //       \"\\x0A\",\n  //       \"\\x0A\",\n  //       \"\\x0A\",\n  //       \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n  //     );\n\n  //     element.cart?.map((cartItem) => {\n  //       total += cartItem.price;\n  //       data.push(`Name: ${cartItem.name}`);\n  //       data.push(\"\\x0A\");\n  //       data.push(`Quantity: ${cartItem.quantity}`);\n  //       data.push(\"\\x0A\");\n  //       data.push(`Price: $${cartItem.price}`);\n\n  //       if (cartItem.options) {\n  //         cartItem.options?.map((option) => {\n  //           data.push(option);\n  //           data.push(\"\\x0A\");\n  //         });\n  //       } else {\n  //         data.push(\"\\x0A\" + \"\\x0A\");\n  //       }\n  //     });\n\n  //     data.push(\n  //       \"\\x0A\",\n  //       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n  //       \"\\x0A\" + \"\\x0A\",\n  //       \"Payment Method: \" + element.method + \"\\x0A\" + \"\\x0A\",\n  //       \"Total Including (13% Tax): \" + \"$\" + element.total + \"\\x0A\" + \"\\x0A\",\n  //       \"------------------------------------------\" + \"\\x0A\",\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\" // line break\n  //     );\n  //   });\n\n  //   data.push(\"\\x1D\" + \"\\x56\" + \"\\x00\", \"\\x1D\" + \"\\x56\" + \"\\x30\");\n\n  //   qz.websocket\n  //     .connect()\n  //     .then(function () {\n  //       let config = qz.configs.create(\"jZebra\");\n  //       return qz.print(config, data);\n  //     })\n  //     .then(qz.websocket.disconnect)\n  //     .catch(function (err) {\n  //       console.error(err);\n  //     });\n  // };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ textAlign: \"center\", margin: 25 }}>\n        List Of Transactions\n      </Text>\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Price: {todaysDetails.todaysReceiptValue}\n        </Text>\n        <Button\n          style={{ height: 40, alignItems: \"center\", justifyContent: \"center\" }}\n          title=\"Print Todays Receipts\"\n          // onPress={PrintTodaysTotal}\n        />\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Receipts: {todaysDetails.todaysReceipts}\n        </Text>\n      </View>\n      <View style={styles.contentContainer}>\n        {/* {transList &&\n          transList?.map((element, index) => {\n            const date = new Date(element.date);\n            // if (date.toLocaleDateString() === today.toLocaleDateString()) {\n            //   setTodaysDetails((prevState) => prevState + 1);\n            // }\n            return (\n              <View\n                style={{ backgroundColor: \"grey\", padding: 30, margin: 10 }}\n                key={index}\n              >\n                {element.cart?.map((cartItem, index) => (\n                  <View style={{ marginBottom: 20 }} key={index}>\n                    <Text>Name: {cartItem.name}</Text>\n                    <Text>Quantity: {cartItem.quantity}</Text>\n                    <Text>Price: {cartItem.price}</Text>\n                    <Text>Date: {date.toLocaleDateString()}</Text>\n                    {cartItem.options &&\n                      cartItem.options?.map((option) => <Text>{option}</Text>)}\n                  </View>\n                ))}\n                <Button\n                  title=\"Print\"\n                  onPress={() => {\n                    let total = 0;\n                    const qz = require(\"qz-tray\");\n                    const today = new Date();\n\n                    let data = [\n                      \"\\x1B\" + \"\\x40\", // init\n                      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                      \"Tomas Pizza\",\n                      \"\\x0A\",\n                      \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n                      \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n                      \"(519) 650-0409\" + \"\\x0A\", // text and line break\n                      today.toLocaleDateString() +\n                        \" \" +\n                        today.toLocaleTimeString() +\n                        \"\\x0A\",\n                      \"\\x0A\",\n                      `Transaction # ${element.transNum}` + \"\\x0A\",\n                      \"\\x0A\",\n                      \"\\x0A\",\n                      \"\\x0A\",\n                      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n                    ];\n\n                    element.cart?.map((cartItem) => {\n                      total += parseFloat(cartItem.price);\n                      data.push(`Name: ${cartItem.name}`);\n                      data.push(\"\\x0A\");\n                      data.push(`Quantity: ${cartItem.quantity}`);\n                      data.push(\"\\x0A\");\n                      data.push(`Price: $${cartItem.price}`);\n\n                      if (cartItem.options) {\n                        data.push(\"\\x0A\");\n                        cartItem.options?.map((option) => {\n                          data.push(option);\n                          data.push(\"\\x0A\");\n                        });\n                      }\n                      data.push(\"\\x0A\" + \"\\x0A\");\n                    });\n\n                    total = total * 1.13;\n                    total = total.toFixed(2);\n\n                    //push ending\n                    data.push(\n                      \"\\x0A\",\n                      \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                      \"\\x0A\" + \"\\x0A\",\n                      \"Total Including (13% Tax): \" +\n                        \"$\" +\n                        total +\n                        \"\\x0A\" +\n                        \"\\x0A\",\n                      \"------------------------------------------\" + \"\\x0A\",\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n                      \"\\x1D\" + \"\\x56\" + \"\\x30\"\n                    );\n\n                    qz.websocket\n                      .connect()\n                      .then(function () {\n                        let config = qz.configs.create(\"jZebra\");\n                        return qz.print(config, data);\n                      })\n                      .then(qz.websocket.disconnect)\n                      .catch(function (err) {\n                        console.error(err);\n                      });\n                  }}\n                />\n              </View>\n            );\n          })} */}\n      </View>\n    </View>\n  );\n};\n\nexport default ViewTransactions;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\",\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n});\n"],"mappings":"uLACA,MAAOA,MAAK,EAAeC,QAAQ,KAAQ,OAAO,CAClD,OAASC,MAAM,CAAEC,IAAI,KAAQ,6BAA6B,CAC1D,OAASC,cAAc,yBAAsB,wFAE7C,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,EAAS,CAC7B,GAAMC,IAAG,CAAG,CAAEC,SAAS,CAAEH,cAAc,CAACI,GAAG,EAAG,CAAC,CAC/C,cAAkCP,QAAQ,CAAC,EAAE,CAAC,wCAAvCM,SAAS,eAAEE,YAAY,eAC9B,GAAMC,MAAK,CAAG,GAAIC,KAAI,EAAE,CACxB,eAA0CV,QAAQ,CAAC,CACjDW,kBAAkB,CAAE,CAAC,CACrBC,cAAc,CAAE,CAClB,CAAC,CAAC,yCAHKC,aAAa,eAAEC,gBAAgB,eAqKtC,MACE,OAAC,IAAI,EAAC,KAAK,CAAEC,MAAM,CAACC,SAAU,WAC5B,KAAC,IAAI,EAAC,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAQ,CAAEC,MAAM,CAAE,EAAG,CAAE,kCAE1C,CACP,MAAC,IAAI,EACH,KAAK,CAAE,CACLC,aAAa,CAAE,KAAK,CACpBC,KAAK,CAAE,MAAM,CACbC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAClB,CAAE,WAEF,MAAC,IAAI,EAAC,KAAK,CAAE,CAAEL,SAAS,CAAE,QAAQ,CAAEC,MAAM,CAAE,EAAG,CAAE,kCAC1BL,aAAa,CAACF,kBAAkB,GAChD,CACP,KAAC,MAAM,EACL,KAAK,CAAE,CAAEY,MAAM,CAAE,EAAE,CAAEF,UAAU,CAAE,QAAQ,CAAEC,cAAc,CAAE,QAAS,CAAE,CACtE,KAAK,CAAC,uBAAuB,EAE7B,CACF,MAAC,IAAI,EAAC,KAAK,CAAE,CAAEL,SAAS,CAAE,QAAQ,CAAEC,MAAM,CAAE,EAAG,CAAE,qCACvBL,aAAa,CAACD,cAAc,GAC/C,GACF,CACP,KAAC,IAAI,EAAC,KAAK,CAAEG,MAAM,CAACS,gBAAiB,EA0G9B,GACF,CAEX,CAAC,CAED,cAAepB,iBAAgB,CAE/B,GAAMW,OAAM,CAAGU,UAAU,CAACC,MAAM,CAAC,CAC/BV,SAAS,CAAE,CACTW,eAAe,CAAE,OAAO,CACxBC,IAAI,CAAE,CAAC,CACPL,MAAM,CAAE,MACV,CAAC,CACDC,gBAAgB,CAAE,CAChBI,IAAI,CAAE,CAAC,CACPT,aAAa,CAAE,KAAK,CACpBU,QAAQ,CAAE,MAAM,CAChBP,cAAc,CAAE,eAAe,CAC/BQ,WAAW,CAAE,EAAE,CACfC,YAAY,CAAE,EAAE,CAChBC,aAAa,CAAE,EAAE,CACjBT,MAAM,CAAE,MAAM,CACdH,KAAK,CAAE,MAAM,CACbC,UAAU,CAAE,QACd,CACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}