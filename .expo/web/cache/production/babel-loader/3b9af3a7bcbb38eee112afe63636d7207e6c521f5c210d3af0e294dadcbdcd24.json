{"ast":null,"code":"import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Text from\"./Text\";import{useTheme}from\"./base/ThemeContext\";var DialogHeader=function DialogHeader(_ref){var title=_ref.title;var theme=useTheme();var titleElement=typeof title==='string'?React.createElement(Text,{variant:\"h6\",style:[{color:theme.palette.surface.on}]},title):typeof title==='function'?title({color:theme.palette.surface.on}):title;return React.createElement(View,{style:[styles.container]},titleElement);};var styles=StyleSheet.create({container:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',height:64,paddingHorizontal:24}});export default DialogHeader;","map":{"version":3,"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,uHAEA,MAAOC,KAAP,cACA,OAASC,QAAT,2BAMA,GAAMC,aAAyC,CAAG,QAA5CA,aAAyC,CAAGC,KAAe,IAAZC,OAAYD,KAAZC,MACnD,GAAMC,MAAK,CAAGJ,QAAQ,EAAtB,CAEA,GAAMK,aAAY,CAChB,MAAOF,MAAP,GAAiB,QAAjB,CACEL,oBAACC,IAAD,EAAMO,OAAO,CAAC,IAAd,CAAmBC,KAAK,CAAE,CAAC,CAAEC,KAAK,CAAEJ,KAAK,CAACK,OAAN,CAAcC,OAAd,CAAsBC,EAA/B,CAAD,CAA1B,EACGR,KADH,CADF,CAII,MAAOA,MAAP,GAAiB,UAAjB,CACFA,KAAK,CAAC,CAAEK,KAAK,CAAEJ,KAAK,CAACK,OAAN,CAAcC,OAAd,CAAsBC,EAA/B,CAAD,CADH,CAGFR,KARJ,CAWA,MAAOL,qBAACc,IAAD,EAAML,KAAK,CAAE,CAACM,MAAM,CAACC,SAAR,CAAb,EAAkCT,YAAlC,CAAP,CACD,CAfD,CAiBA,GAAMQ,OAAM,CAAGE,UAAU,CAACC,MAAX,CAAkB,CAC/BF,SAAS,CAAE,CACTG,aAAa,CAAE,KADN,CAETC,cAAc,CAAE,eAFP,CAGTC,UAAU,CAAE,QAHH,CAITC,MAAM,CAAE,EAJC,CAKTC,iBAAiB,CAAE,EALV,CADoB,CAAlB,CAAf,CAUA,cAAepB,aAAf","names":["React","Text","useTheme","DialogHeader","_ref","title","theme","titleElement","variant","style","color","palette","surface","on","View","styles","container","StyleSheet","create","flexDirection","justifyContent","alignItems","height","paddingHorizontal"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/@react-native-material/core/lib/module/DialogHeader.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Text from './Text';\nimport { useTheme } from './base/ThemeContext';\n\nexport interface DialogHeaderProps {\n  title: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n}\n\nconst DialogHeader: React.FC<DialogHeaderProps> = ({ title }) => {\n  const theme = useTheme();\n\n  const titleElement =\n    typeof title === 'string' ? (\n      <Text variant=\"h6\" style={[{ color: theme.palette.surface.on }]}>\n        {title}\n      </Text>\n    ) : typeof title === 'function' ? (\n      title({ color: theme.palette.surface.on })\n    ) : (\n      title\n    );\n\n  return <View style={[styles.container]}>{titleElement}</View>;\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 64,\n    paddingHorizontal: 24,\n  },\n});\n\nexport default DialogHeader;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}