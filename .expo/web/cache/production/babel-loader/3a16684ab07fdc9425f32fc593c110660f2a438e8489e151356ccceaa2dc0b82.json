{"ast":null,"code":"var _Reanimated;import{tagMessage}from\"../../utils\";var Reanimated;try{Reanimated=require('react-native-reanimated');}catch(e){Reanimated=undefined;}if(!((_Reanimated=Reanimated)!==null&&_Reanimated!==void 0&&_Reanimated.useSharedValue)){Reanimated=undefined;}var _worklet_10979837981775_init_data={code:\"function anonymous(){const{tagMessage}=this._closure;console.warn(tagMessage('Please use newer version of react-native-reanimated in order to control state of the gestures.'));}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/reanimatedWrapper.js\"};if(Reanimated!==undefined&&!Reanimated.setGestureState){Reanimated.setGestureState=function(){var _f=function _f(){console.warn(tagMessage('Please use newer version of react-native-reanimated in order to control state of the gestures.'));};_f._closure={tagMessage:tagMessage};_f.__initData=_worklet_10979837981775_init_data;_f.__workletHash=10979837981775;return _f;}();}export{Reanimated};","map":{"version":3,"mappings":"gBAKA,OAASA,UAAT,mBAMA,GAAIC,WAAJ,CAkBA,GAAI,CACFA,UAAU,CAAGC,OAAO,CAAC,yBAAD,CAApB,CACD,CAAC,MAAOC,CAAP,CAAU,CAGVF,UAAU,CAAGG,SAAb,CACD,CAED,GAAI,eAACH,UAAD,gCAACI,YAAYC,cAAb,CAAJ,CAAiC,CAG/BL,UAAU,CAAGG,SAAb,CACD,4WAED,GAAIH,UAAU,GAAKG,SAAf,EAA4B,CAACH,UAAU,CAACM,eAA5C,CAA6D,CAE3DN,UAAU,CAACM,eAAX,gCAAmC,CAEjCC,OAAO,CAACC,IAAR,CACET,UAAU,CACR,gGADQ,CADZ,EAKD,CAPD,mIAQD,CAED,OAASC,UAAT","names":["tagMessage","Reanimated","require","e","undefined","_Reanimated","useSharedValue","setGestureState","console","warn"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/reanimatedWrapper.ts"],"sourcesContent":["import { ComponentClass } from 'react';\nimport {\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../gestureHandlerCommon';\nimport { tagMessage } from '../../utils';\n\nexport interface SharedValue<T> {\n  value: T;\n}\n\nlet Reanimated: {\n  default: {\n    // Slightly modified definition copied from 'react-native-reanimated'\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    createAnimatedComponent<P extends object>(\n      component: ComponentClass<P>,\n      options?: unknown\n    ): ComponentClass<P>;\n  };\n  useEvent: (\n    callback: (event: GestureUpdateEvent | GestureStateChangeEvent) => void,\n    events: string[],\n    rebuild: boolean\n  ) => unknown;\n  useSharedValue: <T>(value: T) => SharedValue<T>;\n  setGestureState: (handlerTag: number, newState: number) => void;\n};\n\ntry {\n  Reanimated = require('react-native-reanimated');\n} catch (e) {\n  // When 'react-native-reanimated' is not available we want to quietly continue\n  // @ts-ignore TS demands the variable to be initialized\n  Reanimated = undefined;\n}\n\nif (!Reanimated?.useSharedValue) {\n  // @ts-ignore Make sure the loaded module is actually Reanimated, if it's not\n  // reset the module to undefined so we can fallback to the default implementation\n  Reanimated = undefined;\n}\n\nif (Reanimated !== undefined && !Reanimated.setGestureState) {\n  // The loaded module is Reanimated but it doesn't have the setGestureState defined\n  Reanimated.setGestureState = () => {\n    'worklet';\n    console.warn(\n      tagMessage(\n        'Please use newer version of react-native-reanimated in order to control state of the gestures.'\n      )\n    );\n  };\n}\n\nexport { Reanimated };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}