{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import JSReanimated from\"./JSReanimated\";import{isWeb}from\"../PlatformChecker\";var createReactDOMStyle;var createTransformValue;if(isWeb()){try{createReactDOMStyle=require('react-native-web/dist/exports/StyleSheet/compiler/createReactDOMStyle').default;}catch(e){}try{createTransformValue=require('react-native-web/dist/exports/StyleSheet/preprocess').createTransformValue;}catch(e){}}var reanimatedJS=new JSReanimated();global._makeShareableClone=function(c){return c;};global._scheduleOnJS=queueMicrotask;export var _updatePropsJS=function _updatePropsJS(updates,viewRef){if(viewRef._component){var component=viewRef._component;var _Object$keys$reduce=Object.keys(updates).reduce(function(acc,key){var value=updates[key];var index=typeof value==='function'?1:0;acc[index][key]=value;return acc;},[{},{}]),_Object$keys$reduce2=_slicedToArray(_Object$keys$reduce,1),rawStyles=_Object$keys$reduce2[0];if(typeof component.setNativeProps==='function'){setNativeProps(component,rawStyles);}else if(createReactDOMStyle!==undefined&&component.style!==undefined){updatePropsDOM(component,rawStyles);}else if(Object.keys(component.props).length>0){Object.keys(component.props).forEach(function(key){if(!rawStyles[key]){return;}var dashedKey=key.replace(/[A-Z]/g,function(m){return'-'+m.toLowerCase();});component._touchableNode.setAttribute(dashedKey,rawStyles[key]);});}else{console.warn('It is not possible to manipulate component');}}};var setNativeProps=function setNativeProps(component,style){var _component$setNativeP;var previousStyle=component.previousStyle?component.previousStyle:{};var currentStyle=_objectSpread(_objectSpread({},previousStyle),style);component.previousStyle=currentStyle;(_component$setNativeP=component.setNativeProps)===null||_component$setNativeP===void 0?void 0:_component$setNativeP.call(component,{style:currentStyle});};var updatePropsDOM=function updatePropsDOM(component,style){var previousStyle=component.previousStyle?component.previousStyle:{};var currentStyle=_objectSpread(_objectSpread({},previousStyle),style);component.previousStyle=currentStyle;var domStyle=createReactDOMStyle(currentStyle);if(Array.isArray(domStyle.transform)&&createTransformValue!==undefined){domStyle.transform=createTransformValue(domStyle.transform);}for(var key in domStyle){component.style[key]=domStyle[key];}};export default reanimatedJS;","map":{"version":3,"mappings":"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","names":["JSReanimated","isWeb","createReactDOMStyle","createTransformValue","require","default","e","reanimatedJS","global","_makeShareableClone","c","_scheduleOnJS","queueMicrotask","_updatePropsJS","updates","viewRef","_component","component","Object","keys","reduce","acc","key","value","index","rawStyles","setNativeProps","undefined","style","updatePropsDOM","props","length","forEach","dashedKey","replace","m","toLowerCase","_touchableNode","setAttribute","console","warn","previousStyle","currentStyle","_component$setNativeP","domStyle","Array","isArray","transform"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/js-reanimated/index.ts"],"sourcesContent":["import JSReanimated from './JSReanimated';\nimport { AnimatedStyle, StyleProps } from '../commonTypes';\nimport { isWeb } from '../PlatformChecker';\n\nlet createReactDOMStyle: (style: any) => any;\nlet createTransformValue: (transform: any) => any;\n\nif (isWeb()) {\n  try {\n    createReactDOMStyle =\n      require('react-native-web/dist/exports/StyleSheet/compiler/createReactDOMStyle').default;\n  } catch (e) {}\n\n  try {\n    // React Native Web 0.19+\n    createTransformValue =\n      require('react-native-web/dist/exports/StyleSheet/preprocess').createTransformValue;\n  } catch (e) {}\n}\n\nconst reanimatedJS = new JSReanimated();\n\nglobal._makeShareableClone = (c) => c;\nglobal._scheduleOnJS = queueMicrotask;\n\ninterface JSReanimatedComponent {\n  previousStyle: StyleProps;\n  setNativeProps?: (style: StyleProps) => void;\n  style?: StyleProps;\n  props: Record<string, string | number>;\n  _touchableNode: {\n    setAttribute: (key: string, props: unknown) => void;\n  };\n}\n\nexport const _updatePropsJS = (\n  updates: StyleProps | AnimatedStyle,\n  viewRef: { _component?: JSReanimatedComponent }\n): void => {\n  if (viewRef._component) {\n    const component = viewRef._component;\n    const [rawStyles] = Object.keys(updates).reduce(\n      (acc: [StyleProps, AnimatedStyle], key) => {\n        const value = updates[key];\n        const index = typeof value === 'function' ? 1 : 0;\n        acc[index][key] = value;\n        return acc;\n      },\n      [{}, {}]\n    );\n\n    if (typeof component.setNativeProps === 'function') {\n      // This is the legacy way to update props on React Native Web <= 0.18.\n      // Also, some components (e.g. from react-native-svg) don't have styles\n      // and always provide setNativeProps function instead (even on React Native Web 0.19+).\n      setNativeProps(component, rawStyles);\n    } else if (\n      createReactDOMStyle !== undefined &&\n      component.style !== undefined\n    ) {\n      // React Native Web 0.19+ no longer provides setNativeProps function,\n      // so we need to update DOM nodes directly.\n      updatePropsDOM(component, rawStyles);\n    } else if (Object.keys(component.props).length > 0) {\n      Object.keys(component.props).forEach((key) => {\n        if (!rawStyles[key]) {\n          return;\n        }\n        const dashedKey = key.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n        component._touchableNode.setAttribute(dashedKey, rawStyles[key]);\n      });\n    } else {\n      console.warn('It is not possible to manipulate component');\n    }\n  }\n};\n\nconst setNativeProps = (\n  component: JSReanimatedComponent,\n  style: StyleProps\n): void => {\n  const previousStyle = component.previousStyle ? component.previousStyle : {};\n  const currentStyle = { ...previousStyle, ...style };\n  component.previousStyle = currentStyle;\n  component.setNativeProps?.({ style: currentStyle });\n};\n\nconst updatePropsDOM = (\n  component: JSReanimatedComponent,\n  style: StyleProps\n): void => {\n  const previousStyle = component.previousStyle ? component.previousStyle : {};\n  const currentStyle = { ...previousStyle, ...style };\n  component.previousStyle = currentStyle;\n\n  const domStyle = createReactDOMStyle(currentStyle);\n  if (Array.isArray(domStyle.transform) && createTransformValue !== undefined) {\n    domStyle.transform = createTransformValue(domStyle.transform);\n  }\n  for (const key in domStyle) {\n    (component.style as StyleProps)[key] = domStyle[key];\n  }\n};\n\nexport default reanimatedJS;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}