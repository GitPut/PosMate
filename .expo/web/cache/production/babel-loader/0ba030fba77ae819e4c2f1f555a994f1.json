{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"title\",\"leading\",\"trailing\",\"variant\",\"color\",\"tintColor\",\"compact\",\"disableElevation\",\"uppercase\",\"loading\",\"loadingIndicatorPosition\",\"loadingIndicator\",\"style\",\"pressableContainerStyle\",\"contentContainerStyle\",\"titleStyle\",\"leadingContainerStyle\",\"trailingContainerStyle\",\"loadingOverlayContainerStyle\",\"pressEffect\",\"pressEffectColor\",\"onPress\",\"onPressIn\",\"onPressOut\",\"onLongPress\",\"onBlur\",\"onFocus\",\"onMouseEnter\",\"onMouseLeave\",\"delayLongPress\",\"disabled\",\"hitSlop\",\"pressRetentionOffset\",\"android_disableSound\",\"android_ripple\",\"testOnly_pressed\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useCallback,useMemo,useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Surface from\"./Surface\";import Text from\"./Text\";import ActivityIndicator from\"./ActivityIndicator\";import Pressable from\"./Pressable\";import{usePaletteColor}from\"./hooks/use-palette-color\";import{useSurfaceScale}from\"./hooks/use-surface-scale\";import{useStyles}from\"./hooks/use-styles\";import{useAnimatedElevation}from\"./hooks/use-animated-elevation\";var Button=function Button(_ref){var title=_ref.title,leading=_ref.leading,trailing=_ref.trailing,_ref$variant=_ref.variant,variant=_ref$variant===void 0?'contained':_ref$variant,_ref$color=_ref.color,color=_ref$color===void 0?'primary':_ref$color,tintColor=_ref.tintColor,_ref$compact=_ref.compact,compact=_ref$compact===void 0?false:_ref$compact,_ref$disableElevation=_ref.disableElevation,disableElevation=_ref$disableElevation===void 0?false:_ref$disableElevation,_ref$uppercase=_ref.uppercase,uppercase=_ref$uppercase===void 0?true:_ref$uppercase,_ref$loading=_ref.loading,loading=_ref$loading===void 0?false:_ref$loading,_ref$loadingIndicator=_ref.loadingIndicatorPosition,loadingIndicatorPosition=_ref$loadingIndicator===void 0?'leading':_ref$loadingIndicator,loadingIndicator=_ref.loadingIndicator,style=_ref.style,pressableContainerStyle=_ref.pressableContainerStyle,contentContainerStyle=_ref.contentContainerStyle,titleStyle=_ref.titleStyle,leadingContainerStyle=_ref.leadingContainerStyle,trailingContainerStyle=_ref.trailingContainerStyle,loadingOverlayContainerStyle=_ref.loadingOverlayContainerStyle,pressEffect=_ref.pressEffect,pressEffectColor=_ref.pressEffectColor,onPress=_ref.onPress,onPressIn=_ref.onPressIn,onPressOut=_ref.onPressOut,onLongPress=_ref.onLongPress,onBlur=_ref.onBlur,onFocus=_ref.onFocus,onMouseEnter=_ref.onMouseEnter,onMouseLeave=_ref.onMouseLeave,delayLongPress=_ref.delayLongPress,disabled=_ref.disabled,hitSlop=_ref.hitSlop,pressRetentionOffset=_ref.pressRetentionOffset,android_disableSound=_ref.android_disableSound,android_ripple=_ref.android_ripple,testOnly_pressed=_ref.testOnly_pressed,rest=_objectWithoutProperties(_ref,_excluded);var surfaceScale=useSurfaceScale();var p=usePaletteColor(disabled?surfaceScale(0.12).hex():color,disabled?surfaceScale(0.35).hex():tintColor);var contentColor=useMemo(function(){return variant==='contained'?p.on:disabled?p.on:p.main;},[variant,p,disabled]);var hasLeading=useMemo(function(){return!!leading||loading&&loadingIndicatorPosition==='leading';},[leading,loading,loadingIndicatorPosition]);var hasTrailing=useMemo(function(){return!!trailing||loading&&loadingIndicatorPosition==='trailing';},[trailing,loading,loadingIndicatorPosition]);var styles=useStyles(function(_ref2){var shapes=_ref2.shapes;return{container:{backgroundColor:variant==='contained'?p.main:'transparent'},outline:_objectSpread(_objectSpread({},shapes.small),{},{borderWidth:1,borderColor:surfaceScale(0.12).hex()}),pressableContainer:_objectSpread(_objectSpread({},shapes.small),{},{overflow:'hidden'}),pressable:{minWidth:64,height:36,flexDirection:'row',justifyContent:'center',alignItems:'center',paddingStart:hasLeading?compact?6:12:compact?8:16,paddingEnd:hasTrailing?compact?6:12:compact?8:16},titleStyle:{textTransform:uppercase?'uppercase':'none',opacity:loading&&loadingIndicatorPosition==='overlay'?0:1},leadingContainer:{marginEnd:compact?6:8,opacity:loading&&loadingIndicatorPosition==='overlay'?0:1},trailingContainer:{marginStart:compact?6:8,opacity:loading&&loadingIndicatorPosition==='overlay'?0:1},loadingOverlayContainer:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{justifyContent:'center',alignItems:'center'})};},[variant,uppercase,compact,loading,loadingIndicatorPosition,p,hasLeading,hasTrailing,surfaceScale]);var getTitle=function getTitle(){switch(typeof title){case'string':return React.createElement(Text,{variant:\"button\",selectable:false,style:[{color:contentColor},styles.titleStyle,titleStyle]},title);case'function':return title({color:contentColor});default:return title;}};var getLoadingIndicator=function getLoadingIndicator(){if(!loadingIndicator)return React.createElement(ActivityIndicator,{color:contentColor});switch(typeof loadingIndicator){case'string':return React.createElement(Text,{variant:\"button\",style:{color:contentColor}},loadingIndicator);case'function':return loadingIndicator({color:contentColor});default:return loadingIndicator;}};var getLeading=function getLeading(){if(loading&&loadingIndicatorPosition==='leading')return getLoadingIndicator();return typeof leading==='function'?leading({color:contentColor,size:18}):leading;};var getTrailing=function getTrailing(){if(loading&&loadingIndicatorPosition==='trailing')return getLoadingIndicator();return typeof trailing==='function'?trailing({color:contentColor,size:18}):trailing;};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hovered=_useState2[0],setHovered=_useState2[1];var handleMouseEnter=useCallback(function(event){onMouseEnter===null||onMouseEnter===void 0?void 0:onMouseEnter(event);setHovered(true);},[onMouseEnter]);var handleMouseLeave=useCallback(function(event){onMouseLeave===null||onMouseLeave===void 0?void 0:onMouseLeave(event);setHovered(false);},[onMouseLeave]);var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),pressed=_useState4[0],setPressed=_useState4[1];var handlePressIn=useCallback(function(event){onPressIn===null||onPressIn===void 0?void 0:onPressIn(event);setPressed(true);},[onPressIn]);var handlePressOut=useCallback(function(event){onPressOut===null||onPressOut===void 0?void 0:onPressOut(event);setPressed(false);},[onPressOut]);var animatedElevation=useAnimatedElevation(variant==='contained'&&!disableElevation&&!disabled?pressed?8:hovered?4:2:0);return React.createElement(Surface,_extends({category:\"small\",style:[animatedElevation,styles.container,style]},rest),React.createElement(View,{style:[styles.pressableContainer,pressableContainerStyle]},React.createElement(Pressable,{style:[styles.pressable,contentContainerStyle],pressEffect:pressEffect,pressEffectColor:pressEffectColor!==null&&pressEffectColor!==void 0?pressEffectColor:contentColor,onPress:onPress,onPressIn:handlePressIn,onPressOut:handlePressOut,onLongPress:onLongPress,onBlur:onBlur,onFocus:onFocus,onMouseEnter:handleMouseEnter,onMouseLeave:handleMouseLeave,delayLongPress:delayLongPress,disabled:disabled,hitSlop:hitSlop,pressRetentionOffset:pressRetentionOffset,android_disableSound:android_disableSound,android_ripple:android_ripple,testOnly_pressed:testOnly_pressed},hasLeading&&React.createElement(View,{style:[styles.leadingContainer,leadingContainerStyle]},getLeading()),getTitle(),hasTrailing&&React.createElement(View,{style:[styles.trailingContainer,trailingContainerStyle]},getTrailing()),loading&&loadingIndicatorPosition==='overlay'&&React.createElement(View,{style:[styles.loadingOverlayContainer,loadingOverlayContainerStyle]},getLoadingIndicator()))),variant==='outlined'&&React.createElement(View,{style:[StyleSheet.absoluteFill,styles.outline],pointerEvents:\"none\"}));};export default Button;","map":{"version":3,"mappings":"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","names":["React","useCallback","useMemo","useState","Surface","Text","ActivityIndicator","Pressable","usePaletteColor","useSurfaceScale","useStyles","useAnimatedElevation","Button","_ref","title","leading","trailing","variant","color","tintColor","compact","disableElevation","uppercase","loading","loadingIndicatorPosition","loadingIndicator","style","pressableContainerStyle","contentContainerStyle","titleStyle","leadingContainerStyle","trailingContainerStyle","loadingOverlayContainerStyle","pressEffect","pressEffectColor","onPress","onPressIn","onPressOut","onLongPress","onBlur","onFocus","onMouseEnter","onMouseLeave","delayLongPress","disabled","hitSlop","pressRetentionOffset","android_disableSound","android_ripple","testOnly_pressed","rest","surfaceScale","p","hex","contentColor","on","main","hasLeading","hasTrailing","styles","shapes","_ref2","container","backgroundColor","outline","small","borderWidth","borderColor","pressableContainer","overflow","pressable","minWidth","height","flexDirection","justifyContent","alignItems","paddingStart","paddingEnd","textTransform","opacity","leadingContainer","marginEnd","trailingContainer","marginStart","loadingOverlayContainer","StyleSheet","absoluteFillObject","getTitle","selectable","getLoadingIndicator","getLeading","size","getTrailing","hovered","setHovered","handleMouseEnter","event","handleMouseLeave","pressed","setPressed","handlePressIn","handlePressOut","animatedElevation","category","View","absoluteFill","pointerEvents"],"sources":["Button.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport {\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  StyleProp,\n  StyleSheet,\n  TargetedEvent,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport Surface, { SurfaceProps } from './Surface';\nimport Text from './Text';\nimport ActivityIndicator from './ActivityIndicator';\nimport Pressable, { PressableProps } from './Pressable';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useSurfaceScale } from './hooks/use-surface-scale';\nimport { useStyles } from './hooks/use-styles';\nimport { useAnimatedElevation } from './hooks/use-animated-elevation';\n\nexport interface ButtonProps extends Omit<SurfaceProps, 'hitSlop'>, Omit<PressableProps, 'style' | 'children'> {\n  /**\n   * The text content of the button.\n   */\n  title: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * The element placed before the `title`.\n   */\n  leading?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The element placed after the `title`.\n   */\n  trailing?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The style of the button.\n   * - `text`: Text buttons are typically used for less important actions (low emphasis).\n   * - `outlined`: Outlined buttons are used for more emphasis than text buttons due to the stroke (medium emphasis).\n   * - `contained`: Contained buttons have more emphasis, as they use a color fill and shadow (high emphasis).\n   *\n   * @default \"contained\"\n   */\n  variant?: 'text' | 'outlined' | 'contained';\n\n  /**\n   * The main color of the button.\n   * for `contained` buttons, this is the background color.\n   * for `outlined` and `text` buttons, this is the color of the content (text, icons, etc.).\n   *\n   * @default \"primary\"\n   */\n  color?: Color;\n\n  /**\n   * The color of the `contained` buttons content (text, icons, etc.). No effect on `outlined` and `text` buttons.\n   */\n  tintColor?: Color;\n\n  /**\n   * Smaller horizontal padding, useful for `text` buttons in a row.\n   *\n   * @default false\n   */\n  compact?: boolean;\n\n  /**\n   * If `true`, no shadow is used. No effect on `outlined` and `text` buttons.\n   *\n   * @default false\n   */\n  disableElevation?: boolean;\n\n  /**\n   * If `false`, the button title is not rendered in upper case. No effect if you pass a React.Node as the `title` prop.\n   *\n   * @default true\n   */\n  uppercase?: boolean;\n\n  /**\n   * Whether to show a loading indicator.\n   *\n   * @default false\n   */\n  loading?: boolean;\n\n  /**\n   * The place where the loading indicator should appear.\n   * - `leading`: The indicator will replace the `leading` element.\n   * - `trailing`: The indicator will replace the `trailing` element.\n   * - `overlay`: The indicator will be added as an overlay over the button.\n   *\n   * @default \"leading\"\n   */\n  loadingIndicatorPosition?: 'leading' | 'trailing' | 'overlay';\n\n  /**\n   * A React.Node to replace the default loading indicator. Also, you can pass a string to show a text (e.g. \"Loading...\").\n   */\n  loadingIndicator?: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * The style of the button's pressable component container.\n   */\n  pressableContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the button's container.\n   */\n  contentContainerStyle?: PressableProps['style'];\n\n  /**\n   * The style of the button's text. No effect if you pass a React.Node as the `title` prop.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n\n  /**\n   * The style of the button's leading element container.\n   */\n  leadingContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the button's trailing element container.\n   */\n  trailingContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the button's loading indicator overlay view. No effect if `loadingIndicatorPosition` is not `overlay`.\n   */\n  loadingOverlayContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  title,\n  leading,\n  trailing,\n  variant = 'contained',\n  color = 'primary',\n  tintColor,\n  compact = false,\n  disableElevation = false,\n  uppercase = true,\n  loading = false,\n  loadingIndicatorPosition = 'leading',\n  loadingIndicator,\n\n  style,\n  pressableContainerStyle,\n  contentContainerStyle,\n  titleStyle,\n  leadingContainerStyle,\n  trailingContainerStyle,\n  loadingOverlayContainerStyle,\n\n  pressEffect,\n  pressEffectColor,\n  onPress,\n  onPressIn,\n  onPressOut,\n  onLongPress,\n  onBlur,\n  onFocus,\n  onMouseEnter,\n  onMouseLeave,\n  delayLongPress,\n  disabled,\n  hitSlop,\n  pressRetentionOffset,\n  android_disableSound,\n  android_ripple,\n  testOnly_pressed,\n\n  ...rest\n}) => {\n  const surfaceScale = useSurfaceScale();\n\n  const p = usePaletteColor(\n    disabled ? surfaceScale(0.12).hex() : color,\n    disabled ? surfaceScale(0.35).hex() : tintColor\n  );\n\n  const contentColor = useMemo(\n    () => (variant === 'contained' ? p.on : disabled ? p.on : p.main),\n    [variant, p, disabled]\n  );\n\n  const hasLeading = useMemo(\n    () => !!leading || (loading && loadingIndicatorPosition === 'leading'),\n    [leading, loading, loadingIndicatorPosition]\n  );\n\n  const hasTrailing = useMemo(\n    () => !!trailing || (loading && loadingIndicatorPosition === 'trailing'),\n    [trailing, loading, loadingIndicatorPosition]\n  );\n\n  const styles = useStyles(\n    ({ shapes }) => ({\n      container: {\n        backgroundColor: variant === 'contained' ? p.main : 'transparent',\n      },\n      outline: {\n        ...shapes.small,\n        borderWidth: 1,\n        borderColor: surfaceScale(0.12).hex(),\n      },\n      pressableContainer: {\n        ...shapes.small,\n        overflow: 'hidden',\n      },\n      pressable: {\n        minWidth: 64,\n        height: 36,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingStart: hasLeading ? (compact ? 6 : 12) : compact ? 8 : 16,\n        paddingEnd: hasTrailing ? (compact ? 6 : 12) : compact ? 8 : 16,\n      },\n      titleStyle: {\n        textTransform: uppercase ? 'uppercase' : 'none',\n        opacity: loading && loadingIndicatorPosition === 'overlay' ? 0 : 1,\n      },\n      leadingContainer: {\n        marginEnd: compact ? 6 : 8,\n        opacity: loading && loadingIndicatorPosition === 'overlay' ? 0 : 1,\n      },\n      trailingContainer: {\n        marginStart: compact ? 6 : 8,\n        opacity: loading && loadingIndicatorPosition === 'overlay' ? 0 : 1,\n      },\n      loadingOverlayContainer: {\n        ...StyleSheet.absoluteFillObject,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n    }),\n    [variant, uppercase, compact, loading, loadingIndicatorPosition, p, hasLeading, hasTrailing, surfaceScale]\n  );\n\n  const getTitle = () => {\n    switch (typeof title) {\n      case 'string':\n        return (\n          <Text variant=\"button\" selectable={false} style={[{ color: contentColor }, styles.titleStyle, titleStyle]}>\n            {title}\n          </Text>\n        );\n      case 'function':\n        return title({ color: contentColor });\n      default:\n        return title;\n    }\n  };\n\n  const getLoadingIndicator = () => {\n    if (!loadingIndicator) return <ActivityIndicator color={contentColor} />;\n    switch (typeof loadingIndicator) {\n      case 'string':\n        return (\n          <Text variant=\"button\" style={{ color: contentColor }}>\n            {loadingIndicator}\n          </Text>\n        );\n      case 'function':\n        return loadingIndicator({ color: contentColor });\n      default:\n        return loadingIndicator;\n    }\n  };\n\n  const getLeading = () => {\n    if (loading && loadingIndicatorPosition === 'leading') return getLoadingIndicator();\n    return typeof leading === 'function' ? leading({ color: contentColor, size: 18 }) : leading;\n  };\n\n  const getTrailing = () => {\n    if (loading && loadingIndicatorPosition === 'trailing') return getLoadingIndicator();\n    return typeof trailing === 'function' ? trailing({ color: contentColor, size: 18 }) : trailing;\n  };\n\n  const [hovered, setHovered] = useState(false);\n\n  const handleMouseEnter = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      onMouseEnter?.(event);\n      setHovered(true);\n    },\n    [onMouseEnter]\n  );\n\n  const handleMouseLeave = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      onMouseLeave?.(event);\n      setHovered(false);\n    },\n    [onMouseLeave]\n  );\n\n  const [pressed, setPressed] = useState(false);\n\n  const handlePressIn = useCallback(\n    (event: GestureResponderEvent) => {\n      onPressIn?.(event);\n      setPressed(true);\n    },\n    [onPressIn]\n  );\n\n  const handlePressOut = useCallback(\n    (event: GestureResponderEvent) => {\n      onPressOut?.(event);\n      setPressed(false);\n    },\n    [onPressOut]\n  );\n\n  const animatedElevation = useAnimatedElevation(\n    variant === 'contained' && !disableElevation && !disabled ? (pressed ? 8 : hovered ? 4 : 2) : 0\n  );\n\n  return (\n    <Surface category=\"small\" style={[animatedElevation, styles.container, style]} {...rest}>\n      <View style={[styles.pressableContainer, pressableContainerStyle]}>\n        <Pressable\n          style={[styles.pressable, contentContainerStyle]}\n          pressEffect={pressEffect}\n          pressEffectColor={pressEffectColor ?? contentColor}\n          onPress={onPress}\n          onPressIn={handlePressIn}\n          onPressOut={handlePressOut}\n          onLongPress={onLongPress}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          delayLongPress={delayLongPress}\n          disabled={disabled}\n          hitSlop={hitSlop}\n          pressRetentionOffset={pressRetentionOffset}\n          android_disableSound={android_disableSound}\n          android_ripple={android_ripple}\n          testOnly_pressed={testOnly_pressed}\n        >\n          {hasLeading && <View style={[styles.leadingContainer, leadingContainerStyle]}>{getLeading()}</View>}\n          {getTitle()}\n          {hasTrailing && <View style={[styles.trailingContainer, trailingContainerStyle]}>{getTrailing()}</View>}\n\n          {loading && loadingIndicatorPosition === 'overlay' && (\n            <View style={[styles.loadingOverlayContainer, loadingOverlayContainerStyle]}>{getLoadingIndicator()}</View>\n          )}\n        </Pressable>\n      </View>\n      {variant === 'outlined' && <View style={[StyleSheet.absoluteFill, styles.outline]} pointerEvents=\"none\" />}\n    </Surface>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}