{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React,{useEffect,useRef,useState}from\"react\";import\"react-select2-wrapper/css/select2.css\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import Modal from\"react-native-web/dist/exports/Modal\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import{Button,Switch,TextInput}from\"@react-native-material/core\";import{deviceIdState,deviceTreeState,setDeviceTreeState,setMyDeviceDetailsState}from\"../../../../../state/state\";import{auth,db}from\"../../../../../state/firebaseConfig\";import ReactSelect from\"react-select\";import{loadStripe}from\"@stripe/stripe-js\";import Image from\"react-native-web/dist/exports/Image\";import tw from'twrnc';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DeviceSettings=function DeviceSettings(){var deviceTree=deviceTreeState.use();var myDeviceID=deviceIdState.use();var fadeAnim=useRef(new Animated.Value(0)).current;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),viewVisible=_useState2[0],setviewVisible=_useState2[1];var _Dimensions$get=Dimensions.get('window'),width=_Dimensions$get.width,height=_Dimensions$get.height;var fadeIn=function fadeIn(){Animated.timing(fadeAnim,{toValue:1,duration:500,useNativeDriver:false}).start();};var resetLoader=function resetLoader(){setviewVisible(true);fadeIn();};var AddNewDevice=function(){var _ref=_asyncToGenerator(function*(){yield db.collection(\"users\").doc(auth.currentUser.uid).collection(\"checkout_sessions\").add({price:'price_1Oj9NZCIw3L7DOwI7DKAhIve',quantity:1,success_url:window.location.href,cancel_url:window.location.href}).then(function(docRef){docRef.onSnapshot(function(){var _ref2=_asyncToGenerator(function*(snap){var _snap$data=snap.data(),error=_snap$data.error,sessionId=_snap$data.sessionId;if(error){alert(\"An error occurred: \"+error.message);}if(sessionId){var stripe=yield loadStripe(\"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\");console.log(\"redirecting\");yield stripe.redirectToCheckout({sessionId:sessionId});}});return function(_x){return _ref2.apply(this,arguments);};}());});});return function AddNewDevice(){return _ref.apply(this,arguments);};}();return _jsx(\"div\",{className:\"page-wrapper\",children:_jsxs(\"div\",{className:\"content\",children:[_jsxs(View,{style:styles.container,children:[_jsxs(View,{style:styles.headerRowContainer,children:[_jsx(Text,{style:styles.headerTxt,children:\"Device Settings\"}),deviceTree.devices.length<2+deviceTree.extraDevicesPayingFor?_jsx(TouchableOpacity,{onPress:function onPress(){db.collection('users').doc(auth.currentUser.uid).collection('devices').add({name:\"Device\"+deviceTree.devices.length,id:null,printToPrinter:null}).then(function(docRef){var clone=_objectSpread({},deviceTree);clone.devices.push({name:\"Device\",id:null,printToPrinter:null,sendPrintToUserID:null,docID:docRef.id});setDeviceTreeState(clone);});},style:tw.style(['bg-green-500','rounded-md','p-3','mt-2','mb-2']),children:_jsx(Text,{style:tw.style(['text-white','text-center','text-base']),children:\"Add Device\"})}):_jsx(TouchableOpacity,{onPress:function onPress(){resetLoader();AddNewDevice();},style:tw.style(['bg-green-500','rounded-md','p-3','mt-2','mb-2']),children:_jsx(Text,{style:tw.style(['text-white','text-center','text-base']),children:\"Pay For Another Device\"})})]}),_jsx(ScrollView,{style:[{width:'90%',height:height/1.4},tw.style(['p-5','border','border-gray-200','rounded-md','bg-white','shadow-md'])],contentContainerStyle:{justifyContent:'center',alignItems:'center'},children:deviceTree.devices.map(function(device,index){var otherDeviceOptions=[];deviceTree.devices.map(function(deviceSearch,index){if(deviceSearch.id!==device.id){otherDeviceOptions.push({value:deviceSearch.docID,label:deviceSearch.name});}});return _jsxs(View,{style:tw.style(['flex-1','p-5','border','border-gray-200','rounded-md','mb-5','bg-white','shadow-md','w-11/12','items-center']),children:[_jsxs(View,{style:tw.style('w-1/2'),children:[_jsx(Text,{style:tw.style(['text-sm','mb-2']),children:\"Device Name\"}),_jsx(TextInput,{placeholder:\"Enter device name\",value:device.name,onChangeText:function onChangeText(val){var clone=_objectSpread({},deviceTree);clone.devices[index].name=val;setDeviceTreeState(clone);},style:tw.style(['w-full','p-2','border','border-gray-300','rounded-md','mb-2'])})]}),_jsxs(View,{style:tw.style(['flex','flex-row','items-center','mb-2','mt-2','w-1/2','justify-between','border-b']),children:[_jsx(Text,{style:tw.style(['text-sm','mb-2','font-medium']),children:\"Device Id: \"}),_jsx(Text,{style:tw.style(['text-sm','mb-2']),children:device.id?device.id.toUpperCase():'No Id set to this device'})]}),_jsxs(View,{style:tw.style(['flex','flex-row','items-center','mb-2','mt-2','justify-between','w-1/2','border-b']),children:[_jsx(Text,{style:tw.style(['text-sm','mb-2','font-medium']),children:\"Print Online Orders: \"}),_jsx(Switch,{value:device.printOnlineOrders,onValueChange:function onValueChange(val){var clone=_objectSpread({},deviceTree);clone.devices[index].printOnlineOrders=val;setDeviceTreeState(clone);}})]}),_jsxs(View,{style:tw.style(['flex','flex-row','items-center','mb-2','mt-2','justify-between','w-1/2','border-b']),children:[_jsx(Text,{style:tw.style(['text-sm','mb-2','font-medium']),children:\"Use Different Device To Print: \"}),_jsx(Switch,{value:device.useDifferentDeviceToPrint,onValueChange:function onValueChange(val){var clone=_objectSpread({},deviceTree);clone.devices[index].useDifferentDeviceToPrint=val;setDeviceTreeState(clone);}})]}),!device.useDifferentDeviceToPrint?_jsxs(View,{style:tw.style(['flex','flex-col','items-center','mb-2','mt-2','w-1/2']),children:[_jsx(Text,{style:[tw.style(['text-sm','mb-2']),{width:'100%'}],children:\"Print To Printer\"}),_jsx(TextInput,{placeholder:\"Enter printer name\",value:device.printToPrinter,onChangeText:function onChangeText(val){var clone=_objectSpread({},deviceTree);clone.devices[index].printToPrinter=val;setDeviceTreeState(clone);},style:[tw.style(['p-2','border','border-gray-300','rounded-md','mb-2']),{width:'100%'}]})]}):_jsxs(View,{style:tw.style(['flex','flex-col','items-center','mb-2','mt-2','w-1/2']),children:[_jsx(Text,{style:tw.style(['text-sm','mb-2']),children:\"Choose Device To Send Print To\"}),_jsx(ReactSelect,{options:otherDeviceOptions,value:device.sendPrintToUserID,onChange:function onChange(val){var clone=_objectSpread({},deviceTree);clone.devices[index].sendPrintToUserID=val;setDeviceTreeState(clone);},placeholder:\"Choose Device To Send Print To\",menuPortalTarget:document.body,styles:{menuPortal:function menuPortal(base){return _objectSpread(_objectSpread({},base),{},{zIndex:9999});},control:function control(provided,state){return _objectSpread(_objectSpread({},provided),{},{background:\"#fff\",borderColor:\"#9e9e9e\",minHeight:\"52px\",height:\"52px\",boxShadow:state.isFocused?null:null});},valueContainer:function valueContainer(provided,state){return _objectSpread(_objectSpread({},provided),{},{height:\"52px\",padding:\"0 6px\"});},input:function input(provided,state){return _objectSpread(_objectSpread({},provided),{},{margin:\"0px\"});},indicatorSeparator:function indicatorSeparator(state){return{display:\"none\"};},indicatorsContainer:function indicatorsContainer(provided,state){return _objectSpread(_objectSpread({},provided),{},{height:\"52px\"});},container:function container(provided,state){return _objectSpread(_objectSpread({},provided),{},{width:\"100%\"});}},menuPlacement:\"auto\",menuPosition:\"fixed\"})]}),_jsxs(View,{style:[{flexDirection:'row',alignItems:'center',marginBottom:10,justifyContent:'space-between'},tw.style('w-1/2')],children:[_jsx(TouchableOpacity,{onPress:function onPress(){db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).update(device);var clone=_objectSpread({},deviceTree);clone.devices[index]=device;setDeviceTreeState(clone);console.log('Updated Device');setMyDeviceDetailsState(device);console.log('Updated My Device Details: ',device);},style:tw.style(['bg-blue-500','rounded-md','p-3','w-2/5','mt-2','mb-2']),children:_jsx(Text,{style:tw.style(['text-white','text-center','text-base']),children:\"Update Device\"})}),_jsx(TouchableOpacity,{onPress:function onPress(){if(deviceTree.devices.filter(function(deviceSearch){return deviceSearch.id===myDeviceID;}).length>0){db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices.filter(function(deviceSearch){return deviceSearch.id===myDeviceID;})[0].docID).update({id:null});var _clone=_objectSpread({},deviceTree);_clone.devices.filter(function(deviceSearch){return deviceSearch.id===myDeviceID;})[0].id=null;setDeviceTreeState(_clone);}db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).update({id:myDeviceID});var clone=_objectSpread({},deviceTree);clone.devices[index].id=myDeviceID;setDeviceTreeState(clone);setMyDeviceDetailsState(device);},style:tw.style(['bg-blue-500','rounded-md','p-3','w-2/5','mt-2','mb-2']),children:_jsx(Text,{style:tw.style(['text-white','text-center','text-base']),children:\"Set To My ID\"})})]}),_jsx(TouchableOpacity,{onPress:function onPress(){db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).delete();var clone=_objectSpread({},deviceTree);clone=_objectSpread(_objectSpread({},clone),{},{devices:clone.devices.filter(function(deviceSearch){return deviceSearch.docID!==device.docID;})});setDeviceTreeState(clone);},style:tw.style(['bg-red-500','rounded-md','p-3','w-1/2','mt-2','mb-4']),children:_jsx(Text,{style:tw.style(['text-white','text-center','text-base']),children:\"Delete Device\"})})]},index);})})]}),viewVisible&&_jsx(Modal,{visible:true,children:_jsx(Animated.View,{style:{alignItems:\"center\",justifyContent:\"center\",backgroundColor:\"white\",position:\"absolute\",opacity:fadeAnim,height:\"100%\",width:\"100%\"},children:_jsx(Image,{source:require(\"../../../../../assets/loading.gif\"),style:{width:450,height:450,resizeMode:\"contain\"}})})})]})});};var styles=StyleSheet.create({container:{backgroundColor:\"rgba(255,255,255,1)\",alignItems:\"center\",justifyContent:\"center\",width:\"100%\",height:\"100%\"},headerRowContainer:{width:\"90%\",height:60,flexDirection:\"row\",alignItems:\"center\",justifyContent:\"space-between\",marginBottom:20,marginTop:20},headerTxt:{fontFamily:\"archivo-600\",color:\"rgba(98,96,96,1)\",fontSize:20},billingBtn:{width:60,height:60,backgroundColor:\"#E6E6E6\",borderRadius:30,alignItems:\"center\",justifyContent:\"center\"},billingIcon:{color:\"rgba(128,128,128,1)\",fontSize:30},detailInputContainer:{width:\"90%\",borderRadius:8,borderWidth:1,borderColor:\"rgba(155,152,152,1)\",shadowColor:\"rgba(0,0,0,1)\",shadowOffset:{width:3,height:3},elevation:45,shadowOpacity:0.2,shadowRadius:15,padding:30,minHeight:\"75%\",marginTop:15},materialStackedLabelTextbox1:{height:60,width:483},materialStackedLabelTextbox2:{height:60,width:483,marginLeft:43},materialStackedLabelTextbox1Row:{height:60,flexDirection:\"row\",marginTop:23,marginLeft:36,marginRight:32},materialStackedLabelTextbox3:{height:60,width:483},materialStackedLabelTextbox5:{height:60,width:483,marginLeft:43},materialStackedLabelTextbox3Row:{height:60,flexDirection:\"row\",marginTop:30,marginLeft:36,marginRight:32},materialStackedLabelTextbox4:{height:60,width:483},materialStackedLabelTextbox6:{height:60,width:483,marginLeft:43},materialStackedLabelTextbox4Row:{height:60,flexDirection:\"row\",marginTop:29,marginLeft:36,marginRight:32},materialStackedLabelTextbox7:{height:60,width:483},materialButtonViolet2:{height:48,width:483,marginLeft:43,marginTop:12},materialStackedLabelTextbox7Row:{height:60,flexDirection:\"row\",marginTop:14,marginLeft:36,marginRight:32},helperDownloadContainer:{width:\"100%\",height:79,flexDirection:\"row\",alignItems:\"center\",justifyContent:\"space-between\",padding:10},helperTxt:{fontFamily:\"archivo-500\",color:\"#121212\",fontSize:19,width:483,height:52},badgeWindows:{width:200,height:79},badgeMac:{width:200,height:79}});export default DeviceSettings;","map":{"version":3,"names":["React","useEffect","useRef","useState","Button","Switch","TextInput","deviceIdState","deviceTreeState","setDeviceTreeState","setMyDeviceDetailsState","auth","db","ReactSelect","loadStripe","tw","DeviceSettings","deviceTree","use","myDeviceID","fadeAnim","Animated","Value","current","viewVisible","setviewVisible","Dimensions","get","width","height","fadeIn","timing","toValue","duration","useNativeDriver","start","resetLoader","AddNewDevice","collection","doc","currentUser","uid","add","price","quantity","success_url","window","location","href","cancel_url","then","docRef","onSnapshot","snap","data","error","sessionId","alert","message","stripe","console","log","redirectToCheckout","styles","container","headerRowContainer","headerTxt","devices","length","extraDevicesPayingFor","name","id","printToPrinter","clone","push","sendPrintToUserID","docID","style","justifyContent","alignItems","map","device","index","otherDeviceOptions","deviceSearch","value","label","val","toUpperCase","printOnlineOrders","useDifferentDeviceToPrint","document","body","menuPortal","base","zIndex","control","provided","state","background","borderColor","minHeight","boxShadow","isFocused","valueContainer","padding","input","margin","indicatorSeparator","display","indicatorsContainer","flexDirection","marginBottom","update","filter","delete","backgroundColor","position","opacity","require","resizeMode","StyleSheet","create","marginTop","fontFamily","color","fontSize","billingBtn","borderRadius","billingIcon","detailInputContainer","borderWidth","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","materialStackedLabelTextbox1","materialStackedLabelTextbox2","marginLeft","materialStackedLabelTextbox1Row","marginRight","materialStackedLabelTextbox3","materialStackedLabelTextbox5","materialStackedLabelTextbox3Row","materialStackedLabelTextbox4","materialStackedLabelTextbox6","materialStackedLabelTextbox4Row","materialStackedLabelTextbox7","materialButtonViolet2","materialStackedLabelTextbox7Row","helperDownloadContainer","helperTxt","badgeWindows","badgeMac"],"sources":["/Users/peterputros/Desktop/PosMate/pages/authed/backendPos/MainPage/settings/DeviceSettings.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"react-select2-wrapper/css/select2.css\";\nimport {\n    View,\n    Text,\n    ScrollView,\n    StyleSheet,\n    Animated,\n    Modal,\n    TouchableOpacity,\n    Dimensions\n} from \"react-native\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport {\n    deviceIdState,\n    deviceTreeState,\n    setDeviceTreeState,\n    setMyDeviceDetailsState,\n} from \"state/state\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport ReactSelect from \"react-select\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Image } from \"react-native\";\nimport tw from 'twrnc';\n\nconst DeviceSettings = () => {\n    const deviceTree = deviceTreeState.use()\n    const myDeviceID = deviceIdState.use()\n    const fadeAnim = useRef(new Animated.Value(0)).current;\n    const [viewVisible, setviewVisible] = useState(false);\n    const { width, height } = Dimensions.get('window');\n\n    const fadeIn = () => {\n        // Will change fadeAnim value to 0 in 3 seconds\n        Animated.timing(fadeAnim, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: false,\n        }).start();\n    };\n\n    const resetLoader = () => {\n        setviewVisible(true);\n        fadeIn();\n    };\n\n    const AddNewDevice = async () => {\n        await db\n            .collection(\"users\")\n            .doc(auth.currentUser.uid)\n            .collection(\"checkout_sessions\")\n            .add({\n                price: 'price_1Oj9NZCIw3L7DOwI7DKAhIve', // todo price Id from your products price in the Stripe Dashboard\n                quantity: 1,\n                success_url: window.location.href, // return user to this screen on successful purchase\n                cancel_url: window.location.href, // return user to this screen on failed purchase\n            })\n            .then((docRef) => {\n                // Wait for the checkoutSession to get attached by the extension\n                docRef.onSnapshot(async (snap) => {\n                    const { error, sessionId } = snap.data();\n                    if (error) {\n                        // Show an error to your customer and inspect\n                        // your Cloud Function logs in the Firebase console.\n                        alert(`An error occurred: ${error.message}`);\n                    }\n\n                    if (sessionId) {\n                        // We have a session, let's redirect to Checkout\n                        // Init Stripe\n                        const stripe = await loadStripe(\n                            \"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\" // todo enter your public stripe key here\n                        );\n                        console.log(`redirecting`);\n                        await stripe.redirectToCheckout({ sessionId });\n                    }\n                });\n            });\n    }\n\n    //Make style better\n\n    return (\n        <div className=\"page-wrapper\">\n            <div className=\"content\">\n                <View style={styles.container}>\n                    <View style={styles.headerRowContainer}>\n                        <Text style={styles.headerTxt}>Device Settings</Text>\n                        {deviceTree.devices.length < 2 + deviceTree.extraDevicesPayingFor ?\n                            <TouchableOpacity\n                                onPress={() => {\n\n                                    db.collection('users').doc(auth.currentUser.uid).collection('devices').add({ name: `Device${deviceTree.devices.length}`, id: null, printToPrinter: null }).then((docRef) => {\n                                        const clone = { ...deviceTree }\n                                        clone.devices.push({ name: \"Device\", id: null, printToPrinter: null, sendPrintToUserID: null, docID: docRef.id })\n                                        setDeviceTreeState(clone)\n                                    })\n                                }}\n                                style={tw.style([\n                                    'bg-green-500',\n                                    'rounded-md',\n                                    'p-3',\n                                    'mt-2',\n                                    'mb-2'\n                                ])}\n                            >\n                                <Text style={tw.style([\n                                    'text-white',\n                                    'text-center',\n                                    'text-base'\n                                ])} >Add Device</Text>\n                            </TouchableOpacity>\n                            :\n                            <TouchableOpacity\n                                onPress={() => {\n                                    resetLoader()\n                                    AddNewDevice()\n                                }}\n                                style={tw.style([\n                                    'bg-green-500',\n                                    'rounded-md',\n                                    'p-3',\n                                    'mt-2',\n                                    'mb-2'\n                                ])}\n                            >\n                                <Text style={tw.style([\n                                    'text-white',\n                                    'text-center',\n                                    'text-base'\n                                ])} >Pay For Another Device</Text>\n                            </TouchableOpacity>\n                        }\n                    </View>\n                    <ScrollView style={[{ width: '90%', height: height / 1.4 }, tw.style([\n                        'p-5',\n                        'border',\n                        'border-gray-200',\n                        'rounded-md',\n                        'bg-white',\n                        'shadow-md',\n                    ])]}\n                        contentContainerStyle={{ justifyContent: 'center', alignItems: 'center' }}\n                    >\n                        {deviceTree.devices.map((device, index) => {\n\n                            const otherDeviceOptions = []\n                            deviceTree.devices.map((deviceSearch, index) => {\n                                if (deviceSearch.id !== device.id) {\n                                    otherDeviceOptions.push({ value: deviceSearch.docID, label: deviceSearch.name })\n                                }\n                            })\n\n                            return (\n                                <View key={index} style={tw.style([\n                                    'flex-1',\n                                    'p-5',\n                                    'border',\n                                    'border-gray-200',\n                                    'rounded-md',\n                                    'mb-5',\n                                    'bg-white',\n                                    'shadow-md',\n                                    'w-11/12',\n                                    'items-center'\n                                ])}>\n                                    <View style={tw.style('w-1/2')}>\n                                        <Text style={tw.style([\n                                            'text-sm',\n                                            'mb-2',\n\n                                        ])} >Device Name</Text>\n                                        <TextInput placeholder='Enter device name'\n                                            value={device.name}\n                                            onChangeText={val => {\n                                                const clone = { ...deviceTree }\n                                                clone.devices[index].name = val\n                                                setDeviceTreeState(clone)\n                                            }}\n                                            style={tw.style(['w-full', 'p-2', 'border', 'border-gray-300', 'rounded-md', 'mb-2'])}\n                                        />\n                                    </View>\n                                    <View\n                                        style={tw.style([\n                                            'flex',\n                                            'flex-row',\n                                            'items-center',\n                                            'mb-2',\n                                            'mt-2',\n                                            'w-1/2',\n                                            'justify-between',\n                                            'border-b'\n                                        ])}\n                                    >\n                                        <Text style={tw.style([\n                                            'text-sm',\n                                            'mb-2',\n                                            'font-medium'\n                                        ])} >Device Id: </Text>\n                                        <Text style={tw.style([\n                                            'text-sm',\n                                            'mb-2',\n                                        ])} >{device.id ? device.id.toUpperCase() : 'No Id set to this device'}</Text>\n                                    </View>\n                                    <View style={tw.style([\n                                        'flex',\n                                        'flex-row',\n                                        'items-center',\n                                        'mb-2',\n                                        'mt-2',\n                                        'justify-between',\n                                        'w-1/2',\n                                        'border-b'\n                                    ])}>\n                                        <Text style={tw.style([\n                                            'text-sm',\n                                            'mb-2',\n                                            'font-medium'\n                                        ])} >Print Online Orders: </Text>\n                                        <Switch value={device.printOnlineOrders} onValueChange={val => {\n                                            const clone = { ...deviceTree }\n                                            clone.devices[index].printOnlineOrders = val\n                                            setDeviceTreeState(clone)\n                                        }} />\n                                    </View>\n                                    <View style={tw.style([\n                                        'flex',\n                                        'flex-row',\n                                        'items-center',\n                                        'mb-2',\n                                        'mt-2',\n                                        'justify-between',\n                                        'w-1/2',\n                                        'border-b'\n                                    ])}>\n                                        <Text style={tw.style([\n                                            'text-sm',\n                                            'mb-2',\n                                            'font-medium'\n                                        ])} >Use Different Device To Print: </Text>\n                                        <Switch value={device.useDifferentDeviceToPrint} onValueChange={val => {\n                                            const clone = { ...deviceTree }\n                                            clone.devices[index].useDifferentDeviceToPrint = val\n                                            setDeviceTreeState(clone)\n                                        }} />\n                                    </View>\n                                    {!device.useDifferentDeviceToPrint ? <View style={\n                                        tw.style([\n                                            'flex',\n                                            'flex-col',\n                                            'items-center',\n                                            'mb-2',\n                                            'mt-2',\n                                            'w-1/2',\n                                        ])\n                                    }>\n                                        <Text style={[tw.style([\n                                            'text-sm',\n                                            'mb-2',\n                                        ]), { width: '100%' }]} >Print To Printer</Text>\n                                        <TextInput placeholder='Enter printer name'\n                                            value={device.printToPrinter}\n                                            onChangeText={val => {\n                                                const clone = { ...deviceTree }\n                                                clone.devices[index].printToPrinter = val\n                                                setDeviceTreeState(clone)\n                                            }}\n                                            style={[tw.style(['p-2', 'border', 'border-gray-300', 'rounded-md', 'mb-2']), { width: '100%' }]}\n                                        />\n                                    </View> :\n                                        <View style={\n                                            tw.style([\n                                                'flex',\n                                                'flex-col',\n                                                'items-center',\n                                                'mb-2',\n                                                'mt-2',\n                                                'w-1/2',\n                                            ])\n                                        }>\n                                            <Text style={tw.style([\n                                                'text-sm',\n                                                'mb-2',\n                                            ])} >Choose Device To Send Print To</Text>\n                                            {/* <select\n                                                style={tw.style([\n                                                    'w-1/2',\n                                                    'p-2',\n                                                    'border',\n                                                    'border-gray-300',\n                                                    'rounded-md',\n                                                    'mb-2'\n                                                ])}\n                                                value={device.sendPrintToUserID}\n                                            // onChange={(e) => {\n                                            //     const clone = { ...deviceTree }\n                                            //     clone.devices[index].sendPrintToUserID = e.target.value\n                                            //     setDeviceTreeState(clone)\n                                            //     console.log('Device to send to updated to: ', ' Label: ', e.target.label, ' Value: ', e.target.value)\n                                            // }\n                                            // }\n                                            >\n                                                <option value={null}>Select Device</option>\n                                                {otherDeviceOptions.map((device, index) => {\n                                                    return (\n                                                        <option key={index} label={device.label} value={device.value} onClick={() => {\n                                                            const clone = { ...deviceTree }\n                                                            clone.devices[index].sendPrintToUserID = { value: device.value, label: device.label }\n                                                            setDeviceTreeState(clone)\n                                                            console.log('Device to send to updated to: ', ' Label: ', device.label, ' Value: ', device.value)\n                                                        }}>{device.label}</option>\n                                                    )\n                                                })}\n                                            </select> */}\n                                            <ReactSelect\n                                                options={otherDeviceOptions}\n                                                value={\n                                                    device.sendPrintToUserID\n                                                }\n                                                onChange={(val) => {\n                                                    const clone = { ...deviceTree }\n                                                    clone.devices[index].sendPrintToUserID = val\n                                                    setDeviceTreeState(clone)\n                                                }}\n                                                placeholder={\"Choose Device To Send Print To\"}\n                                                menuPortalTarget={document.body}\n                                                styles={{\n                                                    menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                                                    control: (provided, state) => ({\n                                                        ...provided,\n                                                        background: \"#fff\",\n                                                        borderColor: \"#9e9e9e\",\n                                                        minHeight: \"52px\",\n                                                        height: \"52px\",\n                                                        boxShadow: state.isFocused ? null : null,\n                                                    }),\n\n                                                    valueContainer: (provided, state) => ({\n                                                        ...provided,\n                                                        height: \"52px\",\n                                                        padding: \"0 6px\",\n                                                    }),\n\n                                                    input: (provided, state) => ({\n                                                        ...provided,\n                                                        margin: \"0px\",\n                                                    }),\n                                                    indicatorSeparator: (state) => ({\n                                                        display: \"none\",\n                                                    }),\n                                                    indicatorsContainer: (provided, state) => ({\n                                                        ...provided,\n                                                        height: \"52px\",\n                                                    }),\n                                                    container: (provided, state) => ({\n                                                        ...provided,\n                                                        width: \"100%\",\n                                                    }),\n                                                }}\n                                                menuPlacement=\"auto\"\n                                                menuPosition=\"fixed\"\n                                            />\n                                        </View>\n                                    }\n                                    <View style={[{ flexDirection: 'row', alignItems: 'center', marginBottom: 10, justifyContent: 'space-between' }, tw.style('w-1/2')]}>\n                                        <TouchableOpacity\n                                            onPress={() => {\n                                                db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).update(device)\n                                                const clone = { ...deviceTree }\n                                                clone.devices[index] = device\n                                                setDeviceTreeState(clone\n                                                )\n                                                console.log('Updated Device')\n                                                setMyDeviceDetailsState(device)\n                                                console.log('Updated My Device Details: ', device)\n                                            }}\n                                            style={tw.style([\n                                                'bg-blue-500',\n                                                'rounded-md',\n                                                'p-3',\n                                                'w-2/5',\n                                                'mt-2',\n                                                'mb-2'\n                                            ])}\n                                        >\n                                            <Text style={tw.style([\n                                                'text-white',\n                                                'text-center',\n                                                'text-base'\n                                            ])} >Update Device</Text>\n                                        </TouchableOpacity>\n                                        <TouchableOpacity\n                                            onPress={() => {\n                                                if (deviceTree.devices.filter(deviceSearch => deviceSearch.id === myDeviceID).length > 0) {\n                                                    db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices.filter(deviceSearch => deviceSearch.id === myDeviceID)[0].docID).update({ id: null })\n                                                    const clone = { ...deviceTree }\n                                                    clone.devices.filter(deviceSearch => deviceSearch.id === myDeviceID)[0].id = null\n                                                    setDeviceTreeState(clone)\n                                                }\n                                                db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).update({ id: myDeviceID })\n                                                const clone = { ...deviceTree }\n                                                clone.devices[index].id = myDeviceID\n                                                setDeviceTreeState(clone)\n                                                setMyDeviceDetailsState(device)\n                                            }}\n                                            style={tw.style([\n                                                'bg-blue-500',\n                                                'rounded-md',\n                                                'p-3',\n                                                'w-2/5',\n                                                'mt-2',\n                                                'mb-2'\n                                            ])}\n                                        >\n                                            <Text style={tw.style([\n                                                'text-white',\n                                                'text-center',\n                                                'text-base'\n                                            ])} >Set To My ID</Text>\n                                        </TouchableOpacity>\n                                    </View>\n                                    <TouchableOpacity\n                                        onPress={() => {\n                                            db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).delete()\n                                            let clone = { ...deviceTree }\n                                            clone = { ...clone, devices: clone.devices.filter(deviceSearch => deviceSearch.docID !== device.docID) }\n                                            setDeviceTreeState(clone)\n                                        }}\n                                        style={tw.style([\n                                            'bg-red-500',\n                                            'rounded-md',\n                                            'p-3',\n                                            'w-1/2',\n                                            'mt-2',\n                                            'mb-4',\n                                        ])}\n                                    >\n                                        <Text style={tw.style([\n                                            'text-white',\n                                            'text-center',\n                                            'text-base'\n                                        ])} >Delete Device</Text>\n                                    </TouchableOpacity>\n                                </View>\n                            )\n                        })}\n                    </ScrollView>\n                </View>\n                {viewVisible && (\n                    <Modal visible={true}>\n                        <Animated.View\n                            style={{\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                backgroundColor: \"white\",\n                                position: \"absolute\",\n                                opacity: fadeAnim,\n                                height: \"100%\",\n                                width: \"100%\",\n                            }}\n                        >\n                            <Image\n                                source={require(\"assets/loading.gif\")}\n                                style={{ width: 450, height: 450, resizeMode: \"contain\" }}\n                            />\n                        </Animated.View>\n                    </Modal>\n                )}\n            </div>\n        </div >\n    );\n\n\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"rgba(255,255,255,1)\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    headerRowContainer: {\n        width: \"90%\",\n        height: 60,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginBottom: 20,\n        marginTop: 20\n    },\n    headerTxt: {\n        fontFamily: \"archivo-600\",\n        color: \"rgba(98,96,96,1)\",\n        fontSize: 20,\n    },\n    billingBtn: {\n        width: 60,\n        height: 60,\n        backgroundColor: \"#E6E6E6\",\n        borderRadius: 30,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    billingIcon: {\n        color: \"rgba(128,128,128,1)\",\n        fontSize: 30,\n    },\n    detailInputContainer: {\n        width: \"90%\",\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: \"rgba(155,152,152,1)\",\n        shadowColor: \"rgba(0,0,0,1)\",\n        shadowOffset: {\n            width: 3,\n            height: 3,\n        },\n        elevation: 45,\n        shadowOpacity: 0.2,\n        shadowRadius: 15,\n        padding: 30,\n        minHeight: \"75%\",\n        marginTop: 15,\n    },\n    materialStackedLabelTextbox1: {\n        height: 60,\n        width: 483,\n    },\n    materialStackedLabelTextbox2: {\n        height: 60,\n        width: 483,\n        marginLeft: 43,\n    },\n    materialStackedLabelTextbox1Row: {\n        height: 60,\n        flexDirection: \"row\",\n        marginTop: 23,\n        marginLeft: 36,\n        marginRight: 32,\n    },\n    materialStackedLabelTextbox3: {\n        height: 60,\n        width: 483,\n    },\n    materialStackedLabelTextbox5: {\n        height: 60,\n        width: 483,\n        marginLeft: 43,\n    },\n    materialStackedLabelTextbox3Row: {\n        height: 60,\n        flexDirection: \"row\",\n        marginTop: 30,\n        marginLeft: 36,\n        marginRight: 32,\n    },\n    materialStackedLabelTextbox4: {\n        height: 60,\n        width: 483,\n    },\n    materialStackedLabelTextbox6: {\n        height: 60,\n        width: 483,\n        marginLeft: 43,\n    },\n    materialStackedLabelTextbox4Row: {\n        height: 60,\n        flexDirection: \"row\",\n        marginTop: 29,\n        marginLeft: 36,\n        marginRight: 32,\n    },\n    materialStackedLabelTextbox7: {\n        height: 60,\n        width: 483,\n    },\n    materialButtonViolet2: {\n        height: 48,\n        width: 483,\n        marginLeft: 43,\n        marginTop: 12,\n    },\n    materialStackedLabelTextbox7Row: {\n        height: 60,\n        flexDirection: \"row\",\n        marginTop: 14,\n        marginLeft: 36,\n        marginRight: 32,\n    },\n    helperDownloadContainer: {\n        width: \"100%\",\n        height: 79,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        padding: 10,\n    },\n    helperTxt: {\n        fontFamily: \"archivo-500\",\n        color: \"#121212\",\n        fontSize: 19,\n        width: 483,\n        height: 52,\n    },\n    badgeWindows: {\n        width: 200,\n        height: 79,\n    },\n    badgeMac: {\n        width: 200,\n        height: 79,\n    },\n});\n\nexport default DeviceSettings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}