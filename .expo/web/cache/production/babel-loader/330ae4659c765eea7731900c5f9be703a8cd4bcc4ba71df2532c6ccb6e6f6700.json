{"ast":null,"code":"import{defineAnimation}from\"./util\";var _worklet_4924931519112_init_data={code:\"function withSequence(){const{defineAnimation}=this._closure;for(var _len=arguments.length,_animations=new Array(_len),_key=0;_key<_len;_key++){_animations[_key]=arguments[_key];}return defineAnimation(_animations[0],function(){'worklet';const animations=_animations.map(function(a){const result=typeof a==='function'?a():a;result.finished=false;return result;});const firstAnimation=animations[0];const callback=function(finished){if(finished){return;}animations.forEach(function(animation){if(typeof animation.callback==='function'&&!animation.finished){animation.callback(finished);}});};function sequence(animation,now){const currentAnim=animations[animation.animationIndex];const finished=currentAnim.onFrame(currentAnim,now);animation.current=currentAnim.current;if(finished){if(currentAnim.callback){currentAnim.callback(true);}currentAnim.finished=true;animation.animationIndex+=1;if(animation.animationIndex<animations.length){const nextAnim=animations[animation.animationIndex];nextAnim.onStart(nextAnim,currentAnim.current,now,currentAnim);return false;}return true;}return false;}function onStart(animation,value,now,previousAnimation){animation.animationIndex=0;if(previousAnimation===undefined){previousAnimation=animations[animations.length-1];}firstAnimation.onStart(firstAnimation,value,now,previousAnimation);}return{isHigherOrder:true,onFrame:sequence,onStart:onStart,animationIndex:0,current:firstAnimation.current,callback:callback};});}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/animation/sequence.js\"};var _worklet_4367667046886_init_data={code:\"function anonymous(){const{_animations}=this._closure;const animations=_animations.map(function(a){const result=typeof a==='function'?a():a;result.finished=false;return result;});const firstAnimation=animations[0];const callback=function(finished){if(finished){return;}animations.forEach(function(animation){if(typeof animation.callback==='function'&&!animation.finished){animation.callback(finished);}});};function sequence(animation,now){const currentAnim=animations[animation.animationIndex];const finished=currentAnim.onFrame(currentAnim,now);animation.current=currentAnim.current;if(finished){if(currentAnim.callback){currentAnim.callback(true);}currentAnim.finished=true;animation.animationIndex+=1;if(animation.animationIndex<animations.length){const nextAnim=animations[animation.animationIndex];nextAnim.onStart(nextAnim,currentAnim.current,now,currentAnim);return false;}return true;}return false;}function onStart(animation,value,now,previousAnimation){animation.animationIndex=0;if(previousAnimation===undefined){previousAnimation=animations[animations.length-1];}firstAnimation.onStart(firstAnimation,value,now,previousAnimation);}return{isHigherOrder:true,onFrame:sequence,onStart:onStart,animationIndex:0,current:firstAnimation.current,callback:callback};}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/animation/sequence.js\"};export var withSequence=function(){var _f=function _f(){for(var _len=arguments.length,_animations=new Array(_len),_key=0;_key<_len;_key++){_animations[_key]=arguments[_key];}return defineAnimation(_animations[0],function(){var _f=function _f(){var animations=_animations.map(function(a){var result=typeof a==='function'?a():a;result.finished=false;return result;});var firstAnimation=animations[0];var callback=function callback(finished){if(finished){return;}animations.forEach(function(animation){if(typeof animation.callback==='function'&&!animation.finished){animation.callback(finished);}});};function sequence(animation,now){var currentAnim=animations[animation.animationIndex];var finished=currentAnim.onFrame(currentAnim,now);animation.current=currentAnim.current;if(finished){if(currentAnim.callback){currentAnim.callback(true);}currentAnim.finished=true;animation.animationIndex+=1;if(animation.animationIndex<animations.length){var nextAnim=animations[animation.animationIndex];nextAnim.onStart(nextAnim,currentAnim.current,now,currentAnim);return false;}return true;}return false;}function onStart(animation,value,now,previousAnimation){animation.animationIndex=0;if(previousAnimation===undefined){previousAnimation=animations[animations.length-1];}firstAnimation.onStart(firstAnimation,value,now,previousAnimation);}return{isHigherOrder:true,onFrame:sequence,onStart:onStart,animationIndex:0,current:firstAnimation.current,callback:callback};};_f._closure={_animations:_animations};_f.__initData=_worklet_4367667046886_init_data;_f.__workletHash=4367667046886;return _f;}());};_f._closure={defineAnimation:defineAnimation};_f.__initData=_worklet_4924931519112_init_data;_f.__workletHash=4924931519112;return _f;}();","map":{"version":3,"mappings":"AAAA,OAASA,eAAe,cAAgB,ugGASxC,UAAgBC,aAAYA,gCAEI,CACpB,8BAFPC,WAAW,0CAAXA,WAAW,wBAGd,MAAOF,gBAAe,CACpBE,WAAW,CAAC,CAAC,CAAC,gCACR,CAEJ,GAAMC,WAAU,CAAGD,WAAW,CAACE,GAAG,CAAEC,UAAC,CAAK,CACxC,GAAMC,OAAM,CAAG,MAAOD,EAAC,GAAK,UAAU,CAAGA,CAAC,EAAE,CAAGA,CAAC,CAChDC,MAAM,CAACC,QAAQ,CAAG,KAAK,CACvB,MAAOD,OAAM,CACf,CAAC,CAAC,CACF,GAAME,eAAc,CAAGL,UAAU,CAAC,CAAC,CAAC,CAEpC,GAAMM,SAAQ,CAAIF,QAAZE,SAAQ,CAAIF,QAAiB,CAAW,CAC5C,GAAIA,QAAQ,CAAE,CAGZ,OACF,CAEAJ,UAAU,CAACO,OAAO,CAAEC,kBAAS,CAAK,CAChC,GAAI,MAAOA,UAAS,CAACF,QAAQ,GAAK,UAAU,EAAI,CAACE,SAAS,CAACJ,QAAQ,CAAE,CACnEI,SAAS,CAACF,QAAQ,CAACF,QAAQ,CAAC,CAC9B,CACF,CAAC,CAAC,CACJ,CAAC,CAED,QAASK,SAAQA,CAACD,SAA4B,CAAEE,GAAc,CAAW,CACvE,GAAMC,YAAW,CAAGX,UAAU,CAACQ,SAAS,CAACI,cAAc,CAAC,CACxD,GAAMR,SAAQ,CAAGO,WAAW,CAACE,OAAO,CAACF,WAAW,CAAED,GAAG,CAAC,CACtDF,SAAS,CAACM,OAAO,CAAGH,WAAW,CAACG,OAAO,CACvC,GAAIV,QAAQ,CAAE,CAEZ,GAAIO,WAAW,CAACL,QAAQ,CAAE,CACxBK,WAAW,CAACL,QAAQ,CAAC,IAAI,CAAgB,CAC3C,CACAK,WAAW,CAACP,QAAQ,CAAG,IAAI,CAC3BI,SAAS,CAACI,cAAc,EAAI,CAAC,CAC7B,GAAIJ,SAAS,CAACI,cAAc,CAAGZ,UAAU,CAACe,MAAM,CAAE,CAChD,GAAMC,SAAQ,CAAGhB,UAAU,CAACQ,SAAS,CAACI,cAAc,CAAC,CACrDI,QAAQ,CAACC,OAAO,CAACD,QAAQ,CAAEL,WAAW,CAACG,OAAO,CAAEJ,GAAG,CAAEC,WAAW,CAAC,CACjE,MAAO,MAAK,CACd,CACA,MAAO,KAAI,CACb,CACA,MAAO,MAAK,CACd,CAEA,QAASM,QAAOA,CACdT,SAA4B,CAC5BU,KAAsB,CACtBR,GAAc,CACdS,iBAAoC,CAC9B,CACNX,SAAS,CAACI,cAAc,CAAG,CAAC,CAC5B,GAAIO,iBAAiB,GAAKC,SAAS,CAAE,CACnCD,iBAAiB,CAAGnB,UAAU,CAC5BA,UAAU,CAACe,MAAM,CAAG,CAAC,CACD,CACxB,CACAV,cAAc,CAACY,OAAO,CAACZ,cAAc,CAAEa,KAAK,CAAER,GAAG,CAAES,iBAAiB,CAAC,CACvE,CAEA,MAAO,CACLE,aAAa,CAAE,IAAI,CACnBR,OAAO,CAAEJ,QAAQ,CACjBQ,OAAO,CAAPA,OAAO,CACPL,cAAc,CAAE,CAAC,CACjBE,OAAO,CAAET,cAAc,CAACS,OAAO,CAC/BR,iBACF,CAAC,CACH,CAAC,0BAzEWR,WAEgB,8FAwE7B,CACH,+BAxEYD","names":["defineAnimation","withSequence","_animations","animations","map","a","result","finished","firstAnimation","callback","forEach","animation","sequence","now","currentAnim","animationIndex","onFrame","current","length","nextAnim","onStart","value","previousAnimation","undefined","isHigherOrder"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/animation/sequence.ts"],"sourcesContent":["import { defineAnimation } from './util';\nimport { NextAnimation, SequenceAnimation } from './commonTypes';\nimport {\n  Animation,\n  AnimatableValue,\n  AnimationObject,\n  Timestamp,\n} from '../commonTypes';\n\nexport function withSequence(\n  ..._animations: NextAnimation<AnimationObject>[]\n): Animation<SequenceAnimation> {\n  'worklet';\n  return defineAnimation<SequenceAnimation>(\n    _animations[0] as SequenceAnimation,\n    () => {\n      'worklet';\n      const animations = _animations.map((a) => {\n        const result = typeof a === 'function' ? a() : a;\n        result.finished = false;\n        return result;\n      });\n      const firstAnimation = animations[0];\n\n      const callback = (finished: boolean): void => {\n        if (finished) {\n          // we want to call the callback after every single animation\n          // not after all of them\n          return;\n        }\n        // this is going to be called only if sequence has been cancelled\n        animations.forEach((animation) => {\n          if (typeof animation.callback === 'function' && !animation.finished) {\n            animation.callback(finished);\n          }\n        });\n      };\n\n      function sequence(animation: SequenceAnimation, now: Timestamp): boolean {\n        const currentAnim = animations[animation.animationIndex];\n        const finished = currentAnim.onFrame(currentAnim, now);\n        animation.current = currentAnim.current;\n        if (finished) {\n          // we want to call the callback after every single animation\n          if (currentAnim.callback) {\n            currentAnim.callback(true /* finished */);\n          }\n          currentAnim.finished = true;\n          animation.animationIndex += 1;\n          if (animation.animationIndex < animations.length) {\n            const nextAnim = animations[animation.animationIndex];\n            nextAnim.onStart(nextAnim, currentAnim.current, now, currentAnim);\n            return false;\n          }\n          return true;\n        }\n        return false;\n      }\n\n      function onStart(\n        animation: SequenceAnimation,\n        value: AnimatableValue,\n        now: Timestamp,\n        previousAnimation: SequenceAnimation\n      ): void {\n        animation.animationIndex = 0;\n        if (previousAnimation === undefined) {\n          previousAnimation = animations[\n            animations.length - 1\n          ] as SequenceAnimation;\n        }\n        firstAnimation.onStart(firstAnimation, value, now, previousAnimation);\n      }\n\n      return {\n        isHigherOrder: true,\n        onFrame: sequence,\n        onStart,\n        animationIndex: 0,\n        current: firstAnimation.current,\n        callback,\n      } as SequenceAnimation;\n    }\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}