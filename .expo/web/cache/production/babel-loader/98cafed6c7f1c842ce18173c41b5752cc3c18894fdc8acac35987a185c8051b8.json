{"ast":null,"code":"import{useEffect,useRef}from'react';import{processColor}from\"../Colors\";import{makeRemote}from\"../core\";import{isWeb,isJest}from\"../PlatformChecker\";import{colorProps}from\"../UpdateProps\";import WorkletEventHandler from\"../WorkletEventHandler\";export function useEvent(handler){var eventNames=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var rebuild=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var initRef=useRef(null);if(initRef.current===null){initRef.current=new WorkletEventHandler(handler,eventNames);}else if(rebuild){initRef.current.updateWorklet(handler);}return initRef;}export function useHandler(handlers,dependencies){var initRef=useRef(null);if(initRef.current===null){initRef.current={context:makeRemote({}),savedDependencies:[]};}useEffect(function(){return function(){initRef.current=null;};},[]);var _initRef$current=initRef.current,context=_initRef$current.context,savedDependencies=_initRef$current.savedDependencies;dependencies=buildDependencies(dependencies,handlers);var doDependenciesDiffer=!areDependenciesEqual(dependencies,savedDependencies);initRef.current.savedDependencies=dependencies;var useWeb=isWeb()||isJest();return{context:context,doDependenciesDiffer:doDependenciesDiffer,useWeb:useWeb};}export function buildWorkletsHash(handlers){return Object.values(handlers).reduce(function(acc,worklet){return acc+worklet.__workletHash.toString();},'');}export function buildDependencies(dependencies,handlers){var handlersList=Object.values(handlers).filter(function(handler){return handler!==undefined;});if(!dependencies){dependencies=handlersList.map(function(handler){return{workletHash:handler.__workletHash,closure:handler._closure};});}else{dependencies.push(buildWorkletsHash(handlersList));}return dependencies;}export function areDependenciesEqual(nextDeps,prevDeps){function is(x,y){return x===y&&(x!==0||1/x===1/y)||x!==x&&y!==y;}var objectIs=typeof Object.is==='function'?Object.is:is;function areHookInputsEqual(nextDeps,prevDeps){if(!nextDeps||!prevDeps||prevDeps.length!==nextDeps.length){return false;}for(var i=0;i<prevDeps.length;++i){if(!objectIs(nextDeps[i],prevDeps[i])){return false;}}return true;}return areHookInputsEqual(nextDeps,prevDeps);}export function hasColorProps(updates){var colorPropsSet=new Set(colorProps);for(var key in updates){if(colorPropsSet.has(key)){return true;}}return false;}var _worklet_2582989386853_init_data={code:\"function parseColors(updates){const{colorProps,processColor}=this._closure;for(const key in updates){if(colorProps.indexOf(key)!==-1){const processedColor=processColor(updates[key]);if(processedColor!==undefined){updates[key]=processedColor;}}}}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/hook/utils.js\"};export var parseColors=function(){var _f=function _f(updates){for(var key in updates){if(colorProps.indexOf(key)!==-1){var processedColor=processColor(updates[key]);if(processedColor!==undefined){updates[key]=processedColor;}}}};_f._closure={colorProps:colorProps,processColor:processColor};_f.__initData=_worklet_2582989386853_init_data;_f.__workletHash=2582989386853;return _f;}();var _worklet_3639396095143_init_data={code:\"function isAnimated(prop){const isAnimated=this._recur;if(Array.isArray(prop)){return prop.some(isAnimated);}else if(typeof prop==='object'){if(prop.onFrame!==undefined){return true;}else{return Object.values(prop).some(isAnimated);}}return false;}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/hook/utils.js\"};export var isAnimated=function(){var _f=function _f(prop){if(Array.isArray(prop)){return prop.some(isAnimated);}else if(typeof prop==='object'){if(prop.onFrame!==undefined){return true;}else{return Object.values(prop).some(isAnimated);}}return false;};_f._closure={};_f.__initData=_worklet_3639396095143_init_data;_f.__workletHash=3639396095143;return _f;}();var _worklet_14833023826026_init_data={code:\"function shallowEqual(a,b){const aKeys=Object.keys(a);const bKeys=Object.keys(b);if(aKeys.length!==bKeys.length){return false;}for(let i=0;i<aKeys.length;i++){if(a[aKeys[i]]!==b[aKeys[i]]){return false;}}return true;}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/hook/utils.js\"};export var shallowEqual=function(){var _f=function _f(a,b){var aKeys=Object.keys(a);var bKeys=Object.keys(b);if(aKeys.length!==bKeys.length){return false;}for(var i=0;i<aKeys.length;i++){if(a[aKeys[i]]!==b[aKeys[i]]){return false;}}return true;};_f._closure={};_f.__initData=_worklet_14833023826026_init_data;_f.__workletHash=14833023826026;return _f;}();var _worklet_7265257891897_init_data={code:\"function anonymous(styles){if(typeof styles!=='object'){throw new Error(\\\"useAnimatedStyle has to return an object, found \\\"+typeof styles+\\\" instead\\\");}else if(Array.isArray(styles)){throw new Error('useAnimatedStyle has to return an object and cannot return static styles combined with dynamic ones. Please do merging where a component receives props.');}}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/hook/utils.js\"};export var validateAnimatedStyles=function(){var _f=function _f(styles){if(typeof styles!=='object'){throw new Error(`useAnimatedStyle has to return an object, found ${typeof styles} instead`);}else if(Array.isArray(styles)){throw new Error('useAnimatedStyle has to return an object and cannot return static styles combined with dynamic ones. Please do merging where a component receives props.');}};_f._closure={};_f.__initData=_worklet_7265257891897_init_data;_f.__workletHash=7265257891897;return _f;}();","map":{"version":3,"mappings":"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","names":["useEffect","useRef","processColor","makeRemote","isWeb","isJest","colorProps","WorkletEventHandler","useEvent","handler","eventNames","rebuild","initRef","current","updateWorklet","useHandler","handlers","dependencies","context","savedDependencies","buildDependencies","doDependenciesDiffer","areDependenciesEqual","useWeb","buildWorkletsHash","Object","values","reduce","acc","worklet","__workletHash","toString","handlersList","filter","undefined","map","workletHash","closure","_closure","push","nextDeps","prevDeps","is","x","y","objectIs","areHookInputsEqual","length","i","hasColorProps","updates","colorPropsSet","Set","key","has","parseColors","indexOf","processedColor","isAnimated","prop","Array","isArray","some","onFrame","shallowEqual","a","b","aKeys","keys","bKeys","validateAnimatedStyles","styles","Error"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/hook/utils.ts"],"sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\nimport { processColor } from '../Colors';\nimport {\n  AnimatedStyle,\n  Context,\n  NativeEvent,\n  NestedObjectValues,\n  WorkletFunction,\n  AnimationObject,\n} from '../commonTypes';\nimport { makeRemote } from '../core';\nimport { isWeb, isJest } from '../PlatformChecker';\nimport { colorProps } from '../UpdateProps';\nimport WorkletEventHandler from '../WorkletEventHandler';\nimport { ContextWithDependencies, DependencyList } from './commonTypes';\n\ninterface Handler<T, TContext extends Context> extends WorkletFunction {\n  (event: T, context: TContext): void;\n}\n\ninterface Handlers<T, TContext extends Context> {\n  [key: string]: Handler<T, TContext> | undefined;\n}\n\nexport interface UseHandlerContext<TContext extends Context> {\n  context: TContext;\n  doDependenciesDiffer: boolean;\n  useWeb: boolean;\n}\n\nexport function useEvent<T extends NativeEvent<T>>(\n  handler: (event: T) => void,\n  eventNames: string[] = [],\n  rebuild = false\n): MutableRefObject<WorkletEventHandler<T> | null> {\n  const initRef = useRef<WorkletEventHandler<T> | null>(null);\n  if (initRef.current === null) {\n    initRef.current = new WorkletEventHandler(handler, eventNames);\n  } else if (rebuild) {\n    initRef.current.updateWorklet(handler);\n  }\n\n  return initRef;\n}\n\nexport function useHandler<T, TContext extends Context>(\n  handlers: Handlers<T, TContext>,\n  dependencies?: DependencyList\n): UseHandlerContext<TContext> {\n  const initRef = useRef<ContextWithDependencies<TContext> | null>(null);\n  if (initRef.current === null) {\n    initRef.current = {\n      context: makeRemote<TContext>({} as TContext),\n      savedDependencies: [],\n    };\n  }\n\n  useEffect(() => {\n    return () => {\n      initRef.current = null;\n    };\n  }, []);\n\n  const { context, savedDependencies } = initRef.current;\n\n  dependencies = buildDependencies(dependencies, handlers);\n\n  const doDependenciesDiffer = !areDependenciesEqual(\n    dependencies,\n    savedDependencies\n  );\n  initRef.current.savedDependencies = dependencies;\n  const useWeb = isWeb() || isJest();\n\n  return { context, doDependenciesDiffer, useWeb };\n}\n\n// builds one big hash from multiple worklets' hashes\nexport function buildWorkletsHash(\n  handlers: Record<string, WorkletFunction> | Array<WorkletFunction>\n): string {\n  return Object.values(handlers).reduce(\n    (acc: string, worklet: WorkletFunction) =>\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      acc + worklet.__workletHash!.toString(),\n    ''\n  );\n}\n\n// builds dependencies array for gesture handlers\nexport function buildDependencies(\n  dependencies: DependencyList,\n  handlers: Record<string, WorkletFunction | undefined>\n): Array<unknown> {\n  const handlersList: WorkletFunction[] = Object.values(handlers).filter(\n    (handler) => handler !== undefined\n  ) as WorkletFunction[];\n  if (!dependencies) {\n    dependencies = handlersList.map((handler) => {\n      return {\n        workletHash: handler.__workletHash,\n        closure: handler._closure,\n      };\n    });\n  } else {\n    dependencies.push(buildWorkletsHash(handlersList));\n  }\n  return dependencies;\n}\n\n// this is supposed to work as useEffect comparison\nexport function areDependenciesEqual(\n  nextDeps: DependencyList,\n  prevDeps: DependencyList\n): boolean {\n  function is(x: number, y: number) {\n    /* eslint-disable no-self-compare */\n    return (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y);\n    /* eslint-enable no-self-compare */\n  }\n  const objectIs: (nextDeps: unknown, prevDeps: unknown) => boolean =\n    typeof Object.is === 'function' ? Object.is : is;\n\n  function areHookInputsEqual(\n    nextDeps: DependencyList,\n    prevDeps: DependencyList\n  ): boolean {\n    if (!nextDeps || !prevDeps || prevDeps.length !== nextDeps.length) {\n      return false;\n    }\n    for (let i = 0; i < prevDeps.length; ++i) {\n      if (!objectIs(nextDeps[i], prevDeps[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  return areHookInputsEqual(nextDeps, prevDeps);\n}\n\nexport function hasColorProps(updates: AnimatedStyle): boolean {\n  const colorPropsSet = new Set(colorProps);\n  for (const key in updates) {\n    if (colorPropsSet.has(key)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function parseColors(updates: AnimatedStyle): void {\n  'worklet';\n  for (const key in updates) {\n    if (colorProps.indexOf(key) !== -1) {\n      // value could be an animation in which case processColor will recognize it and will return undefined\n      // -> in such a case we don't want to override style of that key\n      const processedColor = processColor(updates[key]);\n      if (processedColor !== undefined) {\n        updates[key] = processedColor;\n      }\n    }\n  }\n}\n\nexport function isAnimated(prop: NestedObjectValues<AnimationObject>): boolean {\n  'worklet';\n  if (Array.isArray(prop)) {\n    return prop.some(isAnimated);\n  } else if (typeof prop === 'object') {\n    if (prop.onFrame !== undefined) {\n      return true;\n    } else {\n      return Object.values(prop).some(isAnimated);\n    }\n  }\n  return false;\n}\n\nexport function shallowEqual(a: any, b: any) {\n  'worklet';\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n  for (let i = 0; i < aKeys.length; i++) {\n    if (a[aKeys[i]] !== b[aKeys[i]]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport const validateAnimatedStyles = (styles: AnimatedStyle): void => {\n  'worklet';\n  if (typeof styles !== 'object') {\n    throw new Error(\n      `useAnimatedStyle has to return an object, found ${typeof styles} instead`\n    );\n  } else if (Array.isArray(styles)) {\n    throw new Error(\n      'useAnimatedStyle has to return an object and cannot return static styles combined with dynamic ones. Please do merging where a component receives props.'\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}