{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"animationIn\",\"animationInTiming\",\"animationOut\",\"animationOutTiming\",\"avoidKeyboard\",\"coverScreen\",\"hasBackdrop\",\"backdropColor\",\"backdropOpacity\",\"backdropTransitionInTiming\",\"backdropTransitionOutTiming\",\"customBackdrop\",\"children\",\"isVisible\",\"onModalShow\",\"onBackButtonPress\",\"useNativeDriver\",\"propagateSwipe\",\"style\"],_excluded2=[\"testID\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import DeviceEventEmitter from\"react-native-web/dist/exports/DeviceEventEmitter\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import InteractionManager from\"react-native-web/dist/exports/InteractionManager\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import Modal from\"react-native-web/dist/exports/Modal\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import BackHandler from\"react-native-web/dist/exports/BackHandler\";import Platform from\"react-native-web/dist/exports/Platform\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import*as PropTypes from'prop-types';import*as animatable from'react-native-animatable';import{initializeAnimations,buildAnimations,reversePercentage}from\"./utils\";import styles from\"./modal.style\";initializeAnimations();var defaultProps={animationIn:'slideInUp',animationInTiming:300,animationOut:'slideOutDown',animationOutTiming:300,avoidKeyboard:false,coverScreen:true,hasBackdrop:true,backdropColor:'black',backdropOpacity:0.7,backdropTransitionInTiming:300,backdropTransitionOutTiming:300,customBackdrop:null,useNativeDriver:false,deviceHeight:null,deviceWidth:null,hideModalContentWhileAnimating:false,propagateSwipe:false,isVisible:false,panResponderThreshold:4,swipeThreshold:100,onModalShow:function onModalShow(){return null;},onModalWillShow:function onModalWillShow(){return null;},onModalHide:function onModalHide(){return null;},onModalWillHide:function onModalWillHide(){return null;},onBackdropPress:function onBackdropPress(){return null;},onBackButtonPress:function onBackButtonPress(){return null;},scrollTo:null,scrollOffset:0,scrollOffsetMax:0,scrollHorizontal:false,statusBarTranslucent:false,supportedOrientations:['portrait','landscape']};var extractAnimationFromProps=function extractAnimationFromProps(props){return{animationIn:props.animationIn,animationOut:props.animationOut};};export var ReactNativeModal=function(_React$Component){_inherits(ReactNativeModal,_React$Component);var _super=_createSuper(ReactNativeModal);function ReactNativeModal(props){var _this;_classCallCheck(this,ReactNativeModal);_this=_super.call(this,props);_this.state={showContent:true,isVisible:false,deviceWidth:Dimensions.get('window').width,deviceHeight:Dimensions.get('window').height,isSwipeable:!!_this.props.swipeDirection,pan:null};_this.isTransitioning=false;_this.inSwipeClosingState=false;_this.currentSwipingDirection=null;_this.panResponder=null;_this.didUpdateDimensionsEmitter=null;_this.interactionHandle=null;_this.getDeviceHeight=function(){return _this.props.deviceHeight||_this.state.deviceHeight;};_this.getDeviceWidth=function(){return _this.props.deviceWidth||_this.state.deviceWidth;};_this.onBackButtonPress=function(){if(_this.props.onBackButtonPress&&_this.props.isVisible){_this.props.onBackButtonPress();return true;}return false;};_this.shouldPropagateSwipe=function(evt,gestureState){return typeof _this.props.propagateSwipe==='function'?_this.props.propagateSwipe(evt,gestureState):_this.props.propagateSwipe;};_this.buildPanResponder=function(){var animEvt=null;_this.panResponder=PanResponder.create({onMoveShouldSetPanResponder:function onMoveShouldSetPanResponder(evt,gestureState){if(!_this.shouldPropagateSwipe(evt,gestureState)){var shouldSetPanResponder=Math.abs(gestureState.dx)>=_this.props.panResponderThreshold||Math.abs(gestureState.dy)>=_this.props.panResponderThreshold;if(shouldSetPanResponder&&_this.props.onSwipeStart){_this.props.onSwipeStart(gestureState);}_this.currentSwipingDirection=_this.getSwipingDirection(gestureState);animEvt=_this.createAnimationEventForSwipe();return shouldSetPanResponder;}return false;},onStartShouldSetPanResponder:function onStartShouldSetPanResponder(e,gestureState){var hasScrollableView=e._dispatchInstances&&e._dispatchInstances.some(function(instance){return /scrollview|flatlist/i.test(instance.type);});if(hasScrollableView&&_this.shouldPropagateSwipe(e,gestureState)&&_this.props.scrollTo&&_this.props.scrollOffset>0){return false;}if(_this.props.onSwipeStart){_this.props.onSwipeStart(gestureState);}_this.currentSwipingDirection=null;return true;},onPanResponderMove:function onPanResponderMove(evt,gestureState){if(!_this.currentSwipingDirection){if(gestureState.dx===0&&gestureState.dy===0){return;}_this.currentSwipingDirection=_this.getSwipingDirection(gestureState);animEvt=_this.createAnimationEventForSwipe();}if(_this.isSwipeDirectionAllowed(gestureState)){var newOpacityFactor=1-_this.calcDistancePercentage(gestureState);_this.backdropRef&&_this.backdropRef.transitionTo({opacity:_this.props.backdropOpacity*newOpacityFactor});animEvt(evt,gestureState);if(_this.props.onSwipeMove){_this.props.onSwipeMove(newOpacityFactor,gestureState);}}else{if(_this.props.scrollTo){if(_this.props.scrollHorizontal){var offsetX=-gestureState.dx;if(offsetX>_this.props.scrollOffsetMax){offsetX-=(offsetX-_this.props.scrollOffsetMax)/2;}_this.props.scrollTo({x:offsetX,animated:false});}else{var offsetY=-gestureState.dy;if(offsetY>_this.props.scrollOffsetMax){offsetY-=(offsetY-_this.props.scrollOffsetMax)/2;}_this.props.scrollTo({y:offsetY,animated:false});}}}},onPanResponderRelease:function onPanResponderRelease(evt,gestureState){var accDistance=_this.getAccDistancePerDirection(gestureState);if(accDistance>_this.props.swipeThreshold&&_this.isSwipeDirectionAllowed(gestureState)){if(_this.props.onSwipeComplete){_this.inSwipeClosingState=true;_this.props.onSwipeComplete({swipingDirection:_this.getSwipingDirection(gestureState)},gestureState);return;}if(_this.props.onSwipe){_this.inSwipeClosingState=true;_this.props.onSwipe();return;}}if(_this.props.onSwipeCancel){_this.props.onSwipeCancel(gestureState);}if(_this.backdropRef){_this.backdropRef.transitionTo({opacity:_this.props.backdropOpacity});}Animated.spring(_this.state.pan,{toValue:{x:0,y:0},bounciness:0,useNativeDriver:false}).start();if(_this.props.scrollTo){if(_this.props.scrollOffset>_this.props.scrollOffsetMax){_this.props.scrollTo({y:_this.props.scrollOffsetMax,animated:true});}}}});};_this.getAccDistancePerDirection=function(gestureState){switch(_this.currentSwipingDirection){case'up':return-gestureState.dy;case'down':return gestureState.dy;case'right':return gestureState.dx;case'left':return-gestureState.dx;default:return 0;}};_this.getSwipingDirection=function(gestureState){if(Math.abs(gestureState.dx)>Math.abs(gestureState.dy)){return gestureState.dx>0?'right':'left';}return gestureState.dy>0?'down':'up';};_this.calcDistancePercentage=function(gestureState){switch(_this.currentSwipingDirection){case'down':return(gestureState.moveY-gestureState.y0)/((_this.props.deviceHeight||_this.state.deviceHeight)-gestureState.y0);case'up':return reversePercentage(gestureState.moveY/gestureState.y0);case'left':return reversePercentage(gestureState.moveX/gestureState.x0);case'right':return(gestureState.moveX-gestureState.x0)/((_this.props.deviceWidth||_this.state.deviceWidth)-gestureState.x0);default:return 0;}};_this.createAnimationEventForSwipe=function(){if(_this.currentSwipingDirection==='right'||_this.currentSwipingDirection==='left'){return Animated.event([null,{dx:_this.state.pan.x}],{useNativeDriver:false});}else{return Animated.event([null,{dy:_this.state.pan.y}],{useNativeDriver:false});}};_this.isDirectionIncluded=function(direction){return Array.isArray(_this.props.swipeDirection)?_this.props.swipeDirection.includes(direction):_this.props.swipeDirection===direction;};_this.isSwipeDirectionAllowed=function(_ref){var dy=_ref.dy,dx=_ref.dx;var draggedDown=dy>0;var draggedUp=dy<0;var draggedLeft=dx<0;var draggedRight=dx>0;if(_this.currentSwipingDirection==='up'&&_this.isDirectionIncluded('up')&&draggedUp){return true;}else if(_this.currentSwipingDirection==='down'&&_this.isDirectionIncluded('down')&&draggedDown){return true;}else if(_this.currentSwipingDirection==='right'&&_this.isDirectionIncluded('right')&&draggedRight){return true;}else if(_this.currentSwipingDirection==='left'&&_this.isDirectionIncluded('left')&&draggedLeft){return true;}return false;};_this.handleDimensionsUpdate=function(){if(!_this.props.deviceHeight&&!_this.props.deviceWidth){var deviceWidth=Dimensions.get('window').width;var deviceHeight=Dimensions.get('window').height;if(deviceWidth!==_this.state.deviceWidth||deviceHeight!==_this.state.deviceHeight){_this.setState({deviceWidth:deviceWidth,deviceHeight:deviceHeight});}}};_this.open=function(){if(_this.isTransitioning){return;}_this.isTransitioning=true;if(_this.backdropRef){_this.backdropRef.transitionTo({opacity:_this.props.backdropOpacity},_this.props.backdropTransitionInTiming);}if(_this.state.isSwipeable){_this.state.pan.setValue({x:0,y:0});}if(_this.contentRef){_this.props.onModalWillShow&&_this.props.onModalWillShow();if(_this.interactionHandle==null){_this.interactionHandle=InteractionManager.createInteractionHandle();}_this.contentRef.animate(_this.animationIn,_this.props.animationInTiming).then(function(){_this.isTransitioning=false;if(_this.interactionHandle){InteractionManager.clearInteractionHandle(_this.interactionHandle);_this.interactionHandle=null;}if(!_this.props.isVisible){_this.close();}else{_this.props.onModalShow();}});}};_this.close=function(){if(_this.isTransitioning){return;}_this.isTransitioning=true;if(_this.backdropRef){_this.backdropRef.transitionTo({opacity:0},_this.props.backdropTransitionOutTiming);}var animationOut=_this.animationOut;if(_this.inSwipeClosingState){_this.inSwipeClosingState=false;if(_this.currentSwipingDirection==='up'){animationOut='slideOutUp';}else if(_this.currentSwipingDirection==='down'){animationOut='slideOutDown';}else if(_this.currentSwipingDirection==='right'){animationOut='slideOutRight';}else if(_this.currentSwipingDirection==='left'){animationOut='slideOutLeft';}}if(_this.contentRef){_this.props.onModalWillHide&&_this.props.onModalWillHide();if(_this.interactionHandle==null){_this.interactionHandle=InteractionManager.createInteractionHandle();}_this.contentRef.animate(animationOut,_this.props.animationOutTiming).then(function(){_this.isTransitioning=false;if(_this.interactionHandle){InteractionManager.clearInteractionHandle(_this.interactionHandle);_this.interactionHandle=null;}if(_this.props.isVisible){_this.open();}else{_this.setState({showContent:false},function(){_this.setState({isVisible:false},function(){_this.props.onModalHide();});});}});}};_this.makeBackdrop=function(){if(!_this.props.hasBackdrop){return null;}if(_this.props.customBackdrop&&!React.isValidElement(_this.props.customBackdrop)){console.warn('Invalid customBackdrop element passed to Modal. You must provide a valid React element.');}var _this$props=_this.props,customBackdrop=_this$props.customBackdrop,backdropColor=_this$props.backdropColor,useNativeDriver=_this$props.useNativeDriver,useNativeDriverForBackdrop=_this$props.useNativeDriverForBackdrop,onBackdropPress=_this$props.onBackdropPress;var hasCustomBackdrop=!!_this.props.customBackdrop;var backdropComputedStyle=[{width:_this.getDeviceWidth(),height:_this.getDeviceHeight(),backgroundColor:_this.state.showContent&&!hasCustomBackdrop?backdropColor:'transparent'}];var backdropWrapper=React.createElement(animatable.View,{ref:function ref(_ref2){return _this.backdropRef=_ref2;},useNativeDriver:useNativeDriverForBackdrop!==undefined?useNativeDriverForBackdrop:useNativeDriver,style:[styles.backdrop,backdropComputedStyle]},hasCustomBackdrop&&customBackdrop);if(hasCustomBackdrop){return backdropWrapper;}return React.createElement(TouchableWithoutFeedback,{onPress:onBackdropPress},backdropWrapper);};var _buildAnimations=buildAnimations(extractAnimationFromProps(props)),animationIn=_buildAnimations.animationIn,animationOut=_buildAnimations.animationOut;_this.animationIn=animationIn;_this.animationOut=animationOut;if(_this.state.isSwipeable){_this.state=_objectSpread(_objectSpread({},_this.state),{},{pan:new Animated.ValueXY()});_this.buildPanResponder();}if(props.isVisible){_this.state=_objectSpread(_objectSpread({},_this.state),{},{isVisible:true,showContent:true});}return _this;}_createClass(ReactNativeModal,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.onSwipe){console.warn('`<Modal onSwipe=\"...\" />` is deprecated and will be removed starting from 13.0.0. Use `<Modal onSwipeComplete=\"...\" />` instead.');}this.didUpdateDimensionsEmitter=DeviceEventEmitter.addListener('didUpdateDimensions',this.handleDimensionsUpdate);if(this.state.isVisible){this.open();}BackHandler.addEventListener('hardwareBackPress',this.onBackButtonPress);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){BackHandler.removeEventListener('hardwareBackPress',this.onBackButtonPress);if(this.didUpdateDimensionsEmitter){this.didUpdateDimensionsEmitter.remove();}if(this.interactionHandle){InteractionManager.clearInteractionHandle(this.interactionHandle);this.interactionHandle=null;}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.animationIn!==prevProps.animationIn||this.props.animationOut!==prevProps.animationOut){var _buildAnimations2=buildAnimations(extractAnimationFromProps(this.props)),animationIn=_buildAnimations2.animationIn,animationOut=_buildAnimations2.animationOut;this.animationIn=animationIn;this.animationOut=animationOut;}if(this.props.backdropOpacity!==prevProps.backdropOpacity&&this.backdropRef){this.backdropRef.transitionTo({opacity:this.props.backdropOpacity},this.props.backdropTransitionInTiming);}if(this.props.isVisible&&!prevProps.isVisible){this.open();}else if(!this.props.isVisible&&prevProps.isVisible){this.close();}}},{key:\"render\",value:function render(){var _this2=this;var _this$props2=this.props,animationIn=_this$props2.animationIn,animationInTiming=_this$props2.animationInTiming,animationOut=_this$props2.animationOut,animationOutTiming=_this$props2.animationOutTiming,avoidKeyboard=_this$props2.avoidKeyboard,coverScreen=_this$props2.coverScreen,hasBackdrop=_this$props2.hasBackdrop,backdropColor=_this$props2.backdropColor,backdropOpacity=_this$props2.backdropOpacity,backdropTransitionInTiming=_this$props2.backdropTransitionInTiming,backdropTransitionOutTiming=_this$props2.backdropTransitionOutTiming,customBackdrop=_this$props2.customBackdrop,children=_this$props2.children,isVisible=_this$props2.isVisible,onModalShow=_this$props2.onModalShow,onBackButtonPress=_this$props2.onBackButtonPress,useNativeDriver=_this$props2.useNativeDriver,propagateSwipe=_this$props2.propagateSwipe,style=_this$props2.style,otherProps=_objectWithoutProperties(_this$props2,_excluded);var testID=otherProps.testID,containerProps=_objectWithoutProperties(otherProps,_excluded2);var computedStyle=[{margin:this.getDeviceWidth()*0.05,transform:[{translateY:0}]},styles.content,style];var panHandlers={};var panPosition={};if(this.state.isSwipeable){panHandlers=_objectSpread({},this.panResponder.panHandlers);if(useNativeDriver){panPosition={transform:this.state.pan.getTranslateTransform()};}else{panPosition=this.state.pan.getLayout();}}var _children=this.props.hideModalContentWhileAnimating&&this.props.useNativeDriver&&!this.state.showContent?React.createElement(animatable.View,null):children;var containerView=React.createElement(animatable.View,Object.assign({},panHandlers,{ref:function ref(_ref3){return _this2.contentRef=_ref3;},style:[panPosition,computedStyle],pointerEvents:\"box-none\",useNativeDriver:useNativeDriver},containerProps),_children);if(!coverScreen&&this.state.isVisible){return React.createElement(View,{pointerEvents:\"box-none\",style:[styles.backdrop,styles.containerBox]},this.makeBackdrop(),containerView);}return React.createElement(Modal,Object.assign({transparent:true,animationType:'none',visible:this.state.isVisible,onRequestClose:onBackButtonPress},otherProps),this.makeBackdrop(),avoidKeyboard?React.createElement(KeyboardAvoidingView,{behavior:Platform.OS==='ios'?'padding':undefined,pointerEvents:\"box-none\",style:computedStyle.concat([{margin:0}])},containerView):containerView);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,state){if(!state.isVisible&&nextProps.isVisible){return{isVisible:true,showContent:true};}return null;}}]);return ReactNativeModal;}(React.Component);ReactNativeModal.propTypes={animationIn:PropTypes.oneOfType([PropTypes.string,PropTypes.object]),animationInTiming:PropTypes.number,animationOut:PropTypes.oneOfType([PropTypes.string,PropTypes.object]),animationOutTiming:PropTypes.number,avoidKeyboard:PropTypes.bool,coverScreen:PropTypes.bool,hasBackdrop:PropTypes.bool,backdropColor:PropTypes.string,backdropOpacity:PropTypes.number,backdropTransitionInTiming:PropTypes.number,backdropTransitionOutTiming:PropTypes.number,customBackdrop:PropTypes.node,children:PropTypes.node.isRequired,deviceHeight:PropTypes.number,deviceWidth:PropTypes.number,isVisible:PropTypes.bool.isRequired,hideModalContentWhileAnimating:PropTypes.bool,propagateSwipe:PropTypes.oneOfType([PropTypes.bool,PropTypes.func]),onModalShow:PropTypes.func,onModalWillShow:PropTypes.func,onModalHide:PropTypes.func,onModalWillHide:PropTypes.func,onBackButtonPress:PropTypes.func,onBackdropPress:PropTypes.func,panResponderThreshold:PropTypes.number,onSwipeStart:PropTypes.func,onSwipeMove:PropTypes.func,onSwipeComplete:PropTypes.func,onSwipeCancel:PropTypes.func,swipeThreshold:PropTypes.number,swipeDirection:PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOf(['up','down','left','right'])),PropTypes.oneOf(['up','down','left','right'])]),useNativeDriver:PropTypes.bool,useNativeDriverForBackdrop:PropTypes.bool,style:PropTypes.any,scrollTo:PropTypes.func,scrollOffset:PropTypes.number,scrollOffsetMax:PropTypes.number,scrollHorizontal:PropTypes.bool,supportedOrientations:PropTypes.arrayOf(PropTypes.oneOf(['portrait','portrait-upside-down','landscape','landscape-left','landscape-right']))};ReactNativeModal.defaultProps=defaultProps;export default ReactNativeModal;","map":{"version":3,"names":["React","PropTypes","animatable","initializeAnimations","buildAnimations","reversePercentage","styles","defaultProps","animationIn","animationInTiming","animationOut","animationOutTiming","avoidKeyboard","coverScreen","hasBackdrop","backdropColor","backdropOpacity","backdropTransitionInTiming","backdropTransitionOutTiming","customBackdrop","useNativeDriver","deviceHeight","deviceWidth","hideModalContentWhileAnimating","propagateSwipe","isVisible","panResponderThreshold","swipeThreshold","onModalShow","onModalWillShow","onModalHide","onModalWillHide","onBackdropPress","onBackButtonPress","scrollTo","scrollOffset","scrollOffsetMax","scrollHorizontal","statusBarTranslucent","supportedOrientations","extractAnimationFromProps","props","ReactNativeModal","state","showContent","Dimensions","get","width","height","isSwipeable","swipeDirection","pan","isTransitioning","inSwipeClosingState","currentSwipingDirection","panResponder","didUpdateDimensionsEmitter","interactionHandle","getDeviceHeight","getDeviceWidth","shouldPropagateSwipe","evt","gestureState","buildPanResponder","animEvt","PanResponder","create","onMoveShouldSetPanResponder","shouldSetPanResponder","Math","abs","dx","dy","onSwipeStart","getSwipingDirection","createAnimationEventForSwipe","onStartShouldSetPanResponder","e","hasScrollableView","_dispatchInstances","some","instance","test","type","onPanResponderMove","isSwipeDirectionAllowed","newOpacityFactor","calcDistancePercentage","backdropRef","transitionTo","opacity","onSwipeMove","offsetX","x","animated","offsetY","y","onPanResponderRelease","accDistance","getAccDistancePerDirection","onSwipeComplete","swipingDirection","onSwipe","onSwipeCancel","Animated","spring","toValue","bounciness","start","moveY","y0","moveX","x0","event","isDirectionIncluded","direction","Array","isArray","includes","draggedDown","draggedUp","draggedLeft","draggedRight","handleDimensionsUpdate","setState","open","setValue","contentRef","InteractionManager","createInteractionHandle","animate","then","clearInteractionHandle","close","makeBackdrop","isValidElement","console","warn","useNativeDriverForBackdrop","hasCustomBackdrop","backdropComputedStyle","backgroundColor","backdropWrapper","createElement","View","ref","undefined","style","backdrop","TouchableWithoutFeedback","onPress","ValueXY","DeviceEventEmitter","addListener","BackHandler","addEventListener","removeEventListener","remove","prevProps","children","otherProps","testID","containerProps","computedStyle","margin","transform","translateY","content","panHandlers","panPosition","getTranslateTransform","getLayout","_children","containerView","Object","assign","pointerEvents","containerBox","Modal","transparent","animationType","visible","onRequestClose","KeyboardAvoidingView","behavior","Platform","OS","concat","nextProps","Component","propTypes","oneOfType","string","object","number","bool","node","isRequired","func","arrayOf","oneOf","any"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-modal/dist/modal.js"],"sourcesContent":["import * as React from 'react';\nimport { Animated, DeviceEventEmitter, Dimensions, InteractionManager, KeyboardAvoidingView, Modal, PanResponder, BackHandler, Platform, TouchableWithoutFeedback, View, } from 'react-native';\nimport * as PropTypes from 'prop-types';\nimport * as animatable from 'react-native-animatable';\nimport { initializeAnimations, buildAnimations, reversePercentage, } from './utils';\nimport styles from './modal.style';\n// Override default react-native-animatable animations\ninitializeAnimations();\nconst defaultProps = {\n    animationIn: 'slideInUp',\n    animationInTiming: 300,\n    animationOut: 'slideOutDown',\n    animationOutTiming: 300,\n    avoidKeyboard: false,\n    coverScreen: true,\n    hasBackdrop: true,\n    backdropColor: 'black',\n    backdropOpacity: 0.7,\n    backdropTransitionInTiming: 300,\n    backdropTransitionOutTiming: 300,\n    customBackdrop: null,\n    useNativeDriver: false,\n    deviceHeight: null,\n    deviceWidth: null,\n    hideModalContentWhileAnimating: false,\n    propagateSwipe: false,\n    isVisible: false,\n    panResponderThreshold: 4,\n    swipeThreshold: 100,\n    onModalShow: (() => null),\n    onModalWillShow: (() => null),\n    onModalHide: (() => null),\n    onModalWillHide: (() => null),\n    onBackdropPress: (() => null),\n    onBackButtonPress: (() => null),\n    scrollTo: null,\n    scrollOffset: 0,\n    scrollOffsetMax: 0,\n    scrollHorizontal: false,\n    statusBarTranslucent: false,\n    supportedOrientations: ['portrait', 'landscape'],\n};\nconst extractAnimationFromProps = (props) => ({\n    animationIn: props.animationIn,\n    animationOut: props.animationOut,\n});\nexport class ReactNativeModal extends React.Component {\n    constructor(props) {\n        super(props);\n        // We use an internal state for keeping track of the modal visibility: this allows us to keep\n        // the modal visible during the exit animation, even if the user has already change the\n        // isVisible prop to false.\n        // We store in the state the device width and height so that we can update the modal on\n        // device rotation.\n        this.state = {\n            showContent: true,\n            isVisible: false,\n            deviceWidth: Dimensions.get('window').width,\n            deviceHeight: Dimensions.get('window').height,\n            isSwipeable: !!this.props.swipeDirection,\n            pan: null,\n        };\n        this.isTransitioning = false;\n        this.inSwipeClosingState = false;\n        this.currentSwipingDirection = null;\n        this.panResponder = null;\n        this.didUpdateDimensionsEmitter = null;\n        this.interactionHandle = null;\n        this.getDeviceHeight = () => this.props.deviceHeight || this.state.deviceHeight;\n        this.getDeviceWidth = () => this.props.deviceWidth || this.state.deviceWidth;\n        this.onBackButtonPress = () => {\n            if (this.props.onBackButtonPress && this.props.isVisible) {\n                this.props.onBackButtonPress();\n                return true;\n            }\n            return false;\n        };\n        this.shouldPropagateSwipe = (evt, gestureState) => {\n            return typeof this.props.propagateSwipe === 'function'\n                ? this.props.propagateSwipe(evt, gestureState)\n                : this.props.propagateSwipe;\n        };\n        this.buildPanResponder = () => {\n            let animEvt = null;\n            this.panResponder = PanResponder.create({\n                onMoveShouldSetPanResponder: (evt, gestureState) => {\n                    // Use propagateSwipe to allow inner content to scroll. See PR:\n                    // https://github.com/react-native-community/react-native-modal/pull/246\n                    if (!this.shouldPropagateSwipe(evt, gestureState)) {\n                        // The number \"4\" is just a good tradeoff to make the panResponder\n                        // work correctly even when the modal has touchable buttons.\n                        // However, if you want to overwrite this and choose for yourself,\n                        // set panResponderThreshold in the props.\n                        // For reference:\n                        // https://github.com/react-native-community/react-native-modal/pull/197\n                        const shouldSetPanResponder = Math.abs(gestureState.dx) >= this.props.panResponderThreshold ||\n                            Math.abs(gestureState.dy) >= this.props.panResponderThreshold;\n                        if (shouldSetPanResponder && this.props.onSwipeStart) {\n                            this.props.onSwipeStart(gestureState);\n                        }\n                        this.currentSwipingDirection = this.getSwipingDirection(gestureState);\n                        animEvt = this.createAnimationEventForSwipe();\n                        return shouldSetPanResponder;\n                    }\n                    return false;\n                },\n                onStartShouldSetPanResponder: (e, gestureState) => {\n                    const hasScrollableView = e._dispatchInstances &&\n                        e._dispatchInstances.some((instance) => /scrollview|flatlist/i.test(instance.type));\n                    if (hasScrollableView &&\n                        this.shouldPropagateSwipe(e, gestureState) &&\n                        this.props.scrollTo &&\n                        this.props.scrollOffset > 0) {\n                        return false; // user needs to be able to scroll content back up\n                    }\n                    if (this.props.onSwipeStart) {\n                        this.props.onSwipeStart(gestureState);\n                    }\n                    // Cleared so that onPanResponderMove can wait to have some delta\n                    // to work with\n                    this.currentSwipingDirection = null;\n                    return true;\n                },\n                onPanResponderMove: (evt, gestureState) => {\n                    // Using onStartShouldSetPanResponder we don't have any delta so we don't know\n                    // The direction to which the user is swiping until some move have been done\n                    if (!this.currentSwipingDirection) {\n                        if (gestureState.dx === 0 && gestureState.dy === 0) {\n                            return;\n                        }\n                        this.currentSwipingDirection = this.getSwipingDirection(gestureState);\n                        animEvt = this.createAnimationEventForSwipe();\n                    }\n                    if (this.isSwipeDirectionAllowed(gestureState)) {\n                        // Dim the background while swiping the modal\n                        const newOpacityFactor = 1 - this.calcDistancePercentage(gestureState);\n                        this.backdropRef &&\n                            this.backdropRef.transitionTo({\n                                opacity: this.props.backdropOpacity * newOpacityFactor,\n                            });\n                        animEvt(evt, gestureState);\n                        if (this.props.onSwipeMove) {\n                            this.props.onSwipeMove(newOpacityFactor, gestureState);\n                        }\n                    }\n                    else {\n                        if (this.props.scrollTo) {\n                            if (this.props.scrollHorizontal) {\n                                let offsetX = -gestureState.dx;\n                                if (offsetX > this.props.scrollOffsetMax) {\n                                    offsetX -= (offsetX - this.props.scrollOffsetMax) / 2;\n                                }\n                                this.props.scrollTo({ x: offsetX, animated: false });\n                            }\n                            else {\n                                let offsetY = -gestureState.dy;\n                                if (offsetY > this.props.scrollOffsetMax) {\n                                    offsetY -= (offsetY - this.props.scrollOffsetMax) / 2;\n                                }\n                                this.props.scrollTo({ y: offsetY, animated: false });\n                            }\n                        }\n                    }\n                },\n                onPanResponderRelease: (evt, gestureState) => {\n                    // Call the onSwipe prop if the threshold has been exceeded on the right direction\n                    const accDistance = this.getAccDistancePerDirection(gestureState);\n                    if (accDistance > this.props.swipeThreshold &&\n                        this.isSwipeDirectionAllowed(gestureState)) {\n                        if (this.props.onSwipeComplete) {\n                            this.inSwipeClosingState = true;\n                            this.props.onSwipeComplete({\n                                swipingDirection: this.getSwipingDirection(gestureState),\n                            }, gestureState);\n                            return;\n                        }\n                        // Deprecated. Remove later.\n                        if (this.props.onSwipe) {\n                            this.inSwipeClosingState = true;\n                            this.props.onSwipe();\n                            return;\n                        }\n                    }\n                    //Reset backdrop opacity and modal position\n                    if (this.props.onSwipeCancel) {\n                        this.props.onSwipeCancel(gestureState);\n                    }\n                    if (this.backdropRef) {\n                        this.backdropRef.transitionTo({\n                            opacity: this.props.backdropOpacity,\n                        });\n                    }\n                    Animated.spring(this.state.pan, {\n                        toValue: { x: 0, y: 0 },\n                        bounciness: 0,\n                        useNativeDriver: false,\n                    }).start();\n                    if (this.props.scrollTo) {\n                        if (this.props.scrollOffset > this.props.scrollOffsetMax) {\n                            this.props.scrollTo({\n                                y: this.props.scrollOffsetMax,\n                                animated: true,\n                            });\n                        }\n                    }\n                },\n            });\n        };\n        this.getAccDistancePerDirection = (gestureState) => {\n            switch (this.currentSwipingDirection) {\n                case 'up':\n                    return -gestureState.dy;\n                case 'down':\n                    return gestureState.dy;\n                case 'right':\n                    return gestureState.dx;\n                case 'left':\n                    return -gestureState.dx;\n                default:\n                    return 0;\n            }\n        };\n        this.getSwipingDirection = (gestureState) => {\n            if (Math.abs(gestureState.dx) > Math.abs(gestureState.dy)) {\n                return gestureState.dx > 0 ? 'right' : 'left';\n            }\n            return gestureState.dy > 0 ? 'down' : 'up';\n        };\n        this.calcDistancePercentage = (gestureState) => {\n            switch (this.currentSwipingDirection) {\n                case 'down':\n                    return ((gestureState.moveY - gestureState.y0) /\n                        ((this.props.deviceHeight || this.state.deviceHeight) -\n                            gestureState.y0));\n                case 'up':\n                    return reversePercentage(gestureState.moveY / gestureState.y0);\n                case 'left':\n                    return reversePercentage(gestureState.moveX / gestureState.x0);\n                case 'right':\n                    return ((gestureState.moveX - gestureState.x0) /\n                        ((this.props.deviceWidth || this.state.deviceWidth) - gestureState.x0));\n                default:\n                    return 0;\n            }\n        };\n        this.createAnimationEventForSwipe = () => {\n            if (this.currentSwipingDirection === 'right' ||\n                this.currentSwipingDirection === 'left') {\n                return Animated.event([null, { dx: this.state.pan.x }], {\n                    useNativeDriver: false,\n                });\n            }\n            else {\n                return Animated.event([null, { dy: this.state.pan.y }], {\n                    useNativeDriver: false,\n                });\n            }\n        };\n        this.isDirectionIncluded = (direction) => {\n            return Array.isArray(this.props.swipeDirection)\n                ? this.props.swipeDirection.includes(direction)\n                : this.props.swipeDirection === direction;\n        };\n        this.isSwipeDirectionAllowed = ({ dy, dx }) => {\n            const draggedDown = dy > 0;\n            const draggedUp = dy < 0;\n            const draggedLeft = dx < 0;\n            const draggedRight = dx > 0;\n            if (this.currentSwipingDirection === 'up' &&\n                this.isDirectionIncluded('up') &&\n                draggedUp) {\n                return true;\n            }\n            else if (this.currentSwipingDirection === 'down' &&\n                this.isDirectionIncluded('down') &&\n                draggedDown) {\n                return true;\n            }\n            else if (this.currentSwipingDirection === 'right' &&\n                this.isDirectionIncluded('right') &&\n                draggedRight) {\n                return true;\n            }\n            else if (this.currentSwipingDirection === 'left' &&\n                this.isDirectionIncluded('left') &&\n                draggedLeft) {\n                return true;\n            }\n            return false;\n        };\n        this.handleDimensionsUpdate = () => {\n            if (!this.props.deviceHeight && !this.props.deviceWidth) {\n                // Here we update the device dimensions in the state if the layout changed\n                // (triggering a render)\n                const deviceWidth = Dimensions.get('window').width;\n                const deviceHeight = Dimensions.get('window').height;\n                if (deviceWidth !== this.state.deviceWidth ||\n                    deviceHeight !== this.state.deviceHeight) {\n                    this.setState({ deviceWidth, deviceHeight });\n                }\n            }\n        };\n        this.open = () => {\n            if (this.isTransitioning) {\n                return;\n            }\n            this.isTransitioning = true;\n            if (this.backdropRef) {\n                this.backdropRef.transitionTo({ opacity: this.props.backdropOpacity }, this.props.backdropTransitionInTiming);\n            }\n            // This is for resetting the pan position,otherwise the modal gets stuck\n            // at the last released position when you try to open it.\n            // TODO: Could certainly be improved - no idea for the moment.\n            if (this.state.isSwipeable) {\n                this.state.pan.setValue({ x: 0, y: 0 });\n            }\n            if (this.contentRef) {\n                this.props.onModalWillShow && this.props.onModalWillShow();\n                if (this.interactionHandle == null) {\n                    this.interactionHandle = InteractionManager.createInteractionHandle();\n                }\n                this.contentRef\n                    .animate(this.animationIn, this.props.animationInTiming)\n                    .then(() => {\n                    this.isTransitioning = false;\n                    if (this.interactionHandle) {\n                        InteractionManager.clearInteractionHandle(this.interactionHandle);\n                        this.interactionHandle = null;\n                    }\n                    if (!this.props.isVisible) {\n                        this.close();\n                    }\n                    else {\n                        this.props.onModalShow();\n                    }\n                });\n            }\n        };\n        this.close = () => {\n            if (this.isTransitioning) {\n                return;\n            }\n            this.isTransitioning = true;\n            if (this.backdropRef) {\n                this.backdropRef.transitionTo({ opacity: 0 }, this.props.backdropTransitionOutTiming);\n            }\n            let animationOut = this.animationOut;\n            if (this.inSwipeClosingState) {\n                this.inSwipeClosingState = false;\n                if (this.currentSwipingDirection === 'up') {\n                    animationOut = 'slideOutUp';\n                }\n                else if (this.currentSwipingDirection === 'down') {\n                    animationOut = 'slideOutDown';\n                }\n                else if (this.currentSwipingDirection === 'right') {\n                    animationOut = 'slideOutRight';\n                }\n                else if (this.currentSwipingDirection === 'left') {\n                    animationOut = 'slideOutLeft';\n                }\n            }\n            if (this.contentRef) {\n                this.props.onModalWillHide && this.props.onModalWillHide();\n                if (this.interactionHandle == null) {\n                    this.interactionHandle = InteractionManager.createInteractionHandle();\n                }\n                this.contentRef\n                    .animate(animationOut, this.props.animationOutTiming)\n                    .then(() => {\n                    this.isTransitioning = false;\n                    if (this.interactionHandle) {\n                        InteractionManager.clearInteractionHandle(this.interactionHandle);\n                        this.interactionHandle = null;\n                    }\n                    if (this.props.isVisible) {\n                        this.open();\n                    }\n                    else {\n                        this.setState({\n                            showContent: false,\n                        }, () => {\n                            this.setState({\n                                isVisible: false,\n                            }, () => {\n                                this.props.onModalHide();\n                            });\n                        });\n                    }\n                });\n            }\n        };\n        this.makeBackdrop = () => {\n            if (!this.props.hasBackdrop) {\n                return null;\n            }\n            if (this.props.customBackdrop &&\n                !React.isValidElement(this.props.customBackdrop)) {\n                console.warn('Invalid customBackdrop element passed to Modal. You must provide a valid React element.');\n            }\n            const { customBackdrop, backdropColor, useNativeDriver, useNativeDriverForBackdrop, onBackdropPress, } = this.props;\n            const hasCustomBackdrop = !!this.props.customBackdrop;\n            const backdropComputedStyle = [\n                {\n                    width: this.getDeviceWidth(),\n                    height: this.getDeviceHeight(),\n                    backgroundColor: this.state.showContent && !hasCustomBackdrop\n                        ? backdropColor\n                        : 'transparent',\n                },\n            ];\n            const backdropWrapper = (React.createElement(animatable.View, { ref: ref => (this.backdropRef = ref), useNativeDriver: useNativeDriverForBackdrop !== undefined\n                    ? useNativeDriverForBackdrop\n                    : useNativeDriver, style: [styles.backdrop, backdropComputedStyle] }, hasCustomBackdrop && customBackdrop));\n            if (hasCustomBackdrop) {\n                // The user will handle backdrop presses himself\n                return backdropWrapper;\n            }\n            // If there's no custom backdrop, handle presses with\n            // TouchableWithoutFeedback\n            return (React.createElement(TouchableWithoutFeedback, { onPress: onBackdropPress }, backdropWrapper));\n        };\n        const { animationIn, animationOut } = buildAnimations(extractAnimationFromProps(props));\n        this.animationIn = animationIn;\n        this.animationOut = animationOut;\n        if (this.state.isSwipeable) {\n            this.state = {\n                ...this.state,\n                pan: new Animated.ValueXY(),\n            };\n            this.buildPanResponder();\n        }\n        if (props.isVisible) {\n            this.state = {\n                ...this.state,\n                isVisible: true,\n                showContent: true,\n            };\n        }\n    }\n    static getDerivedStateFromProps(nextProps, state) {\n        if (!state.isVisible && nextProps.isVisible) {\n            return { isVisible: true, showContent: true };\n        }\n        return null;\n    }\n    componentDidMount() {\n        // Show deprecation message\n        if (this.props.onSwipe) {\n            console.warn('`<Modal onSwipe=\"...\" />` is deprecated and will be removed starting from 13.0.0. Use `<Modal onSwipeComplete=\"...\" />` instead.');\n        }\n        this.didUpdateDimensionsEmitter = DeviceEventEmitter.addListener('didUpdateDimensions', this.handleDimensionsUpdate);\n        if (this.state.isVisible) {\n            this.open();\n        }\n        BackHandler.addEventListener('hardwareBackPress', this.onBackButtonPress);\n    }\n    componentWillUnmount() {\n        BackHandler.removeEventListener('hardwareBackPress', this.onBackButtonPress);\n        if (this.didUpdateDimensionsEmitter) {\n            this.didUpdateDimensionsEmitter.remove();\n        }\n        if (this.interactionHandle) {\n            InteractionManager.clearInteractionHandle(this.interactionHandle);\n            this.interactionHandle = null;\n        }\n    }\n    componentDidUpdate(prevProps) {\n        // If the animations have been changed then rebuild them to make sure we're\n        // using the most up-to-date ones\n        if (this.props.animationIn !== prevProps.animationIn ||\n            this.props.animationOut !== prevProps.animationOut) {\n            const { animationIn, animationOut } = buildAnimations(extractAnimationFromProps(this.props));\n            this.animationIn = animationIn;\n            this.animationOut = animationOut;\n        }\n        // If backdrop opacity has been changed then make sure to update it\n        if (this.props.backdropOpacity !== prevProps.backdropOpacity &&\n            this.backdropRef) {\n            this.backdropRef.transitionTo({ opacity: this.props.backdropOpacity }, this.props.backdropTransitionInTiming);\n        }\n        // On modal open request, we slide the view up and fade in the backdrop\n        if (this.props.isVisible && !prevProps.isVisible) {\n            this.open();\n        }\n        else if (!this.props.isVisible && prevProps.isVisible) {\n            // On modal close request, we slide the view down and fade out the backdrop\n            this.close();\n        }\n    }\n    render() {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const { animationIn, animationInTiming, animationOut, animationOutTiming, avoidKeyboard, coverScreen, hasBackdrop, backdropColor, backdropOpacity, backdropTransitionInTiming, backdropTransitionOutTiming, customBackdrop, children, isVisible, onModalShow, onBackButtonPress, useNativeDriver, propagateSwipe, style, ...otherProps } = this.props;\n        const { testID, ...containerProps } = otherProps;\n        const computedStyle = [\n            { margin: this.getDeviceWidth() * 0.05, transform: [{ translateY: 0 }] },\n            styles.content,\n            style,\n        ];\n        let panHandlers = {};\n        let panPosition = {};\n        if (this.state.isSwipeable) {\n            panHandlers = { ...this.panResponder.panHandlers };\n            if (useNativeDriver) {\n                panPosition = {\n                    transform: this.state.pan.getTranslateTransform(),\n                };\n            }\n            else {\n                panPosition = this.state.pan.getLayout();\n            }\n        }\n        // The user might decide not to show the modal while it is animating\n        // to enhance performance.\n        const _children = this.props.hideModalContentWhileAnimating &&\n            this.props.useNativeDriver &&\n            !this.state.showContent ? (React.createElement(animatable.View, null)) : (children);\n        const containerView = (React.createElement(animatable.View, Object.assign({}, panHandlers, { ref: ref => (this.contentRef = ref), style: [panPosition, computedStyle], pointerEvents: \"box-none\", useNativeDriver: useNativeDriver }, containerProps), _children));\n        // If coverScreen is set to false by the user\n        // we render the modal inside the parent view directly\n        if (!coverScreen && this.state.isVisible) {\n            return (React.createElement(View, { pointerEvents: \"box-none\", style: [styles.backdrop, styles.containerBox] },\n                this.makeBackdrop(),\n                containerView));\n        }\n        return (React.createElement(Modal, Object.assign({ transparent: true, animationType: 'none', visible: this.state.isVisible, onRequestClose: onBackButtonPress }, otherProps),\n            this.makeBackdrop(),\n            avoidKeyboard ? (React.createElement(KeyboardAvoidingView, { behavior: Platform.OS === 'ios' ? 'padding' : undefined, pointerEvents: \"box-none\", style: computedStyle.concat([{ margin: 0 }]) }, containerView)) : (containerView)));\n    }\n}\nReactNativeModal.propTypes = {\n    animationIn: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    animationInTiming: PropTypes.number,\n    animationOut: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    animationOutTiming: PropTypes.number,\n    avoidKeyboard: PropTypes.bool,\n    coverScreen: PropTypes.bool,\n    hasBackdrop: PropTypes.bool,\n    backdropColor: PropTypes.string,\n    backdropOpacity: PropTypes.number,\n    backdropTransitionInTiming: PropTypes.number,\n    backdropTransitionOutTiming: PropTypes.number,\n    customBackdrop: PropTypes.node,\n    children: PropTypes.node.isRequired,\n    deviceHeight: PropTypes.number,\n    deviceWidth: PropTypes.number,\n    isVisible: PropTypes.bool.isRequired,\n    hideModalContentWhileAnimating: PropTypes.bool,\n    propagateSwipe: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    onModalShow: PropTypes.func,\n    onModalWillShow: PropTypes.func,\n    onModalHide: PropTypes.func,\n    onModalWillHide: PropTypes.func,\n    onBackButtonPress: PropTypes.func,\n    onBackdropPress: PropTypes.func,\n    panResponderThreshold: PropTypes.number,\n    onSwipeStart: PropTypes.func,\n    onSwipeMove: PropTypes.func,\n    onSwipeComplete: PropTypes.func,\n    onSwipeCancel: PropTypes.func,\n    swipeThreshold: PropTypes.number,\n    swipeDirection: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.oneOf(['up', 'down', 'left', 'right'])),\n        PropTypes.oneOf(['up', 'down', 'left', 'right']),\n    ]),\n    useNativeDriver: PropTypes.bool,\n    useNativeDriverForBackdrop: PropTypes.bool,\n    style: PropTypes.any,\n    scrollTo: PropTypes.func,\n    scrollOffset: PropTypes.number,\n    scrollOffsetMax: PropTypes.number,\n    scrollHorizontal: PropTypes.bool,\n    supportedOrientations: PropTypes.arrayOf(PropTypes.oneOf([\n        'portrait',\n        'portrait-upside-down',\n        'landscape',\n        'landscape-left',\n        'landscape-right',\n    ])),\n};\nReactNativeModal.defaultProps = defaultProps;\nexport default ReactNativeModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}