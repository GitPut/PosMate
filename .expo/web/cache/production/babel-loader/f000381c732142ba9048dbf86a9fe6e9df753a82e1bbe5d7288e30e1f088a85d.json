{"ast":null,"code":"import React,{createContext,useContext,useMemo}from'react';import useWindowDimensions from\"react-native-web/dist/exports/useWindowDimensions\";export var defaultWindowSizes={base:0,sm:600,md:905,lg:1240,xl:1440};export var WindowSizeClassContext=createContext('base');export var useWindowSizeClass=function useWindowSizeClass(){return useContext(WindowSizeClassContext);};export var WindowSizeClassProvider=function WindowSizeClassProvider(_ref){var _ref$windowSizes=_ref.windowSizes,windowSizes=_ref$windowSizes===void 0?defaultWindowSizes:_ref$windowSizes,children=_ref.children;var _useWindowDimensions=useWindowDimensions(),width=_useWindowDimensions.width;var windowSizeClass=useMemo(function(){if(width>=windowSizes.base&&width<windowSizes.sm)return'base';if(width>=windowSizes.sm&&width<windowSizes.md)return'sm';if(width>=windowSizes.md&&width<windowSizes.lg)return'md';if(width>=windowSizes.lg&&width<windowSizes.xl)return'lg';return'xl';},[width,windowSizes]);return React.createElement(WindowSizeClassContext.Provider,{value:windowSizeClass},children);};","map":{"version":3,"mappings":"AAAA,MAAOA,MAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,OAA3C,KAA0D,OAA1D,oFAOA,MAAO,IAAMC,mBAA+B,CAAG,CAAEC,IAAI,CAAE,CAAR,CAAWC,EAAE,CAAE,GAAf,CAAoBC,EAAE,CAAE,GAAxB,CAA6BC,EAAE,CAAE,IAAjC,CAAuCC,EAAE,CAAE,IAA3C,CAAxC,CAMP,MAAO,IAAMC,uBAAsB,CAAGT,aAAa,CAAkB,MAAlB,CAA5C,CAEP,MAAO,IAAMU,mBAAkB,CAAG,QAArBA,mBAAkB,SAAST,WAAU,CAACQ,sBAAD,CAA3C,GAEP,MAAO,IAAME,wBAA+D,CAAG,QAAlEA,wBAA+D,CAAGC,KAGzE,2BAFJC,WAAW,CAAXA,WAAW,2BAAGV,kBADgE,kBAE9EW,SACIF,KADJE,SAEA,yBAAkBC,mBAAmB,EAArC,CAAQC,iCAER,GAAMC,gBAAgC,CAAGf,OAAO,CAAC,UAAM,CACrD,GAAIc,KAAK,EAAIH,WAAW,CAACT,IAArB,EAA6BY,KAAK,CAAGH,WAAW,CAACR,EAArD,CAAyD,MAAO,MAAP,CACzD,GAAIW,KAAK,EAAIH,WAAW,CAACR,EAArB,EAA2BW,KAAK,CAAGH,WAAW,CAACP,EAAnD,CAAuD,MAAO,IAAP,CACvD,GAAIU,KAAK,EAAIH,WAAW,CAACP,EAArB,EAA2BU,KAAK,CAAGH,WAAW,CAACN,EAAnD,CAAuD,MAAO,IAAP,CACvD,GAAIS,KAAK,EAAIH,WAAW,CAACN,EAArB,EAA2BS,KAAK,CAAGH,WAAW,CAACL,EAAnD,CAAuD,MAAO,IAAP,CACvD,MAAO,IAAP,CACD,CAN+C,CAM7C,CAACQ,KAAD,CAAQH,WAAR,CAN6C,CAAhD,CAQA,MAAOd,qBAACU,sBAAD,CAAwBS,QAAxB,EAAiCC,KAAK,CAAEF,eAAxC,EAA0DH,QAA1D,CAAP,CACD,CAfM","names":["React","createContext","useContext","useMemo","defaultWindowSizes","base","sm","md","lg","xl","WindowSizeClassContext","useWindowSizeClass","WindowSizeClassProvider","_ref","windowSizes","children","useWindowDimensions","width","windowSizeClass","Provider","value"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/@react-native-material/core/lib/module/base/WindowSizeClassContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useMemo } from 'react';\nimport { useWindowDimensions } from 'react-native';\n\nexport type WindowSizeClass = 'base' | 'sm' | 'md' | 'lg' | 'xl';\n\nexport type WindowSizes = Record<WindowSizeClass, number>;\n\nexport const defaultWindowSizes: WindowSizes = { base: 0, sm: 600, md: 905, lg: 1240, xl: 1440 };\n\nexport interface WindowSizeClassProviderProps {\n  windowSizes?: WindowSizes;\n}\n\nexport const WindowSizeClassContext = createContext<WindowSizeClass>('base');\n\nexport const useWindowSizeClass = () => useContext(WindowSizeClassContext);\n\nexport const WindowSizeClassProvider: React.FC<WindowSizeClassProviderProps> = ({\n  windowSizes = defaultWindowSizes,\n  children,\n}) => {\n  const { width } = useWindowDimensions();\n\n  const windowSizeClass: WindowSizeClass = useMemo(() => {\n    if (width >= windowSizes.base && width < windowSizes.sm) return 'base';\n    if (width >= windowSizes.sm && width < windowSizes.md) return 'sm';\n    if (width >= windowSizes.md && width < windowSizes.lg) return 'md';\n    if (width >= windowSizes.lg && width < windowSizes.xl) return 'lg';\n    return 'xl';\n  }, [width, windowSizes]);\n\n  return <WindowSizeClassContext.Provider value={windowSizeClass}>{children}</WindowSizeClassContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}