{"ast":null,"code":"import{defineAnimation}from\"./util\";import Platform from\"react-native-web/dist/exports/Platform\";var _worklet_14595906221861_init_data={code:\"function withDecay(userConfig,callback){const{defineAnimation,Platform}=this._closure;return defineAnimation(0,function(){'worklet';var _config$velocity;const config={deceleration:0.998,velocityFactor:1,velocity:0,rubberBandFactor:0.6};if(userConfig){Object.keys(userConfig).forEach(function(key){return config[key]=userConfig[key];});}const VELOCITY_EPS=Platform.OS!=='web'?1:1/20;const SLOPE_FACTOR=0.1;let decay;if(config.rubberBandEffect){decay=function(animation,now){const{lastTimestamp:lastTimestamp,startTimestamp:startTimestamp,current:current,initialVelocity:initialVelocity,velocity:velocity}=animation;const deltaTime=Math.min(now-lastTimestamp,64);const clampIndex=initialVelocity>0?1:0;let derivative=0;if(current<config.clamp[0]||current>config.clamp[1]){derivative=current-config.clamp[clampIndex];}if(derivative!==0){animation.springActive=true;}else if(derivative===0&&animation.springActive){animation.current=config.clamp[clampIndex];return true;}const v=velocity*Math.exp(-(1-config.deceleration)*(now-startTimestamp)*SLOPE_FACTOR)-derivative*config.rubberBandFactor;animation.current=current+v*config.velocityFactor*deltaTime/1000;animation.velocity=v;animation.lastTimestamp=now;return false;};}else{decay=function(animation,now){const{lastTimestamp:lastTimestamp,startTimestamp:startTimestamp,initialVelocity:initialVelocity,current:current,velocity:velocity}=animation;const deltaTime=Math.min(now-lastTimestamp,64);const v=velocity*Math.exp(-(1-config.deceleration)*(now-startTimestamp)*SLOPE_FACTOR);animation.current=current+v*config.velocityFactor*deltaTime/1000;animation.velocity=v;animation.lastTimestamp=now;if(config.clamp){if(initialVelocity<0&&animation.current<=config.clamp[0]){animation.current=config.clamp[0];return true;}else if(initialVelocity>0&&animation.current>=config.clamp[1]){animation.current=config.clamp[1];return true;}}return Math.abs(v)<VELOCITY_EPS;};}function validateConfig(){if(config.clamp){if(!Array.isArray(config.clamp)){throw Error(\\\"config.clamp must be an array but is \\\"+typeof config.clamp);}if(config.clamp.length!==2){throw Error(\\\"clamp array must contain 2 items but is given \\\"+config.clamp.length);}}if(config.velocityFactor<=0){throw Error(\\\"config.velocityFactor must be greather then 0 but is \\\"+config.velocityFactor);}if(config.rubberBandEffect&&!config.clamp){throw Error('You need to set `clamp` property when using `rubberBandEffect`.');}}function onStart(animation,value,now){animation.current=value;animation.lastTimestamp=now;animation.startTimestamp=now;animation.initialVelocity=config.velocity;validateConfig();}return{onFrame:decay,onStart:onStart,callback:callback,velocity:(_config$velocity=config.velocity)!==null&&_config$velocity!==void 0?_config$velocity:0,initialVelocity:0,current:0,lastTimestamp:0,startTimestamp:0};});}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/animation/decay.js\"};var _worklet_3089802775232_init_data={code:\"function anonymous(){const{userConfig,Platform,callback}=this._closure;var _config$velocity;const config={deceleration:0.998,velocityFactor:1,velocity:0,rubberBandFactor:0.6};if(userConfig){Object.keys(userConfig).forEach(function(key){return config[key]=userConfig[key];});}const VELOCITY_EPS=Platform.OS!=='web'?1:1/20;const SLOPE_FACTOR=0.1;let decay;if(config.rubberBandEffect){decay=function(animation,now){const{lastTimestamp:lastTimestamp,startTimestamp:startTimestamp,current:current,initialVelocity:initialVelocity,velocity:velocity}=animation;const deltaTime=Math.min(now-lastTimestamp,64);const clampIndex=initialVelocity>0?1:0;let derivative=0;if(current<config.clamp[0]||current>config.clamp[1]){derivative=current-config.clamp[clampIndex];}if(derivative!==0){animation.springActive=true;}else if(derivative===0&&animation.springActive){animation.current=config.clamp[clampIndex];return true;}const v=velocity*Math.exp(-(1-config.deceleration)*(now-startTimestamp)*SLOPE_FACTOR)-derivative*config.rubberBandFactor;animation.current=current+v*config.velocityFactor*deltaTime/1000;animation.velocity=v;animation.lastTimestamp=now;return false;};}else{decay=function(animation,now){const{lastTimestamp:lastTimestamp,startTimestamp:startTimestamp,initialVelocity:initialVelocity,current:current,velocity:velocity}=animation;const deltaTime=Math.min(now-lastTimestamp,64);const v=velocity*Math.exp(-(1-config.deceleration)*(now-startTimestamp)*SLOPE_FACTOR);animation.current=current+v*config.velocityFactor*deltaTime/1000;animation.velocity=v;animation.lastTimestamp=now;if(config.clamp){if(initialVelocity<0&&animation.current<=config.clamp[0]){animation.current=config.clamp[0];return true;}else if(initialVelocity>0&&animation.current>=config.clamp[1]){animation.current=config.clamp[1];return true;}}return Math.abs(v)<VELOCITY_EPS;};}function validateConfig(){if(config.clamp){if(!Array.isArray(config.clamp)){throw Error(\\\"config.clamp must be an array but is \\\"+typeof config.clamp);}if(config.clamp.length!==2){throw Error(\\\"clamp array must contain 2 items but is given \\\"+config.clamp.length);}}if(config.velocityFactor<=0){throw Error(\\\"config.velocityFactor must be greather then 0 but is \\\"+config.velocityFactor);}if(config.rubberBandEffect&&!config.clamp){throw Error('You need to set `clamp` property when using `rubberBandEffect`.');}}function onStart(animation,value,now){animation.current=value;animation.lastTimestamp=now;animation.startTimestamp=now;animation.initialVelocity=config.velocity;validateConfig();}return{onFrame:decay,onStart:onStart,callback:callback,velocity:(_config$velocity=config.velocity)!==null&&_config$velocity!==void 0?_config$velocity:0,initialVelocity:0,current:0,lastTimestamp:0,startTimestamp:0};}\",location:\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/animation/decay.js\"};export var withDecay=function(){var _f=function _f(userConfig,callback){return defineAnimation(0,function(){var _f=function _f(){var _config$velocity;var config={deceleration:0.998,velocityFactor:1,velocity:0,rubberBandFactor:0.6};if(userConfig){Object.keys(userConfig).forEach(function(key){return config[key]=userConfig[key];});}var VELOCITY_EPS=Platform.OS!=='web'?1:1/20;var SLOPE_FACTOR=0.1;var decay;if(config.rubberBandEffect){decay=function decay(animation,now){var lastTimestamp=animation.lastTimestamp,startTimestamp=animation.startTimestamp,current=animation.current,initialVelocity=animation.initialVelocity,velocity=animation.velocity;var deltaTime=Math.min(now-lastTimestamp,64);var clampIndex=initialVelocity>0?1:0;var derivative=0;if(current<config.clamp[0]||current>config.clamp[1]){derivative=current-config.clamp[clampIndex];}if(derivative!==0){animation.springActive=true;}else if(derivative===0&&animation.springActive){animation.current=config.clamp[clampIndex];return true;}var v=velocity*Math.exp(-(1-config.deceleration)*(now-startTimestamp)*SLOPE_FACTOR)-derivative*config.rubberBandFactor;animation.current=current+v*config.velocityFactor*deltaTime/1000;animation.velocity=v;animation.lastTimestamp=now;return false;};}else{decay=function decay(animation,now){var lastTimestamp=animation.lastTimestamp,startTimestamp=animation.startTimestamp,initialVelocity=animation.initialVelocity,current=animation.current,velocity=animation.velocity;var deltaTime=Math.min(now-lastTimestamp,64);var v=velocity*Math.exp(-(1-config.deceleration)*(now-startTimestamp)*SLOPE_FACTOR);animation.current=current+v*config.velocityFactor*deltaTime/1000;animation.velocity=v;animation.lastTimestamp=now;if(config.clamp){if(initialVelocity<0&&animation.current<=config.clamp[0]){animation.current=config.clamp[0];return true;}else if(initialVelocity>0&&animation.current>=config.clamp[1]){animation.current=config.clamp[1];return true;}}return Math.abs(v)<VELOCITY_EPS;};}function validateConfig(){if(config.clamp){if(!Array.isArray(config.clamp)){throw Error(`config.clamp must be an array but is ${typeof config.clamp}`);}if(config.clamp.length!==2){throw Error(`clamp array must contain 2 items but is given ${config.clamp.length}`);}}if(config.velocityFactor<=0){throw Error(`config.velocityFactor must be greather then 0 but is ${config.velocityFactor}`);}if(config.rubberBandEffect&&!config.clamp){throw Error('You need to set `clamp` property when using `rubberBandEffect`.');}}function onStart(animation,value,now){animation.current=value;animation.lastTimestamp=now;animation.startTimestamp=now;animation.initialVelocity=config.velocity;validateConfig();}return{onFrame:decay,onStart:onStart,callback:callback,velocity:(_config$velocity=config.velocity)!=null?_config$velocity:0,initialVelocity:0,current:0,lastTimestamp:0,startTimestamp:0};};_f._closure={userConfig:userConfig,Platform:Platform,callback:callback};_f.__initData=_worklet_3089802775232_init_data;_f.__workletHash=3089802775232;return _f;}());};_f._closure={defineAnimation:defineAnimation,Platform:Platform};_f.__initData=_worklet_14595906221861_init_data;_f.__workletHash=14595906221861;return _f;}();","map":{"version":3,"mappings":"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","names":["defineAnimation","withDecay","userConfig","callback","config","deceleration","velocityFactor","velocity","rubberBandFactor","Object","keys","forEach","key","VELOCITY_EPS","Platform","OS","SLOPE_FACTOR","decay","rubberBandEffect","animation","now","lastTimestamp","startTimestamp","current","initialVelocity","deltaTime","Math","min","clampIndex","derivative","clamp","springActive","v","exp","abs","validateConfig","Array","isArray","Error","length","onStart","value","onFrame"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/animation/decay.ts"],"sourcesContent":["import { defineAnimation } from './util';\nimport {\n  Animation,\n  AnimationCallback,\n  AnimationObject,\n  AnimatableValue,\n  Timestamp,\n} from '../commonTypes';\nimport { Platform } from 'react-native';\n\ninterface DecayConfig {\n  deceleration?: number;\n  velocityFactor?: number;\n  clamp?: number[];\n  velocity?: number;\n}\n\ninterface DefaultDecayConfig {\n  deceleration: number;\n  velocityFactor: number;\n  clamp?: number[];\n  velocity: number;\n  rubberBandEffect?: boolean;\n  rubberBandFactor: number;\n}\n\nexport interface DecayAnimation extends Animation<DecayAnimation> {\n  lastTimestamp: Timestamp;\n  startTimestamp: Timestamp;\n  initialVelocity: number;\n  velocity: number;\n  current: AnimatableValue;\n}\n\nexport interface InnerDecayAnimation\n  extends Omit<DecayAnimation, 'current'>,\n    AnimationObject {\n  current: number;\n}\n\nexport function withDecay(\n  userConfig: DecayConfig,\n  callback?: AnimationCallback\n): Animation<DecayAnimation> {\n  'worklet';\n\n  return defineAnimation<DecayAnimation>(0, () => {\n    'worklet';\n    const config: DefaultDecayConfig = {\n      deceleration: 0.998,\n      velocityFactor: 1,\n      velocity: 0,\n      rubberBandFactor: 0.6,\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach(\n        (key) =>\n          ((config as any)[key] = userConfig[key as keyof typeof userConfig])\n      );\n    }\n\n    const VELOCITY_EPS = Platform.OS !== 'web' ? 1 : 1 / 20;\n    const SLOPE_FACTOR = 0.1;\n\n    let decay: (animation: InnerDecayAnimation, now: number) => boolean;\n\n    if (config.rubberBandEffect) {\n      decay = (animation: InnerDecayAnimation, now: number): boolean => {\n        const {\n          lastTimestamp,\n          startTimestamp,\n          current,\n          initialVelocity,\n          velocity,\n        } = animation;\n\n        const deltaTime = Math.min(now - lastTimestamp, 64);\n        const clampIndex = initialVelocity > 0 ? 1 : 0;\n        let derivative = 0;\n        if (current < config.clamp![0] || current > config.clamp![1]) {\n          derivative = current - config.clamp![clampIndex];\n        }\n\n        if (derivative !== 0) {\n          animation.springActive = true;\n        } else if (derivative === 0 && animation.springActive) {\n          animation.current = config.clamp![clampIndex];\n          return true;\n        }\n\n        const v =\n          velocity *\n            Math.exp(\n              -(1 - config.deceleration) * (now - startTimestamp) * SLOPE_FACTOR\n            ) -\n          derivative * config.rubberBandFactor;\n\n        animation.current =\n          current + (v * config.velocityFactor * deltaTime) / 1000;\n        animation.velocity = v;\n        animation.lastTimestamp = now;\n        return false;\n      };\n    } else {\n      decay = (animation: InnerDecayAnimation, now: number): boolean => {\n        const {\n          lastTimestamp,\n          startTimestamp,\n          initialVelocity,\n          current,\n          velocity,\n        } = animation;\n\n        const deltaTime = Math.min(now - lastTimestamp, 64);\n        const v =\n          velocity *\n          Math.exp(\n            -(1 - config.deceleration) * (now - startTimestamp) * SLOPE_FACTOR\n          );\n        animation.current =\n          current + (v * config.velocityFactor * deltaTime) / 1000;\n        animation.velocity = v;\n        animation.lastTimestamp = now;\n\n        if (config.clamp) {\n          if (initialVelocity < 0 && animation.current <= config.clamp[0]) {\n            animation.current = config.clamp[0];\n            return true;\n          } else if (\n            initialVelocity > 0 &&\n            animation.current >= config.clamp[1]\n          ) {\n            animation.current = config.clamp[1];\n            return true;\n          }\n        }\n\n        return Math.abs(v) < VELOCITY_EPS;\n      };\n    }\n\n    function validateConfig(): void {\n      if (config.clamp) {\n        if (!Array.isArray(config.clamp)) {\n          throw Error(\n            `config.clamp must be an array but is ${typeof config.clamp}`\n          );\n        }\n        if (config.clamp.length !== 2) {\n          throw Error(\n            `clamp array must contain 2 items but is given ${config.clamp.length}`\n          );\n        }\n      }\n      if (config.velocityFactor <= 0) {\n        throw Error(\n          `config.velocityFactor must be greather then 0 but is ${config.velocityFactor}`\n        );\n      }\n      if (config.rubberBandEffect && !config.clamp) {\n        throw Error(\n          'You need to set `clamp` property when using `rubberBandEffect`.'\n        );\n      }\n    }\n\n    function onStart(\n      animation: DecayAnimation,\n      value: number,\n      now: Timestamp\n    ): void {\n      animation.current = value;\n      animation.lastTimestamp = now;\n      animation.startTimestamp = now;\n      animation.initialVelocity = config.velocity;\n      validateConfig();\n    }\n\n    return {\n      onFrame: decay,\n      onStart,\n      callback,\n      velocity: config.velocity ?? 0,\n      initialVelocity: 0,\n      current: 0,\n      lastTimestamp: 0,\n      startTimestamp: 0,\n    } as DecayAnimation;\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}