{"ast":null,"code":"\n\nvar rtlScripts = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nvar rtlLangs = new Set(['ae',\n'ar',\n'arc',\n'bcc',\n'bqi',\n'ckb',\n'dv',\n'fa', 'far',\n'glk',\n'he', 'iw',\n'khw',\n'ks',\n'ku',\n'mzn',\n'nqo',\n'pnb',\n'ps',\n'sd',\n'ug',\n'ur',\n'yi']);\n\nvar cache = new Map();\n\nexport function isLocaleRTL(locale) {\n  var cachedRTL = cache.get(locale);\n  if (cachedRTL) {\n    return cachedRTL;\n  }\n  var isRTL = false;\n  if (Intl.Locale) {\n    var script = new Intl.Locale(locale).maximize().script;\n    isRTL = rtlScripts.has(script);\n  } else {\n    var lang = locale.split('-')[0];\n    isRTL = rtlLangs.has(lang);\n  }\n  cache.set(locale, isRTL);\n  return isRTL;\n}","map":{"version":3,"names":["rtlScripts","Set","rtlLangs","cache","Map","isLocaleRTL","locale","cachedRTL","get","isRTL","Intl","Locale","script","maximize","has","lang","split","set"],"sources":["/Users/georgebadal/Desktop/PosMate/node_modules/react-native-web/dist/modules/useLocale/isLocaleRTL.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar rtlScripts = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nvar rtlLangs = new Set(['ae',\n// Avestan\n'ar',\n// Arabic\n'arc',\n// Aramaic\n'bcc',\n// Southern Balochi\n'bqi',\n// Bakthiari\n'ckb',\n// Sorani\n'dv',\n// Dhivehi\n'fa', 'far',\n// Persian\n'glk',\n// Gilaki\n'he', 'iw',\n// Hebrew\n'khw',\n// Khowar\n'ks',\n// Kashmiri\n'ku',\n// Kurdish\n'mzn',\n// Mazanderani\n'nqo',\n// N'Ko\n'pnb',\n// Western Punjabi\n'ps',\n// Pashto\n'sd',\n// Sindhi\n'ug',\n// Uyghur\n'ur',\n// Urdu\n'yi' // Yiddish\n]);\n\nvar cache = new Map();\n\n/**\n * Determine the writing direction of a locale\n */\nexport function isLocaleRTL(locale) {\n  var cachedRTL = cache.get(locale);\n  if (cachedRTL) {\n    return cachedRTL;\n  }\n  var isRTL = false;\n  // $FlowFixMe\n  if (Intl.Locale) {\n    // $FlowFixMe\n    var script = new Intl.Locale(locale).maximize().script;\n    isRTL = rtlScripts.has(script);\n  } else {\n    // Fallback to inferring from language\n    var lang = locale.split('-')[0];\n    isRTL = rtlLangs.has(lang);\n  }\n  cache.set(locale, isRTL);\n  return isRTL;\n}"],"mappings":";;AASA,IAAIA,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAC1G,IAAIC,QAAQ,GAAG,IAAID,GAAG,CAAC,CAAC,IAAI;AAE5B,IAAI;AAEJ,KAAK;AAEL,KAAK;AAEL,KAAK;AAEL,KAAK;AAEL,IAAI;AAEJ,IAAI,EAAE,KAAK;AAEX,KAAK;AAEL,IAAI,EAAE,IAAI;AAEV,KAAK;AAEL,IAAI;AAEJ,IAAI;AAEJ,KAAK;AAEL,KAAK;AAEL,KAAK;AAEL,IAAI;AAEJ,IAAI;AAEJ,IAAI;AAEJ,IAAI;AAEJ,IAAI,CACH,CAAC;;AAEF,IAAIE,KAAK,GAAG,IAAIC,GAAG,EAAE;;AAKrB,OAAO,SAASC,WAAW,CAACC,MAAM,EAAE;EAClC,IAAIC,SAAS,GAAGJ,KAAK,CAACK,GAAG,CAACF,MAAM,CAAC;EACjC,IAAIC,SAAS,EAAE;IACb,OAAOA,SAAS;EAClB;EACA,IAAIE,KAAK,GAAG,KAAK;EAEjB,IAAIC,IAAI,CAACC,MAAM,EAAE;IAEf,IAAIC,MAAM,GAAG,IAAIF,IAAI,CAACC,MAAM,CAACL,MAAM,CAAC,CAACO,QAAQ,EAAE,CAACD,MAAM;IACtDH,KAAK,GAAGT,UAAU,CAACc,GAAG,CAACF,MAAM,CAAC;EAChC,CAAC,MAAM;IAEL,IAAIG,IAAI,GAAGT,MAAM,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/BP,KAAK,GAAGP,QAAQ,CAACY,GAAG,CAACC,IAAI,CAAC;EAC5B;EACAZ,KAAK,CAACc,GAAG,CAACX,MAAM,EAAEG,KAAK,CAAC;EACxB,OAAOA,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}