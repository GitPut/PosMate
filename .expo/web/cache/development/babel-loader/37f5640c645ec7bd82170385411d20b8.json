{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport EditStoreDetails from \"../../components/EditStoreDetails\";\nimport DropDown from \"../../components/DropDown\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NewUserPayment = function NewUserPayment() {\n  var _useState = useState(\"Pay $50 each month\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    planType = _useState2[0],\n    setplanType = _useState2[1];\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.innerContainer,\n      children: [_jsx(Text, {\n        children: \"Welcome To Divine Pos\"\n      }), _jsx(Text, {\n        children: \"Please enter your busienss details to start!\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          width: '90%'\n        },\n        children: [_jsx(Text, {\n          children: \"Choose plan type\"\n        }), _jsx(DropDown, {\n          label: \"\",\n          options: [\"Pay $50 each month\", \"Pay $480 Per Year/Each month @$40\", \"Test\"],\n          setValue: setplanType,\n          value: planType\n        })]\n      }), _jsx(EditStoreDetails, {\n        customBtnLbl: \"Check Out\"\n      })]\n    })\n  });\n};\nexport default NewUserPayment;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"rgba(31,35,48,1)\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  innerContainer: {\n    backgroundColor: \"white\",\n    width: \"95%\",\n    height: \"90%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 6,\n    padding: 50\n  }\n});","map":{"version":3,"names":["React","useState","EditStoreDetails","DropDown","NewUserPayment","planType","setplanType","styles","container","innerContainer","flexDirection","justifyContent","alignItems","width","StyleSheet","create","backgroundColor","height","borderRadius","padding"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/NewUserPayment.tsx"],"sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport EditStoreDetails from \"components/EditStoreDetails\";\nimport DropDown from \"components/DropDown\";\n\nconst NewUserPayment = () => {\n  const [planType, setplanType] = useState(\"Pay $50 each month\");\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.innerContainer}>\n        <Text>Welcome To Divine Pos</Text>\n        <Text>Please enter your busienss details to start!</Text>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n                      alignItems: \"center\",\n            width: '90%'\n          }}\n        >\n          <Text>Choose plan type</Text>\n          <DropDown\n            label=\"\"\n            options={[\n              \"Pay $50 each month\",\n              \"Pay $480 Per Year/Each month @$40\",\n              \"Test\",\n            ]}\n            setValue={setplanType}\n            value={planType}\n          />\n        </View>\n        <EditStoreDetails customBtnLbl=\"Check Out\"  />\n      </View>\n    </View>\n  );\n};\n\nexport default NewUserPayment;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"rgba(31,35,48,1)\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  innerContainer: {\n    backgroundColor: \"white\",\n    width: \"95%\",\n    height: \"90%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n      borderRadius: 6,\n    padding: 50\n  },\n});\n"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB;AACvB,OAAOC,QAAQ;AAA4B;AAAA;AAE3C,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,gBAAgCH,QAAQ,CAAC,oBAAoB,CAAC;IAAA;IAAvDI,QAAQ;IAAEC,WAAW;EAE5B,OACE,KAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,UAC5B,MAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,cAAe;MAAA,WACjC,KAAC,IAAI;QAAA;MAAA,EAA6B,EAClC,KAAC,IAAI;QAAA;MAAA,EAAoD,EACzD,MAAC,IAAI;QACH,KAAK,EAAE;UACLC,aAAa,EAAE,KAAK;UACpBC,cAAc,EAAE,eAAe;UACrBC,UAAU,EAAE,QAAQ;UAC9BC,KAAK,EAAE;QACT,CAAE;QAAA,WAEF,KAAC,IAAI;UAAA;QAAA,EAAwB,EAC7B,KAAC,QAAQ;UACP,KAAK,EAAC,EAAE;UACR,OAAO,EAAE,CACP,oBAAoB,EACpB,mCAAmC,EACnC,MAAM,CACN;UACF,QAAQ,EAAEP,WAAY;UACtB,KAAK,EAAED;QAAS,EAChB;MAAA,EACG,EACP,KAAC,gBAAgB;QAAC,YAAY,EAAC;MAAW,EAAI;IAAA;EACzC,EACF;AAEX,CAAC;AAED,eAAeD,cAAc;AAE7B,IAAMG,MAAM,GAAGO,UAAU,CAACC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,eAAe,EAAE,kBAAkB;IACnCH,KAAK,EAAE,MAAM;IACbI,MAAM,EAAE,MAAM;IACdN,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDH,cAAc,EAAE;IACdO,eAAe,EAAE,OAAO;IACxBH,KAAK,EAAE,KAAK;IACZI,MAAM,EAAE,KAAK;IACbN,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IAClBM,YAAY,EAAE,CAAC;IACjBC,OAAO,EAAE;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}