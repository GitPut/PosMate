{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React from \"react\";\nimport { auth, db } from \"../../state/firebaseConfig\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PlanUpdateTest = function PlanUpdateTest() {\n  var sendToCheckout = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var _auth$currentUser;\n      yield db.collection(\"users\").doc((_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid).collection(\"checkout_sessions\").add({\n        price: \"price_1Mb2s4CIw3L7DOwI5PDx3qKx\",\n        success_url: window.location.origin,\n        cancel_url: window.location.origin\n      }).then(function (docRef) {\n        docRef.onSnapshot(function () {\n          var _ref2 = _asyncToGenerator(function* (snap) {\n            var _snap$data = snap.data(),\n              error = _snap$data.error,\n              sessionId = _snap$data.sessionId;\n            if (error) {\n              alert(\"An error occurred: \" + error.message);\n            }\n            if (sessionId) {\n              var stripe = yield loadStripe(\"\");\n\n              console.log(\"redirecting\");\n              yield stripe.redirectToCheckout({\n                sessionId: sessionId\n              });\n            }\n          });\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    return function sendToCheckout() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"PlanUpdateTest\"\n    })\n  });\n};\nexport default PlanUpdateTest;","map":{"version":3,"names":["React","auth","db","loadStripe","PlanUpdateTest","sendToCheckout","collection","doc","currentUser","uid","add","price","success_url","window","location","origin","cancel_url","then","docRef","onSnapshot","snap","data","error","sessionId","alert","message","stripe","console","log","redirectToCheckout"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/PlanUpdateTest.tsx"],"sourcesContent":["import { View, Text } from \"react-native\";\nimport React from \"react\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nconst PlanUpdateTest = () => {\n  const sendToCheckout = async () => {\n    await db\n      .collection(\"users\")\n      .doc(auth.currentUser?.uid)\n      .collection(\"checkout_sessions\")\n      .add({\n        price: \"price_1Mb2s4CIw3L7DOwI5PDx3qKx\", // todo price Id from your products price in the Stripe Dashboard\n        success_url: window.location.origin, // return user to this screen on successful purchase\n        cancel_url: window.location.origin, // return user to this screen on failed purchase\n      })\n      .then((docRef) => {\n        // Wait for the checkoutSession to get attached by the extension\n        docRef.onSnapshot(async (snap) => {\n          const { error, sessionId } = snap.data();\n          if (error) {\n            // Show an error to your customer and inspect\n            // your Cloud Function logs in the Firebase console.\n            alert(`An error occurred: ${error.message}`);\n          }\n\n          if (sessionId) {\n            // We have a session, let's redirect to Checkout\n            // Init Stripe\n            const stripe = await loadStripe(\n              \"\" // todo enter your public stripe key here\n            );\n            console.log(`redirecting`);\n            await stripe.redirectToCheckout({ sessionId });\n          }\n        });\n      });\n  };\n\n  //   const sendToCustomerPortal = async () => {\n  //     // had to update firebase.app().functions() to firebase.default.functions() and\n  //     // removed the region from the functions call (from stripe firebase extension docs)\n  //     const functionRef = firebase\n  //       .functions()\n  //       .httpsCallable('ext-firestore-stripe-subscriptions-createPortalLink');\n  //     const { data } = await functionRef({ returnUrl: window.location.origin });\n  //     window.location.assign(data.url);\n  //   }\n\n  return (\n    <View>\n      <Text>PlanUpdateTest</Text>\n    </View>\n  );\n};\n\nexport default PlanUpdateTest;\n"],"mappings":";;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,EAAE;AACjB,SAASC,UAAU,QAAQ,mBAAmB;AAAC;AAE/C,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,IAAMC,cAAc;IAAA,6BAAG,aAAY;MAAA;MACjC,MAAMH,EAAE,CACLI,UAAU,CAAC,OAAO,CAAC,CACnBC,GAAG,sBAACN,IAAI,CAACO,WAAW,qBAAhB,kBAAkBC,GAAG,CAAC,CAC1BH,UAAU,CAAC,mBAAmB,CAAC,CAC/BI,GAAG,CAAC;QACHC,KAAK,EAAE,gCAAgC;QACvCC,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM;QACnCC,UAAU,EAAEH,MAAM,CAACC,QAAQ,CAACC;MAC9B,CAAC,CAAC,CACDE,IAAI,CAAC,UAACC,MAAM,EAAK;QAEhBA,MAAM,CAACC,UAAU;UAAA,8BAAC,WAAOC,IAAI,EAAK;YAChC,iBAA6BA,IAAI,CAACC,IAAI,EAAE;cAAhCC,KAAK,cAALA,KAAK;cAAEC,SAAS,cAATA,SAAS;YACxB,IAAID,KAAK,EAAE;cAGTE,KAAK,yBAAuBF,KAAK,CAACG,OAAO,CAAG;YAC9C;YAEA,IAAIF,SAAS,EAAE;cAGb,IAAMG,MAAM,SAASvB,UAAU,CAC7B,EAAE,CACH;;cACDwB,OAAO,CAACC,GAAG,eAAe;cAC1B,MAAMF,MAAM,CAACG,kBAAkB,CAAC;gBAAEN,SAAS,EAATA;cAAU,CAAC,CAAC;YAChD;UACF,CAAC;UAAA;YAAA;UAAA;QAAA,IAAC;MACJ,CAAC,CAAC;IACN,CAAC;IAAA,gBA/BKlB,cAAc;MAAA;IAAA;EAAA,GA+BnB;;EAYD,OACE,KAAC,IAAI;IAAA,UACH,KAAC,IAAI;MAAA;IAAA;EAAsB,EACtB;AAEX,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module"}