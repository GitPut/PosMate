{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Entypo as EntypoIcon, Ionicons, FontAwesome as FontAwesomeIcon, MaterialCommunityIcons as MaterialCommunityIconsIcon } from \"@expo/vector-icons\";\nimport OrderItem from \"./components/OrderItem\";\nimport { auth, db } from \"../../../state/firebaseConfig\";\nimport { customersList, setCartState, setCustomersList, storeDetailState } from \"../../../state/state\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\nfunction CustomerDetailsModal(_ref) {\n  var _customerSelected$add, _customerSelected$add2, _customerSelected$add3, _customerSelected$add4, _customerSelected$ord;\n  var setcustomerSelected = _ref.setcustomerSelected,\n    customerSelected = _ref.customerSelected,\n    setOngoingDelivery = _ref.setOngoingDelivery,\n    setNameForDelivery = _ref.setNameForDelivery,\n    setPhoneForDelivery = _ref.setPhoneForDelivery,\n    setAddressForDelivery = _ref.setAddressForDelivery,\n    setBuzzCodeForDelivery = _ref.setBuzzCodeForDelivery,\n    setUnitNumberForDelivery = _ref.setUnitNumberForDelivery,\n    setDeliveryChecked = _ref.setDeliveryChecked,\n    setsavedCustomerDetails = _ref.setsavedCustomerDetails,\n    closeAll = _ref.closeAll;\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height,\n    width = _useWindowDimensions.width;\n  var customers = customersList.use();\n  var storeDetails = storeDetailState.use();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    edit = _useState2[0],\n    setEdit = _useState2[1];\n  var _useState3 = useState(customerSelected.name),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newName = _useState4[0],\n    setnewName = _useState4[1];\n  var _useState5 = useState(customerSelected.phone),\n    _useState6 = _slicedToArray(_useState5, 2),\n    newPhoneNumber = _useState6[0],\n    setnewPhoneNumber = _useState6[1];\n  var _useState7 = useState(customerSelected.address),\n    _useState8 = _slicedToArray(_useState7, 2),\n    newAddress = _useState8[0],\n    setnewAddress = _useState8[1];\n  var _removeCustomerOrder = function removeCustomerOrder(removeIndex) {\n    var _auth$currentUser;\n    var updatedOrderHistory = structuredClone(customerSelected.orders);\n    updatedOrderHistory.splice(removeIndex, 1);\n    db.collection(\"users\").doc((_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid).collection(\"customers\").doc(customerSelected.id).update({\n      orders: updatedOrderHistory\n    });\n    setcustomerSelected(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        orders: updatedOrderHistory\n      });\n    });\n  };\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      setcustomerSelected(null);\n      closeAll();\n    },\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: height,\n      width: width\n    },\n    activeOpacity: 1,\n    children: _jsx(TouchableWithoutFeedback, {\n      children: _jsx(\"div\", {\n        style: {\n          cursor: \"default\"\n        },\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [_jsxs(View, {\n            style: styles.topGroup,\n            children: [_jsxs(View, {\n              style: styles.topRow,\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  setcustomerSelected(null);\n                },\n                children: _jsx(EntypoIcon, {\n                  name: \"chevron-left\",\n                  style: styles.goBackIcon\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  setcustomerSelected(null);\n                  closeAll();\n                },\n                children: _jsx(Ionicons, {\n                  name: \"md-close\",\n                  style: styles.closeIcon\n                })\n              })]\n            }), edit ? _jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\"\n              },\n              children: [_jsx(TextInput, {\n                placeholder: \"Name\",\n                style: {\n                  height: 40,\n                  backgroundColor: \"white\",\n                  borderRadius: 10,\n                  padding: 10,\n                  fontSize: 20,\n                  fontWeight: \"bold\",\n                  textAlign: \"center\"\n                },\n                value: newName,\n                onChangeText: function onChangeText(val) {\n                  return setnewName(val);\n                }\n              }), _jsx(Text, {\n                style: styles.georgesOrders,\n                children: \"'s Orders\"\n              })]\n            }) : _jsxs(Text, {\n              style: styles.georgesOrders,\n              children: [customerSelected.name, \"'s Orders\"]\n            })]\n          }), _jsxs(View, {\n            style: styles.bottomContainer,\n            children: [_jsxs(View, {\n              style: styles.customerDetailsContainer,\n              children: [_jsxs(View, {\n                style: styles.customerPhoneNumberRow,\n                children: [_jsx(FontAwesomeIcon, {\n                  name: \"phone\",\n                  style: styles.phoneIcon\n                }), edit ? _jsx(TextInput, {\n                  placeholder: \"Phone Number\",\n                  style: {\n                    height: 40,\n                    backgroundColor: \"white\",\n                    borderRadius: 10,\n                    padding: 10,\n                    fontSize: 20,\n                    textAlign: \"center\"\n                  },\n                  value: newPhoneNumber,\n                  onChangeText: function onChangeText(val) {\n                    return setnewPhoneNumber(val);\n                  }\n                }) : _jsx(Text, {\n                  style: styles.phoneNumber,\n                  children: customerSelected.phone\n                })]\n              }), _jsxs(View, {\n                style: styles.addressRow,\n                children: [_jsx(EntypoIcon, {\n                  name: \"home\",\n                  style: styles.addressIcon\n                }), edit ? _jsxs(View, {\n                  style: styles.addressTxtBox,\n                  children: [_jsx(View, {\n                    style: {\n                      width: \"60%\",\n                      height: \"100%\"\n                    },\n                    children: _jsx(GooglePlacesAutocomplete, {\n                      apiOptions: {\n                        region: \"CA\"\n                      },\n                      debounce: 800,\n                      apiKey: GOOGLE_API_KEY\n                      ,\n                      selectProps: {\n                        newAddress: newAddress,\n                        onChange: setnewAddress,\n                        placeholder: \"Enter customer address\",\n                        defaultValue: newAddress,\n                        menuPortalTarget: document.body,\n                        styles: {\n                          menuPortal: function menuPortal(base) {\n                            return _objectSpread(_objectSpread({}, base), {}, {\n                              zIndex: 9999\n                            });\n                          }\n                        }\n                      },\n                      renderSuggestions: function renderSuggestions(active, suggestions, onSelectSuggestion) {\n                        return _jsx(\"div\", {\n                          style: {\n                            width: \"80%\"\n                          },\n                          children: suggestions.map(function (suggestion) {\n                            return _jsx(\"div\", {\n                              className: \"suggestion\",\n                              onClick: function onClick(event) {\n                                onSelectSuggestion(suggestion, event);\n                              },\n                              children: suggestion.description\n                            });\n                          })\n                        });\n                      }\n                    })\n                  }), _jsx(TextInput, {\n                    placeholder: \"Unit #\",\n                    style: {\n                      width: \"18%\",\n                      height: \"100%\",\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                      borderWidth: 1,\n                      borderColor: \"#000000\",\n                      borderRadius: 10,\n                      padding: 10\n                    }\n                  }), _jsx(TextInput, {\n                    placeholder: \"Buzz #\",\n                    style: {\n                      width: \"18%\",\n                      height: \"100%\",\n                      backgroundColor: \"rgba(255,255,255,1)\",\n                      borderWidth: 1,\n                      borderColor: \"#000000\",\n                      borderRadius: 10,\n                      padding: 10\n                    }\n                  })]\n                }) : _jsx(_Fragment, {\n                  children: customerSelected.address ? _jsx(_Fragment, {\n                    children: !customerSelected.unitNumber && !customerSelected.buzzCode ? _jsx(Text, {\n                      style: styles.address,\n                      children: (_customerSelected$add = customerSelected.address) != null && _customerSelected$add.label ? (_customerSelected$add2 = customerSelected.address) == null ? void 0 : _customerSelected$add2.label : customerSelected.address ? customerSelected.address : null\n                    }) : _jsxs(View, {\n                      style: styles.addressGroup,\n                      children: [_jsx(Text, {\n                        style: styles.address,\n                        children: (_customerSelected$add3 = customerSelected.address) != null && _customerSelected$add3.label ? (_customerSelected$add4 = customerSelected.address) == null ? void 0 : _customerSelected$add4.label : customerSelected.address ? customerSelected.address : null\n                      }), !customerSelected.unitNumber && !customerSelected.buzzCode && _jsxs(View, {\n                        style: styles.addressExtraDetailsRow,\n                        children: [customerSelected.unitNumber && _jsxs(Text, {\n                          style: styles.unitNumber,\n                          children: [\"Unit #: \", customerSelected.unitNumber]\n                        }), customerSelected.buzzCode && _jsxs(Text, {\n                          style: styles.buzzCode,\n                          children: [\"Buzz Code: \", customerSelected.buzzCode]\n                        })]\n                      })]\n                    })\n                  }) : _jsx(Text, {\n                    style: styles.address,\n                    children: \"No Address\"\n                  })\n                })]\n              }), _jsxs(View, {\n                style: styles.customerOptionsBtnRow,\n                children: [_jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    setEdit(true);\n                  },\n                  style: {\n                    marginRight: 15\n                  },\n                  children: _jsx(MaterialCommunityIconsIcon, {\n                    name: \"pencil\",\n                    style: styles.editCustomerIcon\n                  })\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    var _auth$currentUser2;\n                    db.collection(\"users\").doc((_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.uid).collection(\"customers\").doc(customerSelected.id).delete();\n                    setCustomersList(function () {\n                      return customers.filter(function (e) {\n                        return e.id !== customerSelected.id;\n                      });\n                    });\n                    setcustomerSelected(null);\n                  },\n                  children: _jsx(FontAwesomeIcon, {\n                    name: \"trash\",\n                    style: styles.deleteIcon\n                  })\n                })]\n              })]\n            }), _jsx(View, {\n              style: styles.orderScrollView,\n              children: _jsx(ScrollView, {\n                horizontal: false,\n                contentContainerStyle: styles.orderScrollView_contentContainerStyle,\n                children: (_customerSelected$ord = customerSelected.orders) == null ? void 0 : _customerSelected$ord.map(function (prevOrder, prevOrderIndex) {\n                  return _jsx(OrderItem, {\n                    prevOrder: prevOrder,\n                    prevOrderIndex: prevOrderIndex,\n                    setOrderPickUp: function setOrderPickUp() {\n                      setCartState(prevOrder.cart);\n                      setOngoingDelivery(true);\n                      setNameForDelivery(customerSelected.name);\n                      setPhoneForDelivery(customerSelected.phone);\n                      setAddressForDelivery(customerSelected.address);\n                      setBuzzCodeForDelivery(customerSelected.buzzCode);\n                      setUnitNumberForDelivery(customerSelected.unitNumber);\n                      setDeliveryChecked(false);\n                      setcustomerSelected(null);\n                      closeAll();\n                    },\n                    setOrderDelivery: function setOrderDelivery() {\n                      setCartState(prevOrder.cart);\n                      setOngoingDelivery(true);\n                      setNameForDelivery(customerSelected.name);\n                      setPhoneForDelivery(customerSelected.phone);\n                      setAddressForDelivery(customerSelected.address);\n                      setBuzzCodeForDelivery(customerSelected.buzzCode);\n                      setUnitNumberForDelivery(customerSelected.unitNumber);\n                      setDeliveryChecked(true);\n                      setcustomerSelected(null);\n                      closeAll();\n                    },\n                    isDeliverable: storeDetails.acceptDelivery && customerSelected.address,\n                    removeCustomerOrder: function removeCustomerOrder() {\n                      _removeCustomerOrder(prevOrderIndex);\n                    }\n                  }, prevOrderIndex);\n                })\n              })\n            }), _jsx(View, {\n              style: styles.addNewOrderRow,\n              children: _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  setsavedCustomerDetails(customerSelected);\n                  setOngoingDelivery(true);\n                  setNameForDelivery(customerSelected.name);\n                  setPhoneForDelivery(customerSelected.phone);\n                  setAddressForDelivery(customerSelected.address);\n                  setBuzzCodeForDelivery(customerSelected.buzzCode);\n                  setUnitNumberForDelivery(customerSelected.unitNumber);\n                  setDeliveryChecked(false);\n                  setcustomerSelected(null);\n                  closeAll();\n                },\n                children: _jsx(Text, {\n                  style: styles.addNewOrder,\n                  children: \"+ Add New Order\"\n                })\n              })\n            })]\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    backgroundColor: \"rgba(255,255,255,1)\",\n    width: 540,\n    height: 608\n  },\n  topGroup: {\n    width: 493,\n    height: 59,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginTop: 13\n  },\n  topRow: {\n    width: 493,\n    height: 28,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  goBackIcon: {\n    color: \"rgba(0,0,0,1)\",\n    fontSize: 40\n  },\n  closeIcon: {\n    color: \"rgba(0,0,0,1)\",\n    fontSize: 40\n  },\n  georgesOrders: {\n    fontWeight: \"700\",\n    color: \"#121212\",\n    fontSize: 20\n  },\n  bottomContainer: {\n    width: 454,\n    height: 454,\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\"\n  },\n  customerDetailsContainer: {\n    width: 439,\n    height: 157,\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    borderRadius: 10,\n    backgroundColor: \"#edf1fe\"\n  },\n  customerPhoneNumberRow: {\n    width: 395,\n    height: 35,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    paddingTop: 0,\n    marginTop: 20\n  },\n  phoneIcon: {\n    color: \"#1c294e\",\n    fontSize: 35,\n    paddingRight: 15\n  },\n  phoneNumber: {\n    color: \"#121212\",\n    fontSize: 15\n  },\n  addressRow: {\n    width: 395,\n    height: 42,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginTop: 15\n  },\n  addressIcon: {\n    color: \"#1c294e\",\n    fontSize: 35,\n    paddingRight: 10\n  },\n  addressGroup: {\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\"\n  },\n  address: {\n    color: \"#121212\",\n    fontSize: 15\n  },\n  addressExtraDetailsRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  unitNumber: {\n    color: \"#121212\",\n    fontSize: 15,\n    marginRight: 30\n  },\n  buzzCode: {\n    color: \"#121212\",\n    fontSize: 15\n  },\n  customerOptionsBtnRow: {\n    width: 395,\n    height: 35,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  editCustomerIcon: {\n    color: \"#1c294e\",\n    fontSize: 32\n  },\n  deleteIcon: {\n    color: \"#1c294e\",\n    fontSize: 32\n  },\n  orderScrollView: {\n    height: 239\n  },\n  orderScrollView_contentContainerStyle: {\n    paddingTop: 20,\n    paddingRight: 15\n  },\n  addNewOrderRow: {\n    width: 439,\n    height: 18,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\"\n  },\n  addNewOrder: {\n    color: \"#121212\",\n    fontSize: 15,\n    textDecorationLine: \"underline\"\n  }\n});\nexport default CustomerDetailsModal;","map":{"version":3,"names":["React","useState","Entypo","EntypoIcon","Ionicons","FontAwesome","FontAwesomeIcon","MaterialCommunityIcons","MaterialCommunityIconsIcon","OrderItem","auth","db","customersList","setCartState","setCustomersList","storeDetailState","GooglePlacesAutocomplete","GOOGLE_API_KEY","CustomerDetailsModal","setcustomerSelected","customerSelected","setOngoingDelivery","setNameForDelivery","setPhoneForDelivery","setAddressForDelivery","setBuzzCodeForDelivery","setUnitNumberForDelivery","setDeliveryChecked","setsavedCustomerDetails","closeAll","useWindowDimensions","height","width","customers","use","storeDetails","edit","setEdit","name","newName","setnewName","phone","newPhoneNumber","setnewPhoneNumber","address","newAddress","setnewAddress","removeCustomerOrder","removeIndex","updatedOrderHistory","structuredClone","orders","splice","collection","doc","currentUser","uid","id","update","prev","justifyContent","alignItems","cursor","styles","container","topGroup","topRow","goBackIcon","closeIcon","flexDirection","backgroundColor","borderRadius","padding","fontSize","fontWeight","textAlign","val","georgesOrders","bottomContainer","customerDetailsContainer","customerPhoneNumberRow","phoneIcon","phoneNumber","addressRow","addressIcon","addressTxtBox","region","onChange","placeholder","defaultValue","menuPortalTarget","document","body","menuPortal","base","zIndex","active","suggestions","onSelectSuggestion","map","suggestion","event","description","borderWidth","borderColor","unitNumber","buzzCode","label","addressGroup","addressExtraDetailsRow","customerOptionsBtnRow","marginRight","editCustomerIcon","delete","filter","e","deleteIcon","orderScrollView","orderScrollView_contentContainerStyle","prevOrder","prevOrderIndex","cart","acceptDelivery","addNewOrderRow","addNewOrder","StyleSheet","create","marginTop","color","paddingTop","paddingRight","marginBottom","textDecorationLine"],"sources":["/Users/peterputros/Desktop/PosMate/components/modalsNew/SavedCustomersModal/CustomerDetailsModal.tsx"],"sourcesContent":["import React, { Component, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  useWindowDimensions,\n  TextInput,\n} from \"react-native\";\nimport {\n  Entypo as EntypoIcon,\n  Ionicons,\n  FontAwesome as FontAwesomeIcon,\n  MaterialCommunityIcons as MaterialCommunityIconsIcon,\n  MaterialIcons as MaterialIconsIcon,\n} from \"@expo/vector-icons\";\nimport OrderItem from \"./components/OrderItem\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport {\n  customersList,\n  setCartState,\n  setCustomersList,\n  storeDetailState,\n} from \"state/state\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\n\nconst GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\n\nfunction CustomerDetailsModal({\n  setcustomerSelected,\n  customerSelected,\n  setOngoingDelivery,\n  setNameForDelivery,\n  setPhoneForDelivery,\n  setAddressForDelivery,\n  setBuzzCodeForDelivery,\n  setUnitNumberForDelivery,\n  setDeliveryChecked,\n  setsavedCustomerDetails,\n  closeAll,\n}) {\n  const { height, width } = useWindowDimensions();\n  const customers = customersList.use();\n  const storeDetails = storeDetailState.use();\n  const [edit, setEdit] = useState(false);\n  const [newName, setnewName] = useState(customerSelected.name);\n  const [newPhoneNumber, setnewPhoneNumber] = useState(customerSelected.phone);\n  const [newAddress, setnewAddress] = useState(customerSelected.address);\n\n  const removeCustomerOrder = (removeIndex) => {\n    const updatedOrderHistory = structuredClone(customerSelected.orders);\n    updatedOrderHistory.splice(removeIndex, 1);\n    db.collection(\"users\")\n      .doc(auth.currentUser?.uid)\n      .collection(\"customers\")\n      .doc(customerSelected.id)\n      .update({\n        orders: updatedOrderHistory,\n      });\n    setcustomerSelected((prev) => ({ ...prev, orders: updatedOrderHistory }));\n  };\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        setcustomerSelected(null);\n        closeAll();\n      }}\n      style={{\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: height,\n        width: width,\n      }}\n      activeOpacity={1}\n    >\n      <TouchableWithoutFeedback>\n        <div style={{ cursor: \"default\" }}>\n          <View style={styles.container}>\n            <View style={styles.topGroup}>\n              <View style={styles.topRow}>\n                <TouchableOpacity\n                  onPress={() => {\n                    setcustomerSelected(null);\n                  }}\n                >\n                  <EntypoIcon name=\"chevron-left\" style={styles.goBackIcon} />\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={() => {\n                    setcustomerSelected(null);\n                    closeAll();\n                  }}\n                >\n                  <Ionicons name=\"md-close\" style={styles.closeIcon} />\n                </TouchableOpacity>\n              </View>\n              {edit ? (\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <TextInput\n                    placeholder=\"Name\"\n                    style={{\n                      height: 40,\n                      backgroundColor: \"white\",\n                      borderRadius: 10,\n                      padding: 10,\n                      fontSize: 20,\n                      fontWeight: \"bold\",\n                      textAlign: \"center\",\n                    }}\n                    value={newName}\n                    onChangeText={(val) => setnewName(val)}\n                  />\n                  <Text style={styles.georgesOrders}>'s Orders</Text>\n                </View>\n              ) : (\n                <Text style={styles.georgesOrders}>\n                  {customerSelected.name}'s Orders\n                </Text>\n              )}\n            </View>\n            <View style={styles.bottomContainer}>\n              <View style={styles.customerDetailsContainer}>\n                <View style={styles.customerPhoneNumberRow}>\n                  <FontAwesomeIcon name=\"phone\" style={styles.phoneIcon} />\n                  {edit ? (\n                    <TextInput\n                      placeholder=\"Phone Number\"\n                      style={{\n                        height: 40,\n                        backgroundColor: \"white\",\n                        borderRadius: 10,\n                        padding: 10,\n                        fontSize: 20,\n                        textAlign: \"center\",\n                      }}\n                      value={newPhoneNumber}\n                      onChangeText={(val) => setnewPhoneNumber(val)}\n                    />\n                  ) : (\n                    <Text style={styles.phoneNumber}>\n                      {customerSelected.phone}\n                    </Text>\n                  )}\n                </View>\n                <View style={styles.addressRow}>\n                  <EntypoIcon name=\"home\" style={styles.addressIcon} />\n                  {edit ? (\n                    <View style={styles.addressTxtBox}>\n                      <View style={{ width: \"60%\", height: \"100%\" }}>\n                        <GooglePlacesAutocomplete\n                          apiOptions={{\n                            region: \"CA\",\n                          }}\n                          debounce={800}\n                          apiKey={GOOGLE_API_KEY}\n                          // onSelect={handleAddress}\n                          selectProps={{\n                            newAddress,\n                            onChange: setnewAddress,\n                            placeholder: \"Enter customer address\",\n                            defaultValue: newAddress,\n                            menuPortalTarget: document.body,\n                            styles: {\n                              menuPortal: (base) => ({\n                                ...base,\n                                zIndex: 9999,\n                              }),\n                            },\n                          }}\n                          renderSuggestions={(\n                            active,\n                            suggestions,\n                            onSelectSuggestion\n                          ) => (\n                            <div style={{ width: \"80%\" }}>\n                              {suggestions.map((suggestion) => (\n                                <div\n                                  className=\"suggestion\"\n                                  onClick={(event) => {\n                                    onSelectSuggestion(suggestion, event);\n                                  }}\n                                >\n                                  {suggestion.description}\n                                </div>\n                              ))}\n                            </div>\n                          )}\n                        />\n                      </View>\n                      <TextInput\n                        placeholder=\"Unit #\"\n                        style={{\n                          width: \"18%\",\n                          height: \"100%\",\n                          backgroundColor: \"rgba(255,255,255,1)\",\n                          borderWidth: 1,\n                          borderColor: \"#000000\",\n                          borderRadius: 10,\n                          padding: 10,\n                        }}\n                      />\n                      <TextInput\n                        placeholder=\"Buzz #\"\n                        style={{\n                          width: \"18%\",\n                          height: \"100%\",\n                          backgroundColor: \"rgba(255,255,255,1)\",\n                          borderWidth: 1,\n                          borderColor: \"#000000\",\n                          borderRadius: 10,\n                          padding: 10,\n                        }}\n                      />\n                    </View>\n                  ) : (\n                    <>\n                      {customerSelected.address ? (\n                        <>\n                          {!customerSelected.unitNumber &&\n                          !customerSelected.buzzCode ? (\n                            <Text style={styles.address}>\n                              {customerSelected.address?.label\n                                ? customerSelected.address?.label\n                                : customerSelected.address\n                                ? customerSelected.address\n                                : null}\n                            </Text>\n                          ) : (\n                            <View style={styles.addressGroup}>\n                              <Text style={styles.address}>\n                                {customerSelected.address?.label\n                                  ? customerSelected.address?.label\n                                  : customerSelected.address\n                                  ? customerSelected.address\n                                  : null}\n                              </Text>\n                              {!customerSelected.unitNumber &&\n                                !customerSelected.buzzCode && (\n                                  <View style={styles.addressExtraDetailsRow}>\n                                    {customerSelected.unitNumber && (\n                                      <Text style={styles.unitNumber}>\n                                        Unit #: {customerSelected.unitNumber}\n                                      </Text>\n                                    )}\n                                    {customerSelected.buzzCode && (\n                                      <Text style={styles.buzzCode}>\n                                        Buzz Code: {customerSelected.buzzCode}\n                                      </Text>\n                                    )}\n                                  </View>\n                                )}\n                            </View>\n                          )}\n                        </>\n                      ) : (\n                        <Text style={styles.address}>No Address</Text>\n                      )}\n                    </>\n                  )}\n                </View>\n                <View style={styles.customerOptionsBtnRow}>\n                  <TouchableOpacity\n                    onPress={() => {\n                      setEdit(true);\n                    }}\n                    style={{ marginRight: 15 }}\n                  >\n                    <MaterialCommunityIconsIcon\n                      name=\"pencil\"\n                      style={styles.editCustomerIcon}\n                    />\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    onPress={() => {\n                      db.collection(\"users\")\n                        .doc(auth.currentUser?.uid)\n                        .collection(\"customers\")\n                        .doc(customerSelected.id)\n                        .delete();\n                      setCustomersList(() =>\n                        customers.filter((e) => e.id !== customerSelected.id)\n                      );\n                      setcustomerSelected(null);\n                    }}\n                  >\n                    <FontAwesomeIcon name=\"trash\" style={styles.deleteIcon} />\n                  </TouchableOpacity>\n                </View>\n              </View>\n              <View style={styles.orderScrollView}>\n                <ScrollView\n                  horizontal={false}\n                  contentContainerStyle={\n                    styles.orderScrollView_contentContainerStyle\n                  }\n                >\n                  {customerSelected.orders?.map((prevOrder, prevOrderIndex) => (\n                    <OrderItem\n                      key={prevOrderIndex}\n                      prevOrder={prevOrder}\n                      prevOrderIndex={prevOrderIndex}\n                      setOrderPickUp={() => {\n                        setCartState(prevOrder.cart);\n                        setOngoingDelivery(true);\n                        setNameForDelivery(customerSelected.name);\n                        setPhoneForDelivery(customerSelected.phone);\n                        setAddressForDelivery(customerSelected.address);\n                        setBuzzCodeForDelivery(customerSelected.buzzCode);\n                        setUnitNumberForDelivery(customerSelected.unitNumber);\n                        setDeliveryChecked(false);\n                        setcustomerSelected(null);\n                        closeAll();\n                      }}\n                      setOrderDelivery={() => {\n                        setCartState(prevOrder.cart);\n                        setOngoingDelivery(true);\n                        setNameForDelivery(customerSelected.name);\n                        setPhoneForDelivery(customerSelected.phone);\n                        setAddressForDelivery(customerSelected.address);\n                        setBuzzCodeForDelivery(customerSelected.buzzCode);\n                        setUnitNumberForDelivery(customerSelected.unitNumber);\n                        setDeliveryChecked(true);\n                        setcustomerSelected(null);\n                        closeAll();\n                      }}\n                      isDeliverable={\n                        storeDetails.acceptDelivery && customerSelected.address\n                      }\n                      removeCustomerOrder={() => {\n                        removeCustomerOrder(prevOrderIndex);\n                      }}\n                    />\n                  ))}\n                </ScrollView>\n              </View>\n              <View style={styles.addNewOrderRow}>\n                <TouchableOpacity\n                  onPress={() => {\n                    setsavedCustomerDetails(customerSelected);\n                    setOngoingDelivery(true);\n                    setNameForDelivery(customerSelected.name);\n                    setPhoneForDelivery(customerSelected.phone);\n                    setAddressForDelivery(customerSelected.address);\n                    setBuzzCodeForDelivery(customerSelected.buzzCode);\n                    setUnitNumberForDelivery(customerSelected.unitNumber);\n                    setDeliveryChecked(false);\n                    setcustomerSelected(null);\n                    closeAll();\n                  }}\n                >\n                  <Text style={styles.addNewOrder}>+ Add New Order</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        </div>\n      </TouchableWithoutFeedback>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    backgroundColor: \"rgba(255,255,255,1)\",\n    width: 540,\n    height: 608,\n  },\n  topGroup: {\n    width: 493,\n    height: 59,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginTop: 13,\n  },\n  topRow: {\n    width: 493,\n    height: 28,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  goBackIcon: {\n    color: \"rgba(0,0,0,1)\",\n    fontSize: 40,\n  },\n  closeIcon: {\n    color: \"rgba(0,0,0,1)\",\n    fontSize: 40,\n  },\n  georgesOrders: {\n    fontWeight: \"700\",\n    color: \"#121212\",\n    fontSize: 20,\n  },\n  bottomContainer: {\n    width: 454,\n    height: 454,\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  customerDetailsContainer: {\n    width: 439,\n    height: 157,\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    borderRadius: 10,\n    backgroundColor: \"#edf1fe\",\n  },\n  customerPhoneNumberRow: {\n    width: 395,\n    height: 35,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    paddingTop: 0,\n    marginTop: 20,\n  },\n  phoneIcon: {\n    color: \"#1c294e\",\n    fontSize: 35,\n    paddingRight: 15,\n  },\n  phoneNumber: {\n    color: \"#121212\",\n    fontSize: 15,\n  },\n  addressRow: {\n    width: 395,\n    height: 42,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginTop: 15,\n  },\n  addressIcon: {\n    color: \"#1c294e\",\n    fontSize: 35,\n    paddingRight: 10,\n  },\n  addressGroup: {\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  address: {\n    color: \"#121212\",\n    fontSize: 15,\n  },\n  addressExtraDetailsRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: 10,\n  },\n  unitNumber: {\n    color: \"#121212\",\n    fontSize: 15,\n    marginRight: 30,\n  },\n  buzzCode: {\n    color: \"#121212\",\n    fontSize: 15,\n  },\n  customerOptionsBtnRow: {\n    width: 395,\n    height: 35,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    marginBottom: 10,\n  },\n  editCustomerIcon: {\n    color: \"#1c294e\",\n    fontSize: 32,\n  },\n  deleteIcon: {\n    color: \"#1c294e\",\n    fontSize: 32,\n  },\n  orderScrollView: {\n    height: 239,\n  },\n  orderScrollView_contentContainerStyle: {\n    paddingTop: 20,\n    paddingRight: 15,\n  },\n  addNewOrderRow: {\n    width: 439,\n    height: 18,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n  addNewOrder: {\n    color: \"#121212\",\n    fontSize: 15,\n    textDecorationLine: \"underline\",\n  },\n});\n\nexport default CustomerDetailsModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}