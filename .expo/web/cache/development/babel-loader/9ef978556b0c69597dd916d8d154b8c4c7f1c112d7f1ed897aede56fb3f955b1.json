{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"itemLayoutAnimation\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ReanimatedView from \"./View\";\nimport createAnimatedComponent from \"../../createAnimatedComponent\";\nvar AnimatedFlatList = createAnimatedComponent(FlatList);\nvar createCellRenderer = function createCellRenderer(itemLayoutAnimation, cellStyle) {\n  var cellRenderer = function cellRenderer(props) {\n    return React.createElement(ReanimatedView, {\n      layout: itemLayoutAnimation,\n      onLayout: props.onLayout,\n      style: cellStyle\n    }, props.children);\n  };\n  return cellRenderer;\n};\nvar ReanimatedFlatlist = forwardRef(function (props, ref) {\n  var itemLayoutAnimation = props.itemLayoutAnimation,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var cellStyle = restProps !== null && restProps !== void 0 && restProps.inverted ? restProps !== null && restProps !== void 0 && restProps.horizontal ? styles.horizontallyInverted : styles.verticallyInverted : undefined;\n  var cellRenderer = React.useMemo(function () {\n    return createCellRenderer(itemLayoutAnimation, cellStyle);\n  }, [cellStyle]);\n  return React.createElement(AnimatedFlatList, _extends({\n    ref: ref\n  }, restProps, {\n    CellRendererComponent: cellRenderer\n  }));\n});\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  }\n});\nexport default ReanimatedFlatlist;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,IAAkBC,UAAU,QAAQ,OAAO;AAAA;AAAA;AAOvD,OAAOC,cAAc;AACrB,OAAOC,uBAAuB;AAI9B,IAAMC,gBAAgB,GAAGD,uBAAuB,CAACE,QAAQ,CAAe;AAUxE,IAAMC,kBAAkB,GAAGA,SAArBA,kBAAkB,CACtBC,mBAA6C,EAC7CC,SAAsB,EACnB;EACH,IAAMC,YAAY,GAAIC,SAAhBD,YAAY,CAAIC,KAA4B,EAAK;IACrD,OACEV,oBAACE,cAAc;MACbS,MAAM,EAAEJ,mBAAoB;MAC5BK,QAAQ,EAAEF,KAAK,CAACE,QAAS;MACzBC,KAAK,EAAEL;IAAU,GAChBE,KAAK,CAACI,QAAQ,CACA;EAErB,CAAC;EAED,OAAOL,YAAY;AACrB,CAAC;AAQD,IAAMM,kBAAwC,GAAGd,UAAU,CACzD,UAACS,KAAmC,EAAEM,GAA2B,EAAK;EACpE,IAAQT,mBAAmB,GAAmBG,KAAK,CAA3CH,mBAAmB;IAAKU,qCAAcP,KAAK;EAEnD,IAAMF,SAAS,GAAGS,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEC,QAAQ,GACjCD,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEE,UAAU,GACnBC,MAAM,CAACC,oBAAoB,GAC3BD,MAAM,CAACE,kBAAkB,GAC3BC,SAAS;EAEb,IAAMd,YAAY,GAAGT,KAAK,CAACwB,OAAO,CAChC;IAAA,OAAMlB,kBAAkB,CAACC,mBAAmB,EAAEC,SAAS,CAAC;EAAA,GACxD,CAACA,SAAS,CAAC,CACZ;EAED,OACER,oBAACI,gBAAgB;IACfY,GAAG,EAAEA;EAAI,GACLC,SAAS;IACbQ,qBAAqB,EAAEhB;EAAa,GACpC;AAEN,CAAC,CACF;AAED,IAAMW,MAAM,GAAGM,UAAU,CAACC,MAAM,CAAC;EAC/BL,kBAAkB,EAAE;IAAEM,SAAS,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;IAAE,CAAC;EAAE,CAAC;EACnDR,oBAAoB,EAAE;IAAEO,SAAS,EAAE,CAAC;MAAEE,MAAM,EAAE,CAAC;IAAE,CAAC;EAAE;AACtD,CAAC,CAAC;AAEF,eAAef,kBAAkB","names":["React","forwardRef","ReanimatedView","createAnimatedComponent","AnimatedFlatList","FlatList","createCellRenderer","itemLayoutAnimation","cellStyle","cellRenderer","props","layout","onLayout","style","children","ReanimatedFlatlist","ref","restProps","inverted","horizontal","styles","horizontallyInverted","verticallyInverted","undefined","useMemo","CellRendererComponent","StyleSheet","create","transform","scaleY","scaleX"],"sources":["/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/component/FlatList.tsx"],"sourcesContent":["import React, { ForwardedRef, forwardRef } from 'react';\nimport {\n  FlatList,\n  FlatListProps,\n  LayoutChangeEvent,\n  StyleSheet,\n} from 'react-native';\nimport ReanimatedView from './View';\nimport createAnimatedComponent from '../../createAnimatedComponent';\nimport { ILayoutAnimationBuilder } from '../layoutReanimation/animationBuilder/commonTypes';\nimport { StyleProps } from '../commonTypes';\n\nconst AnimatedFlatList = createAnimatedComponent(FlatList as any) as any;\n\ninterface AnimatedFlatListProps {\n  onLayout: (event: LayoutChangeEvent) => void;\n  // implicit `children` prop has been removed in @types/react^18.0.0\n  children: React.ReactNode;\n  inverted?: boolean;\n  horizontal?: boolean;\n}\n\nconst createCellRenderer = (\n  itemLayoutAnimation?: ILayoutAnimationBuilder,\n  cellStyle?: StyleProps\n) => {\n  const cellRenderer = (props: AnimatedFlatListProps) => {\n    return (\n      <ReanimatedView\n        layout={itemLayoutAnimation}\n        onLayout={props.onLayout}\n        style={cellStyle}>\n        {props.children}\n      </ReanimatedView>\n    );\n  };\n\n  return cellRenderer;\n};\n\nexport interface ReanimatedFlatListProps<ItemT> extends FlatListProps<ItemT> {\n  itemLayoutAnimation?: ILayoutAnimationBuilder;\n}\n\ntype ReanimatedFlatListFC<T = any> = React.FC<ReanimatedFlatListProps<T>>;\n\nconst ReanimatedFlatlist: ReanimatedFlatListFC = forwardRef(\n  (props: ReanimatedFlatListProps<any>, ref: ForwardedRef<FlatList>) => {\n    const { itemLayoutAnimation, ...restProps } = props;\n\n    const cellStyle = restProps?.inverted\n      ? restProps?.horizontal\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : undefined;\n\n    const cellRenderer = React.useMemo(\n      () => createCellRenderer(itemLayoutAnimation, cellStyle),\n      [cellStyle]\n    );\n\n    return (\n      <AnimatedFlatList\n        ref={ref}\n        {...restProps}\n        CellRendererComponent={cellRenderer}\n      />\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  verticallyInverted: { transform: [{ scaleY: -1 }] },\n  horizontallyInverted: { transform: [{ scaleX: -1 }] },\n});\n\nexport default ReanimatedFlatlist;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}