{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar OptionView = function OptionView(_ref) {\n  var item = _ref.item,\n    index = _ref.index,\n    setnewProduct = _ref.setnewProduct,\n    newProduct = _ref.newProduct,\n    newProductOptions = _ref.newProductOptions,\n    indexOn = _ref.indexOn,\n    setindexOn = _ref.setindexOn;\n  if (indexOn === index) {\n    var _e$selectedCaseList;\n    var _useState = useState(item),\n      _useState2 = _slicedToArray(_useState, 2),\n      e = _useState2[0],\n      sete = _useState2[1];\n    var _useState3 = useState(structuredClone(item.optionsList)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      testMap = _useState4[0],\n      settestMap = _useState4[1];\n    var optionLbls = newProduct.options.map(function (el) {\n      if (el.label !== e.label && el.label !== null) {\n        return el.label;\n      }\n    });\n    return _jsx(View, {\n      children: _jsxs(View, {\n        style: {\n          padding: 25,\n          margin: 15,\n          backgroundColor: \"lightgrey\"\n        },\n        children: [_jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return indexOn !== index ? setindexOn(index) : setindexOn(null);\n          },\n          style: {\n            padding: 25,\n            margin: 15,\n            backgroundColor: \"lightgrey\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            height: 100\n          },\n          children: [_jsx(Text, {\n            children: item.label\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              newProductOptions.current.push(_objectSpread(_objectSpread({}, item), {}, {\n                label: item.label + \" Copy\"\n              }));\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newProductOptions.current\n                });\n              });\n              setindexOn(newProductOptions.current.length - 1);\n            },\n            children: _jsx(Text, {\n              style: {\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"Copy\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              newProductOptions.current.splice(index, 1);\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newProductOptions.current\n                });\n              });\n              setindexOn(indexOn - 1);\n            },\n            children: _jsx(Text, {\n              style: {\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"X\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              function moveItem(from, to) {\n                var f = newProductOptions.current.splice(from, 1)[0];\n                newProductOptions.current.splice(to, 0, f);\n              }\n              moveItem(index, index + 1);\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newProductOptions.current\n                });\n              });\n              setindexOn(null);\n            },\n            children: _jsx(Text, {\n              style: {\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"\\\\/\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              function moveItem(from, to) {\n                var f = newProductOptions.current.splice(from, 1)[0];\n                newProductOptions.current.splice(to, 0, f);\n              }\n              moveItem(index, index - 1);\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newProductOptions.current\n                });\n              });\n              setindexOn(null);\n            },\n            children: _jsx(Text, {\n              style: {\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"/\\\\\"\n            })\n          })]\n        }), _jsx(TextInput, {\n          placeholder: \"Enter Select List Label\",\n          onChangeText: function onChangeText(val) {\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                label: val\n              });\n            });\n            newProductOptions.current[index].label = val;\n          },\n          value: e.label,\n          style: {\n            marginBottom: 25\n          }\n        }), _jsx(DropDown, {\n          label: \"Option Type\",\n          options: [\"Standard\", \"Dropdown\"],\n          setValue: function setValue(val) {\n            if (e.optionType) {\n              newProductOptions.current[index].optionType = val;\n            } else {\n              newProductOptions.current[index] = _objectSpread(_objectSpread({}, e), {}, {\n                optionType: val\n              });\n              console.log(newProductOptions.current[index].optionType);\n            }\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n          },\n          value: e.optionType,\n          style: {\n            marginBottom: 25\n          }\n        }), _jsx(TextInput, {\n          placeholder: \"Enter Number Of Selectable; If There Is\",\n          onChangeText: function onChangeText(val) {\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                numOfSelectable: val\n              });\n            });\n            newProductOptions.current[index].numOfSelectable = val;\n          },\n          value: e.numOfSelectable,\n          style: {\n            marginBottom: 25\n          }\n        }), testMap.map(function (eInnerListStart, indexInnerList) {\n          var eInnerList = structuredClone(eInnerListStart);\n          return _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              marginBottom: 25,\n              alignItems: \"center\"\n            },\n            children: [_jsx(TextInput, {\n              placeholder: \"Enter Option Label\",\n              onChangeText: function onChangeText(val) {\n                var clone = structuredClone(testMap);\n                clone[indexInnerList].label = val;\n                newProductOptions.current[index].optionsList = clone;\n                settestMap(clone);\n              },\n              value: eInnerList.label\n            }), _jsx(TextInput, {\n              placeholder: \"Enter price increase\"\n              ,\n              onChangeText: function onChangeText(val) {\n                var clone = structuredClone(testMap);\n                clone[indexInnerList].priceIncrease = val;\n                newProductOptions.current[index].optionsList = clone;\n                settestMap(clone);\n              },\n              value: eInnerList.priceIncrease,\n              style: {\n                marginLeft: 20,\n                marginRight: 20\n              }\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                var clone = structuredClone(testMap);\n                clone.splice(indexInnerList, 1);\n                newProductOptions.current[index].optionsList = clone;\n                settestMap(clone);\n              },\n              children: _jsx(Text, {\n                style: {\n                  fontWeight: \"700\",\n                  color: \"red\"\n                },\n                children: \"X\"\n              })\n            })]\n          });\n        }), _jsx(Button, {\n          title: \"Add Option Choice\",\n          onPress: function onPress() {\n            var clone = structuredClone(testMap);\n            clone.push({\n              label: null,\n              priceIncrease: null\n            });\n            newProductOptions.current[index].optionsList = clone;\n            settestMap(clone);\n          },\n          style: {\n            marginBottom: 25\n          }\n        }), (_e$selectedCaseList = e.selectedCaseList) == null ? void 0 : _e$selectedCaseList.map(function (ifStatement, indexOfIf) {\n          var _useState5 = useState([]),\n            _useState6 = _slicedToArray(_useState5, 2),\n            optionLblsValues = _useState6[0],\n            setoptionLblsValues = _useState6[1];\n          useEffect(function () {\n            if (ifStatement.selectedCaseKey) {\n              var local = newProduct.options.filter(function (localE) {\n                return localE.label == ifStatement.selectedCaseKey;\n              });\n              var optionLblsValuesLocal = local.length > 0 ? local[0].optionsList.map(function (el) {\n                return el.label;\n              }) : [];\n              setoptionLblsValues(optionLblsValuesLocal);\n            }\n          }, [e]);\n          return _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              marginBottom: 25\n            },\n            children: [_jsx(DropDown, {\n              label: \"Show if...\",\n              options: optionLbls,\n              setValue: function setValue(val) {\n                newProductOptions.current[index].selectedCaseList[indexOfIf].selectedCaseKey = val;\n                sete(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    selectedCaseList: newProductOptions.current[index].selectedCaseList\n                  });\n                });\n              },\n              value: ifStatement.selectedCaseKey,\n              style: {\n                marginBottom: 25\n              }\n            }), _jsx(Text, {\n              children: \"\\\"=\\\"\"\n            }), _jsx(DropDown, {\n              label: \"Show if...\",\n              options: optionLblsValues,\n              setValue: function setValue(val) {\n                newProductOptions.current[index].selectedCaseList[indexOfIf].selectedCaseValue = val;\n                sete(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    selectedCaseList: newProductOptions.current[index].selectedCaseList\n                  });\n                });\n              },\n              value: ifStatement.selectedCaseValue,\n              style: {\n                marginBottom: 25\n              }\n            })]\n          });\n        }), optionLbls.length > 1 && _jsx(Button, {\n          title: \"Add If Statement\",\n          onPress: function onPress() {\n            if (!newProductOptions.current[index].selectedCaseList) {\n              newProductOptions.current[index].selectedCaseList = [{\n                selectedCaseKey: null,\n                selectedCaseValue: null\n              }];\n              sete(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  selectedCaseList: [{\n                    selectedCaseKey: null,\n                    selectedCaseValue: null\n                  }]\n                });\n              });\n            } else {\n              newProductOptions.current[index].selectedCaseList.push({\n                selectedCaseKey: null,\n                selectedCaseValue: null\n              });\n              sete(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  selectedCaseList: [].concat(_toConsumableArray(prev.selectedCaseList), [{\n                    selectedCaseKey: null,\n                    selectedCaseValue: null\n                  }])\n                });\n              });\n            }\n          }\n        })]\n      })\n    });\n  } else {\n    return _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return indexOn !== index ? setindexOn(index) : setindexOn(null);\n      },\n      style: {\n        padding: 25,\n        margin: 15,\n        backgroundColor: \"lightgrey\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        height: 100\n      },\n      children: [_jsx(Text, {\n        children: item.label\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          newProductOptions.current.push(_objectSpread(_objectSpread({}, item), {}, {\n            label: item.label + \" Copy\"\n          }));\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n          setindexOn(newProductOptions.current.length - 1);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"Copy\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          newProductOptions.current.splice(index, 1);\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n          setindexOn(indexOn - 1);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"X\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          function moveItem(from, to) {\n            var f = newProductOptions.current.splice(from, 1)[0];\n            newProductOptions.current.splice(to, 0, f);\n          }\n          moveItem(index, index + 1);\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n          setindexOn(null);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"\\\\/\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          function moveItem(from, to) {\n            var f = newProductOptions.current.splice(from, 1)[0];\n            newProductOptions.current.splice(to, 0, f);\n          }\n          moveItem(index, index - 1);\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n          setindexOn(null);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"/\\\\\"\n        })\n      })]\n    });\n  }\n};\nexport default OptionView;","map":{"version":3,"names":["React","useEffect","useState","Button","TextInput","DropDown","OptionView","item","index","setnewProduct","newProduct","newProductOptions","indexOn","setindexOn","e","sete","structuredClone","optionsList","testMap","settestMap","optionLbls","options","map","el","label","padding","margin","backgroundColor","flexDirection","justifyContent","height","current","push","prevState","length","marginBottom","fontWeight","color","splice","moveItem","from","to","f","val","optionType","console","log","numOfSelectable","eInnerListStart","indexInnerList","eInnerList","alignItems","clone","priceIncrease","marginLeft","marginRight","selectedCaseList","ifStatement","indexOfIf","optionLblsValues","setoptionLblsValues","selectedCaseKey","local","filter","localE","optionLblsValuesLocal","prev","selectedCaseValue"],"sources":["/Users/peterputros/Desktop/PosMate-1/components/OptionView.tsx"],"sourcesContent":["import { View, Text, TouchableOpacity } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\n\nconst OptionView = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n  indexOn,\n  setindexOn,\n}) => {\n  if (indexOn === index) {\n    const [e, sete] = useState(item);\n    const [testMap, settestMap] = useState(structuredClone(item.optionsList));\n    var optionLbls = newProduct.options.map(function (el) {\n      if (el.label !== e.label && el.label !== null) {\n        return el.label;\n      }\n    });\n\n    return (\n      <View>\n        <View\n          style={{\n            padding: 25,\n            margin: 15,\n            backgroundColor: \"lightgrey\",\n          }}\n        >\n          <TouchableOpacity\n            onPress={() =>\n              indexOn !== index ? setindexOn(index) : setindexOn(null)\n            }\n            style={{\n              padding: 25,\n              margin: 15,\n              backgroundColor: \"lightgrey\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              height: 100,\n            }}\n          >\n            <Text>{item.label}</Text>\n            <TouchableOpacity\n              onPress={() => {\n                newProductOptions.current.push({\n                  ...item,\n                  label: item.label + \" Copy\",\n                });\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(newProductOptions.current.length - 1);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                Copy\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                newProductOptions.current.splice(index, 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(indexOn - 1);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                X\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                function moveItem(from, to) {\n                  // remove `from` item and store it\n                  var f = newProductOptions.current.splice(from, 1)[0];\n                  // insert stored item into position `to`\n                  newProductOptions.current.splice(to, 0, f);\n                }\n\n                moveItem(index, index + 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(null);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                \\/\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                function moveItem(from, to) {\n                  // remove `from` item and store it\n                  var f = newProductOptions.current.splice(from, 1)[0];\n                  // insert stored item into position `to`\n                  newProductOptions.current.splice(to, 0, f);\n                }\n\n                moveItem(index, index - 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(null);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                /\\\n              </Text>\n            </TouchableOpacity>\n          </TouchableOpacity>\n          <TextInput\n            placeholder=\"Enter Select List Label\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, label: val }));\n              newProductOptions.current[index].label = val;\n            }}\n            value={e.label}\n            style={{ marginBottom: 25 }}\n          />\n          {/* optionType */}\n          <DropDown\n            label=\"Option Type\"\n            options={[\"Standard\", \"Dropdown\"]}\n            setValue={(val) => {\n              // sete((prevState) => ({\n              //   ...prevState,\n              //   optionType: val,\n              // }));\n              if (e.optionType) {\n                newProductOptions.current[index].optionType = val;\n              } else {\n                newProductOptions.current[index] = { ...e, optionType: val };\n                console.log(newProductOptions.current[index].optionType);\n              }\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n            }}\n            value={e.optionType}\n            style={{ marginBottom: 25 }}\n          />\n          <TextInput\n            placeholder=\"Enter Number Of Selectable; If There Is\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n              newProductOptions.current[index].numOfSelectable = val;\n            }}\n            value={e.numOfSelectable}\n            style={{ marginBottom: 25 }}\n          />\n          {testMap.map((eInnerListStart, indexInnerList) => {\n            const eInnerList = structuredClone(eInnerListStart);\n            return (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  marginBottom: 25,\n                  alignItems: \"center\",\n                }}\n              >\n                <TextInput\n                  placeholder=\"Enter Option Label\"\n                  onChangeText={(val) => {\n                    const clone = structuredClone(testMap);\n                    clone[indexInnerList].label = val;\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                  value={eInnerList.label}\n                />\n                <TextInput\n                  placeholder=\"Enter price increase\"\n                  //   onChangeText={(val) => {\n                  //     newProductOptions.current[index].optionsList[\n                  //       indexInnerList\n                  //     ].priceIncrease = val;\n                  //     seteInnerList((prevState) => ({\n                  //       ...prevState,\n                  //       priceIncrease: val,\n                  //     }));\n                  //   }}\n                  onChangeText={(val) => {\n                    const clone = structuredClone(testMap);\n                    clone[indexInnerList].priceIncrease = val;\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                  value={eInnerList.priceIncrease}\n                  style={{ marginLeft: 20, marginRight: 20 }}\n                />\n                <TouchableOpacity\n                  onPress={() => {\n                    const clone = structuredClone(testMap);\n                    clone.splice(indexInnerList, 1);\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            );\n          })}\n          <Button\n            title=\"Add Option Choice\"\n            onPress={() => {\n              const clone = structuredClone(testMap);\n              clone.push({\n                label: null,\n                priceIncrease: null,\n              });\n              newProductOptions.current[index].optionsList = clone;\n              settestMap(clone);\n            }}\n            style={{ marginBottom: 25 }}\n          />\n          {e.selectedCaseList?.map((ifStatement, indexOfIf) => {\n            const [optionLblsValues, setoptionLblsValues] = useState([]);\n\n            useEffect(() => {\n              if (ifStatement.selectedCaseKey) {\n                const local = newProduct.options.filter(\n                  (localE) => localE.label == ifStatement.selectedCaseKey\n                );\n                const optionLblsValuesLocal =\n                  local.length > 0\n                    ? local[0].optionsList.map(function (el) {\n                        return el.label;\n                      })\n                    : [];\n                setoptionLblsValues(optionLblsValuesLocal);\n              }\n            }, [e]);\n\n            return (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  marginBottom: 25,\n                }}\n              >\n                <DropDown\n                  label=\"Show if...\"\n                  options={optionLbls}\n                  setValue={(val) => {\n                    // sete((prevState) => ({\n                    //   ...prevState,\n                    //   selectedCaseKey: val,\n                    // }));\n                    // newProductOptions.current[index].selectedCaseKey = val;\n                    newProductOptions.current[index].selectedCaseList[\n                      indexOfIf\n                    ].selectedCaseKey = val;\n                    sete((prev) => ({\n                      ...prev,\n                      selectedCaseList:\n                        newProductOptions.current[index].selectedCaseList,\n                    }));\n                  }}\n                  value={ifStatement.selectedCaseKey}\n                  style={{ marginBottom: 25 }}\n                />\n                <Text>\"=\"</Text>\n                <DropDown\n                  label=\"Show if...\"\n                  options={optionLblsValues}\n                  setValue={(val) => {\n                    // sete((prevState) => ({\n                    //   ...prevState,\n                    //   selectedCaseValue: val,\n                    // }));\n                    // newProductOptions.current[index].selectedCaseValue = val;\n                    newProductOptions.current[index].selectedCaseList[\n                      indexOfIf\n                    ].selectedCaseValue = val;\n                    sete((prev) => ({\n                      ...prev,\n                      selectedCaseList:\n                        newProductOptions.current[index].selectedCaseList,\n                    }));\n                  }}\n                  value={ifStatement.selectedCaseValue}\n                  style={{ marginBottom: 25 }}\n                />\n              </View>\n            );\n          })}\n          {optionLbls.length > 1 && (\n            <Button\n              title=\"Add If Statement\"\n              onPress={() => {\n                if (!newProductOptions.current[index].selectedCaseList) {\n                  newProductOptions.current[index].selectedCaseList = [\n                    {\n                      selectedCaseKey: null,\n                      selectedCaseValue: null,\n                    },\n                  ];\n                  sete((prev) => ({\n                    ...prev,\n                    selectedCaseList: [\n                      { selectedCaseKey: null, selectedCaseValue: null },\n                    ],\n                  }));\n                } else {\n                  newProductOptions.current[index].selectedCaseList.push({\n                    selectedCaseKey: null,\n                    selectedCaseValue: null,\n                  });\n                  sete((prev) => ({\n                    ...prev,\n                    selectedCaseList: [\n                      ...prev.selectedCaseList,\n                      { selectedCaseKey: null, selectedCaseValue: null },\n                    ],\n                  }));\n                }\n              }}\n            />\n          )}\n        </View>\n      </View>\n    );\n  } else {\n    return (\n      <TouchableOpacity\n        onPress={() =>\n          indexOn !== index ? setindexOn(index) : setindexOn(null)\n        }\n        style={{\n          padding: 25,\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 100,\n        }}\n      >\n        <Text>{item.label}</Text>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.push({\n              ...item,\n              label: item.label + \" Copy\",\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(newProductOptions.current.length - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.splice(index, 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(indexOn - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            X\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            function moveItem(from, to) {\n              // remove `from` item and store it\n              var f = newProductOptions.current.splice(from, 1)[0];\n              // insert stored item into position `to`\n              newProductOptions.current.splice(to, 0, f);\n            }\n\n            moveItem(index, index + 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(null);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            \\/\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            function moveItem(from, to) {\n              // remove `from` item and store it\n              var f = newProductOptions.current.splice(from, 1)[0];\n              // insert stored item into position `to`\n              newProductOptions.current.splice(to, 0, f);\n            }\n\n            moveItem(index, index - 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(null);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            /\\\n          </Text>\n        </TouchableOpacity>\n      </TouchableOpacity>\n    );\n  }\n};\n\nexport default OptionView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}