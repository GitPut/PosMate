{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"../state/state\";\nimport { updateData } from \"../state/firebaseFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MyListItem = function MyListItem(_ref) {\n  var item = _ref.item,\n    index = _ref.index,\n    setnewProduct = _ref.setnewProduct,\n    newProduct = _ref.newProduct,\n    save = _ref.save,\n    setSavedOptions = _ref.setSavedOptions;\n  var memoizedItem = useMemo(function () {\n    return item;\n  }, [item]);\n  var e = memoizedItem;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    optionLblsValues = _useState2[0],\n    setoptionLblsValues = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    optionLbls = _useState4[0],\n    setoptionLbls = _useState4[1];\n  var _useState5 = useState(e.label),\n    _useState6 = _slicedToArray(_useState5, 2),\n    listLabel = _useState6[0],\n    setlistLabel = _useState6[1];\n  var listLabelRef = useRef(null);\n  useEffect(function () {\n    setSavedOptions();\n  }, [save]);\n  useEffect(function () {\n    if (newProduct.options.length > 1) {\n      var optionLblsLocal = [];\n      newProduct.options.forEach(function (checkUseE) {\n        if (checkUseE.label !== e.label) optionLblsLocal.push(checkUseE.label);\n      });\n      setoptionLbls(optionLblsLocal);\n    }\n  }, []);\n  useEffect(function () {\n    if (e.selectedCaseKey !== null) {\n      var local = newProduct.options.filter(function (localE) {\n        return localE.label == e.selectedCaseKey;\n      });\n      var optionLblsValuesLocal = [];\n      local[0].optionsList.forEach(function (eVals) {\n        optionLblsValuesLocal.push(eVals.label);\n      });\n      setoptionLblsValues(optionLblsValuesLocal);\n    }\n  }, [optionLbls]);\n  return _jsxs(View, {\n    style: {\n      padding: 25,\n      margin: 15,\n      backgroundColor: \"lightgrey\"\n    },\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        var copy = structuredClone(newProduct);\n        copy.options.push(_objectSpread(_objectSpread({}, e), {}, {\n          label: e.label + \" Copy\"\n        }));\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            options: copy.options\n          });\n        });\n      },\n      children: _jsx(Text, {\n        style: {\n          marginBottom: 25,\n          fontWeight: \"700\",\n          color: \"red\"\n        },\n        children: \"Copy\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        var copy = structuredClone(newProduct);\n        copy.options.splice(index, 1);\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            options: copy.options\n          });\n        });\n      },\n      children: _jsx(Text, {\n        style: {\n          marginBottom: 25,\n          fontWeight: \"700\",\n          color: \"red\"\n        },\n        children: \"X\"\n      })\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Select List Label\",\n      ref: listLabelRef,\n      onChangeText: function onChangeText(val) {\n        return setlistLabel(val);\n      },\n      value: listLabel\n      ,\n      style: {\n        marginBottom: 25\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Number Of Selectable; If There Is\",\n      onChange: function onChange(e) {\n        var val = e.nativeEvent.text;\n        var newOptionsList = _toConsumableArray(newProduct.options);\n        newOptionsList[index].numOfSelectable = val;\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            options: newOptionsList\n          });\n        });\n      },\n      value: e.numOfSelectable,\n      style: {\n        marginBottom: 25\n      }\n    }), e.optionsList.map(function (eInnerList, indexInnerList) {\n      return _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          marginBottom: 25,\n          alignItems: \"center\"\n        },\n        children: [_jsx(TextInput, {\n          placeholder: \"Enter Option Label\",\n          onChange: function onChange(e) {\n            var val = e.nativeEvent.text;\n            var newOptionsList = structuredClone(newProduct);\n            newOptionsList.options[index].optionsList[indexInnerList].label = val;\n            setnewProduct(newOptionsList);\n          },\n          value: eInnerList.label\n        }), _jsx(TextInput, {\n          placeholder: \"Enter price increase\",\n          onChange: function onChange(e) {\n            var val = e.nativeEvent.text;\n            var newOptionsList = structuredClone(newProduct);\n            newOptionsList.options[index].optionsList[indexInnerList].priceIncrease = val;\n            setnewProduct(newOptionsList);\n          },\n          value: eInnerList.priceIncrease,\n          style: {\n            marginLeft: 20,\n            marginRight: 20\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            var copy = structuredClone(newProduct);\n            copy.options[index].optionsList.splice(indexInnerList, 1);\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: copy.options\n              });\n            });\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: copy.options\n              });\n            });\n          },\n          children: _jsx(Text, {\n            style: {\n              fontWeight: \"700\",\n              color: \"red\"\n            },\n            children: \"X\"\n          })\n        })]\n      });\n    }), _jsx(Button, {\n      title: \"Add Option Choice\",\n      onPress: function onPress() {\n        var newOptionsList = _toConsumableArray(newProduct.options);\n        newOptionsList[index].optionsList.push({\n          label: null,\n          priceIncrease: null\n        });\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            options: newOptionsList\n          });\n        });\n      },\n      style: {\n        marginBottom: 25\n      }\n    }), optionLbls.length > 1 && _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        marginBottom: 25\n      },\n      children: [_jsx(DropDown, {\n        label: \"Show if...\",\n        options: optionLbls,\n        setValue: function setValue(val) {\n          var newOptionsList = _toConsumableArray(newProduct.options);\n          newOptionsList[index].selectedCaseKey = val;\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newOptionsList\n            });\n          });\n        },\n        value: e.selectedCaseKey,\n        style: {\n          marginBottom: 25\n        }\n      }), _jsx(Text, {\n        children: \"\\\"=\\\"\"\n      }), _jsx(DropDown, {\n        label: \"Show if...\",\n        options: optionLblsValues,\n        setValue: function setValue(val) {\n          var newOptionsList = _toConsumableArray(newProduct.options);\n          newOptionsList[index].selectedCaseValue = val;\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newOptionsList\n            });\n          });\n        },\n        value: e.selectedCaseValue,\n        style: {\n          marginBottom: 25\n        }\n      })]\n    })]\n  });\n};\nvar AddProduct = function AddProduct(_ref2) {\n  var setProductModal = _ref2.setProductModal,\n    setisModalVisible = _ref2.setisModalVisible,\n    existingProduct = _ref2.existingProduct,\n    existingProductIndex = _ref2.existingProductIndex;\n  var catalog = userStoreState.use();\n  var _useState7 = useState(existingProduct ? existingProduct : {\n      name: null,\n      price: null,\n      catagory: null,\n      options: [],\n      description: null\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    newProduct = _useState8[0],\n    setnewProduct = _useState8[1];\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [copyProductData]));\n    } else if (existingProduct) {\n      var copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n      updateData(_toConsumableArray(catalog.categories), copy);\n    } else {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [newProduct]));\n    }\n    setisModalVisible(true);\n  }\n  var OptionsAddingSection = function OptionsAddingSection() {\n    return _jsxs(View, {\n      children: [_jsx(FlatList, {\n        data: newProduct.options,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item,\n            index = _ref3.index;\n          return _jsx(MyListItem, {\n            item: item,\n            index: index,\n            newProduct: newProduct,\n            setnewProduct: setnewProduct\n          });\n        }\n      }), _jsx(Button, {\n        title: \"Add Product Option\",\n        onPress: function onPress() {\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: [].concat(_toConsumableArray(prevState.options), [{\n                label: null,\n                optionsList: [],\n                selectedCaseKey: null,\n                selectedCaseValue: null,\n                numOfSelectable: null,\n                id: Math.random().toString(36).substr(2, 9)\n              }])\n            });\n          });\n        },\n        style: {\n          marginBottom: 25\n        }\n      })]\n    });\n  };\n  return _jsxs(ScrollView, {\n    contentContainerStyle: {\n      width: \"93%\",\n      alignSelf: \"center\",\n      marginTop: 25\n    },\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        padding: 20,\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setProductModal(false);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"X\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          var copy = structuredClone(newProduct);\n          copy.name = copy.name + \" Copy\";\n          handleDataUpdate(copy);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"Copy\"\n        })\n      }), _jsx(Text, {\n        style: {\n          marginBottom: 25\n        },\n        children: \"AddProduct\"\n      })]\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Product Name\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            name: val\n          });\n        });\n      },\n      value: newProduct.name,\n      style: {\n        marginBottom: 25\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Enter any other items that come with this\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            description: val\n          });\n        });\n      },\n      style: {\n        marginBottom: 25\n      },\n      value: newProduct.description\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Product Price\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            price: val\n          });\n        });\n      },\n      style: {\n        marginBottom: 25\n      },\n      value: newProduct.price\n    }), _jsx(DropDown, {\n      label: \"Choose catagory\",\n      options: catalog.categories,\n      setValue: function setValue(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            catagory: val\n          });\n        });\n      },\n      value: newProduct.catagory,\n      style: {\n        marginBottom: 25\n      }\n    }), _jsx(OptionsAddingSection, {}), _jsx(Button, {\n      title: \"Add/Save Product\",\n      onPress: function onPress() {\n        return handleDataUpdate();\n      },\n      style: {\n        marginBottom: 25,\n        marginTop: 25,\n        backgroundColor: \"lightgreen\"\n      }\n    })]\n  });\n};\nexport default AddProduct;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","Button","TextInput","DropDown","userStoreState","updateData","MyListItem","item","index","setnewProduct","newProduct","save","setSavedOptions","memoizedItem","e","optionLblsValues","setoptionLblsValues","optionLbls","setoptionLbls","label","listLabel","setlistLabel","listLabelRef","options","length","optionLblsLocal","forEach","checkUseE","push","selectedCaseKey","local","filter","localE","optionLblsValuesLocal","optionsList","eVals","padding","margin","backgroundColor","copy","structuredClone","prevState","marginBottom","fontWeight","color","splice","val","nativeEvent","text","newOptionsList","numOfSelectable","map","eInnerList","indexInnerList","flexDirection","alignItems","priceIncrease","marginLeft","marginRight","justifyContent","selectedCaseValue","AddProduct","setProductModal","setisModalVisible","existingProduct","existingProductIndex","catalog","use","name","price","catagory","description","handleDataUpdate","copyProductData","categories","products","OptionsAddingSection","id","toString","Math","random","substr","width","alignSelf","marginTop","styles","StyleSheet","create"],"sources":["/Users/peterputros/Desktop/PosMate-1/components/TestAdd.tsx"],"sourcesContent":["import {\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"state/state\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst MyListItem = ({ item, index, setnewProduct, newProduct, save, setSavedOptions }) => {\n  const memoizedItem = useMemo(() => item, [item]);\n  const e = memoizedItem;\n\n  const [optionLblsValues, setoptionLblsValues] = useState([]);\n  const [optionLbls, setoptionLbls] = useState([]);\n  const [listLabel, setlistLabel] = useState(e.label);\n  const listLabelRef = useRef(null);\n\n  useEffect(() => {\n   setSavedOptions()\n  }, [save])\n  \n\n  useEffect(() => {\n    //setnewProduct(newProductSaved.current);\n    if (newProduct.options.length > 1) {\n      const optionLblsLocal = [];\n      newProduct.options.forEach((checkUseE) => {\n        if (checkUseE.label !== e.label) optionLblsLocal.push(checkUseE.label);\n      });\n      setoptionLbls(optionLblsLocal);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (e.selectedCaseKey !== null) {\n      const local = newProduct.options.filter(\n        (localE) => localE.label == e.selectedCaseKey\n      );\n      const optionLblsValuesLocal = [];\n      local[0].optionsList.forEach((eVals) => {\n        optionLblsValuesLocal.push(eVals.label);\n      });\n      setoptionLblsValues(optionLblsValuesLocal);\n    }\n  }, [optionLbls]);\n\n  return (\n    <View\n      style={{\n        padding: 25,\n        margin: 15,\n        backgroundColor: \"lightgrey\",\n      }}\n    >\n      <TouchableOpacity\n        onPress={() => {\n          const copy = structuredClone(newProduct);\n          copy.options.push({\n            ...e,\n            label: e.label + \" Copy\",\n          });\n          setnewProduct((prevState) => ({\n            ...prevState,\n            options: copy.options,\n          }));\n        }}\n      >\n        <Text\n          style={{\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\",\n          }}\n        >\n          Copy\n        </Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        onPress={() => {\n          const copy = structuredClone(newProduct);\n          copy.options.splice(index, 1);\n\n          setnewProduct((prevState) => ({\n            ...prevState,\n            options: copy.options,\n          }));\n        }}\n      >\n        <Text\n          style={{\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\",\n          }}\n        >\n          X\n        </Text>\n      </TouchableOpacity>\n      <TextInput\n        placeholder=\"Enter Select List Label\"\n        ref={listLabelRef}\n        onChangeText={(val) => setlistLabel(val)}\n        value={listLabel}\n        // onChange={(e) => {\n        //   const val = e.nativeEvent.text;\n        //   const newOptionsList = [...newProduct.options];\n        //   newOptionsList[index].label = val;\n        //   setnewProduct((prevState) => ({\n        //     ...prevState,\n        //     options: newOptionsList,\n        //   }));\n        // }}\n        //value={e.label}\n        style={{ marginBottom: 25 }}\n      />\n      <TextInput\n        placeholder=\"Enter Number Of Selectable; If There Is\"\n        onChange={(e) => {\n          const val = e.nativeEvent.text;\n          const newOptionsList = [...newProduct.options];\n          newOptionsList[index].numOfSelectable = val;\n          setnewProduct((prevState) => ({\n            ...prevState,\n            options: newOptionsList,\n          }));\n        }}\n        value={e.numOfSelectable}\n        style={{ marginBottom: 25 }}\n      />\n      {e.optionsList.map((eInnerList, indexInnerList) => {\n        return (\n          <View\n            style={{\n              flexDirection: \"row\",\n              marginBottom: 25,\n              alignItems: \"center\",\n            }}\n          >\n            <TextInput\n              placeholder=\"Enter Option Label\"\n              onChange={(e) => {\n                const val = e.nativeEvent.text;\n                const newOptionsList = structuredClone(newProduct);\n                newOptionsList.options[index].optionsList[\n                  indexInnerList\n                ].label = val;\n                setnewProduct(newOptionsList);\n              }}\n              value={eInnerList.label}\n            />\n            <TextInput\n              placeholder=\"Enter price increase\"\n              onChange={(e) => {\n                const val = e.nativeEvent.text;\n                const newOptionsList = structuredClone(newProduct);\n                newOptionsList.options[index].optionsList[\n                  indexInnerList\n                ].priceIncrease = val;\n                setnewProduct(newOptionsList);\n              }}\n              value={eInnerList.priceIncrease}\n              style={{ marginLeft: 20, marginRight: 20 }}\n            />\n            <TouchableOpacity\n              onPress={() => {\n                const copy = structuredClone(newProduct);\n                copy.options[index].optionsList.splice(indexInnerList, 1);\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: copy.options,\n                }));\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: copy.options,\n                }));\n              }}\n            >\n              <Text\n                style={{\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                X\n              </Text>\n            </TouchableOpacity>\n          </View>\n        );\n      })}\n      <Button\n        title=\"Add Option Choice\"\n        onPress={() => {\n          const newOptionsList = [...newProduct.options];\n          newOptionsList[index].optionsList.push({\n            label: null,\n            priceIncrease: null,\n          });\n          setnewProduct((prevState) => ({\n            ...prevState,\n            options: newOptionsList,\n          }));\n        }}\n        style={{ marginBottom: 25 }}\n      />\n      {optionLbls.length > 1 && (\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginBottom: 25,\n          }}\n        >\n          <DropDown\n            label=\"Show if...\"\n            options={optionLbls}\n            setValue={(val) => {\n              const newOptionsList = [...newProduct.options];\n              newOptionsList[index].selectedCaseKey = val;\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newOptionsList,\n              }));\n            }}\n            value={e.selectedCaseKey}\n            style={{ marginBottom: 25 }}\n          />\n          <Text>\"=\"</Text>\n          <DropDown\n            label=\"Show if...\"\n            options={optionLblsValues}\n            setValue={(val) => {\n              const newOptionsList = [...newProduct.options];\n              newOptionsList[index].selectedCaseValue = val;\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newOptionsList,\n              }));\n            }}\n            value={e.selectedCaseValue}\n            style={{ marginBottom: 25 }}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst AddProduct = ({\n  setProductModal,\n  setisModalVisible,\n  existingProduct,\n  existingProductIndex,\n}) => {\n  const catalog = userStoreState.use();\n  const [newProduct, setnewProduct] = useState(\n    existingProduct\n      ? existingProduct\n      : {\n          name: null,\n          price: null,\n          catagory: null,\n          options: [],\n          description: null,\n        }\n  );\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(\n        [...catalog.categories],\n        [...catalog.products, copyProductData]\n      );\n    } else if (existingProduct) {\n      let copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n\n      updateData([...catalog.categories], copy);\n    } else {\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\n    }\n    setisModalVisible(true);\n  }\n\n  const OptionsAddingSection = () => {\n    return (\n      <View>\n        <FlatList\n          data={newProduct.options}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={({ item, index }) => (\n            <MyListItem\n              item={item}\n              index={index}\n              newProduct={newProduct}\n              setnewProduct={setnewProduct}\n            />\n          )}\n        />\n        <Button\n          title=\"Add Product Option\"\n          onPress={() => {\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: [\n                ...prevState.options,\n                {\n                  label: null,\n                  optionsList: [],\n                  selectedCaseKey: null,\n                  selectedCaseValue: null,\n                  numOfSelectable: null,\n                  id: Math.random().toString(36).substr(2, 9),\n                },\n              ],\n            }));\n          }}\n          style={{ marginBottom: 25 }}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView\n      contentContainerStyle={{\n        width: \"93%\",\n        alignSelf: \"center\",\n        marginTop: 25,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 20,\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <TouchableOpacity onPress={() => setProductModal(false)}>\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n            X\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            let copy = structuredClone(newProduct);\n            copy.name = copy.name + \" Copy\";\n            handleDataUpdate(copy);\n          }}\n        >\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <Text style={{ marginBottom: 25 }}>AddProduct</Text>\n      </View>\n      <TextInput\n        placeholder=\"Enter Product Name\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, name: val }));\n        }}\n        value={newProduct.name}\n        style={{ marginBottom: 25 }}\n      />\n      <TextInput\n        placeholder=\"Enter any other items that come with this\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, description: val }));\n        }}\n        style={{ marginBottom: 25 }}\n        value={newProduct.description}\n      />\n      <TextInput\n        placeholder=\"Enter Product Price\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, price: val }));\n        }}\n        style={{ marginBottom: 25 }}\n        value={newProduct.price}\n      />\n      <DropDown\n        label=\"Choose catagory\"\n        options={catalog.categories}\n        setValue={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, catagory: val }));\n        }}\n        value={newProduct.catagory}\n        style={{ marginBottom: 25 }}\n      />\n      <OptionsAddingSection />\n      <Button\n        title=\"Add/Save Product\"\n        onPress={() => handleDataUpdate()}\n        style={{\n          marginBottom: 25,\n          marginTop: 25,\n          backgroundColor: \"lightgreen\",\n        }}\n      />\n    </ScrollView>\n  );\n};\n\nexport default AddProduct;\n\nconst styles = StyleSheet.create({});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}