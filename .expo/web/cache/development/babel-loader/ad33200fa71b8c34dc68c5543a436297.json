{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\nimport RouteSliderScreen from \"./RouteSliderScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GOOGLE_API_KEY = \"AIzaSyB5l-wEA7ueMuvdHqVZK8ZD7-1yMLV076M\";\nvar App = function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    listOfAddresses = _useState2[0],\n    setlistOfAddresses = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    finalList = _useState4[0],\n    setfinalList = _useState4[1];\n  var GooglePlacesInput = function GooglePlacesInput(_ref) {\n    var placeholder = _ref.placeholder;\n    return _jsx(GooglePlacesAutocomplete, {\n      placeholder: placeholder,\n      fetchDetails: true,\n      onPress: function onPress(data, details) {\n        setlistOfAddresses([].concat(_toConsumableArray(listOfAddresses), [details]));\n      },\n      query: {\n        key: GOOGLE_API_KEY,\n        language: \"en\"\n      },\n      textInputProps: {\n        style: {\n          minHeight: 40,\n          width: \"80%\",\n          padding: 10,\n          fontSize: 15,\n          borderWidth: 2,\n          borderRadius: 6\n        }\n      },\n      onFail: function onFail(error) {\n        return console.error(error);\n      },\n      requestUrl: {\n        useOnPlatform: \"web\",\n        url: \"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api\"\n      }\n    });\n  };\n\n  var DistanceMatrix = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var localFinalList = [listOfAddresses[0]];\n      var localListOfAddresses = listOfAddresses;\n      var myObject = listOfAddresses[0];\n      var _loop = function _loop(index) {\n        var dis = function dis(d) {\n          return Math.pow(d.geometry.location.lat, 2) + Math.pow(d.geometry.location.lng, 2);\n        };\n        localListOfAddresses.splice(localListOfAddresses.indexOf(myObject), 1);\n        var closest = localListOfAddresses.reduce(function (a, b) {\n          return Math.abs(dis(b) - dis(myObject)) < Math.abs(dis(a) - dis(myObject)) ? b : a;\n        });\n        myObject = closest;\n        localFinalList.push(closest);\n      };\n      for (var index = 0; index < listOfAddresses.length + 1; index++) {\n        _loop(index);\n      }\n      setfinalList(localFinalList);\n    });\n    return function DistanceMatrix() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      height: \"100%\",\n      width: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: finalList.length < 1 ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Get The Best Route List\"\n      }), listOfAddresses.length < 1 ? _jsx(GooglePlacesInput, {\n        placeholder: \"Start Address\"\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(GooglePlacesInput, {\n          placeholder: \"Enter Next Stop\"\n        }), listOfAddresses.length > 2 && _jsx(Button, {\n          title: \"Go\",\n          onPress: DistanceMatrix\n        })]\n      })]\n    }) : _jsx(RouteSliderScreen, {\n      finalList: finalList\n    })\n  });\n};\nexport default App;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","GooglePlacesAutocomplete","RouteSliderScreen","GOOGLE_API_KEY","App","listOfAddresses","setlistOfAddresses","finalList","setfinalList","GooglePlacesInput","placeholder","data","details","key","language","style","minHeight","width","padding","fontSize","borderWidth","borderRadius","error","console","useOnPlatform","url","DistanceMatrix","localFinalList","localListOfAddresses","myObject","index","dis","d","Math","pow","geometry","location","lat","lng","splice","indexOf","closest","reduce","a","b","abs","push","length","flex","height","alignItems","justifyContent","styles","StyleSheet","create"],"sources":["/Users/peterputros/Desktop/best-route/App.tsx"],"sourcesContent":["import {\n  Button,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  ScrollView,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\nimport RouteSliderScreen from \"./RouteSliderScreen\";\n\nconst GOOGLE_API_KEY = \"AIzaSyB5l-wEA7ueMuvdHqVZK8ZD7-1yMLV076M\";\n\nconst App = () => {\n  const [listOfAddresses, setlistOfAddresses] = useState([]);\n  const [finalList, setfinalList] = useState([]);\n\n  const GooglePlacesInput = ({ placeholder }) => {\n    return (\n      <GooglePlacesAutocomplete\n        placeholder={placeholder}\n        fetchDetails={true}\n        onPress={(data, details) => {\n          setlistOfAddresses([...listOfAddresses, details]);\n        }}\n        query={{\n          key: GOOGLE_API_KEY,\n          language: \"en\",\n        }}\n        textInputProps={{\n          style: {\n            minHeight: 40,\n            width: \"80%\",\n            padding: 10,\n            fontSize: 15,\n            borderWidth: 2,\n            borderRadius: 6,\n          },\n        }}\n        onFail={(error) => console.error(error)}\n        requestUrl={{\n          useOnPlatform: \"web\", // or \"all\"\n          url: \"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api\", // or any proxy server that hits https://maps.googleapis.com/maps/api\n          // headers: {\n          //   Authorization: `an auth token`, // if required for your proxy\n          // },\n        }}\n      />\n    );\n  };\n\n  const DistanceMatrix = async () => {\n    const localFinalList = [listOfAddresses[0]];\n    const localListOfAddresses = listOfAddresses;\n\n    let myObject = listOfAddresses[0];\n\n    for (let index = 0; index < listOfAddresses.length + 1; index++) {\n      const dis = (d) =>\n        Math.pow(d.geometry.location.lat, 2) +\n        Math.pow(d.geometry.location.lng, 2);\n\n      localListOfAddresses.splice(localListOfAddresses.indexOf(myObject), 1);\n\n      const closest = localListOfAddresses.reduce((a, b) => {\n        return Math.abs(dis(b) - dis(myObject)) <\n          Math.abs(dis(a) - dis(myObject))\n          ? b\n          : a;\n      });\n\n      myObject = closest;\n      localFinalList.push(closest);\n    }\n    setfinalList(localFinalList);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        height: \"100%\",\n        width: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      {finalList.length < 1 ? (\n        <>\n          <Text>Get The Best Route List</Text>\n          {listOfAddresses.length < 1 ? (\n            <GooglePlacesInput placeholder=\"Start Address\" />\n          ) : (\n            <>\n              <GooglePlacesInput placeholder=\"Enter Next Stop\" />\n              {listOfAddresses.length > 2 && (\n                <Button title=\"Go\" onPress={DistanceMatrix} />\n              )}\n            </>\n          )}\n        </>\n      ) : (\n        <RouteSliderScreen finalList={finalList} />\n      )}\n    </View>\n  );\n};\n\nexport default App;\n\nconst styles = StyleSheet.create({});\n"],"mappings":";;;;;;;AASA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD,SAASC,wBAAwB,QAAQ,yCAAyC;AAClF,OAAOC,iBAAiB;AAA4B;AAAA;AAAA;AAEpD,IAAMC,cAAc,GAAG,yCAAyC;AAEhE,IAAMC,GAAG,GAAG,SAANA,GAAG,GAAS;EAChB,gBAA8CJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnDK,eAAe;IAAEC,kBAAkB;EAC1C,iBAAkCN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvCO,SAAS;IAAEC,YAAY;EAE9B,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,OAAwB;IAAA,IAAlBC,WAAW,QAAXA,WAAW;IACtC,OACE,KAAC,wBAAwB;MACvB,WAAW,EAAEA,WAAY;MACzB,YAAY,EAAE,IAAK;MACnB,OAAO,EAAE,iBAACC,IAAI,EAAEC,OAAO,EAAK;QAC1BN,kBAAkB,8BAAKD,eAAe,IAAEO,OAAO,GAAE;MACnD,CAAE;MACF,KAAK,EAAE;QACLC,GAAG,EAAEV,cAAc;QACnBW,QAAQ,EAAE;MACZ,CAAE;MACF,cAAc,EAAE;QACdC,KAAK,EAAE;UACLC,SAAS,EAAE,EAAE;UACbC,KAAK,EAAE,KAAK;UACZC,OAAO,EAAE,EAAE;UACXC,QAAQ,EAAE,EAAE;UACZC,WAAW,EAAE,CAAC;UACdC,YAAY,EAAE;QAChB;MACF,CAAE;MACF,MAAM,EAAE,gBAACC,KAAK;QAAA,OAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MAAA,CAAC;MACxC,UAAU,EAAE;QACVE,aAAa,EAAE,KAAK;QACpBC,GAAG,EAAE;MAIP;IAAE,EACF;EAEN,CAAC;;EAED,IAAMC,cAAc;IAAA,8BAAG,aAAY;MACjC,IAAMC,cAAc,GAAG,CAACtB,eAAe,CAAC,CAAC,CAAC,CAAC;MAC3C,IAAMuB,oBAAoB,GAAGvB,eAAe;MAE5C,IAAIwB,QAAQ,GAAGxB,eAAe,CAAC,CAAC,CAAC;MAAC,2BAEzByB,KAAK;QACZ,IAAMC,GAAG,GAAG,SAANA,GAAG,CAAIC,CAAC;UAAA,OACZC,IAAI,CAACC,GAAG,CAACF,CAAC,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,EAAE,CAAC,CAAC,GACpCJ,IAAI,CAACC,GAAG,CAACF,CAAC,CAACG,QAAQ,CAACC,QAAQ,CAACE,GAAG,EAAE,CAAC,CAAC;QAAA;QAEtCV,oBAAoB,CAACW,MAAM,CAACX,oBAAoB,CAACY,OAAO,CAACX,QAAQ,CAAC,EAAE,CAAC,CAAC;QAEtE,IAAMY,OAAO,GAAGb,oBAAoB,CAACc,MAAM,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;UACpD,OAAOX,IAAI,CAACY,GAAG,CAACd,GAAG,CAACa,CAAC,CAAC,GAAGb,GAAG,CAACF,QAAQ,CAAC,CAAC,GACrCI,IAAI,CAACY,GAAG,CAACd,GAAG,CAACY,CAAC,CAAC,GAAGZ,GAAG,CAACF,QAAQ,CAAC,CAAC,GAC9Be,CAAC,GACDD,CAAC;QACP,CAAC,CAAC;QAEFd,QAAQ,GAAGY,OAAO;QAClBd,cAAc,CAACmB,IAAI,CAACL,OAAO,CAAC;MAAC;MAf/B,KAAK,IAAIX,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGzB,eAAe,CAAC0C,MAAM,GAAG,CAAC,EAAEjB,KAAK,EAAE,EAAE;QAAA,MAAxDA,KAAK;MAgBd;MACAtB,YAAY,CAACmB,cAAc,CAAC;IAC9B,CAAC;IAAA,gBAxBKD,cAAc;MAAA;IAAA;EAAA,GAwBnB;EAED,OACE,KAAC,IAAI;IACH,KAAK,EAAE;MACLsB,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE,MAAM;MACdhC,KAAK,EAAE,MAAM;MACbiC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE;IAClB,CAAE;IAAA,UAED5C,SAAS,CAACwC,MAAM,GAAG,CAAC,GACnB;MAAA,WACE,KAAC,IAAI;QAAA;MAAA,EAA+B,EACnC1C,eAAe,CAAC0C,MAAM,GAAG,CAAC,GACzB,KAAC,iBAAiB;QAAC,WAAW,EAAC;MAAe,EAAG,GAEjD;QAAA,WACE,KAAC,iBAAiB;UAAC,WAAW,EAAC;QAAiB,EAAG,EAClD1C,eAAe,CAAC0C,MAAM,GAAG,CAAC,IACzB,KAAC,MAAM;UAAC,KAAK,EAAC,IAAI;UAAC,OAAO,EAAErB;QAAe,EAC5C;MAAA,EAEJ;IAAA,EACA,GAEH,KAAC,iBAAiB;MAAC,SAAS,EAAEnB;IAAU;EACzC,EACI;AAEX,CAAC;AAED,eAAeH,GAAG;AAElB,IAAMgD,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}