{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { customersList, setCustomersList, storeDetailState } from \"../state/state\";\nimport { addCustomerDetailsToDb } from \"../state/firebaseFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\nvar DeliveryScreen = function DeliveryScreen(_ref) {\n  var setDeliveryModal = _ref.setDeliveryModal,\n    setOngoingDelivery = _ref.setOngoingDelivery,\n    setName = _ref.setName,\n    setPhone = _ref.setPhone,\n    setAddress = _ref.setAddress,\n    name = _ref.name,\n    phone = _ref.phone,\n    address = _ref.address,\n    deliveryChecked = _ref.deliveryChecked,\n    setDeliveryChecked = _ref.setDeliveryChecked,\n    setsavedCustomerDetails = _ref.setsavedCustomerDetails,\n    ongoingDelivery = _ref.ongoingDelivery,\n    setsaveCustomerModal = _ref.setsaveCustomerModal;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    localAddress = _useState2[0],\n    setlocalAddress = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    saveCustomerChecked = _useState4[0],\n    setsaveCustomerChecked = _useState4[1];\n  var customers = customersList.use();\n  var storeDetails = storeDetailState.use();\n  var innerBoxRef = useRef(null);\n  useEffect(function () {\n    if (innerBoxRef.current) {\n      innerBoxRef.current.measure(function (fx, fy, width, height, px, py) {\n      });\n    }\n  }, [children]);\n  var handlePressOutside = function handlePressOutside(event) {\n    if (!innerBoxRef.current) return;\n    var _event$nativeEvent = event.nativeEvent,\n      locationX = _event$nativeEvent.locationX,\n      locationY = _event$nativeEvent.locationY;\n    innerBoxRef.current.measure(function (fx, fy, width, height, px, py) {\n      if (locationX < px || locationY < py || locationX > px + width || locationY > py + height) {\n        setDeliveryModal(false);\n      }\n    });\n  };\n\n  function calculateDistance(lat1, lon1, lat2, lon2) {\n    var R = 6371;\n    var dLat = (lat2 - lat1) * (Math.PI / 180);\n    var dLon = (lon2 - lon1) * (Math.PI / 180);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * (Math.PI / 180)) * Math.cos(lat2 * (Math.PI / 180)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var distance = R * c;\n    return distance;\n  }\n\n  function getLatLng(_x) {\n    return _getLatLng.apply(this, arguments);\n  }\n  function _getLatLng() {\n    _getLatLng = _asyncToGenerator(function* (placeId) {\n      var response = yield fetch(\"https://us-central1-posmate-5fc0a.cloudfunctions.net/getLatLng\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          placeId: placeId\n        })\n      });\n      try {\n        var responseData = yield response.json();\n        if (response.ok && responseData.success) {\n          console.log(\"Success!\");\n          return responseData.data;\n        } else {\n          console.error(responseData.message);\n        }\n      } catch (jsonError) {\n        console.error(\"Error parsing JSON response:\", jsonError);\n      }\n    });\n    return _getLatLng.apply(this, arguments);\n  }\n  function calculateDistanceBetweenAddresses(_x2, _x3) {\n    return _calculateDistanceBetweenAddresses.apply(this, arguments);\n  }\n  function _calculateDistanceBetweenAddresses() {\n    _calculateDistanceBetweenAddresses = _asyncToGenerator(function* (address1, address2) {\n      try {\n        var _yield$getLatLng = yield getLatLng(address1),\n          lat1 = _yield$getLatLng.lat,\n          lon1 = _yield$getLatLng.lng;\n        var _yield$getLatLng2 = yield getLatLng(address2),\n          lat2 = _yield$getLatLng2.lat,\n          lon2 = _yield$getLatLng2.lng;\n        var distance = calculateDistance(lat1, lon1, lat2, lon2);\n        return distance;\n      } catch (error) {\n        console.error(\"Error calculating distance:\", error);\n        return null;\n      }\n    });\n    return _calculateDistanceBetweenAddresses.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    if (address) {\n      console.log(\"Set address: \", address);\n      setlocalAddress(address);\n      calculateDistanceBetweenAddresses(storeDetails.address.value.reference, address.address.value.reference).then(function (distance) {\n        if (distance !== null) {\n          console.log(\"Distance between addresses: \" + distance.toFixed(2) + \" km\");\n          if (storeDetails.deliveryRange) {\n            if (distance > parseFloat(storeDetails.deliveryRange)) {\n              alert(\"The delivery address is out of range\");\n            }\n          }\n        }\n      });\n    }\n  }, []);\n  useEffect(function () {\n    if (localAddress) {\n      setAddress(localAddress);\n      calculateDistanceBetweenAddresses(storeDetails.address.value.reference, localAddress.value.reference).then(function (distance) {\n        if (distance !== null) {\n          console.log(\"Distance between addresses: \" + distance.toFixed(2) + \" km\");\n          if (storeDetails.deliveryRange) {\n            if (distance > parseFloat(storeDetails.deliveryRange)) {\n              alert(\"The delivery address is out of range\");\n            }\n          }\n        }\n      });\n    }\n  }, [localAddress]);\n  var SaveCustomer = function SaveCustomer() {\n    addCustomerDetailsToDb({\n      name: name,\n      phone: phone,\n      address: address ? address : null,\n      orders: []\n    }).then(function (docRef) {\n      setsavedCustomerDetails({\n        name: name,\n        phone: phone,\n        address: address ? address : null,\n        orders: [],\n        id: docRef.id\n      });\n      setCustomersList([].concat(_toConsumableArray(customers), [{\n        name: name,\n        phone: phone,\n        address: address ? address : null,\n        orders: [],\n        id: docRef.id\n      }]));\n    });\n  };\n  return _jsx(TouchableOpacity, {\n    onPress: handlePressOutside,\n    style: {\n      backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flex: 1\n    },\n    children: _jsx(View, {\n      ref: innerBoxRef,\n      style: {\n        padding: 50,\n        backgroundColor: \"rgba(255,255,255,1)\",\n        borderRadius: 30,\n        shadowColor: \"rgba(0,0,0,1)\",\n        shadowOffset: {\n          width: 3,\n          height: 3\n        },\n        elevation: 30,\n        shadowOpacity: 0.57,\n        shadowRadius: 10\n      },\n      children: children\n    })\n  });\n};\nexport default DeliveryScreen;\nvar styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 25\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\"\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25\n  },\n  touchable: {\n    margin: 25,\n    width: 300\n  },\n  modalContainer: {\n    padding: 50,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 30,\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 0.57,\n    shadowRadius: 10,\n    width: \"35%\"\n  },\n  btn: {\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  input: {\n    marginTop: 25,\n    marginBottom: 25\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useRef","customersList","setCustomersList","storeDetailState","addCustomerDetailsToDb","GOOGLE_API_KEY","DeliveryScreen","setDeliveryModal","setOngoingDelivery","setName","setPhone","setAddress","name","phone","address","deliveryChecked","setDeliveryChecked","setsavedCustomerDetails","ongoingDelivery","setsaveCustomerModal","localAddress","setlocalAddress","saveCustomerChecked","setsaveCustomerChecked","customers","use","storeDetails","innerBoxRef","current","measure","fx","fy","width","height","px","py","children","handlePressOutside","event","nativeEvent","locationX","locationY","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","distance","getLatLng","placeId","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","success","console","log","data","error","message","jsonError","calculateDistanceBetweenAddresses","address1","address2","lat","lng","value","reference","then","toFixed","deliveryRange","parseFloat","alert","SaveCustomer","orders","docRef","id","backgroundColor","justifyContent","alignItems","flex","padding","borderRadius","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","styles","StyleSheet","create","sizeRow","flexDirection","marginBottom","halfRow","toppingsContainer","flexWrap","marginTop","touchable","margin","modalContainer","btn","input"],"sources":["/Users/peterputros/Desktop/PosMate/components/DeliveryScreen.tsx"],"sourcesContent":["import {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport {\n  cartState,\n  customersList,\n  setCartState,\n  setCustomersList,\n  storeDetailState,\n} from \"state/state\";\nimport { Switch } from \"react-native-gesture-handler\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { addCustomerDetailsToDb } from \"state/firebaseFunctions\";\n\nconst GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\n\nconst DeliveryScreen = ({\n  setDeliveryModal,\n  setOngoingDelivery,\n  setName,\n  setPhone,\n  setAddress,\n  name,\n  phone,\n  address,\n  deliveryChecked,\n  setDeliveryChecked,\n  setsavedCustomerDetails,\n  ongoingDelivery,\n  setsaveCustomerModal,\n}) => {\n  const [localAddress, setlocalAddress] = useState(null);\n  const [saveCustomerChecked, setsaveCustomerChecked] = useState(false);\n  const customers = customersList.use();\n  const storeDetails = storeDetailState.use();\n  const innerBoxRef = useRef(null);\n\n  useEffect(() => {\n    if (innerBoxRef.current) {\n      innerBoxRef.current.measure((fx, fy, width, height, px, py) => {\n        // Here, you can get the measured width and height of the inner box\n        // You can use this information to perform actions accordingly\n      });\n    }\n  }, [children]);\n\n  const handlePressOutside = (event) => {\n    if (!innerBoxRef.current) return;\n\n    const { locationX, locationY } = event.nativeEvent;\n\n    innerBoxRef.current.measure((fx, fy, width, height, px, py) => {\n      if (\n        locationX < px ||\n        locationY < py ||\n        locationX > px + width ||\n        locationY > py + height\n      ) {\n        setDeliveryModal(false);\n      }\n    });\n  };\n\n  //\n\n  // Function to calculate distance between two points using Haversine formula\n  function calculateDistance(lat1, lon1, lat2, lon2) {\n    const R = 6371; // Radius of the Earth in km\n    const dLat = (lat2 - lat1) * (Math.PI / 180); // Convert degrees to radians\n    const dLon = (lon2 - lon1) * (Math.PI / 180);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(lat1 * (Math.PI / 180)) *\n        Math.cos(lat2 * (Math.PI / 180)) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in km\n    return distance;\n  }\n\n  // Function to get the latitude and longitude of an address using the Google Maps Geocoding API\n  async function getLatLng(placeId) {\n    const response = await fetch(\n      \"https://us-central1-posmate-5fc0a.cloudfunctions.net/getLatLng\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          placeId: placeId,\n        }),\n      }\n    );\n\n    try {\n      const responseData = await response.json();\n\n      if (response.ok && responseData.success) {\n        console.log(\"Success!\");\n        return responseData.data;\n      } else {\n        console.error(responseData.message);\n      }\n    } catch (jsonError) {\n      console.error(\"Error parsing JSON response:\", jsonError);\n    }\n  }\n\n  // Function to calculate distance between two addresses using Google Places API\n  async function calculateDistanceBetweenAddresses(address1, address2) {\n    try {\n      const { lat: lat1, lng: lon1 } = await getLatLng(address1);\n      const { lat: lat2, lng: lon2 } = await getLatLng(address2);\n      const distance = calculateDistance(lat1, lon1, lat2, lon2);\n      return distance;\n    } catch (error) {\n      console.error(\"Error calculating distance:\", error);\n      return null;\n    }\n  }\n\n  //\n\n  useEffect(() => {\n    if (address) {\n      console.log(\"Set address: \", address);\n      setlocalAddress(address);\n      calculateDistanceBetweenAddresses(\n        storeDetails.address.value.reference,\n        address.address.value.reference\n      ).then((distance) => {\n        if (distance !== null) {\n          console.log(`Distance between addresses: ${distance.toFixed(2)} km`);\n          if (storeDetails.deliveryRange) {\n            if (distance > parseFloat(storeDetails.deliveryRange)) {\n              alert(\"The delivery address is out of range\");\n            }\n            // else {\n            //   setpage(2);\n            // }\n          }\n          // else {\n          //   setpage(2);\n          // }\n        }\n        // else {\n        //   alert(\n        //     \"Distance calculation between the store and your location failed. Please refresh page.\"\n        //   );\n        // }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (localAddress) {\n      setAddress(localAddress);\n      calculateDistanceBetweenAddresses(\n        storeDetails.address.value.reference,\n        localAddress.value.reference\n      ).then((distance) => {\n        if (distance !== null) {\n          console.log(`Distance between addresses: ${distance.toFixed(2)} km`);\n          if (storeDetails.deliveryRange) {\n            if (distance > parseFloat(storeDetails.deliveryRange)) {\n              alert(\"The delivery address is out of range\");\n            }\n            // else {\n            //   setpage(2);\n            // }\n          }\n          // else {\n          //   setpage(2);\n          // }\n        }\n        // else {\n        //   alert(\n        //     \"Distance calculation between the store and your location failed. Please refresh page.\"\n        //   );\n        // }\n      });\n    }\n  }, [localAddress]);\n\n  const SaveCustomer = () => {\n    addCustomerDetailsToDb({\n      name: name,\n      phone: phone,\n      address: address ? address : null,\n      orders: [],\n    }).then((docRef) => {\n      setsavedCustomerDetails({\n        name: name,\n        phone: phone,\n        address: address ? address : null,\n        orders: [],\n        id: docRef.id,\n      });\n\n      setCustomersList([\n        ...customers,\n        {\n          name: name,\n          phone: phone,\n          address: address ? address : null,\n          orders: [],\n          id: docRef.id,\n        },\n      ]);\n    });\n  };\n\n  return (\n    <TouchableOpacity\n      onPress={handlePressOutside}\n      style={{\n        backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flex: 1,\n      }}\n    >\n      <View\n        ref={innerBoxRef}\n        style={{\n          padding: 50,\n          backgroundColor: \"rgba(255,255,255,1)\",\n          borderRadius: 30,\n          shadowColor: \"rgba(0,0,0,1)\",\n          shadowOffset: {\n            width: 3,\n            height: 3,\n          },\n          elevation: 30,\n          shadowOpacity: 0.57,\n          shadowRadius: 10,\n        }}\n      >\n        {children}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default DeliveryScreen;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 30,\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3,\n    },\n    elevation: 30,\n    shadowOpacity: 0.57,\n    shadowRadius: 10,\n    width: \"35%\",\n  },\n  btn: {\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  input: {\n    marginTop: 25,\n    marginBottom: 25,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}