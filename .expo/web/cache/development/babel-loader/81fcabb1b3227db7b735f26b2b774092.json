{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport HomeScreen from \"../../screens/authed/HomeScreen\";\nimport SettingsScreen from \"../../screens/authed/SettingsScreen\";\nimport UpgradeScreen from \"../../screens/authed/UpgradeScreen\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Constants from \"expo-constants\";\nimport { getHeaderTitle } from \"@react-navigation/elements\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction MyTabBar(_ref) {\n  var state = _ref.state,\n    descriptors = _ref.descriptors,\n    navigation = _ref.navigation;\n  return _jsx(View, {\n    style: {\n      flexDirection: \"row\",\n      height: \"10%\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n      paddingBottom: 20,\n      shadowColor: \"#111\",\n      shadowOffset: {\n        width: 0,\n        height: -2\n      },\n      shadowOpacity: 0.2,\n      shadowRadius: 1.2,\n      elevation: 3,\n      borderTopWidth: 1,\n      borderTopColor: \"#CCC\"\n    },\n    children: state.routes.map(function (route, index) {\n      var options = descriptors[route.key].options;\n      var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n      var isFocused = state.index === index;\n      var onPress = function onPress() {\n        var event = navigation.emit({\n          type: \"tabPress\",\n          target: route.key,\n          canPreventDefault: true\n        });\n        if (!isFocused && !event.defaultPrevented) {\n          navigation.navigate({\n            name: route.name,\n            merge: true\n          });\n        }\n      };\n      var onLongPress = function onLongPress() {\n        navigation.emit({\n          type: \"tabLongPress\",\n          target: route.key\n        });\n      };\n      return _jsxs(TouchableOpacity, {\n        accessibilityRole: \"button\",\n        accessibilityState: isFocused ? {\n          selected: true\n        } : {},\n        accessibilityLabel: options.tabBarAccessibilityLabel,\n        testID: options.tabBarTestID,\n        onPress: onPress,\n        onLongPress: onLongPress,\n        style: {\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(Ionicons, {\n          name: route.name === \"Home\" && \"home\" || route.name === \"Settings\" && \"settings-outline\" || route.name === \"Upgrade\" && \"star\",\n          size: 24,\n          color: isFocused ? \"#3F51B5\" : \"#222\",\n          style: {\n            paddingBottom: 5\n          }\n        }), _jsx(Text, {\n          style: {\n            color: isFocused ? \"#3F51B5\" : \"#222\",\n            fontSize: 12\n          },\n          children: label\n        })]\n      });\n    })\n  });\n}\nfunction MyHeader(_ref2) {\n  var navigation = _ref2.navigation,\n    route = _ref2.route,\n    options = _ref2.options,\n    back = _ref2.back,\n    icon = _ref2.icon;\n  var title = getHeaderTitle(options, route.name);\n  return _jsxs(View, {\n    style: {\n      flexDirection: \"row\",\n      minHeight: 90,\n      width: \"100%\",\n      backgroundColor: \"#3F51B5\",\n      paddingTop: Constants.statusBarHeight,\n      alignItems: \"center\",\n      padding: 10,\n      justifyContent: \"space-between\",\n      shadowColor: \"#111\",\n      shadowOffset: {\n        width: 0,\n        height: 2\n      },\n      shadowOpacity: 0.2,\n      shadowRadius: 1.2,\n      elevation: 3,\n      flex: 1\n    },\n    children: [_jsx(View, {\n      style: {\n        flex: 1\n      }\n    }), _jsx(View, {\n      style: {\n        alignItems: \"center\",\n        flex: 1\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: \"600\",\n          color: \"white\"\n        },\n        children: title === \"Home\" ? \"Saved Routes\" : title\n      })\n    }), icon ? _jsx(TouchableOpacity, {\n      style: {\n        flex: 1,\n        justifyContent: \"flex-end\",\n        alignItems: \"flex-end\"\n      },\n      children: _jsx(Ionicons, {\n        name: icon,\n        size: 24,\n        color: \"white\"\n      })\n    }) : _jsx(View, {\n      style: {\n        flex: 1\n      }\n    })]\n  });\n}\nfunction MyTabs() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsxs(Tab.Navigator, {\n      tabBar: function tabBar(props) {\n        return _jsx(MyTabBar, _objectSpread({}, props));\n      },\n      initialRouteName: \"Home\",\n      children: [_jsx(Tab.Screen, {\n        name: \"Settings\",\n        component: SettingsScreen,\n        options: {\n          header: function header(props) {\n            return _jsx(MyHeader, _objectSpread({}, props));\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          header: function header(props) {\n            return _jsx(MyHeader, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"add\"\n            }));\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Upgrade\",\n        component: UpgradeScreen,\n        options: {\n          header: function header(props) {\n            return _jsx(MyHeader, _objectSpread({}, props));\n          }\n        }\n      })]\n    })]\n  });\n}\nvar TabNav = function TabNav() {\n  return _jsx(MyTabs, {});\n};\nexport default TabNav;","map":{"version":3,"names":["React","createBottomTabNavigator","HomeScreen","SettingsScreen","UpgradeScreen","Ionicons","StatusBar","Constants","getHeaderTitle","Tab","MyTabBar","state","descriptors","navigation","flexDirection","height","alignItems","justifyContent","width","paddingBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderTopWidth","borderTopColor","routes","map","route","index","options","key","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","navigate","merge","onLongPress","selected","tabBarAccessibilityLabel","tabBarTestID","flex","color","fontSize","MyHeader","back","icon","minHeight","backgroundColor","paddingTop","statusBarHeight","padding","fontWeight","MyTabs","props","header","TabNav"],"sources":["/Users/peterputros/Desktop/PosMate/navigation/authed/TabNav.tsx"],"sourcesContent":["import { Text, TouchableOpacity, View } from \"react-native\";\nimport React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport HomeScreen from \"screens/authed/HomeScreen\";\nimport SettingsScreen from \"screens/authed/SettingsScreen\";\nimport UpgradeScreen from \"screens/authed/UpgradeScreen\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Constants from \"expo-constants\";\nimport { getHeaderTitle } from \"@react-navigation/elements\";\n\nconst Tab = createBottomTabNavigator();\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        height: \"10%\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        paddingBottom: 20,\n        shadowColor: \"#111\",\n        shadowOffset: {\n          width: 0,\n          height: -2,\n        },\n        shadowOpacity: 0.2,\n        shadowRadius: 1.2,\n        elevation: 3,\n        borderTopWidth: 1,\n        borderTopColor: \"#CCC\",\n      }}\n    >\n      {state.routes.map((route, index) => {\n        const { options } = descriptors[route.key];\n        const label =\n          options.tabBarLabel !== undefined\n            ? options.tabBarLabel\n            : options.title !== undefined\n            ? options.title\n            : route.name;\n\n        const isFocused = state.index === index;\n\n        const onPress = () => {\n          const event = navigation.emit({\n            type: \"tabPress\",\n            target: route.key,\n            canPreventDefault: true,\n          });\n\n          if (!isFocused && !event.defaultPrevented) {\n            // The `merge: true` option makes sure that the params inside the tab screen are preserved\n            navigation.navigate({ name: route.name, merge: true });\n          }\n        };\n\n        const onLongPress = () => {\n          navigation.emit({\n            type: \"tabLongPress\",\n            target: route.key,\n          });\n        };\n\n        return (\n          <TouchableOpacity\n            accessibilityRole=\"button\"\n            accessibilityState={isFocused ? { selected: true } : {}}\n            accessibilityLabel={options.tabBarAccessibilityLabel}\n            testID={options.tabBarTestID}\n            onPress={onPress}\n            onLongPress={onLongPress}\n            style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\n          >\n            <Ionicons\n              name={\n                (route.name === \"Home\" && \"home\") ||\n                (route.name === \"Settings\" && \"settings-outline\") ||\n                (route.name === \"Upgrade\" && \"star\")\n              }\n              size={24}\n              color={isFocused ? \"#3F51B5\" : \"#222\"}\n              style={{ paddingBottom: 5 }}\n            />\n            <Text\n              style={{ color: isFocused ? \"#3F51B5\" : \"#222\", fontSize: 12 }}\n            >\n              {label}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n}\n\nfunction MyHeader({ navigation, route, options, back, icon }) {\n  const title = getHeaderTitle(options, route.name);\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        minHeight: 90,\n        width: \"100%\",\n        backgroundColor: \"#3F51B5\",\n        paddingTop: Constants.statusBarHeight,\n        alignItems: \"center\",\n        padding: 10,\n        justifyContent: \"space-between\",\n        shadowColor: \"#111\",\n        shadowOffset: {\n          width: 0,\n          height: 2,\n        },\n        shadowOpacity: 0.2,\n        shadowRadius: 1.2,\n        elevation: 3,\n        flex: 1,\n      }}\n    >\n      <View style={{ flex: 1 }} />\n      <View style={{ alignItems: \"center\", flex: 1 }}>\n        <Text style={{ fontSize: 18, fontWeight: \"600\", color: \"white\" }}>\n          {title === \"Home\" ? \"Saved Routes\" : title}\n        </Text>\n      </View>\n      {icon ? (\n        <TouchableOpacity\n          style={{\n            flex: 1,\n            justifyContent: \"flex-end\",\n            alignItems: \"flex-end\",\n          }}\n        >\n          <Ionicons name={icon} size={24} color={\"white\"} />\n        </TouchableOpacity>\n      ) : (\n        <View style={{ flex: 1 }} />\n      )}\n    </View>\n  );\n}\n\nfunction MyTabs() {\n  return (\n    <>\n      <StatusBar style=\"light\" />\n      <Tab.Navigator\n        tabBar={(props) => <MyTabBar {...props} />}\n        initialRouteName=\"Home\"\n      >\n        <Tab.Screen\n          name=\"Settings\"\n          component={SettingsScreen}\n          options={{ header: (props) => <MyHeader {...props} /> }}\n        />\n        <Tab.Screen\n          name=\"Home\"\n          component={HomeScreen}\n          options={{ header: (props) => <MyHeader {...props} icon=\"add\" /> }}\n        />\n        <Tab.Screen\n          name=\"Upgrade\"\n          component={UpgradeScreen}\n          options={{ header: (props) => <MyHeader {...props} /> }}\n        />\n      </Tab.Navigator>\n    </>\n  );\n}\n\nconst TabNav = () => {\n  return <MyTabs />;\n};\n\nexport default TabNav;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}