{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"../state/state\";\nimport { updateData } from \"../state/firebaseFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar MyListItem = function MyListItem(_ref) {\n  var item = _ref.item,\n    index = _ref.index,\n    setnewProduct = _ref.setnewProduct,\n    newProduct = _ref.newProduct,\n    newProductOptions = _ref.newProductOptions;\n  var memoizedItem = useMemo(function () {\n    return item;\n  }, [item]);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    optionLblsValues = _useState2[0],\n    setoptionLblsValues = _useState2[1];\n  var _useState3 = useState(memoizedItem),\n    _useState4 = _slicedToArray(_useState3, 2),\n    e = _useState4[0],\n    sete = _useState4[1];\n  var optionLbls = newProduct.options.map(function (el) {\n    if (el.label !== e.label && el.label !== null) {\n      return el.label;\n    }\n  });\n  useEffect(function () {\n    if (e.selectedCaseKey !== null) {\n      var local = newProduct.options.filter(function (localE) {\n        return localE.label == e.selectedCaseKey;\n      });\n      var optionLblsValuesLocal = local[0].optionsList.map(function (el) {\n        return el.label;\n      });\n      setoptionLblsValues(optionLblsValuesLocal);\n    }\n  }, [e]);\n  return _jsx(View, {\n    style: {\n      height: 200\n    },\n    children: _jsxs(View, {\n      style: {\n        padding: 25,\n        margin: 15,\n        backgroundColor: \"lightgrey\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          newProductOptions.current.push(_objectSpread(_objectSpread({}, e), {}, {\n            label: e.label + \" Copy\"\n          }));\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"Copy\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          newProductOptions.current.splice(index, 1);\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"X\"\n        })\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Select List Label\",\n        onChangeText: function onChangeText(val) {\n          sete(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              label: val\n            });\n          });\n          newProductOptions.current[index].label = val;\n        },\n        value: e.label,\n        style: {\n          marginBottom: 25\n        }\n      }), _jsx(DropDown, {\n        label: \"Option Type\",\n        options: [\"Standard\", \"Dropdown\"],\n        setValue: function setValue(val) {\n          if (e.optionType) {\n            newProductOptions.current[index].optionType = val;\n          } else {\n            newProductOptions.current[index] = _objectSpread(_objectSpread({}, e), {}, {\n              optionType: val\n            });\n            console.log(newProductOptions.current[index].optionType);\n          }\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n        },\n        value: e.optionType,\n        style: {\n          marginBottom: 25\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Number Of Selectable; If There Is\",\n        onChangeText: function onChangeText(val) {\n          sete(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              numOfSelectable: val\n            });\n          });\n          newProductOptions.current[index].numOfSelectable = val;\n        },\n        value: e.numOfSelectable,\n        style: {\n          marginBottom: 25\n        }\n      }), e.optionsList.map(function (eInnerListStart, indexInnerList) {\n        var _useState5 = useState(eInnerListStart),\n          _useState6 = _slicedToArray(_useState5, 2),\n          eInnerList = _useState6[0],\n          seteInnerList = _useState6[1];\n        return _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            marginBottom: 25,\n            alignItems: \"center\"\n          },\n          children: [_jsx(TextInput, {\n            placeholder: \"Enter Option Label\",\n            onChangeText: function onChangeText(val) {\n              newProductOptions.current[index].optionsList[indexInnerList].label = val;\n              seteInnerList(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  label: val\n                });\n              });\n            },\n            value: eInnerList.label\n          }), _jsx(TextInput, {\n            placeholder: \"Enter price increase\",\n            onChangeText: function onChangeText(val) {\n              newProductOptions.current[index].optionsList[indexInnerList].priceIncrease = val;\n              seteInnerList(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  priceIncrease: val\n                });\n              });\n            },\n            value: eInnerList.priceIncrease,\n            style: {\n              marginLeft: 20,\n              marginRight: 20\n            }\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              newProductOptions.current[index].optionsList.splice(indexInnerList, 1);\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newProductOptions.current\n                });\n              });\n            },\n            children: _jsx(Text, {\n              style: {\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"X\"\n            })\n          })]\n        });\n      }), _jsx(Button, {\n        title: \"Add Option Choice\",\n        onPress: function onPress() {\n          newProductOptions.current[index].optionsList.push({\n            label: null,\n            priceIncrease: null\n          });\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n        },\n        style: {\n          marginBottom: 25\n        }\n      }), optionLbls.length > 1 && _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          marginBottom: 25\n        },\n        children: [_jsx(DropDown, {\n          label: \"Show if...\",\n          options: optionLbls,\n          setValue: function setValue(val) {\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                selectedCaseKey: val\n              });\n            });\n            newProductOptions.current[index].selectedCaseKey = val;\n          },\n          value: e.selectedCaseKey,\n          style: {\n            marginBottom: 25\n          }\n        }), _jsx(Text, {\n          children: \"\\\"=\\\"\"\n        }), _jsx(DropDown, {\n          label: \"Show if...\",\n          options: optionLblsValues,\n          setValue: function setValue(val) {\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                selectedCaseValue: val\n              });\n            });\n            newProductOptions.current[index].selectedCaseValue = val;\n          },\n          value: e.selectedCaseValue,\n          style: {\n            marginBottom: 25\n          }\n        })]\n      })]\n    })\n  });\n};\nvar AddProduct = function AddProduct(_ref2) {\n  var setProductModal = _ref2.setProductModal,\n    setisModalVisible = _ref2.setisModalVisible,\n    existingProduct = _ref2.existingProduct,\n    existingProductIndex = _ref2.existingProductIndex;\n  var catalog = userStoreState.use();\n  var _useState7 = useState(existingProduct ? existingProduct : {\n      name: null,\n      price: null,\n      catagory: null,\n      options: [],\n      description: null\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    newProduct = _useState8[0],\n    setnewProduct = _useState8[1];\n  var newProductOptions = useRef(existingProduct ? existingProduct.options : []);\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [copyProductData]));\n      setisModalVisible(true);\n    } else if (existingProduct) {\n      var copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n\n      setisModalVisible(true);\n      updateData(_toConsumableArray(catalog.categories), copy).then(function () {\n        setisModalVisible(false);\n        setProductModal(false);\n      }).catch(function () {\n        setisModalVisible(false);\n        setProductModal(false);\n      });\n    } else {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [newProduct]));\n      setisModalVisible(true);\n    }\n  }\n  var OptionsAddingSection = function OptionsAddingSection() {\n    return _jsx(View, {\n      children: _jsx(FlatList, {\n        ListHeaderComponent: function ListHeaderComponent() {\n          return _jsxs(_Fragment, {\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                padding: 20,\n                justifyContent: \"space-between\",\n                alignItems: \"center\"\n              },\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return setProductModal(false);\n                },\n                children: _jsx(Text, {\n                  style: {\n                    marginBottom: 25,\n                    fontWeight: \"700\",\n                    color: \"red\"\n                  },\n                  children: \"X\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  var copy = structuredClone(_objectSpread(_objectSpread({}, newProduct), {}, {\n                    options: newProductOptions.current\n                  }));\n                  copy.name = copy.name + \" Copy\";\n                  handleDataUpdate(copy);\n                },\n                children: _jsx(Text, {\n                  style: {\n                    marginBottom: 25,\n                    fontWeight: \"700\",\n                    color: \"red\"\n                  },\n                  children: \"Copy\"\n                })\n              }), _jsx(Text, {\n                style: {\n                  marginBottom: 25\n                },\n                children: \"AddProduct\"\n              })]\n            }), _jsx(TextInput, {\n              placeholder: \"Enter Product Name\",\n              onChangeText: function onChangeText(val) {\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    name: val\n                  });\n                });\n              },\n              value: newProduct.name,\n              style: {\n                marginBottom: 25\n              }\n            }), _jsx(TextInput, {\n              placeholder: \"Enter any other items that come with this\",\n              onChangeText: function onChangeText(val) {\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    description: val\n                  });\n                });\n              },\n              style: {\n                marginBottom: 25\n              },\n              value: newProduct.description\n            }), _jsx(TextInput, {\n              placeholder: \"Enter Product Price\",\n              onChangeText: function onChangeText(val) {\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    price: val\n                  });\n                });\n              },\n              style: {\n                marginBottom: 25\n              },\n              value: newProduct.price\n            }), _jsx(DropDown, {\n              label: \"Choose catagory\",\n              options: catalog.categories,\n              setValue: function setValue(val) {\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    catagory: val\n                  });\n                });\n              },\n              value: newProduct.catagory,\n              style: {\n                marginBottom: 25\n              }\n            })]\n          });\n        },\n        ListFooterComponent: function ListFooterComponent() {\n          return _jsxs(_Fragment, {\n            children: [_jsx(Button, {\n              title: \"Add/Save Product\",\n              onPress: function onPress() {\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    options: newProductOptions.current\n                  });\n                });\n                handleDataUpdate();\n              },\n              style: {\n                marginBottom: 25,\n                marginTop: 25,\n                backgroundColor: \"lightgreen\"\n              }\n            }), _jsx(Button, {\n              title: \"Add Product Option\",\n              onPress: function onPress() {\n                newProductOptions.current.push({\n                  label: null,\n                  optionsList: [],\n                  selectedCaseKey: null,\n                  selectedCaseValue: null,\n                  numOfSelectable: null,\n                  id: Math.random().toString(36).substr(2, 9),\n                  optionType: null\n                });\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    options: newProductOptions.current\n                  });\n                });\n              },\n              style: {\n                marginBottom: 25\n              }\n            })]\n          });\n        },\n        data: newProduct.options,\n        keyExtractor: function keyExtractor(item) {\n          return item.id && item.id.toString();\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item,\n            index = _ref3.index;\n          return _jsx(MyListItem, {\n            item: item,\n            index: index,\n            newProduct: newProduct,\n            setnewProduct: setnewProduct,\n            newProductOptions: newProductOptions\n          });\n        }\n      })\n    });\n  };\n  return _jsx(OptionsAddingSection, {});\n};\nexport default AddProduct;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","Button","TextInput","DropDown","userStoreState","updateData","MyListItem","item","index","setnewProduct","newProduct","newProductOptions","memoizedItem","optionLblsValues","setoptionLblsValues","e","sete","optionLbls","options","map","el","label","selectedCaseKey","local","filter","localE","optionLblsValuesLocal","optionsList","height","padding","margin","backgroundColor","current","push","prevState","marginBottom","fontWeight","color","splice","val","optionType","console","log","numOfSelectable","eInnerListStart","indexInnerList","eInnerList","seteInnerList","flexDirection","alignItems","priceIncrease","marginLeft","marginRight","length","justifyContent","selectedCaseValue","AddProduct","setProductModal","setisModalVisible","existingProduct","existingProductIndex","catalog","use","name","price","catagory","description","handleDataUpdate","copyProductData","categories","products","copy","structuredClone","then","catch","OptionsAddingSection","marginTop","id","Math","random","toString","substr","styles","StyleSheet","create"],"sources":["/Users/peterputros/Desktop/PosMate-1/components/TestAdd.tsx"],"sourcesContent":["import {\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"state/state\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst MyListItem = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n}) => {\n  const memoizedItem = useMemo(() => item, [item]);\n\n  const [optionLblsValues, setoptionLblsValues] = useState([]);\n  const [e, sete] = useState(memoizedItem);\n  var optionLbls = newProduct.options.map(function (el) {\n    if (el.label !== e.label && el.label !== null) {\n      return el.label;\n    }\n  });\n\n  useEffect(() => {\n    if (e.selectedCaseKey !== null) {\n      const local = newProduct.options.filter(\n        (localE) => localE.label == e.selectedCaseKey\n      );\n      const optionLblsValuesLocal = local[0].optionsList.map(function (el) {\n        return el.label;\n      });\n      setoptionLblsValues(optionLblsValuesLocal);\n    }\n  }, [e]);\n\n  return (\n    <View style={{ height: 200 }}>\n      <View\n        style={{\n          padding: 25,\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.push({\n              ...e,\n              label: e.label + \" Copy\",\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.splice(index, 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            X\n          </Text>\n        </TouchableOpacity>\n        <TextInput\n          placeholder=\"Enter Select List Label\"\n          onChangeText={(val) => {\n            sete((prevState) => ({ ...prevState, label: val }));\n            newProductOptions.current[index].label = val;\n          }}\n          value={e.label}\n          style={{ marginBottom: 25 }}\n        />\n        {/* optionType */}\n        <DropDown\n          label=\"Option Type\"\n          options={[\"Standard\", \"Dropdown\"]}\n          setValue={(val) => {\n            // sete((prevState) => ({\n            //   ...prevState,\n            //   optionType: val,\n            // }));\n            if (e.optionType) {\n              newProductOptions.current[index].optionType = val;\n            } else {\n              newProductOptions.current[index] = { ...e, optionType: val };\n              console.log(newProductOptions.current[index].optionType);\n            }\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n          }}\n          value={e.optionType}\n          style={{ marginBottom: 25 }}\n        />\n        <TextInput\n          placeholder=\"Enter Number Of Selectable; If There Is\"\n          onChangeText={(val) => {\n            sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n            newProductOptions.current[index].numOfSelectable = val;\n          }}\n          value={e.numOfSelectable}\n          style={{ marginBottom: 25 }}\n        />\n        {e.optionsList.map((eInnerListStart, indexInnerList) => {\n          const [eInnerList, seteInnerList] = useState(eInnerListStart);\n          return (\n            <View\n              style={{\n                flexDirection: \"row\",\n                marginBottom: 25,\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                placeholder=\"Enter Option Label\"\n                onChangeText={(val) => {\n                  newProductOptions.current[index].optionsList[\n                    indexInnerList\n                  ].label = val;\n                  seteInnerList((prevState) => ({\n                    ...prevState,\n                    label: val,\n                  }));\n                }}\n                value={eInnerList.label}\n              />\n              <TextInput\n                placeholder=\"Enter price increase\"\n                onChangeText={(val) => {\n                  newProductOptions.current[index].optionsList[\n                    indexInnerList\n                  ].priceIncrease = val;\n                  seteInnerList((prevState) => ({\n                    ...prevState,\n                    priceIncrease: val,\n                  }));\n                }}\n                value={eInnerList.priceIncrease}\n                style={{ marginLeft: 20, marginRight: 20 }}\n              />\n              <TouchableOpacity\n                onPress={() => {\n                  newProductOptions.current[index].optionsList.splice(\n                    indexInnerList,\n                    1\n                  );\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: newProductOptions.current,\n                  }));\n                }}\n              >\n                <Text\n                  style={{\n                    fontWeight: \"700\",\n                    color: \"red\",\n                  }}\n                >\n                  X\n                </Text>\n              </TouchableOpacity>\n            </View>\n          );\n        })}\n        <Button\n          title=\"Add Option Choice\"\n          onPress={() => {\n            newProductOptions.current[index].optionsList.push({\n              label: null,\n              priceIncrease: null,\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n          }}\n          style={{ marginBottom: 25 }}\n        />\n        {optionLbls.length > 1 && (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              marginBottom: 25,\n            }}\n          >\n            <DropDown\n              label=\"Show if...\"\n              options={optionLbls}\n              setValue={(val) => {\n                sete((prevState) => ({ ...prevState, selectedCaseKey: val }));\n                newProductOptions.current[index].selectedCaseKey = val;\n              }}\n              value={e.selectedCaseKey}\n              style={{ marginBottom: 25 }}\n            />\n            <Text>\"=\"</Text>\n            <DropDown\n              label=\"Show if...\"\n              options={optionLblsValues}\n              setValue={(val) => {\n                sete((prevState) => ({ ...prevState, selectedCaseValue: val }));\n                newProductOptions.current[index].selectedCaseValue = val;\n              }}\n              value={e.selectedCaseValue}\n              style={{ marginBottom: 25 }}\n            />\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst AddProduct = ({\n  setProductModal,\n  setisModalVisible,\n  existingProduct,\n  existingProductIndex,\n}) => {\n  const catalog = userStoreState.use();\n  const [newProduct, setnewProduct] = useState(\n    existingProduct\n      ? existingProduct\n      : {\n          name: null,\n          price: null,\n          catagory: null,\n          options: [],\n          description: null,\n        }\n  );\n  const newProductOptions = useRef(\n    existingProduct ? existingProduct.options : []\n  );\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(\n        [...catalog.categories],\n        [...catalog.products, copyProductData]\n      );\n      setisModalVisible(true);\n    } else if (existingProduct) {\n      let copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n\n      // if (existingProduct !== newProduct) {\n      setisModalVisible(true);\n      updateData([...catalog.categories], copy)\n        .then(() => {\n          setisModalVisible(false);\n          setProductModal(false);\n        })\n        .catch(() => {\n          setisModalVisible(false);\n          setProductModal(false);\n        });\n      // setisModalVisible(true);\n      // } else {\n      //   setProductModal(false);\n      // }\n    } else {\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\n      setisModalVisible(true);\n    }\n  }\n\n  const OptionsAddingSection = () => {\n    return (\n      <View>\n        <FlatList\n          ListHeaderComponent={() => (\n            <>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  padding: 20,\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <TouchableOpacity onPress={() => setProductModal(false)}>\n                  <Text\n                    style={{\n                      marginBottom: 25,\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={() => {\n                    let copy = structuredClone({\n                      ...newProduct,\n                      options: newProductOptions.current,\n                    });\n                    copy.name = copy.name + \" Copy\";\n                    handleDataUpdate(copy);\n                  }}\n                >\n                  <Text\n                    style={{\n                      marginBottom: 25,\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    Copy\n                  </Text>\n                </TouchableOpacity>\n                <Text style={{ marginBottom: 25 }}>AddProduct</Text>\n              </View>\n              <TextInput\n                placeholder=\"Enter Product Name\"\n                onChangeText={(val) => {\n                  setnewProduct((prevState) => ({ ...prevState, name: val }));\n                }}\n                value={newProduct.name}\n                style={{ marginBottom: 25 }}\n              />\n              <TextInput\n                placeholder=\"Enter any other items that come with this\"\n                onChangeText={(val) => {\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    description: val,\n                  }));\n                }}\n                style={{ marginBottom: 25 }}\n                value={newProduct.description}\n              />\n              <TextInput\n                placeholder=\"Enter Product Price\"\n                onChangeText={(val) => {\n                  setnewProduct((prevState) => ({ ...prevState, price: val }));\n                }}\n                style={{ marginBottom: 25 }}\n                value={newProduct.price}\n              />\n              <DropDown\n                label=\"Choose catagory\"\n                options={catalog.categories}\n                setValue={(val) => {\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    catagory: val,\n                  }));\n                }}\n                value={newProduct.catagory}\n                style={{ marginBottom: 25 }}\n              />\n            </>\n          )}\n          ListFooterComponent={() => (\n            <>\n              <Button\n                title=\"Add/Save Product\"\n                onPress={() => {\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: newProductOptions.current,\n                  }));\n                  handleDataUpdate();\n                }}\n                style={{\n                  marginBottom: 25,\n                  marginTop: 25,\n                  backgroundColor: \"lightgreen\",\n                }}\n              />\n              <Button\n                title=\"Add Product Option\"\n                onPress={() => {\n                  newProductOptions.current.push({\n                    label: null,\n                    optionsList: [],\n                    selectedCaseKey: null,\n                    selectedCaseValue: null,\n                    numOfSelectable: null,\n                    id: Math.random().toString(36).substr(2, 9),\n                    optionType: null,\n                  });\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: newProductOptions.current,\n                  }));\n                }}\n                style={{ marginBottom: 25 }}\n              />\n            </>\n          )}\n          data={newProduct.options}\n          keyExtractor={(item) => item.id && item.id.toString()}\n          renderItem={({ item, index }) => (\n            <MyListItem\n              item={item}\n              index={index}\n              newProduct={newProduct}\n              setnewProduct={setnewProduct}\n              newProductOptions={newProductOptions}\n            />\n          )}\n        />\n      </View>\n    );\n  };\n\n  return (\n        <OptionsAddingSection />\n  );\n};\n\nexport default AddProduct;\n\nconst styles = StyleSheet.create({});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}