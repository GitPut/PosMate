{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"wrapperStyle\", \"style\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Button = function Button(_ref) {\n  var wrapperStyle = _ref.wrapperStyle,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return _jsx(View, {\n    style: [styles.button, wrapperStyle],\n    children: _jsx(Text, _objectSpread({\n      style: [styles.buttonText, style]\n    }, rest))\n  });\n};\nexport default Button;","map":{"version":3,"names":["React","styles","Button","wrapperStyle","style","rest","button","buttonText"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-copilot/src/components/Button.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { View, Text } from 'react-native';\n\nimport styles from './style';\n\ntype Props = {\n  wrapperStyle: Object | number | Array,\n  style: Object | number | Array,\n  rest: Object | number | Array,\n};\n\nconst Button = ({ wrapperStyle, style, ...rest }: Props) => (\n  <View style={[styles.button, wrapperStyle]}>\n    <Text style={[styles.buttonText, style]} {...rest} />\n  </View>\n);\n\nexport default Button;\n"],"mappings":";;;;;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAG1B,OAAOC,MAAM;AAAgB;AAQ7B,IAAMC,MAAM,GAAG,SAATA,MAAM;EAAA,IAAMC,YAAY,QAAZA,YAAY;IAAEC,KAAK,QAALA,KAAK;IAAKC,IAAI;EAAA,OAC5C,KAAC,IAAI;IAAC,KAAK,EAAE,CAACJ,MAAM,CAACK,MAAM,EAAEH,YAAY,CAAE;IAAA,UACzC,KAAC,IAAI;MAAC,KAAK,EAAE,CAACF,MAAM,CAACM,UAAU,EAAEH,KAAK;IAAE,GAAKC,IAAI;EAAI,EAChD;AAAA,CACR;AAED,eAAeH,MAAM"},"metadata":{},"sourceType":"module"}