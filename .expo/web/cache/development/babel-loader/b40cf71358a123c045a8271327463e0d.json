{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React from \"react\";\nimport { auth, db } from \"../../state/firebaseConfig\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport firebase from \"firebase/app\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PlanUpdateTest = function PlanUpdateTest() {\n  var sendToCheckout = function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield db.collection(\"users\").doc(auth.currentUser.uid).collection(\"checkout_sessions\").add({\n        price: \"price_1Mb4uSCIw3L7DOwI6exh9JBt\",\n        success_url: window.location.origin,\n        cancel_url: window.location.origin\n      }).then(function (docRef) {\n        docRef.onSnapshot(function () {\n          var _ref2 = _asyncToGenerator(function* (snap) {\n            var _snap$data = snap.data(),\n              error = _snap$data.error,\n              sessionId = _snap$data.sessionId;\n            if (error) {\n              alert(\"An error occurred: \" + error.message);\n            }\n            if (sessionId) {\n              var stripe = yield loadStripe(\"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\");\n\n              console.log(\"redirecting\");\n              yield stripe.redirectToCheckout({\n                sessionId: sessionId\n              });\n            }\n          });\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    return function sendToCheckout() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var Manage = function Manage() {\n    firebase.functions().httpsCallable(\"ext-firestore-stripe-payments-createPortalLink\")({\n      returnUrl: \"\" + window.location.origin,\n      locale: \"auto\"\n    }).then(function (response) {\n      console.log(response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"PlanUpdateTest\"\n    }), _jsx(Button, {\n      title: \"TEST\",\n      onPress: sendToCheckout\n    }), _jsx(Button, {\n      title: \"Manage\",\n      onPress: Manage\n    })]\n  });\n};\nexport default PlanUpdateTest;","map":{"version":3,"names":["React","auth","db","loadStripe","firebase","PlanUpdateTest","sendToCheckout","collection","doc","currentUser","uid","add","price","success_url","window","location","origin","cancel_url","then","docRef","onSnapshot","snap","data","error","sessionId","alert","message","stripe","console","log","redirectToCheckout","Manage","functions","httpsCallable","returnUrl","locale","response","catch"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/PlanUpdateTest.tsx"],"sourcesContent":["import { View, Text, Button } from \"react-native\";\nimport React from \"react\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport Axios from \"axios\";\nimport firebase from \"firebase/app\";\n\nconst PlanUpdateTest = () => {\n  const sendToCheckout = async () => {\n    await db\n      .collection(\"users\")\n      .doc(auth.currentUser.uid)\n      .collection(\"checkout_sessions\")\n      .add({\n        price: \"price_1Mb4uSCIw3L7DOwI6exh9JBt\", // todo price Id from your products price in the Stripe Dashboard\n        success_url: window.location.origin, // return user to this screen on successful purchase\n        cancel_url: window.location.origin, // return user to this screen on failed purchase\n      })\n      .then((docRef) => {\n        // Wait for the checkoutSession to get attached by the extension\n        docRef.onSnapshot(async (snap) => {\n          const { error, sessionId } = snap.data();\n          if (error) {\n            // Show an error to your customer and inspect\n            // your Cloud Function logs in the Firebase console.\n            alert(`An error occurred: ${error.message}`);\n          }\n\n          if (sessionId) {\n            // We have a session, let's redirect to Checkout\n            // Init Stripe\n            const stripe = await loadStripe(\n              \"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\" // todo enter your public stripe key here\n            );\n            console.log(`redirecting`);\n            await stripe.redirectToCheckout({ sessionId });\n          }\n        });\n      });\n  };\n\n  const Manage = () => {\n    firebase\n      .functions()\n      .httpsCallable(\"ext-firestore-stripe-payments-createPortalLink\")({\n        returnUrl: `${window.location.origin}`,\n        locale: \"auto\",\n      })\n      .then((response) => {\n        console.log(response.data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    // var data = JSON.stringify({\n    //   email: email,\n    // });\n\n    // var config = {\n    //   method: \"post\",\n    //   maxBodyLength: Infinity,\n    //   url: \"https://us-central1-posmate-5fc0a.cloudfunctions.net/createPortalLink\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   //   data: data,\n    // };\n\n    // Axios(config)\n    //   .then(function (response) {\n    //     console.log(JSON.stringify(response.data));\n    //   })\n    //   .catch(function (error) {\n    //     console.log(error);\n    //   });\n  };\n\n  //   const sendToCustomerPortal = async () => {\n  //     // had to update firebase.app().functions() to firebase.default.functions() and\n  //     // removed the region from the functions call (from stripe firebase extension docs)\n  //     const functionRef = firebase\n  //       .functions()\n  //       .httpsCallable('ext-firestore-stripe-subscriptions-createPortalLink');\n  //     const { data } = await functionRef({ returnUrl: window.location.origin });\n  //     window.location.assign(data.url);\n  //   }\n\n  return (\n    <View>\n      <Text>PlanUpdateTest</Text>\n      <Button title=\"TEST\" onPress={sendToCheckout} />\n      <Button title=\"Manage\" onPress={Manage} />\n    </View>\n  );\n};\n\nexport default PlanUpdateTest;\n"],"mappings":";;;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,EAAE;AACjB,SAASC,UAAU,QAAQ,mBAAmB;AAE9C,OAAOC,QAAQ,MAAM,cAAc;AAAC;AAAA;AAEpC,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,IAAMC,cAAc;IAAA,6BAAG,aAAY;MACjC,MAAMJ,EAAE,CACLK,UAAU,CAAC,OAAO,CAAC,CACnBC,GAAG,CAACP,IAAI,CAACQ,WAAW,CAACC,GAAG,CAAC,CACzBH,UAAU,CAAC,mBAAmB,CAAC,CAC/BI,GAAG,CAAC;QACHC,KAAK,EAAE,gCAAgC;QACvCC,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM;QACnCC,UAAU,EAAEH,MAAM,CAACC,QAAQ,CAACC;MAC9B,CAAC,CAAC,CACDE,IAAI,CAAC,UAACC,MAAM,EAAK;QAEhBA,MAAM,CAACC,UAAU;UAAA,8BAAC,WAAOC,IAAI,EAAK;YAChC,iBAA6BA,IAAI,CAACC,IAAI,EAAE;cAAhCC,KAAK,cAALA,KAAK;cAAEC,SAAS,cAATA,SAAS;YACxB,IAAID,KAAK,EAAE;cAGTE,KAAK,yBAAuBF,KAAK,CAACG,OAAO,CAAG;YAC9C;YAEA,IAAIF,SAAS,EAAE;cAGb,IAAMG,MAAM,SAASxB,UAAU,CAC7B,6GAA6G,CAC9G;;cACDyB,OAAO,CAACC,GAAG,eAAe;cAC1B,MAAMF,MAAM,CAACG,kBAAkB,CAAC;gBAAEN,SAAS,EAATA;cAAU,CAAC,CAAC;YAChD;UACF,CAAC;UAAA;YAAA;UAAA;QAAA,IAAC;MACJ,CAAC,CAAC;IACN,CAAC;IAAA,gBA/BKlB,cAAc;MAAA;IAAA;EAAA,GA+BnB;EAED,IAAMyB,MAAM,GAAG,SAATA,MAAM,GAAS;IACnB3B,QAAQ,CACL4B,SAAS,EAAE,CACXC,aAAa,CAAC,gDAAgD,CAAC,CAAC;MAC/DC,SAAS,OAAKpB,MAAM,CAACC,QAAQ,CAACC,MAAQ;MACtCmB,MAAM,EAAE;IACV,CAAC,CAAC,CACDjB,IAAI,CAAC,UAACkB,QAAQ,EAAK;MAClBR,OAAO,CAACC,GAAG,CAACO,QAAQ,CAACd,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDe,KAAK,CAAC,UAACd,KAAK,EAAK;MAChBK,OAAO,CAACL,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;;EAsBN,CAAC;;EAYD,OACE,MAAC,IAAI;IAAA,WACH,KAAC,IAAI;MAAA;IAAA,EAAsB,EAC3B,KAAC,MAAM;MAAC,KAAK,EAAC,MAAM;MAAC,OAAO,EAAEjB;IAAe,EAAG,EAChD,KAAC,MAAM;MAAC,KAAK,EAAC,QAAQ;MAAC,OAAO,EAAEyB;IAAO,EAAG;EAAA,EACrC;AAEX,CAAC;AAED,eAAe1B,cAAc"},"metadata":{},"sourceType":"module"}