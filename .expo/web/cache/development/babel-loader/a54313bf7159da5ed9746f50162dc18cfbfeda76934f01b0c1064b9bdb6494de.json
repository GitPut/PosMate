{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport HomeScreen from \"../../pages/authed/pos/HomeScreen\";\nimport DefaultLayout from \"../../pages/authed/backendPos/InitialPage/Sidebar/DefaultLayout\";\nimport { useHistory } from \"react-router-dom\";\nimport BackendPosContainer from \"../../pages/authed/newBackendPos/BackendPosContainer\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AuthRoute = function AuthRoute(props) {\n  var location = props.location;\n  var history = useHistory();\n  useEffect(function () {\n    var _location$pathname, _location$pathname2;\n    var isLoginSettings = localStorage.getItem(\"isAuthedBackend\");\n    if (!((_location$pathname = location.pathname) != null && _location$pathname.includes(\"/authed\")) || (_location$pathname2 = location.pathname) != null && _location$pathname2.includes(\"/authed\") && isLoginSettings === false) {\n      history.push(\"/pos\");\n    }\n  }, []);\n  return _jsxs(Switch, {\n    children: [_jsx(Route, {\n      path: \"/pos\",\n      component: HomeScreen\n    }), _jsx(Route, {\n      path: \"/authed\",\n      component: BackendPosContainer\n    })]\n  });\n};\nexport default AuthRoute;","map":{"version":3,"names":["React","useEffect","Route","Switch","HomeScreen","DefaultLayout","useHistory","BackendPosContainer","jsx","_jsx","jsxs","_jsxs","AuthRoute","props","location","history","_location$pathname","_location$pathname2","isLoginSettings","localStorage","getItem","pathname","includes","push","children","path","component"],"sources":["/Users/peterputros/Desktop/PosMate/navigation/authed/AuthRoute.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport HomeScreen from 'pages/authed/pos/HomeScreen';\nimport DefaultLayout from 'pages/authed/backendPos/InitialPage/Sidebar/DefaultLayout';\nimport { useHistory } from \"react-router-dom\";\nimport BackendPosContainer from 'pages/authed/newBackendPos/BackendPosContainer';\n\nconst AuthRoute = (props) => {\n    const { location } = props;\n    const history = useHistory();\n\n    useEffect(() => {\n        const isLoginSettings = localStorage.getItem(\"isAuthedBackend\")\n        if (!location.pathname?.includes(\"/authed\") || location.pathname?.includes(\"/authed\") && isLoginSettings === false) {\n            history.push(\"/pos\");\n        }\n        // else {\n        //     history.push(\"/authed\");\n        // }\n        // //CHANGE BACK ONCE PUBLISHING\n    }, [])\n\n    // useEffect(() => {\n    //     if (\n    //         location.pathname !== '/pos' &&\n    //         location.pathname !== '/authed'\n    //     ) {\n    //         history.push(\"/pos\");\n    //     }\n    // }\n    //     , [location.pathname])\n\n    // useEffect(() => {\n    //     const handleBeforeUnload = (event) => {\n    //         event.preventDefault();\n    //         // Chrome requires returnValue to be set\n    //         event.returnValue = '';\n    //     };\n\n    //     window.addEventListener('beforeunload', handleBeforeUnload);\n\n    //     return () => window.removeEventListener('beforeunload', handleBeforeUnload);\n    // }, []);\n\n\n\n    return (\n        <Switch>\n            {/* <Route path=\"/signIn\" component={SignIn} />\n                <Route path=\"/forgetPassword\" component={ForgetPassword} />\n                <Route path=\"/signUp\" component={SignUp} /> */}\n            <Route path=\"/pos\" component={HomeScreen} />\n            {/* <Route path=\"/authed\" component={DefaultLayout} /> */}\n            <Route path=\"/authed\" component={BackendPosContainer} />\n\n            {/* <Route path=\"/error-404\" component={Error404} />\n                <Route path=\"/error-500\" component={Error500} />\n                <Route path=\"/pos\" component={Pos} /> */}\n\n        </Switch>\n    )\n}\n\nexport default AuthRoute"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,mBAAmB;AAAuD,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEjF,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,KAAK,EAAK;EACzB,IAAQC,QAAQ,GAAKD,KAAK,CAAlBC,QAAQ;EAChB,IAAMC,OAAO,GAAGT,UAAU,CAAC,CAAC;EAE5BL,SAAS,CAAC,YAAM;IAAA,IAAAe,kBAAA,EAAAC,mBAAA;IACZ,IAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAC/D,IAAI,GAAAJ,kBAAA,GAACF,QAAQ,CAACO,QAAQ,aAAjBL,kBAAA,CAAmBM,QAAQ,CAAC,SAAS,CAAC,KAAI,CAAAL,mBAAA,GAAAH,QAAQ,CAACO,QAAQ,aAAjBJ,mBAAA,CAAmBK,QAAQ,CAAC,SAAS,CAAC,IAAIJ,eAAe,KAAK,KAAK,EAAE;MAChHH,OAAO,CAACQ,IAAI,CAAC,MAAM,CAAC;IACxB;EAKJ,CAAC,EAAE,EAAE,CAAC;EA0BN,OACIZ,KAAA,CAACR,MAAM;IAAAqB,QAAA,GAIHf,IAAA,CAACP,KAAK;MAACuB,IAAI,EAAC,MAAM;MAACC,SAAS,EAAEtB;IAAW,CAAE,CAAC,EAE5CK,IAAA,CAACP,KAAK;MAACuB,IAAI,EAAC,SAAS;MAACC,SAAS,EAAEnB;IAAoB,CAAE,CAAC;EAAA,CAMpD,CAAC;AAEjB,CAAC;AAED,eAAeK,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}