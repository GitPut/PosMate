{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport { Text, TextInput } from \"@react-native-material/core\";\nimport { storeDetailState } from \"../state/state\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport useWindowDimensions from \"./useWindowDimensions\";\nimport { useFonts } from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar SettingsPasswordModal = function SettingsPasswordModal(_ref) {\n  var setsettingsPasswordModalVis = _ref.setsettingsPasswordModalVis,\n    navigation = _ref.navigation;\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height,\n    width = _useWindowDimensions.width;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setpassword = _useState2[1];\n  var storeDetails = storeDetailState.use();\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inccorectPass = _useState4[0],\n    setinccorectPass = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showPassword = _useState6[0],\n    setShowPassword = _useState6[1];\n  useFonts({\n    Password: require(\"../assets/password.ttf\")\n  });\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setsettingsPasswordModalVis(false);\n      },\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: height,\n        width: width\n      }\n    }), _jsxs(View, {\n      style: {\n        backgroundColor: \"white\",\n        height: 300,\n        width: 350,\n        borderRadius: 30,\n        shadowColor: \"rgba(0,0,0,1)\",\n        shadowOffset: {\n          width: 3,\n          height: 3\n        },\n        elevation: 30,\n        shadowOpacity: 0.57,\n        shadowRadius: 10,\n        position: \"absolute\",\n        top: height * 0.15,\n        right: width * 0.22,\n        alignItems: \"center\"\n      },\n      children: [_jsx(Text, {\n        style: {\n          marginTop: 20,\n          fontSize: 20,\n          fontWeight: \"600\",\n          width: \"50%\",\n          textAlign: \"center\",\n          marginBottom: 5\n        },\n        children: \"Settings\"\n      }), _jsx(Text, {\n        style: {\n          marginBottom: 25,\n          color: \"rgba(74,74,74,1)\",\n          fontWeight: \"600\",\n          width: \"50%\",\n          textAlign: \"center\"\n        },\n        children: \"Authorization\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          backgroundColor: \"rgba(241,241,241,1)\",\n          borderRadius: 30,\n          height: 60,\n          marginBottom: 25\n        },\n        children: [_jsx(View, {\n          style: {\n            width: 60,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"rgba(218,216,216,1)\",\n            borderRadius: 30,\n            height: 60\n          },\n          children: _jsx(Ionicons, {\n            name: \"finger-print\",\n            size: 32,\n            color: \"rgba(71,106,229,1)\"\n          })\n        }), _jsx(TextInput, {\n          placeholder: \"Enter Password\",\n          style: {\n            width: \"60%\"\n          },\n          inputStyle: [{\n            backgroundColor: \"rgba(241,241,241,1)\"\n          }, !showPassword && password.length !== 0 && {\n            fontFamily: \"Password\"\n          }],\n          value: password,\n          onChangeText: function onChangeText(val) {\n            return setpassword(val);\n          },\n          textContentType: \"none\",\n          autoCorrect: false\n        }), _jsx(View, {\n          style: {\n            width: 60,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: 60\n          },\n          children: !showPassword ? _jsx(Ionicons, {\n            name: \"eye\",\n            size: 32,\n            color: \"rgba(74,74,74,1)\",\n            onPress: function onPress() {\n              return setShowPassword(function (prev) {\n                return !prev;\n              });\n            }\n          }) : _jsx(Ionicons, {\n            name: \"eye-off\",\n            size: 32,\n            color: \"rgba(74,74,74,1)\",\n            onPress: function onPress() {\n              return setShowPassword(function (prev) {\n                return !prev;\n              });\n            }\n          })\n        })]\n      }), inccorectPass && _jsx(Text, {\n        style: {\n          marginBottom: 10\n        },\n        children: \"Password is inccorect!\"\n      }), _jsxs(TouchableOpacity, {\n        style: {\n          backgroundColor: \"rgba(155,155,155,1)\",\n          borderRadius: 30,\n          width: 150,\n          height: 61,\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        onPress: function onPress() {\n          if (password == storeDetails.settingsPassword) {\n            navigation.navigate(\"SettingsHome\");\n            setsettingsPasswordModalVis(false);\n            setinccorectPass(false);\n          } else {\n            setinccorectPass(true);\n          }\n        },\n        children: [_jsx(Text, {\n          style: {\n            color: \"white\",\n            fontSize: 20,\n            paddingRight: 10\n          },\n          children: \"Go\"\n        }), _jsx(Feather, {\n          name: \"arrow-up-right\",\n          size: 32,\n          color: \"white\"\n        })]\n      })]\n    })]\n  });\n};\nexport default SettingsPasswordModal;\nvar styles = StyleSheet.create({\n  contentContainer: {\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"95%\",\n    width: \"100%\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","Text","TextInput","storeDetailState","Feather","Ionicons","useWindowDimensions","useFonts","SettingsPasswordModal","setsettingsPasswordModalVis","navigation","height","width","password","setpassword","storeDetails","use","inccorectPass","setinccorectPass","showPassword","setShowPassword","Password","require","backgroundColor","justifyContent","alignItems","borderRadius","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","position","top","right","marginTop","fontSize","fontWeight","textAlign","marginBottom","color","flexDirection","length","fontFamily","val","prev","settingsPassword","navigate","paddingRight","styles","StyleSheet","create","contentContainer","paddingLeft","paddingBottom"],"sources":["C:/Users/admin/OneDrive - George Brown College/Desktop/PosMate/components/SettingsPasswordModal.tsx"],"sourcesContent":["import {\r\n  Modal,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { Button, Text, TextInput } from \"@react-native-material/core\";\r\nimport { storeDetailState, transListState, userStoreState } from \"state/state\";\r\nimport { updateTransList } from \"state/firebaseFunctions\";\r\nimport ChangeScreen from \"./ChangeScreen\";\r\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport Feather from \"@expo/vector-icons/Feather\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\nimport useWindowDimensions from \"./useWindowDimensions\";\r\nimport { useFonts } from \"expo-font\";\r\n\r\nconst SettingsPasswordModal = ({ setsettingsPasswordModalVis, navigation }) => {\r\n  const { height, width } = useWindowDimensions();\r\n  const [password, setpassword] = useState(\"\");\r\n  const storeDetails = storeDetailState.use();\r\n  const [inccorectPass, setinccorectPass] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  useFonts({\r\n    Password: require(\"/assets/password.ttf\"),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        onPress={() => setsettingsPasswordModalVis(false)}\r\n        style={{\r\n          backgroundColor: \"rgba(0, 0, 0, 0.3)\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: height,\r\n          width: width,\r\n        }}\r\n      />\r\n      <View\r\n        style={{\r\n          backgroundColor: \"white\",\r\n          height: 300,\r\n          width: 350,\r\n          borderRadius: 30,\r\n          shadowColor: \"rgba(0,0,0,1)\",\r\n          shadowOffset: {\r\n            width: 3,\r\n            height: 3,\r\n          },\r\n          elevation: 30,\r\n          shadowOpacity: 0.57,\r\n          shadowRadius: 10,\r\n          position: \"absolute\",\r\n          top: height * 0.15,\r\n          right: width * 0.22,\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            marginTop: 20,\r\n            fontSize: 20,\r\n            fontWeight: \"600\",\r\n            width: \"50%\",\r\n            textAlign: \"center\",\r\n            marginBottom: 5,\r\n          }}\r\n        >\r\n          Settings\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            marginBottom: 25,\r\n            color: \"rgba(74,74,74,1)\",\r\n            fontWeight: \"600\",\r\n            width: \"50%\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          Authorization\r\n        </Text>\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"rgba(241,241,241,1)\",\r\n            borderRadius: 30,\r\n            height: 60,\r\n            marginBottom: 25,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              width: 60,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              backgroundColor: \"rgba(218,216,216,1)\",\r\n              borderRadius: 30,\r\n              height: 60,\r\n            }}\r\n          >\r\n            <Ionicons\r\n              name=\"finger-print\"\r\n              size={32}\r\n              color=\"rgba(71,106,229,1)\"\r\n            />\r\n          </View>\r\n          <TextInput\r\n            placeholder=\"Enter Password\"\r\n            style={{ width: \"60%\" }}\r\n            inputStyle={[\r\n              { backgroundColor: \"rgba(241,241,241,1)\" },\r\n              !showPassword &&\r\n                password.length !== 0 && { fontFamily: \"Password\" },\r\n            ]}\r\n            value={password}\r\n            onChangeText={(val) => setpassword(val)}\r\n            textContentType=\"none\"\r\n            autoCorrect={false}\r\n          />\r\n          {/* <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={password}\r\n            onChange={(event) => setpassword(event.target.value)}\r\n            onFocus={() => setShowPassword(false)}\r\n          /> */}\r\n          <View\r\n            style={{\r\n              width: 60,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: 60,\r\n            }}\r\n          >\r\n            {!showPassword ? (\r\n              <Ionicons\r\n                name=\"eye\"\r\n                size={32}\r\n                color=\"rgba(74,74,74,1)\"\r\n                onPress={() => setShowPassword((prev) => !prev)}\r\n              />\r\n            ) : (\r\n              <Ionicons\r\n                name=\"eye-off\"\r\n                size={32}\r\n                color=\"rgba(74,74,74,1)\"\r\n                onPress={() => setShowPassword((prev) => !prev)}\r\n              />\r\n            )}\r\n          </View>\r\n        </View>\r\n        {inccorectPass && (\r\n          <Text style={{ marginBottom: 10 }}>Password is inccorect!</Text>\r\n        )}\r\n        <TouchableOpacity\r\n          style={{\r\n            backgroundColor: \"rgba(155,155,155,1)\",\r\n            borderRadius: 30,\r\n            width: 150,\r\n            height: 61,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onPress={() => {\r\n            if (password == storeDetails.settingsPassword) {\r\n              navigation.navigate(\"SettingsHome\");\r\n              setsettingsPasswordModalVis(false);\r\n              setinccorectPass(false);\r\n            } else {\r\n              setinccorectPass(true);\r\n            }\r\n          }}\r\n        >\r\n          <Text style={{ color: \"white\", fontSize: 20, paddingRight: 10 }}>\r\n            Go\r\n          </Text>\r\n          <Feather name=\"arrow-up-right\" size={32} color=\"white\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SettingsPasswordModal;\r\n\r\nconst styles = StyleSheet.create({\r\n  contentContainer: {\r\n    justifyContent: \"space-between\",\r\n    paddingLeft: 50,\r\n    paddingRight: 50,\r\n    paddingBottom: 50,\r\n    height: \"95%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}