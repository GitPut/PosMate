{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"../state/state\";\nimport { updateData } from \"../state/firebaseFunctions\";\nimport OptionView from \"./OptionView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AddProduct = function AddProduct(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _ref2 = route.params ? route.params : {\n      existingProduct: null,\n      existingProductIndex: null\n    },\n    existingProduct = _ref2.existingProduct,\n    existingProductIndex = _ref2.existingProductIndex;\n  var catalog = userStoreState.use();\n  var _useState = useState(existingProduct ? existingProduct : {\n      name: null,\n      price: null,\n      catagory: null,\n      options: [],\n      description: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    newProduct = _useState2[0],\n    setnewProduct = _useState2[1];\n  var newProductOptions = useRef(existingProduct ? existingProduct.options : []);\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    indexOn = _useState4[0],\n    setindexOn = _useState4[1];\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [copyProductData]));\n      navigation.goBack();\n    } else if (existingProduct) {\n      var copy = structuredClone(catalog.products);\n      var newProductUseRef = _objectSpread(_objectSpread({}, newProduct), {}, {\n        options: newProductOptions.current\n      });\n      copy[existingProductIndex] = newProductUseRef;\n      updateData(_toConsumableArray(catalog.categories), copy);\n      navigation.goBack();\n    } else {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [newProduct]));\n      navigation.goBack();\n    }\n  }\n  var OptionsAddingSection = function OptionsAddingSection() {\n    return _jsxs(View, {\n      children: [_jsx(FlatList\n      , {\n        getItemLayout: function getItemLayout(data, index) {\n          var _data$optionsList;\n          return {\n            length: index === indexOn ? 400 * ((_data$optionsList = data.optionsList) == null ? void 0 : _data$optionsList.length) : 100,\n            offset: 400 * index,\n            index: index\n          };\n        },\n        data: newProduct.options,\n        keyExtractor: function keyExtractor(item) {\n          var _item$id;\n          return (_item$id = item.id) == null ? void 0 : _item$id.toString();\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item,\n            index = _ref3.index;\n          return _jsx(OptionView, {\n            item: item,\n            index: index,\n            newProduct: newProduct,\n            setnewProduct: setnewProduct,\n            newProductOptions: newProductOptions,\n            indexOn: indexOn,\n            setindexOn: setindexOn\n          });\n        }\n      }), _jsx(Button, {\n        title: \"Add Product Option\",\n        onPress: function onPress() {\n          newProductOptions.current.push({\n            label: null,\n            optionsList: [],\n            selectedCaseKey: null,\n            selectedCaseValue: null,\n            numOfSelectable: null,\n            id: Math.random().toString(36).substr(2, 9),\n            optionType: null\n          });\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n          setindexOn(newProductOptions.current.length - 1);\n        },\n        style: {\n          marginBottom: 25\n        }\n      })]\n    });\n  };\n  return _jsx(ScrollView, {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      flex: 1\n    },\n    contentContainerStyle: {\n      width: \"93%\",\n      alignSelf: \"center\",\n      marginTop: 25\n    },\n    children: _jsxs(_Fragment, {\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          padding: 20,\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Text, {\n            style: {\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\"\n            },\n            children: \"X\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            var copy = structuredClone(newProduct);\n            copy.name = copy.name + \" Copy\";\n            handleDataUpdate(copy);\n          },\n          children: _jsx(Text, {\n            style: {\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\"\n            },\n            children: \"Copy\"\n          })\n        }), _jsx(Text, {\n          style: {\n            marginBottom: 25\n          },\n          children: \"AddProduct\"\n        })]\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Product Name\",\n        onChangeText: function onChangeText(val) {\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              name: val\n            });\n          });\n        },\n        value: newProduct.name,\n        style: {\n          marginBottom: 25\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Enter any other items that come with this\",\n        onChangeText: function onChangeText(val) {\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              description: val\n            });\n          });\n        },\n        style: {\n          marginBottom: 25\n        },\n        value: newProduct.description\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Product Price\",\n        onChangeText: function onChangeText(val) {\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              price: val\n            });\n          });\n        },\n        style: {\n          marginBottom: 25\n        },\n        value: newProduct.price\n      }), _jsx(DropDown, {\n        label: \"Choose catagory\",\n        options: catalog.categories,\n        setValue: function setValue(val) {\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              catagory: val\n            });\n          });\n        },\n        value: newProduct.catagory,\n        style: {\n          marginBottom: 25\n        }\n      }), _jsx(OptionsAddingSection, {}), _jsx(Button, {\n        title: \"Add/Save Product\",\n        onPress: function onPress() {\n          handleDataUpdate();\n        },\n        style: {\n          marginBottom: 25,\n          marginTop: 25,\n          backgroundColor: \"lightgreen\"\n        }\n      })]\n    })\n  });\n};\nexport default AddProduct;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useRef","useState","Button","TextInput","DropDown","userStoreState","updateData","OptionView","AddProduct","route","navigation","params","existingProduct","existingProductIndex","catalog","use","name","price","catagory","options","description","newProduct","setnewProduct","newProductOptions","indexOn","setindexOn","handleDataUpdate","copyProductData","categories","products","goBack","copy","structuredClone","newProductUseRef","current","OptionsAddingSection","data","index","length","optionsList","offset","item","id","toString","push","label","selectedCaseKey","selectedCaseValue","numOfSelectable","Math","random","substr","optionType","prevState","marginBottom","width","height","flex","alignSelf","marginTop","flexDirection","padding","justifyContent","alignItems","fontWeight","color","val","backgroundColor","styles","StyleSheet","create"],"sources":["C:/Users/admin/OneDrive - George Brown College/Desktop/PosMate/components/TestAdd.tsx"],"sourcesContent":["import {\r\n  FlatList,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { Button, TextInput } from \"@react-native-material/core\";\r\nimport DropDown from \"./DropDown\";\r\nimport { userStoreState } from \"state/state\";\r\nimport { updateData } from \"state/firebaseFunctions\";\r\nimport OptionView from \"./OptionView\";\r\n\r\nconst AddProduct = ({ route, navigation }) => {\r\n  const { existingProduct, existingProductIndex } = route.params\r\n    ? route.params\r\n    : { existingProduct: null, existingProductIndex: null };\r\n\r\n  const catalog = userStoreState.use();\r\n  const [newProduct, setnewProduct] = useState(\r\n    existingProduct\r\n      ? existingProduct\r\n      : {\r\n          name: null,\r\n          price: null,\r\n          catagory: null,\r\n          options: [],\r\n          description: null,\r\n        }\r\n  );\r\n  const newProductOptions = useRef(\r\n    existingProduct ? existingProduct.options : []\r\n  );\r\n  const [indexOn, setindexOn] = useState(0);\r\n\r\n  // useEffect(() => {\r\n  //   //setTimeout(() => {\r\n  //   window.scrollTo({\r\n  //     top: currentY,\r\n  //     behavior: \"instant\",\r\n  //   });\r\n  //   //}, 500);\r\n  // }, [currentY]);\r\n\r\n  function handleDataUpdate(copyProductData) {\r\n    if (copyProductData) {\r\n      updateData(\r\n        [...catalog.categories],\r\n        [...catalog.products, copyProductData]\r\n      );\r\n      navigation.goBack();\r\n    } else if (existingProduct) {\r\n      let copy = structuredClone(catalog.products);\r\n      const newProductUseRef = {\r\n        ...newProduct,\r\n        options: newProductOptions.current,\r\n      };\r\n      copy[existingProductIndex] = newProductUseRef;\r\n      updateData([...catalog.categories], copy);\r\n      navigation.goBack();\r\n    } else {\r\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\r\n      navigation.goBack();\r\n    }\r\n  }\r\n\r\n  const OptionsAddingSection = () => {\r\n    return (\r\n      <View>\r\n        <FlatList\r\n          // onLayout={() =>\r\n          //   window.scrollTo({\r\n          //     top: currentY,\r\n          //     behavior: \"instant\",\r\n          //   })\r\n          // }\r\n          getItemLayout={(data, index) => ({\r\n            length: index === indexOn ? 400 * data.optionsList?.length : 100,\r\n            offset: 400 * index,\r\n            index,\r\n          })}\r\n          data={newProduct.options}\r\n          keyExtractor={(item) => item.id?.toString()}\r\n          renderItem={({ item, index }) => (\r\n            <OptionView\r\n              item={item}\r\n              index={index}\r\n              newProduct={newProduct}\r\n              setnewProduct={setnewProduct}\r\n              newProductOptions={newProductOptions}\r\n              indexOn={indexOn}\r\n              setindexOn={setindexOn}\r\n            />\r\n          )}\r\n        />\r\n        <Button\r\n          title=\"Add Product Option\"\r\n          onPress={() => {\r\n            newProductOptions.current.push({\r\n              label: null,\r\n              optionsList: [],\r\n              selectedCaseKey: null,\r\n              selectedCaseValue: null,\r\n              numOfSelectable: null,\r\n              id: Math.random().toString(36).substr(2, 9),\r\n              optionType: null,\r\n            });\r\n            setnewProduct((prevState) => ({\r\n              ...prevState,\r\n              options: newProductOptions.current,\r\n            }));\r\n            setindexOn(newProductOptions.current.length - 1);\r\n          }}\r\n          style={{ marginBottom: 25 }}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      style={{ width: \"100%\", height: \"100%\", flex: 1 }}\r\n      contentContainerStyle={{\r\n        width: \"93%\",\r\n        alignSelf: \"center\",\r\n        marginTop: 25,\r\n      }}\r\n    >\r\n      <>\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            padding: 20,\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <TouchableOpacity onPress={() => navigation.goBack()}>\r\n            <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\r\n              X\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              let copy = structuredClone(newProduct);\r\n              copy.name = copy.name + \" Copy\";\r\n              handleDataUpdate(copy);\r\n            }}\r\n          >\r\n            <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\r\n              Copy\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <Text style={{ marginBottom: 25 }}>AddProduct</Text>\r\n        </View>\r\n        <TextInput\r\n          placeholder=\"Enter Product Name\"\r\n          onChangeText={(val) => {\r\n            setnewProduct((prevState) => ({ ...prevState, name: val }));\r\n          }}\r\n          value={newProduct.name}\r\n          style={{ marginBottom: 25 }}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Enter any other items that come with this\"\r\n          onChangeText={(val) => {\r\n            setnewProduct((prevState) => ({ ...prevState, description: val }));\r\n          }}\r\n          style={{ marginBottom: 25 }}\r\n          value={newProduct.description}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Enter Product Price\"\r\n          onChangeText={(val) => {\r\n            setnewProduct((prevState) => ({ ...prevState, price: val }));\r\n          }}\r\n          style={{ marginBottom: 25 }}\r\n          value={newProduct.price}\r\n        />\r\n        <DropDown\r\n          label=\"Choose catagory\"\r\n          options={catalog.categories}\r\n          setValue={(val) => {\r\n            setnewProduct((prevState) => ({ ...prevState, catagory: val }));\r\n          }}\r\n          value={newProduct.catagory}\r\n          style={{ marginBottom: 25 }}\r\n        />\r\n        <OptionsAddingSection />\r\n        <Button\r\n          title=\"Add/Save Product\"\r\n          onPress={() => {\r\n            handleDataUpdate();\r\n          }}\r\n          style={{\r\n            marginBottom: 25,\r\n            marginTop: 25,\r\n            backgroundColor: \"lightgreen\",\r\n          }}\r\n        />\r\n      </>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":";;;;;;;;;;;AAQA,OAAOA,KAAK,IAAwBC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnE,SAASC,MAAM,EAAEC,SAAS,QAAQ,6BAA6B;AAC/D,OAAOC,QAAQ;AACf,SAASC,cAAc;AACvB,SAASC,UAAU;AACnB,OAAOC,UAAU;AAAqB;AAAA;AAAA;AAEtC,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAA8B;EAAA,IAAxBC,KAAK,QAALA,KAAK;IAAEC,UAAU,QAAVA,UAAU;EACrC,YAAkDD,KAAK,CAACE,MAAM,GAC1DF,KAAK,CAACE,MAAM,GACZ;MAAEC,eAAe,EAAE,IAAI;MAAEC,oBAAoB,EAAE;IAAK,CAAC;IAFjDD,eAAe,SAAfA,eAAe;IAAEC,oBAAoB,SAApBA,oBAAoB;EAI7C,IAAMC,OAAO,GAAGT,cAAc,CAACU,GAAG,EAAE;EACpC,gBAAoCd,QAAQ,CAC1CW,eAAe,GACXA,eAAe,GACf;MACEI,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE;IACf,CAAC,CACN;IAAA;IAVMC,UAAU;IAAEC,aAAa;EAWhC,IAAMC,iBAAiB,GAAGvB,MAAM,CAC9BY,eAAe,GAAGA,eAAe,CAACO,OAAO,GAAG,EAAE,CAC/C;EACD,iBAA8BlB,QAAQ,CAAC,CAAC,CAAC;IAAA;IAAlCuB,OAAO;IAAEC,UAAU;;EAW1B,SAASC,gBAAgB,CAACC,eAAe,EAAE;IACzC,IAAIA,eAAe,EAAE;MACnBrB,UAAU,oBACJQ,OAAO,CAACc,UAAU,gCAClBd,OAAO,CAACe,QAAQ,IAAEF,eAAe,GACtC;MACDjB,UAAU,CAACoB,MAAM,EAAE;IACrB,CAAC,MAAM,IAAIlB,eAAe,EAAE;MAC1B,IAAImB,IAAI,GAAGC,eAAe,CAAClB,OAAO,CAACe,QAAQ,CAAC;MAC5C,IAAMI,gBAAgB,mCACjBZ,UAAU;QACbF,OAAO,EAAEI,iBAAiB,CAACW;MAAO,EACnC;MACDH,IAAI,CAAClB,oBAAoB,CAAC,GAAGoB,gBAAgB;MAC7C3B,UAAU,oBAAKQ,OAAO,CAACc,UAAU,GAAGG,IAAI,CAAC;MACzCrB,UAAU,CAACoB,MAAM,EAAE;IACrB,CAAC,MAAM;MACLxB,UAAU,oBAAKQ,OAAO,CAACc,UAAU,gCAAOd,OAAO,CAACe,QAAQ,IAAER,UAAU,GAAE;MACtEX,UAAU,CAACoB,MAAM,EAAE;IACrB;EACF;EAEA,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAoB,GAAS;IACjC,OACE,MAAC,IAAI;MAAA,WACH,KAAC;MAAQ;QAOP,aAAa,EAAE,uBAACC,IAAI,EAAEC,KAAK;UAAA;UAAA,OAAM;YAC/BC,MAAM,EAAED,KAAK,KAAKb,OAAO,GAAG,GAAG,yBAAGY,IAAI,CAACG,WAAW,qBAAhB,kBAAkBD,MAAM,IAAG,GAAG;YAChEE,MAAM,EAAE,GAAG,GAAGH,KAAK;YACnBA,KAAK,EAALA;UACF,CAAC;QAAA,CAAE;QACH,IAAI,EAAEhB,UAAU,CAACF,OAAQ;QACzB,YAAY,EAAE,sBAACsB,IAAI;UAAA;UAAA,mBAAKA,IAAI,CAACC,EAAE,qBAAP,SAASC,QAAQ,EAAE;QAAA,CAAC;QAC5C,UAAU,EAAE;UAAA,IAAGF,IAAI,SAAJA,IAAI;YAAEJ,KAAK,SAALA,KAAK;UAAA,OACxB,KAAC,UAAU;YACT,IAAI,EAAEI,IAAK;YACX,KAAK,EAAEJ,KAAM;YACb,UAAU,EAAEhB,UAAW;YACvB,aAAa,EAAEC,aAAc;YAC7B,iBAAiB,EAAEC,iBAAkB;YACrC,OAAO,EAAEC,OAAQ;YACjB,UAAU,EAAEC;UAAW,EACvB;QAAA;MACF,EACF,EACF,KAAC,MAAM;QACL,KAAK,EAAC,oBAAoB;QAC1B,OAAO,EAAE,mBAAM;UACbF,iBAAiB,CAACW,OAAO,CAACU,IAAI,CAAC;YAC7BC,KAAK,EAAE,IAAI;YACXN,WAAW,EAAE,EAAE;YACfO,eAAe,EAAE,IAAI;YACrBC,iBAAiB,EAAE,IAAI;YACvBC,eAAe,EAAE,IAAI;YACrBN,EAAE,EAAEO,IAAI,CAACC,MAAM,EAAE,CAACP,QAAQ,CAAC,EAAE,CAAC,CAACQ,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;YAC3CC,UAAU,EAAE;UACd,CAAC,CAAC;UACF9B,aAAa,CAAC,UAAC+B,SAAS;YAAA,uCACnBA,SAAS;cACZlC,OAAO,EAAEI,iBAAiB,CAACW;YAAO;UAAA,CAClC,CAAC;UACHT,UAAU,CAACF,iBAAiB,CAACW,OAAO,CAACI,MAAM,GAAG,CAAC,CAAC;QAClD,CAAE;QACF,KAAK,EAAE;UAAEgB,YAAY,EAAE;QAAG;MAAE,EAC5B;IAAA,EACG;EAEX,CAAC;EAED,OACE,KAAC,UAAU;IACT,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAE,CAAE;IAClD,qBAAqB,EAAE;MACrBF,KAAK,EAAE,KAAK;MACZG,SAAS,EAAE,QAAQ;MACnBC,SAAS,EAAE;IACb,CAAE;IAAA,UAEF;MAAA,WACE,MAAC,IAAI;QACH,KAAK,EAAE;UACLC,aAAa,EAAE,KAAK;UACpBC,OAAO,EAAE,EAAE;UACXC,cAAc,EAAE,eAAe;UAC/BC,UAAU,EAAE;QACd,CAAE;QAAA,WAEF,KAAC,gBAAgB;UAAC,OAAO,EAAE;YAAA,OAAMrD,UAAU,CAACoB,MAAM,EAAE;UAAA,CAAC;UAAA,UACnD,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEwB,YAAY,EAAE,EAAE;cAAEU,UAAU,EAAE,KAAK;cAAEC,KAAK,EAAE;YAAM,CAAE;YAAA;UAAA;QAE5D,EACU,EACnB,KAAC,gBAAgB;UACf,OAAO,EAAE,mBAAM;YACb,IAAIlC,IAAI,GAAGC,eAAe,CAACX,UAAU,CAAC;YACtCU,IAAI,CAACf,IAAI,GAAGe,IAAI,CAACf,IAAI,GAAG,OAAO;YAC/BU,gBAAgB,CAACK,IAAI,CAAC;UACxB,CAAE;UAAA,UAEF,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEuB,YAAY,EAAE,EAAE;cAAEU,UAAU,EAAE,KAAK;cAAEC,KAAK,EAAE;YAAM,CAAE;YAAA;UAAA;QAE5D,EACU,EACnB,KAAC,IAAI;UAAC,KAAK,EAAE;YAAEX,YAAY,EAAE;UAAG,CAAE;UAAA;QAAA,EAAkB;MAAA,EAC/C,EACP,KAAC,SAAS;QACR,WAAW,EAAC,oBAAoB;QAChC,YAAY,EAAE,sBAACY,GAAG,EAAK;UACrB5C,aAAa,CAAC,UAAC+B,SAAS;YAAA,uCAAWA,SAAS;cAAErC,IAAI,EAAEkD;YAAG;UAAA,CAAG,CAAC;QAC7D,CAAE;QACF,KAAK,EAAE7C,UAAU,CAACL,IAAK;QACvB,KAAK,EAAE;UAAEsC,YAAY,EAAE;QAAG;MAAE,EAC5B,EACF,KAAC,SAAS;QACR,WAAW,EAAC,2CAA2C;QACvD,YAAY,EAAE,sBAACY,GAAG,EAAK;UACrB5C,aAAa,CAAC,UAAC+B,SAAS;YAAA,uCAAWA,SAAS;cAAEjC,WAAW,EAAE8C;YAAG;UAAA,CAAG,CAAC;QACpE,CAAE;QACF,KAAK,EAAE;UAAEZ,YAAY,EAAE;QAAG,CAAE;QAC5B,KAAK,EAAEjC,UAAU,CAACD;MAAY,EAC9B,EACF,KAAC,SAAS;QACR,WAAW,EAAC,qBAAqB;QACjC,YAAY,EAAE,sBAAC8C,GAAG,EAAK;UACrB5C,aAAa,CAAC,UAAC+B,SAAS;YAAA,uCAAWA,SAAS;cAAEpC,KAAK,EAAEiD;YAAG;UAAA,CAAG,CAAC;QAC9D,CAAE;QACF,KAAK,EAAE;UAAEZ,YAAY,EAAE;QAAG,CAAE;QAC5B,KAAK,EAAEjC,UAAU,CAACJ;MAAM,EACxB,EACF,KAAC,QAAQ;QACP,KAAK,EAAC,iBAAiB;QACvB,OAAO,EAAEH,OAAO,CAACc,UAAW;QAC5B,QAAQ,EAAE,kBAACsC,GAAG,EAAK;UACjB5C,aAAa,CAAC,UAAC+B,SAAS;YAAA,uCAAWA,SAAS;cAAEnC,QAAQ,EAAEgD;YAAG;UAAA,CAAG,CAAC;QACjE,CAAE;QACF,KAAK,EAAE7C,UAAU,CAACH,QAAS;QAC3B,KAAK,EAAE;UAAEoC,YAAY,EAAE;QAAG;MAAE,EAC5B,EACF,KAAC,oBAAoB,KAAG,EACxB,KAAC,MAAM;QACL,KAAK,EAAC,kBAAkB;QACxB,OAAO,EAAE,mBAAM;UACb5B,gBAAgB,EAAE;QACpB,CAAE;QACF,KAAK,EAAE;UACL4B,YAAY,EAAE,EAAE;UAChBK,SAAS,EAAE,EAAE;UACbQ,eAAe,EAAE;QACnB;MAAE,EACF;IAAA;EACD,EACQ;AAEjB,CAAC;AAED,eAAe3D,UAAU;AAEzB,IAAM4D,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}