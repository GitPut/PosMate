{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React from \"react\";\nimport ProductDisplayBtn from \"./ProductDisplayBtn\";\nimport { userStoreState } from \"../state/state\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar MenuScreenInnerBlock = function MenuScreenInnerBlock(_ref) {\n  var _catalog$products;\n  var section = _ref.section,\n    height = _ref.height;\n  var catalog = userStoreState.use();\n  console.log(\"catalog: \", catalog);\n  if (((_catalog$products = catalog.products) == null ? void 0 : _catalog$products.length) > 0) {\n\n    var renderItem = function renderItem(_ref2) {\n      var item = _ref2.item,\n        index = _ref2.index;\n      return _jsx(ProductDisplayBtn, {\n        product: item,\n        productIndex: index\n      }, index);\n    };\n    var keyExtractor = function keyExtractor(item) {\n      return item.id;\n    };\n    var getItemLayout = function getItemLayout(data, index) {\n      return {\n        length: 200,\n        offset: 200 * index,\n        index: index\n      };\n    };\n\n    return _jsx(_Fragment, {});\n  } else {\n    return _jsx(View, {\n      style: {\n        width: \"100%\",\n        height: height * 0.8,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(Text, {\n        style: {\n          fontFamily: \"archivo-500\",\n          color: \"rgba(74,74,74,1)\",\n          fontSize: 20\n        },\n        children: \"This category has no products...\"\n      })\n    });\n  }\n};\nexport default MenuScreenInnerBlock;","map":{"version":3,"names":["React","ProductDisplayBtn","userStoreState","MenuScreenInnerBlock","section","height","catalog","use","console","log","products","length","renderItem","item","index","keyExtractor","id","getItemLayout","data","offset","width","justifyContent","alignItems","fontFamily","color","fontSize"],"sources":["/Users/peterputros/Desktop/PosMate/components/MenuScreenInnerBlock.tsx"],"sourcesContent":["import { View, Text, FlatList } from \"react-native\";\nimport React from \"react\";\nimport ProductDisplayBtn from \"components/ProductDisplayBtn\";\nimport { userStoreState } from \"state/state\";\n\nconst MenuScreenInnerBlock = ({ section, height }) => {\n  const catalog = userStoreState.use();\n\n  console.log(\"catalog: \", catalog);\n\n  if (catalog.products?.length > 0) {\n    // return catalog.products.map((product, index) => {\n    //   const isVisible = section\n    //     ? product.catagory === section || product.category === section\n    //     : product.catagory === catalog.categories[0] ||\n    //       product.category === catalog.categories[0];\n\n    //   return (\n    //     <>\n    //       {isVisible && (\n    //         <ProductDisplayBtn\n    //           product={product}\n    //           productIndex={index}\n    //           key={index}\n    //         />\n    //       )}\n    //     </>\n    //   );\n    // });\n\n    const renderItem = ({ item, index }) => (\n      <ProductDisplayBtn product={item} productIndex={index} key={index} />\n    ); // Defined outside the render method\n    const keyExtractor = (item) => item.id; // Defined outside the render method\n    const getItemLayout = (data, index) => ({\n      length: 200,\n      offset: 200 * index,\n      index,\n    }); // Defined outside the render method\n\n    // return (\n    //   <FlatList\n    //     style={{ width: \"100%\", height: \"100%\" }}\n    //     contentContainerStyle={{\n    //       flexDirection: \"row\",\n    //       flexWrap: \"wrap\",\n    //       justifyContent: \"space-between\",\n    //       paddingLeft: 50,\n    //       paddingRight: 50,\n    //     }}\n    //     data={catalog.products.filter((product) => {\n    //       const isVisible = section\n    //         ? product.catagory === section || product.category === section\n    //         : product.catagory === catalog.categories[0] ||\n    //           product.category === catalog.categories[0];\n    //       return isVisible;\n    //     })}\n    //     renderItem={renderItem}\n    //     keyExtractor={keyExtractor}\n    //     getItemLayout={getItemLayout}\n    //   />\n    // );\n    return (\n      <>\n        {}\n      </>\n    )\n  } else {\n    return (\n      <View\n        style={{\n          width: \"100%\",\n          height: height * 0.8,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Text\n          style={{\n            fontFamily: \"archivo-500\",\n            color: \"rgba(74,74,74,1)\",\n            fontSize: 20,\n          }}\n        >\n          This category has no products...\n        </Text>\n      </View>\n    );\n  }\n};\n\nexport default MenuScreenInnerBlock;\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB;AACxB,SAASC,cAAc;AAAsB;AAAA;AAE7C,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,OAA4B;EAAA;EAAA,IAAtBC,OAAO,QAAPA,OAAO;IAAEC,MAAM,QAANA,MAAM;EAC7C,IAAMC,OAAO,GAAGJ,cAAc,CAACK,GAAG,EAAE;EAEpCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,OAAO,CAAC;EAEjC,IAAI,sBAAAA,OAAO,CAACI,QAAQ,qBAAhB,kBAAkBC,MAAM,IAAG,CAAC,EAAE;;IAoBhC,IAAMC,UAAU,GAAG,SAAbA,UAAU;MAAA,IAAMC,IAAI,SAAJA,IAAI;QAAEC,KAAK,SAALA,KAAK;MAAA,OAC/B,KAAC,iBAAiB;QAAC,OAAO,EAAED,IAAK;QAAC,YAAY,EAAEC;MAAM,GAAMA,KAAK,CAAI;IAAA,CACtE;IACD,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIF,IAAI;MAAA,OAAKA,IAAI,CAACG,EAAE;IAAA;IACtC,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,IAAI,EAAEJ,KAAK;MAAA,OAAM;QACtCH,MAAM,EAAE,GAAG;QACXQ,MAAM,EAAE,GAAG,GAAGL,KAAK;QACnBA,KAAK,EAALA;MACF,CAAC;IAAA,CAAC;;IAwBF,OACE,mBAEG;EAEP,CAAC,MAAM;IACL,OACE,KAAC,IAAI;MACH,KAAK,EAAE;QACLM,KAAK,EAAE,MAAM;QACbf,MAAM,EAAEA,MAAM,GAAG,GAAG;QACpBgB,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE;MACd,CAAE;MAAA,UAEF,KAAC,IAAI;QACH,KAAK,EAAE;UACLC,UAAU,EAAE,aAAa;UACzBC,KAAK,EAAE,kBAAkB;UACzBC,QAAQ,EAAE;QACZ,CAAE;QAAA,UACH;MAED;IAAO,EACF;EAEX;AACF,CAAC;AAED,eAAetB,oBAAoB"},"metadata":{},"sourceType":"module"}