{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport React, { useState } from \"react\";\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar TutorialStep = function TutorialStep(props) {\n  var children = props.children,\n    step = props.step,\n    helpDescription = props.helpDescription;\n\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    x = _useState2[0],\n    setX = _useState2[1];\n\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    y = _useState4[0],\n    setY = _useState4[1];\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Modal, {\n      transparent: true,\n      children: [_jsx(View, {\n        style: {\n          backgroundColor: \"rgba(0,0,0,0.5)\",\n          position: \"absolute\",\n          height: \"100%\",\n          width: \"100%\"\n        }\n      }), _jsx(View, {\n        style: {\n          position: \"absolute\",\n          top: y,\n          left: x\n        },\n        children: children\n      }), _jsxs(View, {\n        style: {\n          position: \"absolute\",\n          top: y + 100,\n          left: x,\n          padding: 20,\n          backgroundColor: 'white'\n        },\n        children: [_jsx(Text, {\n          style: {},\n          children: helpDescription\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          },\n          children: [_jsx(Text, {\n            children: \"Previous\"\n          }), _jsx(Text, {\n            children: \"Next\"\n          })]\n        })]\n      })]\n    }), _jsx(View, {\n      onLayout: function onLayout(event) {\n        var layout = event.nativeEvent.layout;\n        console.log(layout);\n        setX(layout.left);\n        setY(layout.top);\n      },\n      children: children\n    })]\n  });\n};\nexport default TutorialStep;","map":{"version":3,"names":["React","useState","TutorialStep","props","children","step","helpDescription","x","setX","y","setY","backgroundColor","position","height","width","top","left","padding","flexDirection","alignItems","justifyContent","event","layout","nativeEvent","console","log"],"sources":["/Users/peterputros/Desktop/PosMate/components/tutorial/TutorialStep.tsx"],"sourcesContent":["import { View, Text, Modal } from \"react-native\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\n//typscript type for props\ntype Props = {\n    children: React.ReactNode;\n    step: number;\n    helpDescription: string;\n};\n\nconst TutorialStep = (props: Props) => {\n  const { children, step, helpDescription } = props;\n\n  // X\n  const [x, setX] = useState();\n\n  // Y\n  const [y, setY] = useState();\n\n  return (\n    <>\n      <Modal transparent>\n        <View\n          style={{\n            backgroundColor: \"rgba(0,0,0,0.5)\",\n            position: \"absolute\",\n            height: \"100%\",\n            width: \"100%\",\n          }}\n        />\n        <View style={{ position: \"absolute\", top: y, left: x }}>\n          {children}\n        </View>\n        <View style={{ position: \"absolute\", top: y + 100, left: x, padding: 20, backgroundColor: 'white' }}>\n          <Text style={{}}>{helpDescription}</Text>\n          <View style={{flexDirection: 'row', alignItems: 'center', justifyContent: 'flex-end'}}>\n            <Text>Previous</Text>\n            <Text>Next</Text>\n          </View>\n        </View>\n      </Modal>\n      <View\n        onLayout={(event) => {\n          const layout = event.nativeEvent.layout;\n          console.log(layout);\n          setX(layout.left);\n          setY(layout.top);\n        }}\n      >\n        {children}\n      </View>\n    </>\n  );\n};\n\nexport default TutorialStep;\n"],"mappings":";;;;AACA,OAAOA,KAAK,IAAuBC,QAAQ,QAAQ,OAAO;;AAAC;AAAA;AAAA;AAS3D,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAY,EAAK;EACrC,IAAQC,QAAQ,GAA4BD,KAAK,CAAzCC,QAAQ;IAAEC,IAAI,GAAsBF,KAAK,CAA/BE,IAAI;IAAEC,eAAe,GAAKH,KAAK,CAAzBG,eAAe;;EAGvC,gBAAkBL,QAAQ,EAAE;IAAA;IAArBM,CAAC;IAAEC,IAAI;;EAGd,iBAAkBP,QAAQ,EAAE;IAAA;IAArBQ,CAAC;IAAEC,IAAI;EAEd,OACE;IAAA,WACE,MAAC,KAAK;MAAC,WAAW;MAAA,WAChB,KAAC,IAAI;QACH,KAAK,EAAE;UACLC,eAAe,EAAE,iBAAiB;UAClCC,QAAQ,EAAE,UAAU;UACpBC,MAAM,EAAE,MAAM;UACdC,KAAK,EAAE;QACT;MAAE,EACF,EACF,KAAC,IAAI;QAAC,KAAK,EAAE;UAAEF,QAAQ,EAAE,UAAU;UAAEG,GAAG,EAAEN,CAAC;UAAEO,IAAI,EAAET;QAAE,CAAE;QAAA,UACpDH;MAAQ,EACJ,EACP,MAAC,IAAI;QAAC,KAAK,EAAE;UAAEQ,QAAQ,EAAE,UAAU;UAAEG,GAAG,EAAEN,CAAC,GAAG,GAAG;UAAEO,IAAI,EAAET,CAAC;UAAEU,OAAO,EAAE,EAAE;UAAEN,eAAe,EAAE;QAAQ,CAAE;QAAA,WAClG,KAAC,IAAI;UAAC,KAAK,EAAE,CAAC,CAAE;UAAA,UAAEL;QAAe,EAAQ,EACzC,MAAC,IAAI;UAAC,KAAK,EAAE;YAACY,aAAa,EAAE,KAAK;YAAEC,UAAU,EAAE,QAAQ;YAAEC,cAAc,EAAE;UAAU,CAAE;UAAA,WACpF,KAAC,IAAI;YAAA;UAAA,EAAgB,EACrB,KAAC,IAAI;YAAA;UAAA,EAAY;QAAA,EACZ;MAAA,EACF;IAAA,EACD,EACR,KAAC,IAAI;MACH,QAAQ,EAAE,kBAACC,KAAK,EAAK;QACnB,IAAMC,MAAM,GAAGD,KAAK,CAACE,WAAW,CAACD,MAAM;QACvCE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;QACnBd,IAAI,CAACc,MAAM,CAACN,IAAI,CAAC;QACjBN,IAAI,CAACY,MAAM,CAACP,GAAG,CAAC;MAClB,CAAE;MAAA,UAEDX;IAAQ,EACJ;EAAA,EACN;AAEP,CAAC;AAED,eAAeF,YAAY"},"metadata":{},"sourceType":"module"}