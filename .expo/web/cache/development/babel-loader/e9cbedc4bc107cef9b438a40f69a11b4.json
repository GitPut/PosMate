{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction OnlineOrderHome(_ref) {\n  var storeDetails = _ref.storeDetails,\n    setOrderDetails = _ref.setOrderDetails,\n    orderDetails = _ref.orderDetails,\n    setPage = _ref.setPage,\n    page = _ref.page;\n  var _useState = useState(page === 3 ? \"checkout\" : null),\n    _useState2 = _slicedToArray(_useState, 2),\n    enterDetailsSection = _useState2[0],\n    setEnterDetailsSection = _useState2[1];\n  var _useWindowDimensions = useWindowDimensions(),\n    screenWidth = _useWindowDimensions.width;\n  var RenderDetailsSection = function RenderDetailsSection() {\n    if (enterDetailsSection === \"delivery\") {\n      return _jsx(DeliveryDetails, {\n        storeDetails: storeDetails,\n        setorderDetails: setorderDetails,\n        orderDetails: orderDetails,\n        setpage: setpage,\n        width: screenWidth > 1000 ? 380 : screenWidth * 0.9\n      });\n    } else if (enterDetailsSection === \"pickup\") {\n      return _jsx(PickupDetails, {\n        storeDetails: storeDetails,\n        setorderDetails: setorderDetails,\n        orderDetails: orderDetails,\n        setpage: setpage\n      });\n    } else if (page === 3) {\n      return _jsx(Elements, {\n        stripe: loadStripe(storeDetails.stripePublicKey),\n        children: _jsx(CheckOutDetails, {\n          storeDetails: storeDetails,\n          setorderDetails: setorderDetails,\n          orderDetails: orderDetails,\n          setpage: setpage\n        })\n      });\n    } else {\n      return _jsx(Text, {\n        style: {\n          fontSize: 35,\n          fontWeight: \"700\",\n          color: \"white\"\n        },\n        children: \"Thank you for placing a order.\"\n      });\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: _objectSpread(_objectSpread({}, styles.backgroundContainer), {}, {\n        paddingHorizontal: screenWidth > 1000 ? 0 : 20\n      }),\n      children: _jsx(View, {\n        style: styles.frontContainer,\n        children: _jsx(RenderDetailsSection, {})\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"rgba(30, 30, 30, 1)\",\n    flex: 1\n  },\n  backgroundContainer: {\n    flex: 1\n  },\n  frontContainer: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  plantImg: {\n    width: 200,\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: 0,\n    resizeMode: \"contain\"\n  },\n  plantImgMobile: {\n    width: \"20%\",\n    position: \"absolute\",\n    bottom: \"18%\",\n    left: 0,\n    resizeMode: \"contain\"\n  },\n  thankYouText: {\n    fontSize: 35,\n    fontWeight: \"700\",\n    color: \"white\"\n  },\n  button: {\n    backgroundColor: \"rgba(238, 125, 67, 1)\",\n    borderRadius: 30,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    textAlign: \"center\"\n  },\n  iconRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  iconText: {\n    marginLeft: 10,\n    color: \"white\"\n  }\n});\n\nexport default OnlineOrderHome;\n\nvar PhoneNumberTxt = styled.span(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  font-style: normal;\\n  font-weight: 500;\\n  color: rgba(255, 255, 255, 1);\\n  font-size: 23px;\\n\"])));\nvar PhoneNumberTxtMobile = styled.span(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  font-style: normal;\\n  font-weight: 500;\\n  color: rgba(255, 255, 255, 1);\\n  font-size: 20px;\\n\"])));\nvar AddressRow = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  width: 250px;\\n  height: 65px;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  display: flex;\\n\"])));\nvar AddressRowMobile = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  width: 200px;\\n  height: 65px;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  display: flex;\\n\"])));\nvar AddressTxt = styled.span(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  font-style: normal;\\n  font-weight: 400;\\n  color: rgba(255, 255, 255, 1);\\n  font-size: 20px;\\n\"])));\nvar AddressTxtMobile = styled.span(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  font-style: normal;\\n  font-weight: 400;\\n  color: rgba(255, 255, 255, 1);\\n  font-size: 16px;\\n\"])));\nvar SocialIconsGroup = styled.div(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  width: 190px;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin: 10px;\\n  display: flex;\\n\"])));\nvar FacebookIcon = styled.img(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n  height: 57px;\\n  width: 100%;\\n  object-fit: contain;\\n\"])));\nvar InstagramIcon = styled.img(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n  height: 57px;\\n  width: 100%;\\n  object-fit: contain;\\n\"])));\nexport default OnlineOrderHome;","map":{"version":3,"names":["React","useState","OnlineOrderHome","storeDetails","setOrderDetails","orderDetails","setPage","page","enterDetailsSection","setEnterDetailsSection","useWindowDimensions","screenWidth","width","RenderDetailsSection","setorderDetails","setpage","loadStripe","stripePublicKey","fontSize","fontWeight","color","styles","container","backgroundContainer","paddingHorizontal","frontContainer","StyleSheet","create","backgroundColor","flex","justifyContent","alignItems","plantImg","position","bottom","left","resizeMode","plantImgMobile","thankYouText","button","borderRadius","paddingVertical","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","buttonText","textAlign","iconRow","flexDirection","marginTop","iconText","marginLeft","PhoneNumberTxt","styled","span","PhoneNumberTxtMobile","AddressRow","div","AddressRowMobile","AddressTxt","AddressTxtMobile","SocialIconsGroup","FacebookIcon","img","InstagramIcon"],"sources":["/Users/peterputros/Desktop/PosMate/pages/non-authed/OnlineOrderPages/OnlineOrderHome.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Text,\n  TouchableOpacity,\n  View,\n  Image,\n  StyleSheet,\n  useWindowDimensions,\n} from \"react-native\";\nimport { FontAwesome, Entypo } from \"@expo/vector-icons\";\n// Assuming DeliveryDetails, PickupDetails, CheckOutDetails are already adapted for React Native\n\nfunction OnlineOrderHome({\n  storeDetails,\n  setOrderDetails,\n  orderDetails,\n  setPage,\n  page,\n}) {\n  const [enterDetailsSection, setEnterDetailsSection] = useState(\n    page === 3 ? \"checkout\" : null\n  );\n  const { width: screenWidth } = useWindowDimensions();\n\n const RenderDetailsSection = () => {\n   if (enterDetailsSection === \"delivery\") {\n     return (\n       <DeliveryDetails\n         storeDetails={storeDetails}\n         setorderDetails={setorderDetails}\n         orderDetails={orderDetails}\n         setpage={setpage}\n         width={screenWidth > 1000 ? 380 : screenWidth * 0.9}\n       />\n     );\n   } else if (enterDetailsSection === \"pickup\") {\n     return (\n       <PickupDetails\n         storeDetails={storeDetails}\n         setorderDetails={setorderDetails}\n         orderDetails={orderDetails}\n         setpage={setpage}\n       />\n     );\n   } else if (page === 3) {\n     return (\n       <Elements stripe={loadStripe(storeDetails.stripePublicKey)}>\n         <CheckOutDetails\n           storeDetails={storeDetails}\n           setorderDetails={setorderDetails}\n           orderDetails={orderDetails}\n           setpage={setpage}\n         />\n       </Elements>\n     );\n   } else {\n     return (\n       <Text style={{ fontSize: 35, fontWeight: \"700\", color: \"white\" }}>\n         Thank you for placing a order.\n       </Text>\n     );\n   }\n };\n\n  return (\n    <View style={styles.container}>\n      <View\n        style={{\n          ...styles.backgroundContainer,\n          paddingHorizontal: screenWidth > 1000 ? 0 : 20,\n        }}\n      >\n        {/* Conditional rendering for images based on screen width */}\n        <View style={styles.frontContainer}>\n          {/* Conditional rendering for Logo and Buttons */}\n          <RenderDetailsSection />\n          {/* BottomRowGroup with Phone, Address, Social Icons */}\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"rgba(30, 30, 30, 1)\",\n    flex: 1,\n  },\n  backgroundContainer: {\n    flex: 1,\n  },\n  frontContainer: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  plantImg: {\n    width: 200,\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: 0,\n    resizeMode: \"contain\",\n  },\n  plantImgMobile: {\n    width: \"20%\",\n    position: \"absolute\",\n    bottom: \"18%\",\n    left: 0,\n    resizeMode: \"contain\",\n  },\n  // Additional styles for other images and elements\n  thankYouText: {\n    fontSize: 35,\n    fontWeight: \"700\",\n    color: \"white\",\n  },\n  button: {\n    backgroundColor: \"rgba(238, 125, 67, 1)\",\n    borderRadius: 30,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    textAlign: \"center\",\n  },\n  iconRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginTop: 10,\n  },\n  iconText: {\n    marginLeft: 10,\n    color: \"white\",\n  },\n  // Responsive design adjustments can be made here\n});\n\nexport default OnlineOrderHome;\n\n// import React, { Component, useState } from \"react\";\n// import styled, { css } from \"styled-components\";\n// import { FontAwesome, Entypo } from \"@expo/vector-icons\";\n// import DeliveryDetails from \"./components/home/DeliveryDetails\";\n// import PickupDetails from \"./components/home/PickupDetails\";\n// import {\n//   Text,\n//   TouchableOpacity,\n//   View,\n//   useWindowDimensions,\n// } from \"react-native\";\n// import CheckOutDetails from \"./components/home/CheckOutDetails\";\n// import { Elements } from \"@stripe/react-stripe-js\";\n// import { loadStripe } from \"@stripe/stripe-js\";\n\n// function OnlineOrderHome({\n//   storeDetails,\n//   setorderDetails,\n//   orderDetails,\n//   setpage,\n//   page,\n// }) {\n//   const [enterDetailsSection, setenterDetailsSection] = useState(\n//     page === 3 ? \"checkout\" : null\n//   );\n//   const screenWidth = useWindowDimensions().width;\n//   const screenHeight = useWindowDimensions().height;\n\n//   const RenderDetailsSection = () => {\n//     if (enterDetailsSection === \"delivery\") {\n//       return (\n//         <DeliveryDetails\n//           storeDetails={storeDetails}\n//           setorderDetails={setorderDetails}\n//           orderDetails={orderDetails}\n//           setpage={setpage}\n//           width={screenWidth > 1000 ? 380 : screenWidth * 0.9}\n//         />\n//       );\n//     } else if (enterDetailsSection === \"pickup\") {\n//       return (\n//         <PickupDetails\n//           storeDetails={storeDetails}\n//           setorderDetails={setorderDetails}\n//           orderDetails={orderDetails}\n//           setpage={setpage}\n//         />\n//       );\n//     } else if (page === 3) {\n//       return (\n//         <Elements stripe={loadStripe(storeDetails.stripePublicKey)}>\n//           <CheckOutDetails\n//             storeDetails={storeDetails}\n//             setorderDetails={setorderDetails}\n//             orderDetails={orderDetails}\n//             setpage={setpage}\n//           />\n//         </Elements>\n//       );\n//     } else {\n//       return (\n//         <Text style={{ fontSize: 35, fontWeight: \"700\", color: \"white\" }}>\n//           Thank you for placing a order.\n//         </Text>\n//       );\n//     }\n//   };\n\n//   return (\n//     <Container>\n//       <BackgroundContainer>\n//         {screenWidth > 1000 ? (\n//           <>\n//             <PlantImg src={require(\"./assets/images/image_JqcD..png\")} />\n//             <WingImg src={require(\"./assets/images/image_BSgk..png\")} />\n//             <PizzaImg src={require(\"./assets/images/image_DrUG..png\")} />\n//           </>\n//         ) : (\n//           <>\n//             <PlantImgMobile src={require(\"./assets/images/image_JqcD..png\")} />\n//             <WingImgMobile src={require(\"./assets/images/sidewings.png\")} />\n//             <PizzaImgMobile src={require(\"./assets/images/image_DrUG..png\")} />\n//           </>\n//         )}\n//         <FrontContainer>\n//           <LogoGroup>\n//             {storeDetails.hasLogo ? (\n//               <Logo\n//                 onClick={() => {\n//                   if (page > 1) {\n//                     setpage((prev) => prev - 1);\n//                   } else {\n//                     setorderDetails({\n//                       ...orderDetails,\n//                       delivery: false,\n//                       address: null,\n//                     });\n//                     setenterDetailsSection(null);\n//                   }\n//                 }}\n//                 src={require(\"./assets/images/dpos-logo-white.png\")}\n//               ></Logo>\n//             ) : (\n//               <TouchableOpacity\n//                 onPress={() => {\n//                   if (page > 1) {\n//                     setpage((prev) => prev - 1);\n//                   } else {\n//                     setorderDetails({\n//                       ...orderDetails,\n//                       delivery: false,\n//                       address: null,\n//                     });\n//                     setenterDetailsSection(null);\n//                   }\n//                 }}\n//               >\n//                 <Text\n//                   style={[\n//                     { fontSize: 35, fontWeight: \"700\", color: \"white\" },\n//                     screenWidth < 1000 && { fontSize: 30 },\n//                   ]}\n//                 >\n//                   {storeDetails.name}\n//                 </Text>\n//               </TouchableOpacity>\n//             )}\n//             <Dash src={require(\"./assets/images/image_ridw..png\")} />\n//           </LogoGroup>\n//           {!enterDetailsSection ? (\n//             <>\n//               {screenWidth > 1000 ? (\n//                 <>\n//                   {storeDetails.acceptDelivery ? (\n//                     <BtnContainerRow>\n//                       <PickupBtn\n//                         onClick={() => setenterDetailsSection(\"pickup\")}\n//                       >\n//                         <ButtonOverlay>\n//                           <PickupBtnTxt>PICK UP</PickupBtnTxt>\n//                         </ButtonOverlay>\n//                       </PickupBtn>\n//                       <DeliveryBtn\n//                         onClick={() => {\n//                           setorderDetails({ ...orderDetails, delivery: true });\n//                           setenterDetailsSection(\"delivery\");\n//                         }}\n//                       >\n//                         <ButtonOverlay>\n//                           <DeliveryBtnTxt>DELIVERY</DeliveryBtnTxt>\n//                         </ButtonOverlay>\n//                       </DeliveryBtn>\n//                     </BtnContainerRow>\n//                   ) : (\n//                     <div\n//                       style={{\n//                         width: \"100%\",\n//                         display: \"flex\",\n//                         justifyContent: \"center\",\n//                         alignItems: \"center\",\n//                       }}\n//                     >\n//                       <PickupBtn\n//                         onClick={() => setenterDetailsSection(\"pickup\")}\n//                       >\n//                         <ButtonOverlay>\n//                           <PickupBtnTxt>PICK UP</PickupBtnTxt>\n//                         </ButtonOverlay>\n//                       </PickupBtn>\n//                     </div>\n//                   )}\n//                 </>\n//               ) : (\n//                 <>\n//                   {storeDetails.acceptDelivery ? (\n//                     <View\n//                       style={{\n//                         width: \"100%\",\n//                         justifyContent: \"center\",\n//                         alignItems: \"center\",\n//                       }}\n//                     >\n//                       <PickupBtn\n//                         onClick={() => setenterDetailsSection(\"pickup\")}\n//                       >\n//                         <ButtonOverlay>\n//                           <PickupBtnTxt>PICK UP</PickupBtnTxt>\n//                         </ButtonOverlay>\n//                       </PickupBtn>\n//                       <div style={{ height: 30 }}></div>\n//                       <DeliveryBtn\n//                         onClick={() => {\n//                           setorderDetails({ ...orderDetails, delivery: true });\n//                           setenterDetailsSection(\"delivery\");\n//                         }}\n//                       >\n//                         <ButtonOverlay>\n//                           <DeliveryBtnTxt>DELIVERY</DeliveryBtnTxt>\n//                         </ButtonOverlay>\n//                       </DeliveryBtn>\n//                     </View>\n//                   ) : (\n//                     <div\n//                       style={{\n//                         width: \"100%\",\n//                         display: \"flex\",\n//                         justifyContent: \"center\",\n//                         alignItems: \"center\",\n//                       }}\n//                     >\n//                       <PickupBtn\n//                         onClick={() => setenterDetailsSection(\"pickup\")}\n//                       >\n//                         <ButtonOverlay>\n//                           <PickupBtnTxt>PICK UP</PickupBtnTxt>\n//                         </ButtonOverlay>\n//                       </PickupBtn>\n//                     </div>\n//                   )}\n//                 </>\n//               )}\n//             </>\n//           ) : (\n//             <>\n//               {screenWidth > 1000 ? (\n//                 <RenderDetailsSection />\n//               ) : (\n//                 <View\n//                   style={{\n//                     justifyContent: \"center\",\n//                     alignItems: \"center\",\n//                     width: \"100%\",\n//                   }}\n//                 >\n//                   <RenderDetailsSection />\n//                 </View>\n//               )}\n//             </>\n//           )}\n//           <BottomRowGroup>\n//             <DetailsLocationGroup>\n//               {screenWidth > 1000 ? (\n//                 <>\n//                   <PhoneNumberRow>\n//                     <FontAwesome\n//                       name=\"phone\"\n//                       style={{\n//                         color: \"rgba(255,255,255,1)\",\n//                         fontSize: 50,\n//                       }}\n//                     ></FontAwesome>\n//                     <PhoneNumberTxt>{storeDetails.phoneNumber}</PhoneNumberTxt>\n//                   </PhoneNumberRow>\n//                   <AddressRow>\n//                     <Entypo\n//                       name=\"location-pin\"\n//                       style={{\n//                         color: \"rgba(255,255,255,1)\",\n//                         fontSize: 50,\n//                       }}\n//                     ></Entypo>\n//                     <AddressTxt>\n//                       {\n//                         storeDetails.address?.value.structured_formatting\n//                           .main_text\n//                       }\n//                       {\"\\n\"}\n//                       {\n//                         storeDetails.address?.value.structured_formatting\n//                           .secondary_text\n//                       }\n//                     </AddressTxt>\n//                   </AddressRow>\n//                 </>\n//               ) : (\n//                 <>\n//                   <PhoneNumberRowMobile>\n//                     <FontAwesome\n//                       name=\"phone\"\n//                       style={{\n//                         color: \"rgba(255,255,255,1)\",\n//                         fontSize: 35,\n//                       }}\n//                     ></FontAwesome>\n//                     <PhoneNumberTxtMobile>\n//                       {storeDetails.phoneNumber}\n//                     </PhoneNumberTxtMobile>\n//                   </PhoneNumberRowMobile>\n//                   <AddressRowMobile>\n//                     <Entypo\n//                       name=\"location-pin\"\n//                       style={{\n//                         color: \"rgba(255,255,255,1)\",\n//                         fontSize: 35,\n//                       }}\n//                     ></Entypo>\n//                     <AddressTxtMobile>\n//                       {\n//                         storeDetails.address?.value.structured_formatting\n//                           .main_text\n//                       }\n//                       {\"\\n\"}\n//                       {\n//                         storeDetails.address?.value.structured_formatting\n//                           .secondary_text\n//                       }\n//                     </AddressTxtMobile>\n//                   </AddressRowMobile>\n//                 </>\n//               )}\n//             </DetailsLocationGroup>\n//             {storeDetails.hasSocial && (\n//               <SocialIconsGroup>\n//                 <FacebookIcon\n//                   src={require(\"./assets/images/image_pDaA..png\")}\n//                 ></FacebookIcon>\n//                 <InstagramIcon\n//                   src={require(\"./assets/images/image_CLpi..png\")}\n//                 ></InstagramIcon>\n//               </SocialIconsGroup>\n//             )}\n//           </BottomRowGroup>\n//         </FrontContainer>\n//       </BackgroundContainer>\n//     </Container>\n//   );\n// }\n\n// const Container = styled.div`\n//   background-color: rgba(30, 30, 30, 1);\n//   flex-direction: column;\n//   height: 100vh;\n//   width: 100vw;\n// `;\n\n// const ButtonOverlay = styled.button`\n//   display: block;\n//   background: none;\n//   height: 100%;\n//   width: 100%;\n//   border: none;\n// `;\n// const BackgroundContainer = styled.div`\n//   flex-direction: column;\n//   flex: 1 1 0%;\n// `;\n\n// const PlantImg = styled.img`\n//   width: 200px;\n//   object-fit: contain;\n//   position: absolute;\n//   bottom: 5vh;\n//   left: 0px;\n// `;\n// const PlantImgMobile = styled.img`\n//   width: 20%;\n//   object-fit: contain;\n//   position: absolute;\n//   bottom: 18vh;\n//   left: 0px;\n// `;\n\n// const WingImg = styled.img`\n//   width: 40%;\n//   object-fit: contain;\n//   bottom: 0px;\n//   position: absolute;\n//   margin: auto;\n//   left: 0;\n//   right: 0;\n//   text-align: center;\n// `;\n// const WingImgMobile = styled.img`\n//   width: 40%;\n//   object-fit: contain;\n//   position: absolute;\n//   bottom: 13vh;\n//   right: 0px;\n// `;\n\n// const PizzaImg = styled.img`\n//   height: 600px;\n//   object-fit: contain;\n//   position: absolute;\n//   top: 0px;\n//   right: 0px;\n// `;\n// const PizzaImgMobile = styled.img`\n//   height: 40%;\n//   object-fit: contain;\n//   position: absolute;\n//   top: 10vh;\n//   right: 0px;\n// `;\n\n// const FrontContainer = styled.div`\n//   flex: 1 1 0%;\n//   position: absolute;\n//   top: 0px;\n//   left: 0px;\n//   right: 0px;\n//   bottom: 0px;\n//   flex-direction: column;\n//   justify-content: space-between;\n//   align-items: center;\n//   display: flex;\n// `;\n\n// const LogoGroup = styled.div`\n//   flex-direction: column;\n//   justify-content: space-between;\n//   align-self: stretch;\n//   height: 110px;\n//   padding: 10px;\n//   display: flex;\n// `;\n\n// const Logo = styled.img`\n//   width: 237px;\n//   height: 100%;\n//   object-fit: contain;\n// `;\n\n// const Dash = styled.img`\n//   height: 100%;\n//   width: 50vw;\n//   object-fit: contain;\n// `;\n\n// const BtnContainerRow = styled.div`\n//   flex-direction: row;\n//   justify-content: space-between;\n//   height: 60px;\n//   width: 683px;\n//   display: flex;\n// `;\n\n// const PickupBtn = styled.div`\n//   width: 219px;\n//   height: 60px;\n//   background-color: rgba(238, 125, 67, 1);\n//   border-radius: 60px;\n//   flex-direction: column;\n//   justify-content: center;\n//   align-items: center;\n//   border: none;\n//   box-shadow: 3px 3px 10px 0.2px rgba(0, 0, 0, 1);\n// `;\n\n// const PickupBtnTxt = styled.span`\n//   font-style: normal;\n//   font-weight: 700;\n//   color: rgba(255, 255, 255, 1);\n//   font-size: 18px;\n// `;\n\n// const DeliveryBtn = styled.div`\n//   width: 219px;\n//   height: 60px;\n//   background-color: rgba(238, 125, 67, 1);\n//   border-radius: 60px;\n//   flex-direction: column;\n//   justify-content: center;\n//   align-items: center;\n//   border: none;\n//   box-shadow: 3px 3px 10px 0.2px rgba(0, 0, 0, 1);\n// `;\n\n// const DeliveryBtnTxt = styled.span`\n//   font-style: normal;\n//   font-weight: 700;\n//   color: rgba(255, 255, 255, 1);\n//   font-size: 18px;\n// `;\n\n// const BottomRowGroup = styled.div`\n//   flex-direction: row;\n//   justify-content: space-between;\n//   align-items: flex-end;\n//   height: 150px;\n//   width: 100vw;\n//   display: flex;\n// `;\n\n// const DetailsLocationGroup = styled.div`\n//   flex-direction: column;\n//   justify-content: center;\n//   margin: 10px;\n//   display: flex;\n// `;\n\n// const PhoneNumberRow = styled.div`\n//   width: 230px;\n//   height: 65px;\n//   flex-direction: row;\n//   justify-content: space-between;\n//   align-items: center;\n//   display: flex;\n// `;\n// const PhoneNumberRowMobile = styled.div`\n//   width: 180px;\n//   height: 65px;\n//   flex-direction: row;\n//   justify-content: space-between;\n//   align-items: center;\n//   display: flex;\n// `;\n\nconst PhoneNumberTxt = styled.span`\n  font-style: normal;\n  font-weight: 500;\n  color: rgba(255, 255, 255, 1);\n  font-size: 23px;\n`;\nconst PhoneNumberTxtMobile = styled.span`\n  font-style: normal;\n  font-weight: 500;\n  color: rgba(255, 255, 255, 1);\n  font-size: 20px;\n`;\n\nconst AddressRow = styled.div`\n  width: 250px;\n  height: 65px;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n`;\nconst AddressRowMobile = styled.div`\n  width: 200px;\n  height: 65px;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n`;\n\nconst AddressTxt = styled.span`\n  font-style: normal;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 1);\n  font-size: 20px;\n`;\nconst AddressTxtMobile = styled.span`\n  font-style: normal;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 1);\n  font-size: 16px;\n`;\n\nconst SocialIconsGroup = styled.div`\n  width: 190px;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px;\n  display: flex;\n`;\n\nconst FacebookIcon = styled.img`\n  height: 57px;\n  width: 100%;\n  object-fit: contain;\n`;\n\nconst InstagramIcon = styled.img`\n  height: 57px;\n  width: 100%;\n  object-fit: contain;\n`;\n\nexport default OnlineOrderHome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}