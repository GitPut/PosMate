{"ast":null,"code":"import { useRef } from 'react';\nimport { makeMutable } from \"./core\";\nvar _worklet_377781867727_init_data = {\n  code: \"function anonymous(descriptors) {\\n  const {\\n    item\\n  } = this._closure;\\n  const index = descriptors.findIndex(function (descriptor) {\\n    return descriptor.tag === item.tag;\\n  });\\n  if (index !== -1) {\\n    descriptors[index] = item;\\n  } else {\\n    descriptors.push(item);\\n  }\\n  return descriptors;\\n}\",\n  location: \"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/ViewDescriptorsSet.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAOqCA,8BAAe;EAAA;IAAA;EAAA;EAG5C,MAAMC,KAAK,GAAGD,WAAW,CAACE,SAAS,CAACC,oBAAU;IAAA,OAAIA,UAAU,CAACC,GAAG,KAAKC,IAAI,CAACD,GAAG;EAAA,EAAC;EAC9E,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBD,WAAW,CAACC,KAAK,CAAC,GAAGI,IAAI;EAC3B,CAAC,MAAM;IACLL,WAAW,CAACM,IAAI,CAACD,IAAI,CAAC;EACxB;EACA,OAAOL,WAAW;AACpB\\\",\\\"names\\\":[\\\"descriptors\\\",\\\"index\\\",\\\"findIndex\\\",\\\"descriptor\\\",\\\"tag\\\",\\\"item\\\",\\\"push\\\"],\\\"sources\\\":[\\\"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/ViewDescriptorsSet.js\\\"]}\"\n};\nvar _worklet_253806177609_init_data = {\n  code: \"function anonymous(descriptors) {\\n  const {\\n    viewTag\\n  } = this._closure;\\n  const index = descriptors.findIndex(function (descriptor) {\\n    return descriptor.tag === viewTag;\\n  });\\n  if (index !== -1) {\\n    descriptors.splice(index, 1);\\n  }\\n  return descriptors;\\n}\",\n  location: \"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/ViewDescriptorsSet.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAoBqCA,8BAAe;EAAA;IAAA;EAAA;EAG5C,MAAMC,KAAK,GAAGD,WAAW,CAACE,SAAS,CAACC,oBAAU;IAAA,OAAIA,UAAU,CAACC,GAAG,KAAKC,OAAO;EAAA,EAAC;EAC7E,IAAIJ,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBD,WAAW,CAACM,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;EAC9B;EACA,OAAOD,WAAW;AACpB\\\",\\\"names\\\":[\\\"descriptors\\\",\\\"index\\\",\\\"findIndex\\\",\\\"descriptor\\\",\\\"tag\\\",\\\"viewTag\\\",\\\"splice\\\"],\\\"sources\\\":[\\\"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/ViewDescriptorsSet.js\\\"]}\"\n};\nexport function makeViewDescriptorsSet() {\n  var sharableViewDescriptors = makeMutable([]);\n  var data = {\n    sharableViewDescriptors: sharableViewDescriptors,\n    add: function add(item) {\n      sharableViewDescriptors.modify(function () {\n        var _e = [new global.Error(), -2, -27];\n        var _f = function _f(descriptors) {\n          var index = descriptors.findIndex(function (descriptor) {\n            return descriptor.tag === item.tag;\n          });\n          if (index !== -1) {\n            descriptors[index] = item;\n          } else {\n            descriptors.push(item);\n          }\n          return descriptors;\n        };\n        _f._closure = {\n          item: item\n        };\n        _f.__initData = _worklet_377781867727_init_data;\n        _f.__workletHash = 377781867727;\n        _f.__stackDetails = _e;\n        _f.__version = \"3.3.0\";\n        return _f;\n      }());\n    },\n    remove: function remove(viewTag) {\n      sharableViewDescriptors.modify(function () {\n        var _e = [new global.Error(), -2, -27];\n        var _f = function _f(descriptors) {\n          var index = descriptors.findIndex(function (descriptor) {\n            return descriptor.tag === viewTag;\n          });\n          if (index !== -1) {\n            descriptors.splice(index, 1);\n          }\n          return descriptors;\n        };\n        _f._closure = {\n          viewTag: viewTag\n        };\n        _f.__initData = _worklet_253806177609_init_data;\n        _f.__workletHash = 253806177609;\n        _f.__stackDetails = _e;\n        _f.__version = \"3.3.0\";\n        return _f;\n      }());\n    }\n  };\n  return data;\n}\nexport function makeViewsRefSet() {\n  var ref = useRef(null);\n  if (ref.current === null) {\n    var data = {\n      items: new Set(),\n      add: function add(item) {\n        if (data.items.has(item)) return;\n        data.items.add(item);\n      },\n      remove: function remove(item) {\n        data.items.delete(item);\n      }\n    };\n    ref.current = data;\n  }\n  return ref.current;\n}","map":{"version":3,"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,WAAW;AAAgB;EAAA;EAAA;EAAA;AAAA;AAAA;EAAA;EAAA;EAAA;AAAA;AAgBpC,OAAO,SAASC,sBAAsBA,GAAuB;EAC3D,IAAMC,uBAAuB,GAAGF,WAAW,CAAe,EAAE,CAAC;EAC7D,IAAMG,IAAwB,GAAG;IAC/BD,uBAAuB,EAAvBA,uBAAuB;IACvBE,GAAG,EAAGC,iBAAgB,EAAK;MACzBH,uBAAuB,CAACI,MAAM;QAAA;QAAA,qBAAEC,WAAyB,EAAK;UAE5D,IAAMC,KAAK,GAAGD,WAAW,CAACE,SAAS,CAChCC,oBAAU;YAAA,OAAKA,UAAU,CAACC,GAAG,KAAKN,IAAI,CAACM,GAAG;UAAA,EAC5C;UACD,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;YAChBD,WAAW,CAACC,KAAK,CAAC,GAAGH,IAAI;UAC3B,CAAC,MAAM;YACLE,WAAW,CAACK,IAAI,CAACP,IAAI,CAAC;UACxB;UACA,OAAOE,WAAW;QACpB,CAAC;QAAA;UAAA,MAbHL;QAAAA;QAAAA;QAAAA;QAAAA;QAAAA;QAAAA;MAAAA,IAaI;IACJ,CAAC;IAEDW,MAAM,EAAGC,uBAAe,EAAK;MAC3BZ,uBAAuB,CAACI,MAAM;QAAA;QAAA,qBAAEC,WAAyB,EAAK;UAE5D,IAAMC,KAAK,GAAGD,WAAW,CAACE,SAAS,CAChCC,oBAAU;YAAA,OAAKA,UAAU,CAACC,GAAG,KAAKG,OAAO;UAAA,EAC3C;UACD,IAAIN,KAAK,KAAK,CAAC,CAAC,EAAE;YAChBD,WAAW,CAACQ,MAAM,CAACP,KAAK,EAAE,CAAC,CAAC;UAC9B;UACA,OAAOD,WAAW;QACpB,CAAC;QAAA;UAAA,SA7C6BO;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA,IA6C5B;IACJ;EACF,CAAC;EACD,OAAOX,IAAI;AACb;AAEA,OAAO,SAASa,eAAeA,GAAqB;EAClD,IAAMC,GAAG,GAAGlB,MAAM,CAAuB,IAAI,CAAC;EAC9C,IAAIkB,GAAG,CAACC,OAAO,KAAK,IAAI,EAAE;IACxB,IAAMf,IAAmB,GAAG;MAC1BgB,KAAK,EAAE,IAAIC,GAAG,EAAE;MAEhBhB,GAAG,EAAGC,iBAAO,EAAK;QAChB,IAAIF,IAAI,CAACgB,KAAK,CAACE,GAAG,CAAChB,IAAI,CAAC,EAAE;QAC1BF,IAAI,CAACgB,KAAK,CAACf,GAAG,CAACC,IAAI,CAAC;MACtB,CAAC;MAEDQ,MAAM,EAAGR,oBAAO,EAAK;QACnBF,IAAI,CAACgB,KAAK,CAACG,MAAM,CAACjB,IAAI,CAAC;MACzB;IACF,CAAC;IACDY,GAAG,CAACC,OAAO,GAAGf,IAAI;EACpB;EAEA,OAAOc,GAAG,CAACC,OAAO;AACpB","names":["useRef","makeMutable","makeViewDescriptorsSet","sharableViewDescriptors","data","add","item","modify","descriptors","index","findIndex","descriptor","tag","push","remove","viewTag","splice","makeViewsRefSet","ref","current","items","Set","has","delete"],"sources":["/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/ViewDescriptorsSet.ts"],"sourcesContent":["import { useRef } from 'react';\nimport { makeMutable } from './core';\nimport { SharedValue } from './commonTypes';\nimport { Descriptor } from './hook/commonTypes';\n\nexport interface ViewRefSet<T> {\n  items: Set<T>;\n  add: (item: T) => void;\n  remove: (item: T) => void;\n}\n\nexport interface ViewDescriptorsSet {\n  sharableViewDescriptors: SharedValue<Descriptor[]>;\n  add: (item: Descriptor) => void;\n  remove: (viewTag: number) => void;\n}\n\nexport function makeViewDescriptorsSet(): ViewDescriptorsSet {\n  const sharableViewDescriptors = makeMutable<Descriptor[]>([]);\n  const data: ViewDescriptorsSet = {\n    sharableViewDescriptors,\n    add: (item: Descriptor) => {\n      sharableViewDescriptors.modify((descriptors: Descriptor[]) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === item.tag\n        );\n        if (index !== -1) {\n          descriptors[index] = item;\n        } else {\n          descriptors.push(item);\n        }\n        return descriptors;\n      });\n    },\n\n    remove: (viewTag: number) => {\n      sharableViewDescriptors.modify((descriptors: Descriptor[]) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === viewTag\n        );\n        if (index !== -1) {\n          descriptors.splice(index, 1);\n        }\n        return descriptors;\n      });\n    },\n  };\n  return data;\n}\n\nexport function makeViewsRefSet<T>(): ViewRefSet<T> {\n  const ref = useRef<ViewRefSet<T> | null>(null);\n  if (ref.current === null) {\n    const data: ViewRefSet<T> = {\n      items: new Set(),\n\n      add: (item: T) => {\n        if (data.items.has(item)) return;\n        data.items.add(item);\n      },\n\n      remove: (item: T) => {\n        data.items.delete(item);\n      },\n    };\n    ref.current = data;\n  }\n\n  return ref.current;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}