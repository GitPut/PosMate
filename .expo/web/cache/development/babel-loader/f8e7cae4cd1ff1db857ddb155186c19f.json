{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport ProductDisplayBtn from \"../../components/ProductDisplayBtn\";\nimport useWindowDimensions from \"../../components/useWindowDimensions\";\nimport Logo from \"../../assets/dpos-logo.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MenuScreen = function MenuScreen(_ref) {\n  var navigation = _ref.navigation,\n    catalog = _ref.catalog;\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height,\n    width = _useWindowDimensions.width;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    section = _useState2[0],\n    setsection = _useState2[1];\n  var InnerBlock = function InnerBlock() {\n    if (catalog.products) {\n      if (catalog.products.length > 0) {\n        if (!section) {\n          var currentProduct = catalog.products.filter(function (e) {\n            return e.catagory === catalog.categories[0] || e.category === catalog.categories[0];\n          });\n          if (currentProduct.length > 0) {\n            return currentProduct.map(function (product, index) {\n              return _jsx(ProductDisplayBtn, {\n                product: product,\n                productIndex: index,\n                navigation: navigation\n              }, index);\n            });\n          } else {\n            return _jsx(View, {\n              style: {\n                width: \"100%\",\n                height: height * 0.8,\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              },\n              children: _jsx(Text, {\n                style: {\n                  fontFamily: \"archivo-500\",\n                  color: \"rgba(74,74,74,1)\",\n                  fontSize: 20\n                },\n                children: \"This category has no products...\"\n              })\n            });\n          }\n        } else {\n          var correctProducts = catalog.products.filter(function (e) {\n            return e.catagory === section || e.category === section;\n          });\n          if (correctProducts.length > 0) {\n            return correctProducts.map(function (product, index) {\n              return _jsx(ProductDisplayBtn, {\n                product: product,\n                productIndex: index,\n                navigation: navigation\n              }, index);\n            });\n          } else {\n            return _jsx(View, {\n              style: {\n                width: \"100%\",\n                height: height * 0.8,\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              },\n              children: _jsx(Text, {\n                style: {\n                  fontFamily: \"archivo-500\",\n                  color: \"rgba(74,74,74,1)\",\n                  fontSize: 20\n                },\n                children: \"This category has no products...\"\n              })\n            });\n          }\n        }\n      }\n    }\n  };\n  var LogoImage = React.memo(function () {\n    return _jsx(Image, {\n      source: Logo,\n      style: {\n        width: 200,\n        height: 160,\n        resizeMode: \"contain\"\n      }\n    });\n  }, []);\n  var SectionSelector = function SectionSelector() {\n    var _catalog$categories;\n    return _jsxs(View, {\n      style: {\n        backgroundColor: \"rgba(31,35,48,1)\",\n        width: \"23%\",\n        height: \"100%\",\n        alignItems: \"center\",\n        alignSelf: \"center\"\n      },\n      children: [_jsx(LogoImage, {}), _jsx(ScrollView, {\n        contentContainerStyle: {\n          height: \"90%\",\n          alignItems: \"center\"\n        },\n        children: (_catalog$categories = catalog.categories) == null ? void 0 : _catalog$categories.map(function (category, index) {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              setsection(category);\n            },\n            style: {\n              padding: 10\n            },\n            children: _jsx(Text, {\n              style: [section === null && index === 0 && {\n                color: \"white\",\n                fontWeight: \"700\",\n                borderBottomWidth: 1,\n                borderBottomColor: \"white\"\n              } || section === category && {\n                color: \"white\",\n                fontWeight: \"700\",\n                borderBottomWidth: 1,\n                borderBottomColor: \"white\"\n              }, {\n                fontSize: 16,\n                color: \"white\"\n              }],\n              children: category\n            })\n          }, index);\n        })\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles({\n      height: height,\n      width: width\n    }).container,\n    children: [_jsx(SectionSelector, {}), _jsx(ScrollView, {\n      style: styles({\n        height: height,\n        width: width\n      }).scrollview,\n      contentContainerStyle: styles({\n        height: height,\n        width: width\n      }).wrapper,\n      children: _jsx(InnerBlock, {})\n    })]\n  });\n};\nexport default MenuScreen;\nvar styles = function styles(props) {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: \"white\",\n      height: \"100%\",\n      width: props.width * 0.7,\n      flexDirection: \"row\"\n    },\n    wrapper: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      paddingLeft: 50,\n      paddingRight: 50\n    },\n    scrollview: {\n      width: \"100%\"\n    }\n  });\n};","map":{"version":3,"names":["React","useState","ProductDisplayBtn","useWindowDimensions","Logo","MenuScreen","navigation","catalog","height","width","section","setsection","InnerBlock","products","length","currentProduct","filter","e","catagory","categories","category","map","product","index","justifyContent","alignItems","fontFamily","color","fontSize","correctProducts","LogoImage","memo","resizeMode","SectionSelector","backgroundColor","alignSelf","padding","fontWeight","borderBottomWidth","borderBottomColor","styles","container","scrollview","wrapper","props","StyleSheet","create","flexDirection","flexWrap","paddingLeft","paddingRight"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/MenuScreen.tsx"],"sourcesContent":["import {\n  Dimensions,\n  Image,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport ProductDisplayBtn from \"components/ProductDisplayBtn\";\nimport useWindowDimensions from \"components/useWindowDimensions\";\nimport Logo from \"assets/dpos-logo.png\";\n\nconst MenuScreen = ({ navigation, catalog }) => {\n  const { height, width } = useWindowDimensions();\n  const [section, setsection] = useState(null);\n\n  const InnerBlock = () => {\n    if (catalog.products) {\n      if (catalog.products.length > 0) {\n        if (!section) {\n          const currentProduct = catalog.products.filter(\n            (e) =>\n              e.catagory === catalog.categories[0] ||\n              e.category === catalog.categories[0]\n          );\n          if (currentProduct.length > 0) {\n            return currentProduct.map((product, index) => (\n              <ProductDisplayBtn\n                product={product}\n                productIndex={index}\n                key={index}\n                navigation={navigation}\n              />\n            ));\n          } else {\n            return (\n              <View\n                style={{\n                  width: \"100%\",\n                  height: height * 0.8,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Text\n                  style={{\n                    fontFamily: \"archivo-500\",\n                    color: \"rgba(74,74,74,1)\",\n                    fontSize: 20,\n                  }}\n                >\n                  This category has no products...\n                </Text>\n              </View>\n            );\n          }\n        } else {\n          const correctProducts = catalog.products.filter(\n            (e) => e.catagory === section || e.category === section\n          );\n\n          if (correctProducts.length > 0) {\n            return correctProducts.map((product, index) => (\n              <ProductDisplayBtn\n                product={product}\n                productIndex={index}\n                key={index}\n                navigation={navigation}\n              />\n            ));\n          } else {\n            return (\n              <View\n                style={{\n                  width: \"100%\",\n                  height: height * 0.8,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Text\n                  style={{\n                    fontFamily: \"archivo-500\",\n                    color: \"rgba(74,74,74,1)\",\n                    fontSize: 20,\n                  }}\n                >\n                  This category has no products...\n                </Text>\n              </View>\n            );\n          }\n        }\n      }\n    }\n  };\n\n  const LogoImage = React.memo(\n    () => (\n      <Image\n        source={Logo}\n        style={{ width: 200, height: 160, resizeMode: \"contain\" }}\n      />\n    ),\n    []\n  );\n\n  const SectionSelector = () => {\n    return (\n      <View\n        style={{\n          backgroundColor: \"rgba(31,35,48,1)\",\n          width: \"23%\",\n          height: \"100%\",\n          alignItems: \"center\",\n          alignSelf: \"center\",\n        }}\n      >\n        <LogoImage />\n        <ScrollView\n          contentContainerStyle={{\n            height: \"90%\",\n            alignItems: \"center\",\n          }}\n        >\n          {catalog.categories?.map((category, index) => {\n            return (\n              <TouchableOpacity\n                key={index}\n                onPress={() => {\n                  setsection(category);\n                }}\n                style={{ padding: 10 }}\n              >\n                <Text\n                  style={[\n                    (section === null &&\n                      index === 0 && {\n                        color: \"white\",\n                        fontWeight: \"700\",\n                        borderBottomWidth: 1,\n                        borderBottomColor: \"white\",\n                      }) ||\n                      (section === category && {\n                        color: \"white\",\n                        fontWeight: \"700\",\n                        borderBottomWidth: 1,\n                        borderBottomColor: \"white\",\n                      }),\n                    { fontSize: 16, color: \"white\" },\n                  ]}\n                >\n                  {category}\n                </Text>\n              </TouchableOpacity>\n            );\n          })}\n        </ScrollView>\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles({ height, width }).container}>\n      <SectionSelector />\n      <ScrollView\n        style={styles({ height, width }).scrollview}\n        contentContainerStyle={styles({ height, width }).wrapper}\n      >\n        <InnerBlock />\n        {/* <Button\n          onPress={() => localStorage.removeItem(\"tutorialComplete\")}\n          title=\"Reset help\"\n        /> */}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default MenuScreen;\n\nconst styles = (props) =>\n  StyleSheet.create({\n    container: {\n      backgroundColor: \"white\",\n      //flex: 2,\n      height: \"100%\",\n      width: props.width * 0.7,\n      flexDirection: \"row\",\n    },\n    wrapper: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      paddingLeft: 50,\n      paddingRight: 50,\n    },\n    scrollview: {\n      width: \"100%\",\n    },\n  });\n"],"mappings":";;;;;;;AASA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB;AACxB,OAAOC,mBAAmB;AAC1B,OAAOC,IAAI;AAA6B;AAAA;AAExC,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAAgC;EAAA,IAA1BC,UAAU,QAAVA,UAAU;IAAEC,OAAO,QAAPA,OAAO;EACvC,2BAA0BJ,mBAAmB,EAAE;IAAvCK,MAAM,wBAANA,MAAM;IAAEC,KAAK,wBAALA,KAAK;EACrB,gBAA8BR,QAAQ,CAAC,IAAI,CAAC;IAAA;IAArCS,OAAO;IAAEC,UAAU;EAE1B,IAAMC,UAAU,GAAG,SAAbA,UAAU,GAAS;IACvB,IAAIL,OAAO,CAACM,QAAQ,EAAE;MACpB,IAAIN,OAAO,CAACM,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;QAC/B,IAAI,CAACJ,OAAO,EAAE;UACZ,IAAMK,cAAc,GAAGR,OAAO,CAACM,QAAQ,CAACG,MAAM,CAC5C,UAACC,CAAC;YAAA,OACAA,CAAC,CAACC,QAAQ,KAAKX,OAAO,CAACY,UAAU,CAAC,CAAC,CAAC,IACpCF,CAAC,CAACG,QAAQ,KAAKb,OAAO,CAACY,UAAU,CAAC,CAAC,CAAC;UAAA,EACvC;UACD,IAAIJ,cAAc,CAACD,MAAM,GAAG,CAAC,EAAE;YAC7B,OAAOC,cAAc,CAACM,GAAG,CAAC,UAACC,OAAO,EAAEC,KAAK;cAAA,OACvC,KAAC,iBAAiB;gBAChB,OAAO,EAAED,OAAQ;gBACjB,YAAY,EAAEC,KAAM;gBAEpB,UAAU,EAAEjB;cAAW,GADlBiB,KAAK,CAEV;YAAA,CACH,CAAC;UACJ,CAAC,MAAM;YACL,OACE,KAAC,IAAI;cACH,KAAK,EAAE;gBACLd,KAAK,EAAE,MAAM;gBACbD,MAAM,EAAEA,MAAM,GAAG,GAAG;gBACpBgB,cAAc,EAAE,QAAQ;gBACxBC,UAAU,EAAE;cACd,CAAE;cAAA,UAEF,KAAC,IAAI;gBACH,KAAK,EAAE;kBACLC,UAAU,EAAE,aAAa;kBACzBC,KAAK,EAAE,kBAAkB;kBACzBC,QAAQ,EAAE;gBACZ,CAAE;gBAAA,UACH;cAED;YAAO,EACF;UAEX;QACF,CAAC,MAAM;UACL,IAAMC,eAAe,GAAGtB,OAAO,CAACM,QAAQ,CAACG,MAAM,CAC7C,UAACC,CAAC;YAAA,OAAKA,CAAC,CAACC,QAAQ,KAAKR,OAAO,IAAIO,CAAC,CAACG,QAAQ,KAAKV,OAAO;UAAA,EACxD;UAED,IAAImB,eAAe,CAACf,MAAM,GAAG,CAAC,EAAE;YAC9B,OAAOe,eAAe,CAACR,GAAG,CAAC,UAACC,OAAO,EAAEC,KAAK;cAAA,OACxC,KAAC,iBAAiB;gBAChB,OAAO,EAAED,OAAQ;gBACjB,YAAY,EAAEC,KAAM;gBAEpB,UAAU,EAAEjB;cAAW,GADlBiB,KAAK,CAEV;YAAA,CACH,CAAC;UACJ,CAAC,MAAM;YACL,OACE,KAAC,IAAI;cACH,KAAK,EAAE;gBACLd,KAAK,EAAE,MAAM;gBACbD,MAAM,EAAEA,MAAM,GAAG,GAAG;gBACpBgB,cAAc,EAAE,QAAQ;gBACxBC,UAAU,EAAE;cACd,CAAE;cAAA,UAEF,KAAC,IAAI;gBACH,KAAK,EAAE;kBACLC,UAAU,EAAE,aAAa;kBACzBC,KAAK,EAAE,kBAAkB;kBACzBC,QAAQ,EAAE;gBACZ,CAAE;gBAAA,UACH;cAED;YAAO,EACF;UAEX;QACF;MACF;IACF;EACF,CAAC;EAED,IAAME,SAAS,GAAG9B,KAAK,CAAC+B,IAAI,CAC1B;IAAA,OACE,KAAC,KAAK;MACJ,MAAM,EAAE3B,IAAK;MACb,KAAK,EAAE;QAAEK,KAAK,EAAE,GAAG;QAAED,MAAM,EAAE,GAAG;QAAEwB,UAAU,EAAE;MAAU;IAAE,EAC1D;EAAA,CACH,EACD,EAAE,CACH;EAED,IAAMC,eAAe,GAAG,SAAlBA,eAAe,GAAS;IAAA;IAC5B,OACE,MAAC,IAAI;MACH,KAAK,EAAE;QACLC,eAAe,EAAE,kBAAkB;QACnCzB,KAAK,EAAE,KAAK;QACZD,MAAM,EAAE,MAAM;QACdiB,UAAU,EAAE,QAAQ;QACpBU,SAAS,EAAE;MACb,CAAE;MAAA,WAEF,KAAC,SAAS,KAAG,EACb,KAAC,UAAU;QACT,qBAAqB,EAAE;UACrB3B,MAAM,EAAE,KAAK;UACbiB,UAAU,EAAE;QACd,CAAE;QAAA,iCAEDlB,OAAO,CAACY,UAAU,qBAAlB,oBAAoBE,GAAG,CAAC,UAACD,QAAQ,EAAEG,KAAK,EAAK;UAC5C,OACE,KAAC,gBAAgB;YAEf,OAAO,EAAE,mBAAM;cACbZ,UAAU,CAACS,QAAQ,CAAC;YACtB,CAAE;YACF,KAAK,EAAE;cAAEgB,OAAO,EAAE;YAAG,CAAE;YAAA,UAEvB,KAAC,IAAI;cACH,KAAK,EAAE,CACJ1B,OAAO,KAAK,IAAI,IACfa,KAAK,KAAK,CAAC,IAAI;gBACbI,KAAK,EAAE,OAAO;gBACdU,UAAU,EAAE,KAAK;gBACjBC,iBAAiB,EAAE,CAAC;gBACpBC,iBAAiB,EAAE;cACrB,CAAC,IACA7B,OAAO,KAAKU,QAAQ,IAAI;gBACvBO,KAAK,EAAE,OAAO;gBACdU,UAAU,EAAE,KAAK;gBACjBC,iBAAiB,EAAE,CAAC;gBACpBC,iBAAiB,EAAE;cACrB,CAAE,EACJ;gBAAEX,QAAQ,EAAE,EAAE;gBAAED,KAAK,EAAE;cAAQ,CAAC,CAChC;cAAA,UAEDP;YAAQ;UACJ,GAzBFG,KAAK,CA0BO;QAEvB,CAAC;MAAC,EACS;IAAA,EACR;EAEX,CAAC;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAEiB,MAAM,CAAC;MAAEhC,MAAM,EAANA,MAAM;MAAEC,KAAK,EAALA;IAAM,CAAC,CAAC,CAACgC,SAAU;IAAA,WAC/C,KAAC,eAAe,KAAG,EACnB,KAAC,UAAU;MACT,KAAK,EAAED,MAAM,CAAC;QAAEhC,MAAM,EAANA,MAAM;QAAEC,KAAK,EAALA;MAAM,CAAC,CAAC,CAACiC,UAAW;MAC5C,qBAAqB,EAAEF,MAAM,CAAC;QAAEhC,MAAM,EAANA,MAAM;QAAEC,KAAK,EAALA;MAAM,CAAC,CAAC,CAACkC,OAAQ;MAAA,UAEzD,KAAC,UAAU;IAAG,EAKH;EAAA,EACR;AAEX,CAAC;AAED,eAAetC,UAAU;AAEzB,IAAMmC,MAAM,GAAG,SAATA,MAAM,CAAII,KAAK;EAAA,OACnBC,UAAU,CAACC,MAAM,CAAC;IAChBL,SAAS,EAAE;MACTP,eAAe,EAAE,OAAO;MAExB1B,MAAM,EAAE,MAAM;MACdC,KAAK,EAAEmC,KAAK,CAACnC,KAAK,GAAG,GAAG;MACxBsC,aAAa,EAAE;IACjB,CAAC;IACDJ,OAAO,EAAE;MACPI,aAAa,EAAE,KAAK;MACpBC,QAAQ,EAAE,MAAM;MAChBxB,cAAc,EAAE,eAAe;MAC/ByB,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE;IAChB,CAAC;IACDR,UAAU,EAAE;MACVjC,KAAK,EAAE;IACT;EACF,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module"}