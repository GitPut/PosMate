{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Table } from \"antd\";\nimport \"./antd.css\";\nimport { itemRender, onShowSizeChange } from \"../components/pagination\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Datatable = function Datatable(_ref) {\n  var props = _ref.props,\n    columns = _ref.columns,\n    dataSource = _ref.dataSource;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedRowKeys = _useState2[0],\n    setSelectedRowKeys = _useState2[1];\n  var onSelectChange = function onSelectChange(newSelectedRowKeys) {\n    console.log(\"selectedRowKeys changed: \", selectedRowKeys);\n    setSelectedRowKeys(newSelectedRowKeys);\n  };\n  var rowSelection = {\n    selectedRowKeys: selectedRowKeys,\n    onChange: onSelectChange\n  };\n  return _jsx(Table, {\n    className: \"table datanew dataTable no-footer\",\n    rowSelection: rowSelection,\n    columns: columns,\n    dataSource: dataSource,\n    pagination: {\n      total: dataSource.length,\n      showTotal: function showTotal(total, range) {\n        return \" \" + range[0] + \" to \" + range[1] + \" of \" + total + \" items\";\n      },\n      showSizeChanger: true,\n      onShowSizeChange: onShowSizeChange\n    },\n    rowKey: function rowKey(record) {\n      return record.id;\n    }\n  }, props);\n};\nexport default Datatable;","map":{"version":3,"names":["React","useState","Table","itemRender","onShowSizeChange","Datatable","props","columns","dataSource","selectedRowKeys","setSelectedRowKeys","onSelectChange","newSelectedRowKeys","console","log","rowSelection","onChange","total","length","showTotal","range","showSizeChanger","record","id"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/main/EntryFile/datatable.jsx"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport { Table } from \"antd\";\r\nimport \"./antd.css\";\r\nimport { itemRender, onShowSizeChange } from \"../components/pagination\";\r\n\r\nconst Datatable = ({ props, columns, dataSource }) => {\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const onSelectChange = (newSelectedRowKeys) => {\r\n    console.log(\"selectedRowKeys changed: \", selectedRowKeys);\r\n    setSelectedRowKeys(newSelectedRowKeys);\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onChange: onSelectChange,\r\n  };\r\n  return (\r\n    <Table\r\n      key={props}\r\n      className=\"table datanew dataTable no-footer\"\r\n      rowSelection={rowSelection}\r\n      columns={columns}\r\n      dataSource={dataSource}\r\n      pagination={{\r\n        total: dataSource.length,\r\n        showTotal: (total, range) =>\r\n          ` ${range[0]} to ${range[1]} of ${total} items`,\r\n        showSizeChanger: true,\r\n        onShowSizeChange: onShowSizeChange,\r\n      }}\r\n      rowKey={(record) => record.id}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Datatable;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,SAASC,KAAK,QAAQ,MAAM;AAC5B;AACA,SAASC,UAAU,EAAEC,gBAAgB;AAAmC;AAExE,IAAMC,SAAS,GAAG,SAAZA,SAAS,OAAuC;EAAA,IAAjCC,KAAK,QAALA,KAAK;IAAEC,OAAO,QAAPA,OAAO;IAAEC,UAAU,QAAVA,UAAU;EAC7C,gBAA8CP,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnDQ,eAAe;IAAEC,kBAAkB;EAC1C,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,kBAAkB,EAAK;IAC7CC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEL,eAAe,CAAC;IACzDC,kBAAkB,CAACE,kBAAkB,CAAC;EACxC,CAAC;EAED,IAAMG,YAAY,GAAG;IACnBN,eAAe,EAAfA,eAAe;IACfO,QAAQ,EAAEL;EACZ,CAAC;EACD,OACE,KAAC,KAAK;IAEJ,SAAS,EAAC,mCAAmC;IAC7C,YAAY,EAAEI,YAAa;IAC3B,OAAO,EAAER,OAAQ;IACjB,UAAU,EAAEC,UAAW;IACvB,UAAU,EAAE;MACVS,KAAK,EAAET,UAAU,CAACU,MAAM;MACxBC,SAAS,EAAE,mBAACF,KAAK,EAAEG,KAAK;QAAA,aAClBA,KAAK,CAAC,CAAC,CAAC,YAAOA,KAAK,CAAC,CAAC,CAAC,YAAOH,KAAK;MAAA,CAAQ;MACjDI,eAAe,EAAE,IAAI;MACrBjB,gBAAgB,EAAEA;IACpB,CAAE;IACF,MAAM,EAAE,gBAACkB,MAAM;MAAA,OAAKA,MAAM,CAACC,EAAE;IAAA;EAAC,GAZzBjB,KAAK,CAaV;AAEN,CAAC;AAED,eAAeD,SAAS"},"metadata":{},"sourceType":"module"}