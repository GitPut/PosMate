{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport ReactSelect from \"react-select\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar InnerOn = function InnerOn(_ref) {\n  var _e$selectedCaseList;\n  var item = _ref.item,\n    newProduct = _ref.newProduct,\n    newProductOptions = _ref.newProductOptions,\n    index = _ref.index,\n    e = _ref.e,\n    sete = _ref.sete;\n  var _useState = useState(structuredClone(item.optionsList)),\n    _useState2 = _slicedToArray(_useState, 2),\n    testMap = _useState2[0],\n    settestMap = _useState2[1];\n  var optionLbls = newProduct.options.map(function (el) {\n    if (el.label !== e.label && el.label !== null) {\n      return el.label;\n    }\n  });\n  if (e.selectedCaseKey || e.selectedCaseValue) {\n    newProductOptions.current[index].selectedCaseList = [{\n      selectedCaseKey: e.selectedCaseKey,\n      selectedCaseValue: e.selectedCaseValue\n    }];\n    newProductOptions.current[index].selectedCaseKey = null;\n    newProductOptions.current[index].selectedCaseValue = null;\n    sete(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        selectedCaseList: [{\n          selectedCaseKey: null,\n          selectedCaseValue: null\n        }]\n      });\n    });\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsx(TextInput, {\n      placeholder: \"Enter Option Label\",\n      onChangeText: function onChangeText(val) {\n        sete(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            label: val\n          });\n        });\n        newProductOptions.current[index].label = val;\n      },\n      value: e.label,\n      style: {\n        marginBottom: 15\n      },\n      label: \"Enter Option Label\",\n      variant: \"outlined\",\n      color: \"black\"\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n        paddingBottom: 20,\n        borderBottomColor: \"grey\",\n        borderBottomWidth: 1\n      },\n      children: [_jsx(ReactSelect, {\n        options: [{\n          value: \"Multi Choice\",\n          label: \"Multi Choice\"\n        }, {\n          value: \"Dropdown\",\n          label: \"Dropdown\"\n        }],\n        value: e.optionType && {\n          value: e.optionType,\n          label: e.optionType\n        },\n        onChange: function onChange(val) {\n          if (e.optionType) {\n            newProductOptions.current[index].optionType = val.value;\n          } else {\n            newProductOptions.current[index] = _objectSpread(_objectSpread({}, e), {}, {\n              optionType: val.value\n            });\n          }\n          sete(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              optionType: val.value\n            });\n          });\n        },\n        placeholder: \"Choose Option Type\",\n        menuPortalTarget: document.body,\n        styles: {\n          menuPortal: function menuPortal(base) {\n            return _objectSpread(_objectSpread({}, base), {}, {\n              zIndex: 9999\n            });\n          },\n          control: function control(provided, state) {\n            return _objectSpread(_objectSpread({}, provided), {}, {\n              background: \"#fff\",\n              borderColor: \"#9e9e9e\",\n              minHeight: \"52px\",\n              height: \"52px\",\n              boxShadow: state.isFocused ? null : null\n            });\n          },\n          valueContainer: function valueContainer(provided, state) {\n            return _objectSpread(_objectSpread({}, provided), {}, {\n              height: \"52px\",\n              padding: \"0 6px\"\n            });\n          },\n          input: function input(provided, state) {\n            return _objectSpread(_objectSpread({}, provided), {}, {\n              margin: \"0px\"\n            });\n          },\n          indicatorSeparator: function indicatorSeparator(state) {\n            return {\n              display: \"none\"\n            };\n          },\n          indicatorsContainer: function indicatorsContainer(provided, state) {\n            return _objectSpread(_objectSpread({}, provided), {}, {\n              height: \"52px\"\n            });\n          }\n        },\n        menuPlacement: \"auto\",\n        menuPosition: \"fixed\"\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Selection Limit or leave empty\",\n        onChangeText: function onChangeText(val) {\n          sete(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              numOfSelectable: val\n            });\n          });\n          newProductOptions.current[index].numOfSelectable = val;\n        },\n        value: e.numOfSelectable,\n        label: \"Enter Selection Limit\",\n        variant: \"outlined\",\n        style: {\n          width: \"48%\"\n        },\n        color: \"black\"\n      })]\n    }), testMap.map(function (eInnerListStart, indexInnerList) {\n      var eInnerList = structuredClone(eInnerListStart);\n      return _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          paddingTop: 20,\n          alignItems: \"center\",\n          width: \"100%\",\n          justifyContent: \"space-between\"\n        },\n        children: [_jsx(TextInput, {\n          placeholder: \"Enter Option Selection\",\n          onChangeText: function onChangeText(val) {\n            var clone = structuredClone(testMap);\n            clone[indexInnerList].label = val;\n            newProductOptions.current[index].optionsList = clone;\n            settestMap(clone);\n          },\n          value: eInnerList.label,\n          label: \"Enter Option Selection\",\n          variant: \"outlined\",\n          color: \"black\",\n          style: {\n            width: \"45%\"\n          }\n        }), _jsx(TextInput, {\n          placeholder: \"Enter price increase\",\n          onChangeText: function onChangeText(val) {\n            var clone = structuredClone(testMap);\n            clone[indexInnerList].priceIncrease = val;\n            newProductOptions.current[index].optionsList = clone;\n            settestMap(clone);\n          },\n          value: eInnerList.priceIncrease,\n          style: {\n            width: \"45%\"\n          },\n          label: \"Enter Price Increase\",\n          variant: \"outlined\",\n          color: \"black\"\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 40,\n            width: 40,\n            borderRadius: 20,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            var clone = structuredClone(testMap);\n            clone.splice(indexInnerList, 1);\n            newProductOptions.current[index].optionsList = clone;\n            settestMap(clone);\n          },\n          children: _jsx(Feather, {\n            name: \"x\",\n            size: 30,\n            color: \"white\"\n          })\n        })]\n      });\n    }), _jsx(Button, {\n      title: \"Add Option Choice\",\n      onPress: function onPress() {\n        var clone = structuredClone(testMap);\n        clone.push({\n          label: null,\n          priceIncrease: null\n        });\n        newProductOptions.current[index].optionsList = clone;\n        settestMap(clone);\n      },\n      style: {\n        marginBottom: 25,\n        marginTop: 25,\n        backgroundColor: \"#4050B5\"\n      },\n      disabled: testMap.length > 0 && testMap[testMap.length - 1].label === null\n    }), (_e$selectedCaseList = e.selectedCaseList) == null ? void 0 : _e$selectedCaseList.map(function (ifStatement, indexOfIf) {\n      var local = newProduct.options.filter(function (localE) {\n        return localE.label == ifStatement.selectedCaseKey;\n      });\n      var optionLblsValuesLocal = local.length > 0 ? local[0].optionsList.map(function (el) {\n        return el.label;\n      }) : [];\n      return _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          marginBottom: 25\n        },\n        children: [_jsx(DropDown, {\n          label: \"Show if...\",\n          options: optionLbls,\n          setValue: function setValue(val) {\n            newProductOptions.current[index].selectedCaseList[indexOfIf].selectedCaseKey = val;\n            sete(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                selectedCaseList: newProductOptions.current[index].selectedCaseList\n              });\n            });\n          },\n          value: ifStatement.selectedCaseKey,\n          style: {\n            marginBottom: 25\n          }\n        }), _jsx(Text, {\n          children: \"\\\"=\\\"\"\n        }), _jsx(DropDown, {\n          label: \"Show if...\",\n          options: optionLblsValuesLocal,\n          setValue: function setValue(val) {\n            newProductOptions.current[index].selectedCaseList[indexOfIf].selectedCaseValue = val;\n            sete(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                selectedCaseList: newProductOptions.current[index].selectedCaseList\n              });\n            });\n          },\n          value: ifStatement.selectedCaseValue,\n          style: {\n            marginBottom: 25\n          }\n        }), _jsx(Button, {\n          title: \"Remove\",\n          onPress: function onPress() {\n            newProductOptions.current[index].selectedCaseList.splice(indexOfIf, 1);\n            sete(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                selectedCaseList: newProductOptions.current[index].selectedCaseList\n              });\n            });\n          },\n          style: {\n            backgroundColor: \"#4050B5\"\n          }\n        })]\n      });\n    }), optionLbls.length > 1 && _jsx(Button, {\n      title: \"Add If Statement\",\n      onPress: function onPress() {\n        if (!newProductOptions.current[index].selectedCaseList) {\n          newProductOptions.current[index].selectedCaseList = [{\n            selectedCaseKey: null,\n            selectedCaseValue: null\n          }];\n          sete(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              selectedCaseList: [{\n                selectedCaseKey: null,\n                selectedCaseValue: null\n              }]\n            });\n          });\n        } else {\n          newProductOptions.current[index].selectedCaseList.push({\n            selectedCaseKey: null,\n            selectedCaseValue: null\n          });\n          sete(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              selectedCaseList: newProductOptions.current[index].selectedCaseList\n            });\n          });\n        }\n      },\n      style: {\n        backgroundColor: \"#4050B5\"\n      }\n    })]\n  });\n};\nvar OptionView = function OptionView(_ref2) {\n  var item = _ref2.item,\n    index = _ref2.index,\n    setnewProduct = _ref2.setnewProduct,\n    newProduct = _ref2.newProduct,\n    newProductOptions = _ref2.newProductOptions,\n    indexOn = _ref2.indexOn,\n    setindexOn = _ref2.setindexOn;\n  var _useState3 = useState(structuredClone(item)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    e = _useState4[0],\n    sete = _useState4[1];\n\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: {\n        margin: 15,\n        backgroundColor: \"lightgrey\",\n        borderRadius: 10\n      },\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return indexOn !== index ? setindexOn(index) : setindexOn(null);\n        },\n        style: {\n          backgroundColor: \"grey\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          padding: 5,\n          borderTopLeftRadius: 10,\n          borderTopRightRadius: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            width: \"50%\",\n            paddingLeft: 5,\n            fontSize: 16,\n            color: \"white\",\n            fontFamily: \"archivo-600\"\n          },\n          children: item.label ? item.label : \"New Option\"\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            function moveItem(from, to) {\n              var f = newProductOptions.current.splice(from, 1)[0];\n              newProductOptions.current.splice(to, 0, f);\n            }\n            moveItem(index, index + 1);\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"chevron-down\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            function moveItem(from, to) {\n              var f = newProductOptions.current.splice(from, 1)[0];\n              newProductOptions.current.splice(to, 0, f);\n            }\n            moveItem(index, index - 1);\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"chevron-up\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            newProductOptions.current.push(_objectSpread(_objectSpread({}, item), {}, {\n              label: item.label + \" Copy\"\n            }));\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(Feather, {\n            name: \"copy\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            newProductOptions.current.splice(index, 1);\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(Feather, {\n            name: \"x\",\n            size: 32,\n            color: \"white\"\n          })\n        })]\n      }), indexOn === index && _jsx(View, {\n        style: {\n          padding: 20\n        },\n        children: _jsx(InnerOn, {\n          item: item,\n          index: index,\n          newProduct: newProduct,\n          newProductOptions: newProductOptions,\n          e: e,\n          sete: sete\n        })\n      })]\n    })\n  });\n};\nexport default OptionView;","map":{"version":3,"names":["React","useState","Button","TextInput","DropDown","MaterialCommunityIcons","Feather","ReactSelect","InnerOn","item","newProduct","newProductOptions","index","e","sete","structuredClone","optionsList","testMap","settestMap","optionLbls","options","map","el","label","selectedCaseKey","selectedCaseValue","current","selectedCaseList","prev","val","prevState","marginBottom","flexDirection","alignItems","alignSelf","justifyContent","width","paddingBottom","borderBottomColor","borderBottomWidth","value","optionType","document","body","menuPortal","base","zIndex","control","provided","state","background","borderColor","minHeight","height","boxShadow","isFocused","valueContainer","padding","input","margin","indicatorSeparator","display","indicatorsContainer","numOfSelectable","eInnerListStart","indexInnerList","eInnerList","paddingTop","clone","priceIncrease","borderRadius","backgroundColor","splice","push","marginTop","length","ifStatement","indexOfIf","local","filter","localE","optionLblsValuesLocal","OptionView","setnewProduct","indexOn","setindexOn","borderTopLeftRadius","borderTopRightRadius","paddingLeft","fontSize","color","fontFamily","moveItem","from","to","f"],"sources":["/Users/peterputros/Desktop/PosMate/components/OptionView.tsx"],"sourcesContent":["import { View, Text, TouchableOpacity } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport ReactSelect from \"react-select\";\n\nconst InnerOn = ({ item, newProduct, newProductOptions, index, e, sete }) => {\n  const [testMap, settestMap] = useState(structuredClone(item.optionsList));\n  var optionLbls = newProduct.options.map(function (el) {\n    if (el.label !== e.label && el.label !== null) {\n      return el.label;\n    }\n  });\n\n  if (e.selectedCaseKey || e.selectedCaseValue) {\n    newProductOptions.current[index].selectedCaseList = [\n      {\n        selectedCaseKey: e.selectedCaseKey,\n        selectedCaseValue: e.selectedCaseValue,\n      },\n    ];\n    newProductOptions.current[index].selectedCaseKey = null;\n    newProductOptions.current[index].selectedCaseValue = null;\n    sete((prev) => ({\n      ...prev,\n      selectedCaseList: [{ selectedCaseKey: null, selectedCaseValue: null }],\n    }));\n  }\n\n  return (\n    <>\n      <TextInput\n        placeholder=\"Enter Option Label\"\n        onChangeText={(val) => {\n          sete((prevState) => ({ ...prevState, label: val }));\n          newProductOptions.current[index].label = val;\n        }}\n        value={e.label}\n        style={{ marginBottom: 15 }}\n        label=\"Enter Option Label\"\n        variant=\"outlined\"\n        color=\"black\"\n      />\n      {/* optionType */}\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          alignSelf: \"center\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          paddingBottom: 20,\n          borderBottomColor: \"grey\",\n          borderBottomWidth: 1,\n        }}\n      >\n        <ReactSelect\n          options={[\n            { value: \"Multi Choice\", label: \"Multi Choice\" },\n            { value: \"Dropdown\", label: \"Dropdown\" },\n          ]}\n          value={\n            e.optionType && {\n              value: e.optionType,\n              label: e.optionType,\n            }\n          }\n          onChange={(val) => {\n            if (e.optionType) {\n              newProductOptions.current[index].optionType = val.value;\n            } else {\n              newProductOptions.current[index] = {\n                ...e,\n                optionType: val.value,\n              };\n            }\n            sete((prevState) => ({\n              ...prevState,\n              optionType: val.value,\n            }));\n          }}\n          placeholder={\"Choose Option Type\"}\n          menuPortalTarget={document.body}\n          styles={{\n            menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n            control: (provided, state) => ({\n              ...provided,\n              background: \"#fff\",\n              borderColor: \"#9e9e9e\",\n              minHeight: \"52px\",\n              height: \"52px\",\n              boxShadow: state.isFocused ? null : null,\n            }),\n\n            valueContainer: (provided, state) => ({\n              ...provided,\n              height: \"52px\",\n              padding: \"0 6px\",\n            }),\n\n            input: (provided, state) => ({\n              ...provided,\n              margin: \"0px\",\n            }),\n            indicatorSeparator: (state) => ({\n              display: \"none\",\n            }),\n            indicatorsContainer: (provided, state) => ({\n              ...provided,\n              height: \"52px\",\n            }),\n          }}\n          menuPlacement=\"auto\"\n          menuPosition=\"fixed\"\n        />\n        <TextInput\n          placeholder=\"Enter Selection Limit or leave empty\"\n          onChangeText={(val) => {\n            sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n            newProductOptions.current[index].numOfSelectable = val;\n          }}\n          value={e.numOfSelectable}\n          label=\"Enter Selection Limit\"\n          variant=\"outlined\"\n          style={{ width: \"48%\" }}\n          color=\"black\"\n        />\n      </View>\n      {testMap.map((eInnerListStart, indexInnerList) => {\n        const eInnerList = structuredClone(eInnerListStart);\n        return (\n          <View\n            style={{\n              flexDirection: \"row\",\n              paddingTop: 20,\n              alignItems: \"center\",\n              width: \"100%\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <TextInput\n              placeholder=\"Enter Option Selection\"\n              onChangeText={(val) => {\n                const clone = structuredClone(testMap);\n                clone[indexInnerList].label = val;\n                newProductOptions.current[index].optionsList = clone;\n                settestMap(clone);\n              }}\n              value={eInnerList.label}\n              label=\"Enter Option Selection\"\n              variant=\"outlined\"\n              color=\"black\"\n              style={{ width: \"45%\" }}\n            />\n            <TextInput\n              placeholder=\"Enter price increase\"\n              onChangeText={(val) => {\n                const clone = structuredClone(testMap);\n                clone[indexInnerList].priceIncrease = val;\n                newProductOptions.current[index].optionsList = clone;\n                settestMap(clone);\n              }}\n              value={eInnerList.priceIncrease}\n              style={{ width: \"45%\" }}\n              label=\"Enter Price Increase\"\n              variant=\"outlined\"\n              color=\"black\"\n            />\n            <TouchableOpacity\n              style={{\n                height: 40,\n                width: 40,\n                borderRadius: 20,\n                backgroundColor: \"grey\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n              onPress={() => {\n                const clone = structuredClone(testMap);\n                clone.splice(indexInnerList, 1);\n                newProductOptions.current[index].optionsList = clone;\n                settestMap(clone);\n              }}\n            >\n              <Feather name=\"x\" size={30} color=\"white\" />\n            </TouchableOpacity>\n          </View>\n        );\n      })}\n      <Button\n        title=\"Add Option Choice\"\n        onPress={() => {\n          const clone = structuredClone(testMap);\n          clone.push({\n            label: null,\n            priceIncrease: null,\n          });\n          newProductOptions.current[index].optionsList = clone;\n          settestMap(clone);\n        }}\n        style={{\n          marginBottom: 25,\n          marginTop: 25,\n          backgroundColor: \"#4050B5\",\n        }}\n        disabled={\n          testMap.length > 0 && testMap[testMap.length - 1].label === null\n        }\n      />\n      {e.selectedCaseList?.map((ifStatement, indexOfIf) => {\n        const local = newProduct.options.filter(\n          (localE) => localE.label == ifStatement.selectedCaseKey\n        );\n        const optionLblsValuesLocal =\n          local.length > 0\n            ? local[0].optionsList.map(function (el) {\n                return el.label;\n              })\n            : [];\n\n        return (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              marginBottom: 25,\n            }}\n          >\n            <DropDown\n              label=\"Show if...\"\n              options={optionLbls}\n              setValue={(val) => {\n                // sete((prevState) => ({\n                //   ...prevState,\n                //   selectedCaseKey: val,\n                // }));\n                // newProductOptions.current[index].selectedCaseKey = val;\n                newProductOptions.current[index].selectedCaseList[\n                  indexOfIf\n                ].selectedCaseKey = val;\n                sete((prev) => ({\n                  ...prev,\n                  selectedCaseList:\n                    newProductOptions.current[index].selectedCaseList,\n                }));\n              }}\n              value={ifStatement.selectedCaseKey}\n              style={{ marginBottom: 25 }}\n            />\n            <Text>\"=\"</Text>\n            <DropDown\n              label=\"Show if...\"\n              options={optionLblsValuesLocal}\n              setValue={(val) => {\n                // sete((prevState) => ({\n                //   ...prevState,\n                //   selectedCaseValue: val,\n                // }));\n                // newProductOptions.current[index].selectedCaseValue = val;\n                newProductOptions.current[index].selectedCaseList[\n                  indexOfIf\n                ].selectedCaseValue = val;\n                sete((prev) => ({\n                  ...prev,\n                  selectedCaseList:\n                    newProductOptions.current[index].selectedCaseList,\n                }));\n              }}\n              value={ifStatement.selectedCaseValue}\n              style={{ marginBottom: 25 }}\n            />\n            <Button\n              title=\"Remove\"\n              onPress={() => {\n                newProductOptions.current[index].selectedCaseList.splice(\n                  indexOfIf,\n                  1\n                );\n                sete((prev) => ({\n                  ...prev,\n                  selectedCaseList:\n                    newProductOptions.current[index].selectedCaseList,\n                }));\n              }}\n              style={{ backgroundColor: \"#4050B5\" }}\n            />\n          </View>\n        );\n      })}\n      {optionLbls.length > 1 && (\n        <Button\n          title=\"Add If Statement\"\n          onPress={() => {\n            if (!newProductOptions.current[index].selectedCaseList) {\n              newProductOptions.current[index].selectedCaseList = [\n                {\n                  selectedCaseKey: null,\n                  selectedCaseValue: null,\n                },\n              ];\n              sete((prev) => ({\n                ...prev,\n                selectedCaseList: [\n                  { selectedCaseKey: null, selectedCaseValue: null },\n                ],\n              }));\n            } else {\n              newProductOptions.current[index].selectedCaseList.push({\n                selectedCaseKey: null,\n                selectedCaseValue: null,\n              });\n              sete((prev) => ({\n                ...prev,\n                selectedCaseList:\n                  newProductOptions.current[index].selectedCaseList,\n              }));\n            }\n          }}\n          style={{ backgroundColor: \"#4050B5\" }}\n        />\n      )}\n    </>\n  );\n};\n\nconst OptionView = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n  indexOn,\n  setindexOn,\n}) => {\n  const [e, sete] = useState(structuredClone(item));\n  // const [testMap, settestMap] = useState(structuredClone(item.optionsList));\n  // var optionLbls = newProduct.options.map(function (el) {\n  //   if (el.label !== e.label && el.label !== null) {\n  //     return el.label;\n  //   }\n  // });\n\n  // if (e.selectedCaseKey || e.selectedCaseValue) {\n  //   newProductOptions.current[index].selectedCaseList = [\n  //     {\n  //       selectedCaseKey: e.selectedCaseKey,\n  //       selectedCaseValue: e.selectedCaseValue,\n  //     },\n  //   ];\n  //   newProductOptions.current[index].selectedCaseKey = null;\n  //   newProductOptions.current[index].selectedCaseValue = null;\n  //   sete((prev) => ({\n  //     ...prev,\n  //     selectedCaseList: [{ selectedCaseKey: null, selectedCaseValue: null }],\n  //   }));\n  // }\n\n  return (\n    <View>\n      <View\n        style={{\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n          borderRadius: 10,\n        }}\n      >\n        <TouchableOpacity\n          onPress={() =>\n            indexOn !== index ? setindexOn(index) : setindexOn(null)\n          }\n          style={{\n            backgroundColor: \"grey\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            padding: 5,\n            borderTopLeftRadius: 10,\n            borderTopRightRadius: 10,\n          }}\n        >\n          <Text\n            style={{\n              width: \"50%\",\n              paddingLeft: 5,\n              fontSize: 16,\n              color: \"white\",\n              fontFamily: \"archivo-600\",\n            }}\n          >\n            {item.label ? item.label : \"New Option\"}\n          </Text>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              function moveItem(from, to) {\n                // remove `from` item and store it\n                var f = newProductOptions.current.splice(from, 1)[0];\n                // insert stored item into position `to`\n                newProductOptions.current.splice(to, 0, f);\n              }\n\n              moveItem(index, index + 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <MaterialCommunityIcons\n              name=\"chevron-down\"\n              size={32}\n              color=\"white\"\n            />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              function moveItem(from, to) {\n                // remove `from` item and store it\n                var f = newProductOptions.current.splice(from, 1)[0];\n                // insert stored item into position `to`\n                newProductOptions.current.splice(to, 0, f);\n              }\n\n              moveItem(index, index - 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <MaterialCommunityIcons name=\"chevron-up\" size={32} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              newProductOptions.current.push({\n                ...item,\n                label: item.label + \" Copy\",\n              });\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <Feather name=\"copy\" size={32} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              newProductOptions.current.splice(index, 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <Feather name=\"x\" size={32} color=\"white\" />\n          </TouchableOpacity>\n        </TouchableOpacity>\n        {indexOn === index && (\n          <View style={{ padding: 20 }}>\n            <InnerOn\n              item={item}\n              index={index}\n              newProduct={newProduct}\n              newProductOptions={newProductOptions}\n              e={e}\n              sete={sete}\n            />\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default OptionView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}