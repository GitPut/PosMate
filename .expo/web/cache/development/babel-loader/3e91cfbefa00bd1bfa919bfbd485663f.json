{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport useWindowDimensions from \"../../components/useWindowDimensions\";\nimport MenuScreenInnerBlock from \"../../components/MenuScreenInnerBlock\";\nimport { userStoreState } from \"../../state/state\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MenuScreen = function MenuScreen() {\n  var _catalog$categories2;\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height,\n    width = _useWindowDimensions.width;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    section = _useState2[0],\n    setsection = _useState2[1];\n  var catalog = userStoreState.use();\n  var SectionSelector = function SectionSelector() {\n    var _catalog$categories;\n    return _jsx(ScrollView, {\n      contentContainerStyle: {\n        height: \"90%\",\n        alignItems: \"center\"\n      },\n      children: (_catalog$categories = catalog.categories) == null ? void 0 : _catalog$categories.map(function (category, index) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setsection(category);\n          },\n          style: {\n            padding: 10\n          },\n          children: _jsx(Text, {\n            style: [section === null && index === 0 && {\n              color: \"white\",\n              fontWeight: \"700\",\n              borderBottomWidth: 1,\n              borderBottomColor: \"white\"\n            } || section === category && {\n              color: \"white\",\n              fontWeight: \"700\",\n              borderBottomWidth: 1,\n              borderBottomColor: \"white\"\n            }, {\n              fontSize: 16,\n              color: \"white\"\n            }],\n            children: category\n          })\n        }, index);\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: styles({\n      height: height,\n      width: width\n    }).container,\n    children: [_jsx(SectionSelector, {}), (_catalog$categories2 = catalog.categories) == null ? void 0 : _catalog$categories2.map(function (category, index) {\n      var visible;\n      if (section === null && index === 0) {\n        visible = true;\n      } else if (section === category) {\n        visible = true;\n      } else {\n        visible = false;\n      }\n      return _jsx(MenuScreenInnerBlock, {\n        category: category,\n        height: height,\n        visible: visible\n      }, index);\n    })]\n  });\n};\nexport default React.memo(MenuScreen);\nvar styles = function styles(props) {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: \"white\",\n      height: \"100%\",\n      width: props.width * 0.7,\n      flexDirection: \"row\"\n    },\n    wrapper: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      paddingLeft: 50,\n      paddingRight: 50\n    },\n    scrollview: {\n      width: \"100%\"\n    }\n  });\n};","map":{"version":3,"names":["React","useState","useWindowDimensions","MenuScreenInnerBlock","userStoreState","MenuScreen","height","width","section","setsection","catalog","use","SectionSelector","alignItems","categories","map","category","index","padding","color","fontWeight","borderBottomWidth","borderBottomColor","fontSize","styles","container","visible","memo","props","StyleSheet","create","backgroundColor","flexDirection","wrapper","flexWrap","justifyContent","paddingLeft","paddingRight","scrollview"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/MenuScreen.tsx"],"sourcesContent":["import {\n  Image,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport useWindowDimensions from \"components/useWindowDimensions\";\nimport Logo from \"assets/dpos-logo.png\";\nimport MenuScreenInnerBlock from \"components/MenuScreenInnerBlock\";\nimport { userStoreState } from \"state/state\";\n\nconst MenuScreen = () => {\n  const { height, width } = useWindowDimensions();\n  const [section, setsection] = useState(null);\n  const catalog = userStoreState.use();\n\n  const SectionSelector = () => {\n    return (\n        <ScrollView\n          contentContainerStyle={{\n            height: \"90%\",\n            alignItems: \"center\",\n          }}\n        >\n          {catalog.categories?.map((category, index) => {\n            return (\n              <TouchableOpacity\n                key={index}\n                onPress={() => {\n                  setsection(category);\n                }}\n                style={{ padding: 10 }}\n              >\n                <Text\n                  style={[\n                    (section === null &&\n                      index === 0 && {\n                        color: \"white\",\n                        fontWeight: \"700\",\n                        borderBottomWidth: 1,\n                        borderBottomColor: \"white\",\n                      }) ||\n                      (section === category && {\n                        color: \"white\",\n                        fontWeight: \"700\",\n                        borderBottomWidth: 1,\n                        borderBottomColor: \"white\",\n                      }),\n                    { fontSize: 16, color: \"white\" },\n                  ]}\n                >\n                  {category}\n                </Text>\n              </TouchableOpacity>\n            );\n          })}\n        </ScrollView>\n    );\n  };\n\n  return (\n    <View style={styles({ height, width }).container}>\n      <SectionSelector />\n      {catalog.categories?.map((category, index) => {\n        let visible;\n\n        if (section === null && index === 0) {\n          visible = true;\n        } else if (section === category) {\n          visible = true;\n        } else {\n          visible = false;\n        }\n\n        return (\n          <MenuScreenInnerBlock\n            key={index}\n            category={category}\n            height={height}\n            visible={visible}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nexport default React.memo(MenuScreen);\n\nconst styles = (props) =>\n  StyleSheet.create({\n    container: {\n      backgroundColor: \"white\",\n      height: \"100%\",\n      width: props.width * 0.7,\n      flexDirection: \"row\",\n    },\n    wrapper: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      paddingLeft: 50,\n      paddingRight: 50,\n    },\n    scrollview: {\n      width: \"100%\",\n    },\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}