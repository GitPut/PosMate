{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"../state/state\";\nimport { updateData } from \"../state/firebaseFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MyListItem = function MyListItem(_ref) {\n  var item = _ref.item,\n    index = _ref.index,\n    setnewProduct = _ref.setnewProduct,\n    newProduct = _ref.newProduct,\n    newProductOptions = _ref.newProductOptions;\n  var memoizedItem = useMemo(function () {\n    return item;\n  }, [item]);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    optionLblsValues = _useState2[0],\n    setoptionLblsValues = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    optionLbls = _useState4[0],\n    setoptionLbls = _useState4[1];\n  var _useState5 = useState(memoizedItem),\n    _useState6 = _slicedToArray(_useState5, 2),\n    e = _useState6[0],\n    sete = _useState6[1];\n  useEffect(function () {\n    if (newProduct.options.length > 1) {\n      var optionLblsLocal = [];\n      newProduct.options.forEach(function (checkUseE) {\n        if (checkUseE.label !== e.label) optionLblsLocal.push(checkUseE.label);\n      });\n      setoptionLbls(optionLblsLocal);\n    }\n  }, []);\n  useEffect(function () {\n    if (e.selectedCaseKey !== null) {\n      var local = newProduct.options.filter(function (localE) {\n        return localE.label == e.selectedCaseKey;\n      });\n      var optionLblsValuesLocal = [];\n      local[0].optionsList.forEach(function (eVals) {\n        optionLblsValuesLocal.push(eVals.label);\n      });\n      setoptionLblsValues(optionLblsValuesLocal);\n    }\n  }, [optionLbls]);\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: {\n        padding: 25,\n        margin: 15,\n        backgroundColor: \"lightgrey\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          var copy = structuredClone(newProduct);\n          copy.options.push(_objectSpread(_objectSpread({}, e), {}, {\n            label: e.label + \" Copy\"\n          }));\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: copy.options\n            });\n          });\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"Copy\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          var copy = structuredClone(newProduct);\n          copy.options.splice(index, 1);\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: copy.options\n            });\n          });\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"X\"\n        })\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Select List Label\",\n        onChangeText: function onChangeText(val) {\n          return sete(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              label: val\n            });\n          });\n        },\n        value: e.label\n        ,\n        style: {\n          marginBottom: 25\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Number Of Selectable; If There Is\",\n        onChange: function onChange(e) {\n          var val = e.nativeEvent.text;\n          var newOptionsList = _toConsumableArray(newProduct.options);\n          newOptionsList[index].numOfSelectable = val;\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newOptionsList\n            });\n          });\n        },\n        value: e.numOfSelectable,\n        style: {\n          marginBottom: 25\n        }\n      }), e.optionsList.map(function (eInnerList, indexInnerList) {\n        return _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            marginBottom: 25,\n            alignItems: \"center\"\n          },\n          children: [_jsx(TextInput, {\n            placeholder: \"Enter Option Label\",\n            onChange: function onChange(e) {\n              var val = e.nativeEvent.text;\n              var newOptionsList = structuredClone(newProduct);\n              newOptionsList.options[index].optionsList[indexInnerList].label = val;\n              setnewProduct(newOptionsList);\n            },\n            value: eInnerList.label\n          }), _jsx(TextInput, {\n            placeholder: \"Enter price increase\",\n            onChange: function onChange(e) {\n              var val = e.nativeEvent.text;\n              var newOptionsList = structuredClone(newProduct);\n              newOptionsList.options[index].optionsList[indexInnerList].priceIncrease = val;\n              setnewProduct(newOptionsList);\n            },\n            value: eInnerList.priceIncrease,\n            style: {\n              marginLeft: 20,\n              marginRight: 20\n            }\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              var copy = structuredClone(newProduct);\n              copy.options[index].optionsList.splice(indexInnerList, 1);\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: copy.options\n                });\n              });\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: copy.options\n                });\n              });\n            },\n            children: _jsx(Text, {\n              style: {\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"X\"\n            })\n          })]\n        });\n      }), _jsx(Button, {\n        title: \"Add Option Choice\",\n        onPress: function onPress() {\n          var newOptionsList = _toConsumableArray(newProduct.options);\n          newOptionsList[index].optionsList.push({\n            label: null,\n            priceIncrease: null\n          });\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newOptionsList\n            });\n          });\n        },\n        style: {\n          marginBottom: 25\n        }\n      }), optionLbls.length > 1 && _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          marginBottom: 25\n        },\n        children: [_jsx(DropDown, {\n          label: \"Show if...\",\n          options: optionLbls,\n          setValue: function setValue(val) {\n            var newOptionsList = _toConsumableArray(newProduct.options);\n            newOptionsList[index].selectedCaseKey = val;\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newOptionsList\n              });\n            });\n          },\n          value: e.selectedCaseKey,\n          style: {\n            marginBottom: 25\n          }\n        }), _jsx(Text, {\n          children: \"\\\"=\\\"\"\n        }), _jsx(DropDown, {\n          label: \"Show if...\",\n          options: optionLblsValues,\n          setValue: function setValue(val) {\n            var newOptionsList = _toConsumableArray(newProduct.options);\n            newOptionsList[index].selectedCaseValue = val;\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newOptionsList\n              });\n            });\n          },\n          value: e.selectedCaseValue,\n          style: {\n            marginBottom: 25\n          }\n        })]\n      })]\n    }), index === newProduct.options.length - 1 && _jsx(Button, {\n      title: \"Add Product Option\",\n      onPress: function onPress() {\n        var newOptionsList = structuredClone(newProduct.options);\n        newOptionsList[index] = e;\n        newOptionsList.push({\n          label: null,\n          optionsList: [],\n          selectedCaseKey: null,\n          selectedCaseValue: null,\n          numOfSelectable: null,\n          id: Math.random().toString(36).substr(2, 9)\n        });\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            options: newOptionsList\n          });\n        });\n      },\n      style: {\n        marginBottom: 25\n      }\n    })]\n  });\n};\nvar AddProduct = function AddProduct(_ref2) {\n  var setProductModal = _ref2.setProductModal,\n    setisModalVisible = _ref2.setisModalVisible,\n    existingProduct = _ref2.existingProduct,\n    existingProductIndex = _ref2.existingProductIndex;\n  var catalog = userStoreState.use();\n  var _useState7 = useState(existingProduct ? existingProduct : {\n      name: null,\n      price: null,\n      catagory: null,\n      options: [],\n      description: null\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    newProduct = _useState8[0],\n    setnewProduct = _useState8[1];\n  var newProductOptions = useRef([]);\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [copyProductData]));\n    } else if (existingProduct) {\n      var copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n      updateData(_toConsumableArray(catalog.categories), copy);\n    } else {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [newProduct]));\n    }\n    setisModalVisible(true);\n  }\n  var OptionsAddingSection = function OptionsAddingSection() {\n    return _jsxs(View, {\n      children: [_jsx(FlatList, {\n        data: newProduct.options,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item,\n            index = _ref3.index;\n          return _jsx(MyListItem, {\n            item: item,\n            index: index,\n            newProduct: newProduct,\n            setnewProduct: setnewProduct\n          });\n        }\n      }), newProduct.options.length === 0 && _jsx(Button, {\n        title: \"Add Product Option\",\n        onPress: function onPress() {\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: [].concat(_toConsumableArray(prevState.options), [{\n                label: null,\n                optionsList: [],\n                selectedCaseKey: null,\n                selectedCaseValue: null,\n                numOfSelectable: null,\n                id: Math.random().toString(36).substr(2, 9)\n              }])\n            });\n          });\n        },\n        style: {\n          marginBottom: 25\n        }\n      })]\n    });\n  };\n  return _jsxs(ScrollView, {\n    contentContainerStyle: {\n      width: \"93%\",\n      alignSelf: \"center\",\n      marginTop: 25\n    },\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        padding: 20,\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setProductModal(false);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"X\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          var copy = structuredClone(newProduct);\n          copy.name = copy.name + \" Copy\";\n          handleDataUpdate(copy);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"Copy\"\n        })\n      }), _jsx(Text, {\n        style: {\n          marginBottom: 25\n        },\n        children: \"AddProduct\"\n      })]\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Product Name\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            name: val\n          });\n        });\n      },\n      value: newProduct.name,\n      style: {\n        marginBottom: 25\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Enter any other items that come with this\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            description: val\n          });\n        });\n      },\n      style: {\n        marginBottom: 25\n      },\n      value: newProduct.description\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Product Price\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            price: val\n          });\n        });\n      },\n      style: {\n        marginBottom: 25\n      },\n      value: newProduct.price\n    }), _jsx(DropDown, {\n      label: \"Choose catagory\",\n      options: catalog.categories,\n      setValue: function setValue(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            catagory: val\n          });\n        });\n      },\n      value: newProduct.catagory,\n      style: {\n        marginBottom: 25\n      }\n    }), _jsx(OptionsAddingSection, {}), _jsx(Button, {\n      title: \"Add/Save Product\",\n      onPress: function onPress() {\n        return handleDataUpdate();\n      },\n      style: {\n        marginBottom: 25,\n        marginTop: 25,\n        backgroundColor: \"lightgreen\"\n      }\n    })]\n  });\n};\nexport default AddProduct;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","Button","TextInput","DropDown","userStoreState","updateData","MyListItem","item","index","setnewProduct","newProduct","newProductOptions","memoizedItem","optionLblsValues","setoptionLblsValues","optionLbls","setoptionLbls","e","sete","options","length","optionLblsLocal","forEach","checkUseE","label","push","selectedCaseKey","local","filter","localE","optionLblsValuesLocal","optionsList","eVals","padding","margin","backgroundColor","copy","structuredClone","prevState","marginBottom","fontWeight","color","splice","val","nativeEvent","text","newOptionsList","numOfSelectable","map","eInnerList","indexInnerList","flexDirection","alignItems","priceIncrease","marginLeft","marginRight","justifyContent","selectedCaseValue","id","Math","random","toString","substr","AddProduct","setProductModal","setisModalVisible","existingProduct","existingProductIndex","catalog","use","name","price","catagory","description","handleDataUpdate","copyProductData","categories","products","OptionsAddingSection","width","alignSelf","marginTop","styles","StyleSheet","create"],"sources":["/Users/peterputros/Desktop/PosMate-1/components/TestAdd.tsx"],"sourcesContent":["import {\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"state/state\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst MyListItem = ({ item, index, setnewProduct, newProduct, newProductOptions }) => {\n  const memoizedItem = useMemo(() => item, [item]);\n\n  const [optionLblsValues, setoptionLblsValues] = useState([]);\n  const [optionLbls, setoptionLbls] = useState([]);\n  const [e, sete] = useState(memoizedItem);\n\n  useEffect(() => {\n    //setnewProduct(newProductSaved.current);\n    if (newProduct.options.length > 1) {\n      const optionLblsLocal = [];\n      newProduct.options.forEach((checkUseE) => {\n        if (checkUseE.label !== e.label) optionLblsLocal.push(checkUseE.label);\n      });\n      setoptionLbls(optionLblsLocal);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (e.selectedCaseKey !== null) {\n      const local = newProduct.options.filter(\n        (localE) => localE.label == e.selectedCaseKey\n      );\n      const optionLblsValuesLocal = [];\n      local[0].optionsList.forEach((eVals) => {\n        optionLblsValuesLocal.push(eVals.label);\n      });\n      setoptionLblsValues(optionLblsValuesLocal);\n    }\n  }, [optionLbls]);\n\n  return (\n    <View>\n      <View\n        style={{\n          padding: 25,\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => {\n            const copy = structuredClone(newProduct);\n            copy.options.push({\n              ...e,\n              label: e.label + \" Copy\",\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: copy.options,\n            }));\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            const copy = structuredClone(newProduct);\n            copy.options.splice(index, 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: copy.options,\n            }));\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            X\n          </Text>\n        </TouchableOpacity>\n        <TextInput\n          placeholder=\"Enter Select List Label\"\n          onChangeText={(val) =>\n            sete((prevState) => ({ ...prevState, label: val }))\n          }\n          value={e.label}\n          // onChange={(e) => {\n          //   const val = e.nativeEvent.text;\n          //   const newOptionsList = [...newProduct.options];\n          //   newOptionsList[index].label = val;\n          //   setnewProduct((prevState) => ({\n          //     ...prevState,\n          //     options: newOptionsList,\n          //   }));\n          // }}\n          // value={e.label}\n          style={{ marginBottom: 25 }}\n        />\n        <TextInput\n          placeholder=\"Enter Number Of Selectable; If There Is\"\n          onChange={(e) => {\n            const val = e.nativeEvent.text;\n            const newOptionsList = [...newProduct.options];\n            newOptionsList[index].numOfSelectable = val;\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newOptionsList,\n            }));\n          }}\n          value={e.numOfSelectable}\n          style={{ marginBottom: 25 }}\n        />\n        {e.optionsList.map((eInnerList, indexInnerList) => {\n          return (\n            <View\n              style={{\n                flexDirection: \"row\",\n                marginBottom: 25,\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                placeholder=\"Enter Option Label\"\n                onChange={(e) => {\n                  const val = e.nativeEvent.text;\n                  const newOptionsList = structuredClone(newProduct);\n                  newOptionsList.options[index].optionsList[\n                    indexInnerList\n                  ].label = val;\n                  setnewProduct(newOptionsList);\n                }}\n                value={eInnerList.label}\n              />\n              <TextInput\n                placeholder=\"Enter price increase\"\n                onChange={(e) => {\n                  const val = e.nativeEvent.text;\n                  const newOptionsList = structuredClone(newProduct);\n                  newOptionsList.options[index].optionsList[\n                    indexInnerList\n                  ].priceIncrease = val;\n                  setnewProduct(newOptionsList);\n                }}\n                value={eInnerList.priceIncrease}\n                style={{ marginLeft: 20, marginRight: 20 }}\n              />\n              <TouchableOpacity\n                onPress={() => {\n                  const copy = structuredClone(newProduct);\n                  copy.options[index].optionsList.splice(indexInnerList, 1);\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: copy.options,\n                  }));\n\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: copy.options,\n                  }));\n                }}\n              >\n                <Text\n                  style={{\n                    fontWeight: \"700\",\n                    color: \"red\",\n                  }}\n                >\n                  X\n                </Text>\n              </TouchableOpacity>\n            </View>\n          );\n        })}\n        <Button\n          title=\"Add Option Choice\"\n          onPress={() => {\n            const newOptionsList = [...newProduct.options];\n            newOptionsList[index].optionsList.push({\n              label: null,\n              priceIncrease: null,\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newOptionsList,\n            }));\n          }}\n          style={{ marginBottom: 25 }}\n        />\n        {optionLbls.length > 1 && (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              marginBottom: 25,\n            }}\n          >\n            <DropDown\n              label=\"Show if...\"\n              options={optionLbls}\n              setValue={(val) => {\n                const newOptionsList = [...newProduct.options];\n                newOptionsList[index].selectedCaseKey = val;\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newOptionsList,\n                }));\n              }}\n              value={e.selectedCaseKey}\n              style={{ marginBottom: 25 }}\n            />\n            <Text>\"=\"</Text>\n            <DropDown\n              label=\"Show if...\"\n              options={optionLblsValues}\n              setValue={(val) => {\n                const newOptionsList = [...newProduct.options];\n                newOptionsList[index].selectedCaseValue = val;\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newOptionsList,\n                }));\n              }}\n              value={e.selectedCaseValue}\n              style={{ marginBottom: 25 }}\n            />\n          </View>\n        )}\n      </View>\n      {index === newProduct.options.length - 1 && (\n        <Button\n          title=\"Add Product Option\"\n          onPress={() => {\n            const newOptionsList = structuredClone(newProduct.options);\n            newOptionsList[index] = e;\n            newOptionsList.push({\n              label: null,\n              optionsList: [],\n              selectedCaseKey: null,\n              selectedCaseValue: null,\n              numOfSelectable: null,\n              id: Math.random().toString(36).substr(2, 9),\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newOptionsList,\n            }));\n          }}\n          style={{ marginBottom: 25 }}\n        />\n      )}\n    </View>\n  );\n};\n\nconst AddProduct = ({\n  setProductModal,\n  setisModalVisible,\n  existingProduct,\n  existingProductIndex,\n}) => {\n  const catalog = userStoreState.use();\n  const [newProduct, setnewProduct] = useState(\n    existingProduct\n      ? existingProduct\n      : {\n          name: null,\n          price: null,\n          catagory: null,\n          options: [],\n          description: null,\n        }\n  );\n  const newProductOptions = useRef([])\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(\n        [...catalog.categories],\n        [...catalog.products, copyProductData]\n      );\n    } else if (existingProduct) {\n      let copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n\n      updateData([...catalog.categories], copy);\n    } else {\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\n    }\n    setisModalVisible(true);\n  }\n\n  const OptionsAddingSection = () => {\n    return (\n      <View>\n        <FlatList\n          data={newProduct.options}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={({ item, index }) => (\n            <MyListItem\n              item={item}\n              index={index}\n              newProduct={newProduct}\n              setnewProduct={setnewProduct}\n            />\n          )}\n        />\n        {newProduct.options.length === 0 && (\n          <Button\n            title=\"Add Product Option\"\n            onPress={() => {\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: [\n                  ...prevState.options,\n                  {\n                    label: null,\n                    optionsList: [],\n                    selectedCaseKey: null,\n                    selectedCaseValue: null,\n                    numOfSelectable: null,\n                    id: Math.random().toString(36).substr(2, 9),\n                  },\n                ],\n              }));\n            }}\n            style={{ marginBottom: 25 }}\n          />\n        )}\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView\n      contentContainerStyle={{\n        width: \"93%\",\n        alignSelf: \"center\",\n        marginTop: 25,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 20,\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <TouchableOpacity onPress={() => setProductModal(false)}>\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n            X\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            let copy = structuredClone(newProduct);\n            copy.name = copy.name + \" Copy\";\n            handleDataUpdate(copy);\n          }}\n        >\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <Text style={{ marginBottom: 25 }}>AddProduct</Text>\n      </View>\n      <TextInput\n        placeholder=\"Enter Product Name\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, name: val }));\n        }}\n        value={newProduct.name}\n        style={{ marginBottom: 25 }}\n      />\n      <TextInput\n        placeholder=\"Enter any other items that come with this\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, description: val }));\n        }}\n        style={{ marginBottom: 25 }}\n        value={newProduct.description}\n      />\n      <TextInput\n        placeholder=\"Enter Product Price\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, price: val }));\n        }}\n        style={{ marginBottom: 25 }}\n        value={newProduct.price}\n      />\n      <DropDown\n        label=\"Choose catagory\"\n        options={catalog.categories}\n        setValue={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, catagory: val }));\n        }}\n        value={newProduct.catagory}\n        style={{ marginBottom: 25 }}\n      />\n      <OptionsAddingSection />\n      <Button\n        title=\"Add/Save Product\"\n        onPress={() => handleDataUpdate()}\n        style={{\n          marginBottom: 25,\n          marginTop: 25,\n          backgroundColor: \"lightgreen\",\n        }}\n      />\n    </ScrollView>\n  );\n};\n\nexport default AddProduct;\n\nconst styles = StyleSheet.create({});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}