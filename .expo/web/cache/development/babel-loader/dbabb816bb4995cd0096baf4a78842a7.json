{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport ReactSelect from \"react-select\";\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar InnerOn = function InnerOn(_ref) {\n  var _e$selectedCaseList, _e$selectedCaseList2;\n  var item = _ref.item,\n    newProduct = _ref.newProduct,\n    newProductOptions = _ref.newProductOptions,\n    setnewProductOptions = _ref.setnewProductOptions,\n    index = _ref.index,\n    e = _ref.e,\n    sete = _ref.sete;\n  var _useState = useState(structuredClone(item.optionsList)),\n    _useState2 = _slicedToArray(_useState, 2),\n    testMap = _useState2[0],\n    settestMap = _useState2[1];\n  var optionLbls = newProduct.options.map(function (el) {\n    if (el.label !== e.label && el.label !== null) {\n      return el.label;\n    }\n  });\n  var ifOptionOptions = [];\n  optionLbls.map(function (opLbl) {\n    return ifOptionOptions.push({\n      value: opLbl,\n      label: opLbl\n    });\n  });\n  if (e.selectedCaseKey || e.selectedCaseValue) {\n    newProductOptions.current[index].selectedCaseList = [{\n      selectedCaseKey: e.selectedCaseKey,\n      selectedCaseValue: e.selectedCaseValue\n    }];\n    newProductOptions.current[index].selectedCaseKey = null;\n    newProductOptions.current[index].selectedCaseValue = null;\n\n    setnewProductOptions(function (prev) {\n      var clone = structuredClone(prev);\n      clone[index].selectedCaseList = [{\n        selectedCaseKey: null,\n        selectedCaseValue: null\n      }];\n      clone[index].selectedCaseKey = null;\n      return clone;\n    });\n    sete(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        selectedCaseList: [{\n          selectedCaseKey: null,\n          selectedCaseValue: null\n        }]\n      });\n    });\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n        paddingBottom: 20,\n        borderBottomColor: \"grey\",\n        borderBottomWidth: 1,\n        flexWrap: \"wrap\"\n      },\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter Option Label\",\n        onChangeText: function onChangeText(val) {\n          sete(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              label: val\n            });\n          });\n          newProductOptions.current[index].label = val;\n        },\n        value: e.label,\n        style: {\n          margin: 10,\n          width: \"97.5%\",\n          height: 52\n        },\n        label: \"Enter Option Label\",\n        variant: \"outlined\",\n        color: \"black\"\n      }), _jsx(View, {\n        style: {\n          margin: 10,\n          width: \"47%\",\n          height: 52\n        },\n        children: _jsx(ReactSelect, {\n          options: [{\n            value: \"Multi Choice\",\n            label: \"Multi Choice\"\n          }, {\n            value: \"Dropdown\",\n            label: \"Dropdown\"\n          }],\n          value: e.optionType && {\n            value: e.optionType,\n            label: e.optionType\n          },\n          onChange: function onChange(val) {\n            if (e.optionType) {\n              newProductOptions.current[index].optionType = val.value;\n            } else {\n              newProductOptions.current[index] = _objectSpread(_objectSpread({}, e), {}, {\n                optionType: val.value\n              });\n            }\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                optionType: val.value\n              });\n            });\n          },\n          placeholder: \"Choose Option Type\",\n          menuPortalTarget: document.body,\n          styles: {\n            menuPortal: function menuPortal(base) {\n              return _objectSpread(_objectSpread({}, base), {}, {\n                zIndex: 9999\n              });\n            },\n            control: function control(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                background: \"#fff\",\n                borderColor: \"#9e9e9e\",\n                minHeight: \"52px\",\n                height: \"52px\",\n                boxShadow: state.isFocused ? null : null\n              });\n            },\n            valueContainer: function valueContainer(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                height: \"52px\",\n                padding: \"0 6px\"\n              });\n            },\n            input: function input(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                margin: \"0px\"\n              });\n            },\n            indicatorSeparator: function indicatorSeparator(state) {\n              return {\n                display: \"none\"\n              };\n            },\n            indicatorsContainer: function indicatorsContainer(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                height: \"52px\"\n              });\n            }\n          },\n          menuPlacement: \"auto\",\n          menuPosition: \"fixed\"\n        })\n      }), _jsx(TouchableOpacity, {\n        disabled: e.optionType !== \"Multi Choice\",\n        style: {\n          margin: 10,\n          width: \"47%\",\n          height: 52\n        },\n        children: _jsx(TextInput, {\n          placeholder: \"Enter selection limit or leave empty\",\n          onChangeText: function onChangeText(val) {\n            var re = /^[0-9\\b]+$/;\n\n            if (val === \"\" || re.test(val)) {\n              if (e.optionType === \"Multi Choice\") {\n                sete(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    numOfSelectable: val\n                  });\n                });\n                newProductOptions.current[index].numOfSelectable = val;\n              }\n            }\n          },\n          value: e.numOfSelectable,\n          label: \"Enter selection limit\",\n          variant: \"outlined\",\n          style: {\n            width: \"100%\",\n            opacity: e.optionType === \"Dropdown\" ? 0.5 : 1\n          },\n          color: \"black\"\n        })\n      }), _jsxs(View, {\n        style: {\n          margin: 10,\n          width: \"47%\",\n          height: 52,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(Text, {\n          style: {\n            marginBottom: 5,\n            fontSize: 14\n          },\n          children: \"Is Option Required?\"\n        }), _jsx(Switch, {\n          value: e.isRequired,\n          onValueChange: function onValueChange(val) {\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                isRequired: val\n              });\n            });\n            newProductOptions.current[index].isRequired = val;\n          }\n        })]\n      })]\n    }), testMap.map(function (eInnerListStart, indexInnerList) {\n      var eInnerList = structuredClone(eInnerListStart);\n      return _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          paddingTop: 20,\n          alignItems: \"center\",\n          width: \"100%\",\n          justifyContent: \"space-between\"\n        },\n        children: [_jsx(TextInput, {\n          placeholder: \"Enter option selection\",\n          onChangeText: function onChangeText(val) {\n            var clone = structuredClone(testMap);\n            clone[indexInnerList].label = val;\n            newProductOptions.current[index].optionsList = clone;\n            settestMap(clone);\n          },\n          value: eInnerList.label,\n          label: \"Enter option selection\",\n          variant: \"outlined\",\n          color: \"black\",\n          style: {\n            width: \"45%\"\n          }\n        }), _jsx(TextInput, {\n          placeholder: \"Enter price increase\",\n          onChangeText: function onChangeText(val) {\n            var re = /^[0-9.]+$/;\n\n            if (val === \"\" || re.test(val)) {\n              var clone = structuredClone(testMap);\n              clone[indexInnerList].priceIncrease = val;\n              newProductOptions.current[index].optionsList = clone;\n              settestMap(clone);\n            }\n          },\n          value: eInnerList.priceIncrease,\n          style: {\n            width: \"45%\"\n          },\n          label: \"Enter price increase\",\n          variant: \"outlined\",\n          color: \"black\"\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 40,\n            width: 40,\n            borderRadius: 20,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            var clone = structuredClone(testMap);\n            clone.splice(indexInnerList, 1);\n            newProductOptions.current[index].optionsList = clone;\n            settestMap(clone);\n          },\n          children: _jsx(Feather, {\n            name: \"x\",\n            size: 30,\n            color: \"white\"\n          })\n        })]\n      }, indexInnerList);\n    }), _jsx(Button, {\n      title: \"Add Option Choice\",\n      onPress: function onPress() {\n        var clone = structuredClone(testMap);\n        clone.push({\n          label: null,\n          priceIncrease: null\n        });\n        newProductOptions.current[index].optionsList = clone;\n        settestMap(clone);\n      },\n      style: {\n        marginBottom: 25,\n        marginTop: 25,\n        backgroundColor: \"#4050B5\"\n      },\n      disabled: testMap.length > 0 && testMap[testMap.length - 1].label === null\n    }), ((_e$selectedCaseList = e.selectedCaseList) == null ? void 0 : _e$selectedCaseList.length) > 0 && _jsx(View, {\n      style: {\n        width: \"100%\",\n        height: 1,\n        backgroundColor: \"grey\",\n        marginTop: 10,\n        marginBottom: 10\n      }\n    }), (_e$selectedCaseList2 = e.selectedCaseList) == null ? void 0 : _e$selectedCaseList2.map(function (ifStatement, indexOfIf) {\n      var local = newProduct.options.filter(function (localE) {\n        return localE.label == ifStatement.selectedCaseKey;\n      });\n      var optionLblsValuesLocal = local.length > 0 ? local[0].optionsList.map(function (el) {\n        return el.label;\n      }) : [];\n      var ifOptionVals = [];\n      optionLblsValuesLocal.map(function (opLbl) {\n        return ifOptionVals.push({\n          value: opLbl,\n          label: opLbl\n        });\n      });\n      return _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          marginBottom: 25,\n          alignItems: \"center\"\n        },\n        children: [_jsx(View, {\n          style: {\n            margin: 10,\n            width: \"40%\",\n            height: 52\n          },\n          children: _jsx(ReactSelect, {\n            options: ifOptionOptions,\n            value: ifStatement.selectedCaseKey && {\n              value: ifStatement.selectedCaseKey,\n              label: ifStatement.selectedCaseKey\n            },\n            onChange: function onChange(val) {\n              newProductOptions.current[index].selectedCaseList[indexOfIf].selectedCaseKey = val.value;\n              sete(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  selectedCaseList: newProductOptions.current[index].selectedCaseList\n                });\n              });\n            },\n            placeholder: \"Show if option\",\n            menuPortalTarget: document.body,\n            styles: {\n              menuPortal: function menuPortal(base) {\n                return _objectSpread(_objectSpread({}, base), {}, {\n                  zIndex: 9999\n                });\n              },\n              control: function control(provided, state) {\n                return _objectSpread(_objectSpread({}, provided), {}, {\n                  background: \"#fff\",\n                  borderColor: \"#9e9e9e\",\n                  minHeight: \"52px\",\n                  height: \"52px\",\n                  boxShadow: state.isFocused ? null : null\n                });\n              },\n              valueContainer: function valueContainer(provided, state) {\n                return _objectSpread(_objectSpread({}, provided), {}, {\n                  height: \"52px\",\n                  padding: \"0 6px\"\n                });\n              },\n              input: function input(provided, state) {\n                return _objectSpread(_objectSpread({}, provided), {}, {\n                  margin: \"0px\"\n                });\n              },\n              indicatorSeparator: function indicatorSeparator(state) {\n                return {\n                  display: \"none\"\n                };\n              },\n              indicatorsContainer: function indicatorsContainer(provided, state) {\n                return _objectSpread(_objectSpread({}, provided), {}, {\n                  height: \"52px\"\n                });\n              }\n            },\n            menuPlacement: \"auto\",\n            menuPosition: \"fixed\"\n          })\n        }), _jsx(FontAwesome5, {\n          name: \"equals\",\n          size: 30,\n          color: \"black\"\n        }), _jsx(View, {\n          style: {\n            margin: 10,\n            width: \"40%\",\n            height: 52\n          },\n          children: _jsx(ReactSelect, {\n            options: ifOptionVals,\n            value: ifStatement.selectedCaseValue && {\n              value: ifStatement.selectedCaseValue,\n              label: ifStatement.selectedCaseValue\n            },\n            onChange: function onChange(val) {\n              newProductOptions.current[index].selectedCaseList[indexOfIf].selectedCaseValue = val.value;\n              sete(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  selectedCaseList: newProductOptions.current[index].selectedCaseList\n                });\n              });\n            },\n            placeholder: \"Show if value\",\n            menuPortalTarget: document.body,\n            styles: {\n              menuPortal: function menuPortal(base) {\n                return _objectSpread(_objectSpread({}, base), {}, {\n                  zIndex: 9999\n                });\n              },\n              control: function control(provided, state) {\n                return _objectSpread(_objectSpread({}, provided), {}, {\n                  background: \"#fff\",\n                  borderColor: \"#9e9e9e\",\n                  minHeight: \"52px\",\n                  height: \"52px\",\n                  boxShadow: state.isFocused ? null : null\n                });\n              },\n              valueContainer: function valueContainer(provided, state) {\n                return _objectSpread(_objectSpread({}, provided), {}, {\n                  height: \"52px\",\n                  padding: \"0 6px\"\n                });\n              },\n              input: function input(provided, state) {\n                return _objectSpread(_objectSpread({}, provided), {}, {\n                  margin: \"0px\"\n                });\n              },\n              indicatorSeparator: function indicatorSeparator(state) {\n                return {\n                  display: \"none\"\n                };\n              },\n              indicatorsContainer: function indicatorsContainer(provided, state) {\n                return _objectSpread(_objectSpread({}, provided), {}, {\n                  height: \"52px\"\n                });\n              }\n            },\n            menuPlacement: \"auto\",\n            menuPosition: \"fixed\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 40,\n            width: 40,\n            borderRadius: 20,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            newProductOptions.current[index].selectedCaseList.splice(indexOfIf, 1);\n            sete(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                selectedCaseList: newProductOptions.current[index].selectedCaseList\n              });\n            });\n          },\n          children: _jsx(Feather, {\n            name: \"x\",\n            size: 30,\n            color: \"white\"\n          })\n        })]\n      }, indexOfIf);\n    }), optionLbls.length > 1 && _jsx(Button, {\n      title: \"Add If Statement\",\n      onPress: function onPress() {\n        if (!newProductOptions.current[index].selectedCaseList) {\n          newProductOptions.current[index].selectedCaseList = [{\n            selectedCaseKey: null,\n            selectedCaseValue: null\n          }];\n          sete(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              selectedCaseList: [{\n                selectedCaseKey: null,\n                selectedCaseValue: null\n              }]\n            });\n          });\n        } else {\n          newProductOptions.current[index].selectedCaseList.push({\n            selectedCaseKey: null,\n            selectedCaseValue: null\n          });\n          sete(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              selectedCaseList: newProductOptions.current[index].selectedCaseList\n            });\n          });\n        }\n      },\n      style: {\n        backgroundColor: \"#4050B5\",\n        marginBottom: 25\n      }\n    })]\n  });\n};\nvar OptionView = function OptionView(_ref2) {\n  var item = _ref2.item,\n    index = _ref2.index,\n    setnewProduct = _ref2.setnewProduct,\n    newProduct = _ref2.newProduct,\n    newProductOptions = _ref2.newProductOptions,\n    indexOn = _ref2.indexOn,\n    setindexOn = _ref2.setindexOn;\n  var _useState3 = useState(structuredClone(item)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    e = _useState4[0],\n    sete = _useState4[1];\n\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: {\n        margin: 15,\n        backgroundColor: \"lightgrey\",\n        borderRadius: 10\n      },\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return indexOn !== index ? setindexOn(index) : setindexOn(null);\n        },\n        style: [{\n          backgroundColor: \"grey\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          padding: 5,\n          borderTopLeftRadius: 10,\n          borderTopRightRadius: 10\n        }, indexOn !== index && {\n          borderBottomLeftRadius: 10,\n          borderBottomRightRadius: 10\n        }],\n        children: [_jsx(Text, {\n          style: {\n            width: \"50%\",\n            paddingLeft: 5,\n            fontSize: 16,\n            color: \"white\",\n            fontFamily: \"archivo-600\"\n          },\n          children: item.label ? item.label : \"New Option\"\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            function moveItem(from, to) {\n              var f = newProductOptions.current.splice(from, 1)[0];\n              newProductOptions.current.splice(to, 0, f);\n            }\n            moveItem(index, index + 1);\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"chevron-down\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            function moveItem(from, to) {\n              var f = newProductOptions.current.splice(from, 1)[0];\n              newProductOptions.current.splice(to, 0, f);\n            }\n            moveItem(index, index - 1);\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"chevron-up\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            newProductOptions.current.push(_objectSpread(_objectSpread({}, item), {}, {\n              label: item.label + \" Copy\"\n            }));\n\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            setindexOn(newProductOptions.current.length - 1);\n          },\n          children: _jsx(Feather, {\n            name: \"copy\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            var newProductOptionsUpdated = newProduct.options.filter(function (e, filterIndex) {\n              return filterIndex !== index;\n            });\n            newProductOptions.current.splice(index, 1);\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptionsUpdated\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(Feather, {\n            name: \"x\",\n            size: 32,\n            color: \"white\"\n          })\n        })]\n      }), indexOn === index && _jsx(View, {\n        style: {\n          padding: 20\n        },\n        children: _jsx(InnerOn, {\n          item: item,\n          index: index,\n          newProduct: newProduct,\n          newProductOptions: newProductOptions,\n          e: e,\n          sete: sete\n        })\n      })]\n    }), newProduct.options.length - 1 === index && _jsx(Button, {\n      title: \"Add Option\",\n      onPress: function onPress() {\n        newProductOptions.current.push({\n          label: null,\n          optionsList: [],\n          selectedCaseKey: null,\n          selectedCaseValue: null,\n          numOfSelectable: null,\n          id: Math.random().toString(36).substr(2, 9),\n          optionType: null\n        });\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            options: newProductOptions.current\n          });\n        });\n        setindexOn(newProductOptions.current.length - 1);\n      },\n      style: {\n        marginBottom: 25,\n        backgroundColor: \"#4050B5\"\n      },\n      disabled: e.label === null\n    })]\n  });\n};\nexport default OptionView;","map":{"version":3,"names":["React","useState","Button","Switch","TextInput","MaterialCommunityIcons","Feather","ReactSelect","FontAwesome5","InnerOn","item","newProduct","newProductOptions","setnewProductOptions","index","e","sete","structuredClone","optionsList","testMap","settestMap","optionLbls","options","map","el","label","ifOptionOptions","opLbl","push","value","selectedCaseKey","selectedCaseValue","current","selectedCaseList","prev","clone","flexDirection","alignItems","alignSelf","justifyContent","width","paddingBottom","borderBottomColor","borderBottomWidth","flexWrap","val","prevState","margin","height","optionType","document","body","menuPortal","base","zIndex","control","provided","state","background","borderColor","minHeight","boxShadow","isFocused","valueContainer","padding","input","indicatorSeparator","display","indicatorsContainer","re","test","numOfSelectable","opacity","marginBottom","fontSize","isRequired","eInnerListStart","indexInnerList","eInnerList","paddingTop","priceIncrease","borderRadius","backgroundColor","splice","marginTop","length","ifStatement","indexOfIf","local","filter","localE","optionLblsValuesLocal","ifOptionVals","OptionView","setnewProduct","indexOn","setindexOn","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","paddingLeft","color","fontFamily","moveItem","from","to","f","newProductOptionsUpdated","filterIndex","id","Math","random","toString","substr"],"sources":["/Users/peterputros/Desktop/PosMate/components/OptionView.tsx"],"sourcesContent":["import { View, Text, TouchableOpacity } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport ReactSelect from \"react-select\";\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\n\nconst InnerOn = ({ item, newProduct, newProductOptions, setnewProductOptions, index, e, sete }) => {\n  const [testMap, settestMap] = useState(structuredClone(item.optionsList));\n  const optionLbls = newProduct.options.map(function (el) {\n    if (el.label !== e.label && el.label !== null) {\n      return el.label;\n    }\n  });\n\n  const ifOptionOptions = [];\n  optionLbls.map((opLbl) =>\n    ifOptionOptions.push({ value: opLbl, label: opLbl })\n  );\n\n  if (e.selectedCaseKey || e.selectedCaseValue) {\n    newProductOptions.current[index].selectedCaseList = [\n      {\n        selectedCaseKey: e.selectedCaseKey,\n        selectedCaseValue: e.selectedCaseValue,\n      },\n    ];\n    newProductOptions.current[index].selectedCaseKey = null;\n    newProductOptions.current[index].selectedCaseValue = null;\n\n    //convert to usestate\n    setnewProductOptions((prev) => {\n      const clone = structuredClone(prev);\n      clone[index].selectedCaseList = [\n        {\n          selectedCaseKey: null,\n          selectedCaseValue: null,\n        },\n      ];\n\n      clone[index].selectedCaseKey = null;\n\n      return clone;\n    }\n    );\n\n\n\n    sete((prev) => ({\n      ...prev,\n      selectedCaseList: [{ selectedCaseKey: null, selectedCaseValue: null }],\n    }));\n  }\n\n  return (\n    <>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          alignSelf: \"center\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          paddingBottom: 20,\n          borderBottomColor: \"grey\",\n          borderBottomWidth: 1,\n          flexWrap: \"wrap\",\n        }}\n      >\n        <TextInput\n          placeholder=\"Enter Option Label\"\n          onChangeText={(val) => {\n            sete((prevState) => ({ ...prevState, label: val }));\n            newProductOptions.current[index].label = val;\n          }}\n          value={e.label}\n          style={{ margin: 10, width: \"97.5%\", height: 52 }}\n          label=\"Enter Option Label\"\n          variant=\"outlined\"\n          color=\"black\"\n        />\n        <View\n          style={{\n            margin: 10,\n            width: \"47%\",\n            height: 52,\n          }}\n        >\n          <ReactSelect\n            options={[\n              { value: \"Multi Choice\", label: \"Multi Choice\" },\n              { value: \"Dropdown\", label: \"Dropdown\" },\n            ]}\n            value={\n              e.optionType && {\n                value: e.optionType,\n                label: e.optionType,\n              }\n            }\n            onChange={(val) => {\n              if (e.optionType) {\n                newProductOptions.current[index].optionType = val.value;\n              } else {\n                newProductOptions.current[index] = {\n                  ...e,\n                  optionType: val.value,\n                };\n              }\n              sete((prevState) => ({\n                ...prevState,\n                optionType: val.value,\n              }));\n            }}\n            placeholder={\"Choose Option Type\"}\n            menuPortalTarget={document.body}\n            styles={{\n              menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n              control: (provided, state) => ({\n                ...provided,\n                background: \"#fff\",\n                borderColor: \"#9e9e9e\",\n                minHeight: \"52px\",\n                height: \"52px\",\n                boxShadow: state.isFocused ? null : null,\n              }),\n\n              valueContainer: (provided, state) => ({\n                ...provided,\n                height: \"52px\",\n                padding: \"0 6px\",\n              }),\n\n              input: (provided, state) => ({\n                ...provided,\n                margin: \"0px\",\n              }),\n              indicatorSeparator: (state) => ({\n                display: \"none\",\n              }),\n              indicatorsContainer: (provided, state) => ({\n                ...provided,\n                height: \"52px\",\n              }),\n            }}\n            menuPlacement=\"auto\"\n            menuPosition=\"fixed\"\n          />\n        </View>\n        <TouchableOpacity\n          disabled={e.optionType !== \"Multi Choice\"}\n          style={{ margin: 10, width: \"47%\", height: 52 }}\n        >\n          <TextInput\n            placeholder=\"Enter selection limit or leave empty\"\n            onChangeText={(val) => {\n              const re = /^[0-9\\b]+$/;\n\n              // if value is not blank, then test the regex\n\n              if (val === \"\" || re.test(val)) {\n                if (e.optionType === \"Multi Choice\") {\n                  sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n                  newProductOptions.current[index].numOfSelectable = val;\n                }\n              }\n            }}\n            value={e.numOfSelectable}\n            label=\"Enter selection limit\"\n            variant=\"outlined\"\n            style={{\n              width: \"100%\",\n              opacity: e.optionType === \"Dropdown\" ? 0.5 : 1,\n            }}\n            color=\"black\"\n          />\n        </TouchableOpacity>\n        <View\n          style={{\n            margin: 10,\n            width: \"47%\",\n            height: 52,\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Text style={{ marginBottom: 5, fontSize: 14 }}>\n            Is Option Required?\n          </Text>\n          <Switch\n            value={e.isRequired}\n            onValueChange={(val) => {\n              sete((prevState) => ({ ...prevState, isRequired: val }));\n              newProductOptions.current[index].isRequired = val;\n            }}\n          />\n        </View>\n      </View>\n      {testMap.map((eInnerListStart, indexInnerList) => {\n        const eInnerList = structuredClone(eInnerListStart);\n        return (\n          <View\n            key={indexInnerList}\n            style={{\n              flexDirection: \"row\",\n              paddingTop: 20,\n              alignItems: \"center\",\n              width: \"100%\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <TextInput\n              placeholder=\"Enter option selection\"\n              onChangeText={(val) => {\n                const clone = structuredClone(testMap);\n                clone[indexInnerList].label = val;\n                newProductOptions.current[index].optionsList = clone;\n                settestMap(clone);\n              }}\n              value={eInnerList.label}\n              label=\"Enter option selection\"\n              variant=\"outlined\"\n              color=\"black\"\n              style={{ width: \"45%\" }}\n            />\n            <TextInput\n              placeholder=\"Enter price increase\"\n              onChangeText={(val) => {\n                const re = /^[0-9.]+$/;\n\n                // if value is not blank, then test the regex\n\n                if (val === \"\" || re.test(val)) {\n                  const clone = structuredClone(testMap);\n                  clone[indexInnerList].priceIncrease = val;\n                  newProductOptions.current[index].optionsList = clone;\n                  settestMap(clone);\n                }\n              }}\n              value={eInnerList.priceIncrease}\n              style={{ width: \"45%\" }}\n              label=\"Enter price increase\"\n              variant=\"outlined\"\n              color=\"black\"\n            />\n            <TouchableOpacity\n              style={{\n                height: 40,\n                width: 40,\n                borderRadius: 20,\n                backgroundColor: \"grey\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n              onPress={() => {\n                const clone = structuredClone(testMap);\n                clone.splice(indexInnerList, 1);\n                newProductOptions.current[index].optionsList = clone;\n                settestMap(clone);\n              }}\n            >\n              <Feather name=\"x\" size={30} color=\"white\" />\n            </TouchableOpacity>\n          </View>\n        );\n      })}\n      <Button\n        title=\"Add Option Choice\"\n        onPress={() => {\n          const clone = structuredClone(testMap);\n          clone.push({\n            label: null,\n            priceIncrease: null,\n          });\n          newProductOptions.current[index].optionsList = clone;\n          settestMap(clone);\n        }}\n        style={{\n          marginBottom: 25,\n          marginTop: 25,\n          backgroundColor: \"#4050B5\",\n        }}\n        disabled={\n          testMap.length > 0 && testMap[testMap.length - 1].label === null\n        }\n      />\n      {e.selectedCaseList?.length > 0 && (\n        <View\n          style={{\n            width: \"100%\",\n            height: 1,\n            backgroundColor: \"grey\",\n            marginTop: 10,\n            marginBottom: 10,\n          }}\n        />\n      )}\n      {e.selectedCaseList?.map((ifStatement, indexOfIf) => {\n        const local = newProduct.options.filter(\n          (localE) => localE.label == ifStatement.selectedCaseKey\n        );\n        const optionLblsValuesLocal =\n          local.length > 0\n            ? local[0].optionsList.map(function (el) {\n                return el.label;\n              })\n            : [];\n\n        const ifOptionVals = [];\n        optionLblsValuesLocal.map((opLbl) =>\n          ifOptionVals.push({ value: opLbl, label: opLbl })\n        );\n\n        return (\n          <View\n            key={indexOfIf}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              marginBottom: 25,\n              alignItems: \"center\",\n            }}\n          >\n            <View\n              style={{\n                margin: 10,\n                width: \"40%\",\n                height: 52,\n              }}\n            >\n              <ReactSelect\n                options={ifOptionOptions}\n                value={\n                  ifStatement.selectedCaseKey && {\n                    value: ifStatement.selectedCaseKey,\n                    label: ifStatement.selectedCaseKey,\n                  }\n                }\n                onChange={(val) => {\n                  newProductOptions.current[index].selectedCaseList[\n                    indexOfIf\n                  ].selectedCaseKey = val.value;\n                  sete((prev) => ({\n                    ...prev,\n                    selectedCaseList:\n                      newProductOptions.current[index].selectedCaseList,\n                  }));\n                }}\n                placeholder={\"Show if option\"}\n                menuPortalTarget={document.body}\n                styles={{\n                  menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                  control: (provided, state) => ({\n                    ...provided,\n                    background: \"#fff\",\n                    borderColor: \"#9e9e9e\",\n                    minHeight: \"52px\",\n                    height: \"52px\",\n                    boxShadow: state.isFocused ? null : null,\n                  }),\n\n                  valueContainer: (provided, state) => ({\n                    ...provided,\n                    height: \"52px\",\n                    padding: \"0 6px\",\n                  }),\n\n                  input: (provided, state) => ({\n                    ...provided,\n                    margin: \"0px\",\n                  }),\n                  indicatorSeparator: (state) => ({\n                    display: \"none\",\n                  }),\n                  indicatorsContainer: (provided, state) => ({\n                    ...provided,\n                    height: \"52px\",\n                  }),\n                }}\n                menuPlacement=\"auto\"\n                menuPosition=\"fixed\"\n              />\n            </View>\n            <FontAwesome5 name=\"equals\" size={30} color=\"black\" />\n            <View\n              style={{\n                margin: 10,\n                width: \"40%\",\n                height: 52,\n              }}\n            >\n              <ReactSelect\n                options={ifOptionVals}\n                value={\n                  ifStatement.selectedCaseValue && {\n                    value: ifStatement.selectedCaseValue,\n                    label: ifStatement.selectedCaseValue,\n                  }\n                }\n                onChange={(val) => {\n                  newProductOptions.current[index].selectedCaseList[\n                    indexOfIf\n                  ].selectedCaseValue = val.value;\n                  sete((prev) => ({\n                    ...prev,\n                    selectedCaseList:\n                      newProductOptions.current[index].selectedCaseList,\n                  }));\n                }}\n                placeholder={\"Show if value\"}\n                menuPortalTarget={document.body}\n                styles={{\n                  menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                  control: (provided, state) => ({\n                    ...provided,\n                    background: \"#fff\",\n                    borderColor: \"#9e9e9e\",\n                    minHeight: \"52px\",\n                    height: \"52px\",\n                    boxShadow: state.isFocused ? null : null,\n                  }),\n\n                  valueContainer: (provided, state) => ({\n                    ...provided,\n                    height: \"52px\",\n                    padding: \"0 6px\",\n                  }),\n\n                  input: (provided, state) => ({\n                    ...provided,\n                    margin: \"0px\",\n                  }),\n                  indicatorSeparator: (state) => ({\n                    display: \"none\",\n                  }),\n                  indicatorsContainer: (provided, state) => ({\n                    ...provided,\n                    height: \"52px\",\n                  }),\n                }}\n                menuPlacement=\"auto\"\n                menuPosition=\"fixed\"\n              />\n            </View>\n            <TouchableOpacity\n              style={{\n                height: 40,\n                width: 40,\n                borderRadius: 20,\n                backgroundColor: \"grey\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n              onPress={() => {\n                newProductOptions.current[index].selectedCaseList.splice(\n                  indexOfIf,\n                  1\n                );\n                sete((prev) => ({\n                  ...prev,\n                  selectedCaseList:\n                    newProductOptions.current[index].selectedCaseList,\n                }));\n              }}\n            >\n              <Feather name=\"x\" size={30} color=\"white\" />\n            </TouchableOpacity>\n          </View>\n        );\n      })}\n      {optionLbls.length > 1 && (\n        <Button\n          title=\"Add If Statement\"\n          onPress={() => {\n            if (!newProductOptions.current[index].selectedCaseList) {\n              newProductOptions.current[index].selectedCaseList = [\n                {\n                  selectedCaseKey: null,\n                  selectedCaseValue: null,\n                },\n              ];\n              sete((prev) => ({\n                ...prev,\n                selectedCaseList: [\n                  { selectedCaseKey: null, selectedCaseValue: null },\n                ],\n              }));\n            } else {\n              newProductOptions.current[index].selectedCaseList.push({\n                selectedCaseKey: null,\n                selectedCaseValue: null,\n              });\n              sete((prev) => ({\n                ...prev,\n                selectedCaseList:\n                  newProductOptions.current[index].selectedCaseList,\n              }));\n            }\n          }}\n          style={{ backgroundColor: \"#4050B5\", marginBottom: 25 }}\n        />\n      )}\n    </>\n  );\n};\n\nconst OptionView = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n  indexOn,\n  setindexOn,\n}) => {\n  const [e, sete] = useState(structuredClone(item));\n  // const [testMap, settestMap] = useState(structuredClone(item.optionsList));\n  // var optionLbls = newProduct.options.map(function (el) {\n  //   if (el.label !== e.label && el.label !== null) {\n  //     return el.label;\n  //   }\n  // });\n\n  // if (e.selectedCaseKey || e.selectedCaseValue) {\n  //   newProductOptions.current[index].selectedCaseList = [\n  //     {\n  //       selectedCaseKey: e.selectedCaseKey,\n  //       selectedCaseValue: e.selectedCaseValue,\n  //     },\n  //   ];\n  //   newProductOptions.current[index].selectedCaseKey = null;\n  //   newProductOptions.current[index].selectedCaseValue = null;\n  //   sete((prev) => ({\n  //     ...prev,\n  //     selectedCaseList: [{ selectedCaseKey: null, selectedCaseValue: null }],\n  //   }));\n  // }\n\n  return (\n    <View>\n      <View\n        style={{\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n          borderRadius: 10,\n        }}\n      >\n        <TouchableOpacity\n          onPress={() =>\n            indexOn !== index ? setindexOn(index) : setindexOn(null)\n          }\n          style={[\n            {\n              backgroundColor: \"grey\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: 5,\n              borderTopLeftRadius: 10,\n              borderTopRightRadius: 10,\n            },\n            indexOn !== index && {\n              borderBottomLeftRadius: 10,\n              borderBottomRightRadius: 10,\n            },\n          ]}\n        >\n          <Text\n            style={{\n              width: \"50%\",\n              paddingLeft: 5,\n              fontSize: 16,\n              color: \"white\",\n              fontFamily: \"archivo-600\",\n            }}\n          >\n            {item.label ? item.label : \"New Option\"}\n          </Text>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              function moveItem(from, to) {\n                // remove `from` item and store it\n                const f = newProductOptions.current.splice(from, 1)[0];\n                // insert stored item into position `to`\n                newProductOptions.current.splice(to, 0, f);\n              }\n\n              moveItem(index, index + 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <MaterialCommunityIcons\n              name=\"chevron-down\"\n              size={32}\n              color=\"white\"\n            />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              function moveItem(from, to) {\n                // remove `from` item and store it\n                const f = newProductOptions.current.splice(from, 1)[0];\n                // insert stored item into position `to`\n                newProductOptions.current.splice(to, 0, f);\n              }\n\n              moveItem(index, index - 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <MaterialCommunityIcons name=\"chevron-up\" size={32} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              newProductOptions.current.push({\n                ...item,\n                label: item.label + \" Copy\",\n              });\n              // setnewProduct((prevState) => ({\n              //   ...prevState,\n              //   options: newProductOptions.current,\n              // }));\n              // setindexOn(null);\n\n              //\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(newProductOptions.current.length - 1);\n              //\n            }}\n          >\n            <Feather name=\"copy\" size={32} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              const newProductOptionsUpdated = newProduct.options.filter(\n                (e, filterIndex) => filterIndex !== index\n              );\n              newProductOptions.current.splice(index, 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptionsUpdated,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <Feather name=\"x\" size={32} color=\"white\" />\n          </TouchableOpacity>\n        </TouchableOpacity>\n        {indexOn === index && (\n          <View style={{ padding: 20 }}>\n            <InnerOn\n              item={item}\n              index={index}\n              newProduct={newProduct}\n              newProductOptions={newProductOptions}\n              e={e}\n              sete={sete}\n            />\n          </View>\n        )}\n      </View>\n      {newProduct.options.length - 1 === index && (\n        <Button\n          title=\"Add Option\"\n          onPress={() => {\n            newProductOptions.current.push({\n              label: null,\n              optionsList: [],\n              selectedCaseKey: null,\n              selectedCaseValue: null,\n              numOfSelectable: null,\n              id: Math.random().toString(36).substr(2, 9),\n              optionType: null,\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(newProductOptions.current.length - 1);\n          }}\n          style={{ marginBottom: 25, backgroundColor: \"#4050B5\" }}\n          disabled={e.label === null}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default OptionView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}