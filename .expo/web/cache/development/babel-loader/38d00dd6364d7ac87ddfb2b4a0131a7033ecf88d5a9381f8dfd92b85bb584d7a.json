{"ast":null,"code":"import React from \"react\";\nimport \"react-native-gesture-handler\";\nimport RouteManager from \"./navigation/RouteManager\";\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar originalConsoleWarn = console.warn.bind(console);\nconsole.warn = function (msg) {\n  if (!msg.includes(\"BackHandler is not supported on web and should not be used\")) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    originalConsoleWarn.apply(void 0, [msg].concat(args));\n  }\n};\nvar App = function App() {\n  return _jsx(RouteManager, {});\n};\nexport default App;","map":{"version":3,"names":["React","RouteManager","originalConsoleWarn","console","warn","bind","msg","includes","args","App"],"sources":["/Users/peterputros/Desktop/PosMate/App.tsx"],"sourcesContent":["import React from \"react\";\nimport \"react-native-gesture-handler\";\nimport RouteManager from \"navigation/RouteManager\";\n\n// Backup the original console.warn function\nconst originalConsoleWarn = console.warn.bind(console);\n\nconsole.warn = (msg, ...args) => {\n  // Filter out the specific warning message about BackHandler\n  if (\n    !msg.includes(\"BackHandler is not supported on web and should not be used\")\n  ) {\n    originalConsoleWarn(msg, ...args);\n  }\n};\n\nconst App = () => {\n  return <RouteManager />;\n};\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,8BAA8B;AACrC,OAAOC,YAAY;;AAAgC;AAGnD,IAAMC,mBAAmB,GAAGC,OAAO,CAACC,IAAI,CAACC,IAAI,CAACF,OAAO,CAAC;AAEtDA,OAAO,CAACC,IAAI,GAAG,UAACE,GAAG,EAAc;EAE/B,IACE,CAACA,GAAG,CAACC,QAAQ,CAAC,4DAA4D,CAAC,EAC3E;IAAA,kCAJoBC,IAAI;MAAJA,IAAI;IAAA;IAKxBN,mBAAmB,gBAACI,GAAG,SAAKE,IAAI,EAAC;EACnC;AACF,CAAC;AAED,IAAMC,GAAG,GAAG,SAANA,GAAG,GAAS;EAChB,OAAO,KAAC,YAAY,KAAG;AACzB,CAAC;AAED,eAAeA,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}