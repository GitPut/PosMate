{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GOOGLE_API_KEY = \"AIzaSyB5l-wEA7ueMuvdHqVZK8ZD7-1yMLV076M\";\nvar App = function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    listOfAddresses = _useState2[0],\n    setlistOfAddresses = _useState2[1];\n  var GooglePlacesInput = function GooglePlacesInput(_ref) {\n    var placeholder = _ref.placeholder;\n    return _jsx(GooglePlacesAutocomplete, {\n      placeholder: placeholder,\n      fetchDetails: true,\n      onPress: function onPress(data, details) {\n        setlistOfAddresses([].concat(_toConsumableArray(listOfAddresses), [details]));\n      },\n      query: {\n        key: GOOGLE_API_KEY,\n        language: \"en\"\n      },\n      textInputProps: {\n        style: {\n          height: 40,\n          width: 500,\n          padding: 10,\n          fontSize: 15,\n          borderWidth: 2,\n          borderRadius: 6,\n          margin: 10\n        }\n      },\n      requestUrl: {\n        useOnPlatform: \"web\",\n        url: \"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api\"\n      }\n    });\n  };\n\n  var DistanceMatrix = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      yield fetch(\"https://maps.googleapis.com/maps/api/distancematrix/json?origins=\" + myCurrentPosition.location.lat + \",\" + myCurrentPosition.location.lng + \"&destinations=\" + documentSnapshot.data().driverLat + \",\" + documentSnapshot.data().driverLng + \"&key=\" + GOOGLE_API_KEY).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {});\n    });\n    return function DistanceMatrix() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [_jsx(Text, {\n        children: \"Get The Best Route List\"\n      }), listOfAddresses.length < 1 ? _jsx(GooglePlacesInput, {\n        placeholder: \"Start Address\"\n      }) : _jsx(GooglePlacesInput, {\n        placeholder: \"Enter Next Stop\"\n      })]\n    })\n  });\n};\nexport default App;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","GooglePlacesAutocomplete","GOOGLE_API_KEY","App","listOfAddresses","setlistOfAddresses","GooglePlacesInput","placeholder","data","details","key","language","style","height","width","padding","fontSize","borderWidth","borderRadius","margin","useOnPlatform","url","DistanceMatrix","fetch","myCurrentPosition","location","lat","lng","documentSnapshot","driverLat","driverLng","then","response","json","responseJson","flex","alignItems","justifyContent","length","styles","StyleSheet","create"],"sources":["/Users/peterputros/Desktop/best-route/App.tsx"],"sourcesContent":["import { SafeAreaView, StyleSheet, Text, TextInput, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\n\nconst GOOGLE_API_KEY = \"AIzaSyB5l-wEA7ueMuvdHqVZK8ZD7-1yMLV076M\";\n\nconst App = () => {\n  const [listOfAddresses, setlistOfAddresses] = useState([]);\n\n  const GooglePlacesInput = ({ placeholder }) => {\n    return (\n      <GooglePlacesAutocomplete\n        placeholder={placeholder}\n        fetchDetails={true}\n        onPress={(data, details) => {\n          setlistOfAddresses([...listOfAddresses, details]);\n        }}\n        query={{\n          key: GOOGLE_API_KEY,\n          language: \"en\",\n        }}\n        textInputProps={{\n          style: {\n            height: 40,\n            width: 500,\n            padding: 10,\n            fontSize: 15,\n            borderWidth: 2,\n            borderRadius: 6,\n            margin: 10,\n          },\n        }}\n        requestUrl={{\n          useOnPlatform: \"web\", // or \"all\"\n          url: \"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api\", // or any proxy server that hits https://maps.googleapis.com/maps/api\n          // headers: {\n          //   Authorization: `an auth token`, // if required for your proxy\n          // },\n        }}\n      />\n    );\n  };\n\n  const DistanceMatrix = async () => {\n    await fetch(\n      `https://maps.googleapis.com/maps/api/distancematrix/json?origins=${\n        myCurrentPosition.location.lat\n      },${myCurrentPosition.location.lng}&destinations=${\n        documentSnapshot.data().driverLat\n      },${documentSnapshot.data().driverLng}&key=${GOOGLE_API_KEY}`\n    )\n      .then((response) => response.json())\n      .then((responseJson) => {});\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <Text>Get The Best Route List</Text>\n        {listOfAddresses.length < 1 ? (\n          <GooglePlacesInput placeholder=\"Start Address\" />\n        ) : (\n          <GooglePlacesInput placeholder=\"Enter Next Stop\" />\n        )}\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default App;\n\nconst styles = StyleSheet.create({});\n"],"mappings":";;;;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,wBAAwB,QAAQ,yCAAyC;AAAC;AAAA;AAEnF,IAAMC,cAAc,GAAG,yCAAyC;AAEhE,IAAMC,GAAG,GAAG,SAANA,GAAG,GAAS;EAChB,gBAA8CH,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnDI,eAAe;IAAEC,kBAAkB;EAE1C,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,OAAwB;IAAA,IAAlBC,WAAW,QAAXA,WAAW;IACtC,OACE,KAAC,wBAAwB;MACvB,WAAW,EAAEA,WAAY;MACzB,YAAY,EAAE,IAAK;MACnB,OAAO,EAAE,iBAACC,IAAI,EAAEC,OAAO,EAAK;QAC1BJ,kBAAkB,8BAAKD,eAAe,IAAEK,OAAO,GAAE;MACnD,CAAE;MACF,KAAK,EAAE;QACLC,GAAG,EAAER,cAAc;QACnBS,QAAQ,EAAE;MACZ,CAAE;MACF,cAAc,EAAE;QACdC,KAAK,EAAE;UACLC,MAAM,EAAE,EAAE;UACVC,KAAK,EAAE,GAAG;UACVC,OAAO,EAAE,EAAE;UACXC,QAAQ,EAAE,EAAE;UACZC,WAAW,EAAE,CAAC;UACdC,YAAY,EAAE,CAAC;UACfC,MAAM,EAAE;QACV;MACF,CAAE;MACF,UAAU,EAAE;QACVC,aAAa,EAAE,KAAK;QACpBC,GAAG,EAAE;MAIP;IAAE,EACF;EAEN,CAAC;;EAED,IAAMC,cAAc;IAAA,8BAAG,aAAY;MACjC,MAAMC,KAAK,uEAEPC,iBAAiB,CAACC,QAAQ,CAACC,GAAG,SAC5BF,iBAAiB,CAACC,QAAQ,CAACE,GAAG,sBAChCC,gBAAgB,CAACpB,IAAI,EAAE,CAACqB,SAAS,SAC/BD,gBAAgB,CAACpB,IAAI,EAAE,CAACsB,SAAS,aAAQ5B,cAAc,CAC5D,CACE6B,IAAI,CAAC,UAACC,QAAQ;QAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE;MAAA,EAAC,CACnCF,IAAI,CAAC,UAACG,YAAY,EAAK,CAAC,CAAC,CAAC;IAC/B,CAAC;IAAA,gBAVKZ,cAAc;MAAA;IAAA;EAAA,GAUnB;EAED,OACE,KAAC,YAAY;IAAC,KAAK,EAAE;MAAEa,IAAI,EAAE;IAAE,CAAE;IAAA,UAC/B,MAAC,IAAI;MAAC,KAAK,EAAE;QAAEA,IAAI,EAAE,CAAC;QAAEC,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAA,WACvE,KAAC,IAAI;QAAA;MAAA,EAA+B,EACnCjC,eAAe,CAACkC,MAAM,GAAG,CAAC,GACzB,KAAC,iBAAiB;QAAC,WAAW,EAAC;MAAe,EAAG,GAEjD,KAAC,iBAAiB;QAAC,WAAW,EAAC;MAAiB,EACjD;IAAA;EACI,EACM;AAEnB,CAAC;AAED,eAAenC,GAAG;AAElB,IAAMoC,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}