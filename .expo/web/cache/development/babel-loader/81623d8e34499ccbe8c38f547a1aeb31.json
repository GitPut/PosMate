{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"../state/state\";\nimport { updateData } from \"../state/firebaseFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AddProduct = function AddProduct(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _ref2 = route.params ? route.params : {\n      existingProduct: null,\n      existingProductIndex: null\n    },\n    existingProduct = _ref2.existingProduct,\n    existingProductIndex = _ref2.existingProductIndex;\n  var catalog = userStoreState.use();\n  var _useState = useState(existingProduct ? existingProduct : {\n      name: null,\n      price: null,\n      catagory: null,\n      options: [],\n      description: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    newProduct = _useState2[0],\n    setnewProduct = _useState2[1];\n  var newProductOptions = useRef(existingProduct ? existingProduct.options : []);\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    indexOn = _useState4[0],\n    setindexOn = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentY = _useState6[0],\n    setcurrentY = _useState6[1];\n  var MyListItem = useMemo(function () {\n    return function (_ref3) {\n      var item = _ref3.item,\n        index = _ref3.index;\n      var memoizedItem = item;\n      if (indexOn !== index) {\n        return _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return setindexOn(index);\n          },\n          style: {\n            padding: 25,\n            margin: 15,\n            backgroundColor: \"lightgrey\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            height: 100\n          },\n          children: [_jsx(Text, {\n            children: memoizedItem.label\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              newProductOptions.current.push(_objectSpread(_objectSpread({}, memoizedItem), {}, {\n                label: memoizedItem.label + \" Copy\"\n              }));\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newProductOptions.current\n                });\n              });\n              setindexOn(newProductOptions.current.length - 1);\n            },\n            children: _jsx(Text, {\n              style: {\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"Copy\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              newProductOptions.current.splice(index, 1);\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newProductOptions.current\n                });\n              });\n              setindexOn(indexOn - 1);\n            },\n            children: _jsx(Text, {\n              style: {\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"X\"\n            })\n          })]\n        });\n      } else {\n        var _useState7 = useState([]),\n          _useState8 = _slicedToArray(_useState7, 2),\n          optionLblsValues = _useState8[0],\n          setoptionLblsValues = _useState8[1];\n        var _useState9 = useState(memoizedItem),\n          _useState10 = _slicedToArray(_useState9, 2),\n          e = _useState10[0],\n          sete = _useState10[1];\n        var optionLbls = newProduct.options.map(function (el) {\n          if (el.label !== e.label && el.label !== null) {\n            return el.label;\n          }\n        });\n\n        if (e.selectedCaseKey !== null) {\n          var local = newProduct.options.filter(function (localE) {\n            return localE.label == e.selectedCaseKey;\n          });\n          var optionLblsValuesLocal = local[0].optionsList.map(function (el) {\n            return el.label;\n          });\n          setoptionLblsValues(optionLblsValuesLocal);\n        }\n\n        return _jsx(View, {\n          children: _jsxs(View, {\n            style: {\n              padding: 25,\n              margin: 15,\n              backgroundColor: \"lightgrey\"\n            },\n            children: [_jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                newProductOptions.current.push(_objectSpread(_objectSpread({}, e), {}, {\n                  label: e.label + \" Copy\"\n                }));\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    options: newProductOptions.current\n                  });\n                });\n                setindexOn(newProductOptions.current.length - 1);\n              },\n              children: _jsx(Text, {\n                style: {\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\"\n                },\n                children: \"Copy\"\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                newProductOptions.current.splice(index, 1);\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    options: newProductOptions.current\n                  });\n                });\n                setindexOn(indexOn - 1);\n              },\n              children: _jsx(Text, {\n                style: {\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\"\n                },\n                children: \"X\"\n              })\n            }), _jsx(TextInput, {\n              placeholder: \"Enter Select List Label\",\n              onChangeText: function onChangeText(val) {\n                sete(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    label: val\n                  });\n                });\n                newProductOptions.current[index].label = val;\n              },\n              value: e.label,\n              style: {\n                marginBottom: 25\n              }\n            }), _jsx(DropDown, {\n              label: \"Option Type\",\n              options: [\"Standard\", \"Dropdown\"],\n              setValue: function setValue(val) {\n                if (e.optionType) {\n                  newProductOptions.current[index].optionType = val;\n                } else {\n                  newProductOptions.current[index] = _objectSpread(_objectSpread({}, e), {}, {\n                    optionType: val\n                  });\n                  console.log(newProductOptions.current[index].optionType);\n                }\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    options: newProductOptions.current\n                  });\n                });\n              },\n              value: e.optionType,\n              style: {\n                marginBottom: 25\n              }\n            }), _jsx(TextInput, {\n              placeholder: \"Enter Number Of Selectable; If There Is\",\n              onChangeText: function onChangeText(val) {\n                sete(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    numOfSelectable: val\n                  });\n                });\n                newProductOptions.current[index].numOfSelectable = val;\n              },\n              value: e.numOfSelectable,\n              style: {\n                marginBottom: 25\n              }\n            }), e.optionsList.map(function (eInnerListStart, indexInnerList) {\n              var _useState11 = useState(eInnerListStart),\n                _useState12 = _slicedToArray(_useState11, 2),\n                eInnerList = _useState12[0],\n                seteInnerList = _useState12[1];\n              return _jsxs(View, {\n                style: {\n                  flexDirection: \"row\",\n                  marginBottom: 25,\n                  alignItems: \"center\"\n                },\n                children: [_jsx(TextInput, {\n                  placeholder: \"Enter Option Label\",\n                  onChangeText: function onChangeText(val) {\n                    newProductOptions.current[index].optionsList[indexInnerList].label = val;\n                    seteInnerList(function (prevState) {\n                      return _objectSpread(_objectSpread({}, prevState), {}, {\n                        label: val\n                      });\n                    });\n                  },\n                  value: eInnerList.label\n                }), _jsx(TextInput, {\n                  placeholder: \"Enter price increase\",\n                  onChangeText: function onChangeText(val) {\n                    newProductOptions.current[index].optionsList[indexInnerList].priceIncrease = val;\n                    seteInnerList(function (prevState) {\n                      return _objectSpread(_objectSpread({}, prevState), {}, {\n                        priceIncrease: val\n                      });\n                    });\n                  },\n                  value: eInnerList.priceIncrease,\n                  style: {\n                    marginLeft: 20,\n                    marginRight: 20\n                  }\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    newProductOptions.current[index].optionsList.splice(indexInnerList, 1);\n                    setnewProduct(function (prevState) {\n                      return _objectSpread(_objectSpread({}, prevState), {}, {\n                        options: newProductOptions.current\n                      });\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: {\n                      fontWeight: \"700\",\n                      color: \"red\"\n                    },\n                    children: \"X\"\n                  })\n                })]\n              });\n            }), _jsx(Button, {\n              title: \"Add Option Choice\",\n              onPress: function onPress() {\n                newProductOptions.current[index].optionsList.push({\n                  label: null,\n                  priceIncrease: null\n                });\n                setcurrentY(window.pageYOffset);\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    options: newProductOptions.current\n                  });\n                });\n              },\n              style: {\n                marginBottom: 25\n              }\n            }), optionLbls.length > 1 && _jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginBottom: 25\n              },\n              children: [_jsx(DropDown, {\n                label: \"Show if...\",\n                options: optionLbls,\n                setValue: function setValue(val) {\n                  sete(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      selectedCaseKey: val\n                    });\n                  });\n                  newProductOptions.current[index].selectedCaseKey = val;\n                },\n                value: e.selectedCaseKey,\n                style: {\n                  marginBottom: 25\n                }\n              }), _jsx(Text, {\n                children: \"\\\"=\\\"\"\n              }), _jsx(DropDown, {\n                label: \"Show if...\",\n                options: optionLblsValues,\n                setValue: function setValue(val) {\n                  sete(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      selectedCaseValue: val\n                    });\n                  });\n                  newProductOptions.current[index].selectedCaseValue = val;\n                },\n                value: e.selectedCaseValue,\n                style: {\n                  marginBottom: 25\n                }\n              })]\n            })]\n          })\n        });\n      }\n    };\n  }, [indexOn]);\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [copyProductData]));\n      navigation.goBack();\n    } else if (existingProduct) {\n      var copy = structuredClone(catalog.products);\n      var newProductUseRef = _objectSpread(_objectSpread({}, newProduct), {}, {\n        options: newProductOptions.current\n      });\n      copy[existingProductIndex] = newProductUseRef;\n      updateData(_toConsumableArray(catalog.categories), copy);\n      navigation.goBack();\n    } else {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [newProduct]));\n      navigation.goBack();\n    }\n  }\n  var OptionsAddingSection = function OptionsAddingSection() {\n    return _jsxs(View, {\n      children: [_jsx(FlatList\n      , {\n        getItemLayout: function getItemLayout(data, index) {\n          var _data$optionsList;\n          return {\n            length: index === indexOn ? 400 * ((_data$optionsList = data.optionsList) == null ? void 0 : _data$optionsList.length) : 100,\n            offset: 400 * index,\n            index: index\n          };\n        },\n        data: newProduct.options,\n        keyExtractor: function keyExtractor(item) {\n          var _item$id;\n          return (_item$id = item.id) == null ? void 0 : _item$id.toString();\n        },\n        renderItem: MyListItem\n      }), _jsx(Button, {\n        title: \"Add Product Option\",\n        onPress: function onPress() {\n          newProductOptions.current.push({\n            label: null,\n            optionsList: [],\n            selectedCaseKey: null,\n            selectedCaseValue: null,\n            numOfSelectable: null,\n            id: Math.random().toString(36).substr(2, 9),\n            optionType: null\n          });\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n          setindexOn(newProductOptions.current.length - 1);\n        },\n        style: {\n          marginBottom: 25\n        }\n      })]\n    });\n  };\n  return _jsx(ScrollView, {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      flex: 1\n    },\n    contentContainerStyle: {\n      width: \"93%\",\n      alignSelf: \"center\",\n      marginTop: 25\n    },\n    children: _jsxs(_Fragment, {\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          padding: 20,\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Text, {\n            style: {\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\"\n            },\n            children: \"X\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            var copy = structuredClone(newProduct);\n            copy.name = copy.name + \" Copy\";\n            handleDataUpdate(copy);\n          },\n          children: _jsx(Text, {\n            style: {\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\"\n            },\n            children: \"Copy\"\n          })\n        }), _jsx(Text, {\n          style: {\n            marginBottom: 25\n          },\n          children: \"AddProduct\"\n        })]\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Product Name\",\n        onChangeText: function onChangeText(val) {\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              name: val\n            });\n          });\n        },\n        value: newProduct.name,\n        style: {\n          marginBottom: 25\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Enter any other items that come with this\",\n        onChangeText: function onChangeText(val) {\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              description: val\n            });\n          });\n        },\n        style: {\n          marginBottom: 25\n        },\n        value: newProduct.description\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Product Price\",\n        onChangeText: function onChangeText(val) {\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              price: val\n            });\n          });\n        },\n        style: {\n          marginBottom: 25\n        },\n        value: newProduct.price\n      }), _jsx(DropDown, {\n        label: \"Choose catagory\",\n        options: catalog.categories,\n        setValue: function setValue(val) {\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              catagory: val\n            });\n          });\n        },\n        value: newProduct.catagory,\n        style: {\n          marginBottom: 25\n        }\n      }), _jsx(OptionsAddingSection, {}), _jsx(Button, {\n        title: \"Add/Save Product\",\n        onPress: function onPress() {\n          handleDataUpdate();\n        },\n        style: {\n          marginBottom: 25,\n          marginTop: 25,\n          backgroundColor: \"lightgreen\"\n        }\n      })]\n    })\n  });\n};\nexport default AddProduct;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useMemo","useRef","useState","Button","TextInput","DropDown","userStoreState","updateData","AddProduct","route","navigation","params","existingProduct","existingProductIndex","catalog","use","name","price","catagory","options","description","newProduct","setnewProduct","newProductOptions","indexOn","setindexOn","currentY","setcurrentY","MyListItem","item","index","memoizedItem","padding","margin","backgroundColor","flexDirection","justifyContent","height","label","current","push","prevState","length","marginBottom","fontWeight","color","splice","optionLblsValues","setoptionLblsValues","e","sete","optionLbls","map","el","selectedCaseKey","local","filter","localE","optionLblsValuesLocal","optionsList","val","optionType","console","log","numOfSelectable","eInnerListStart","indexInnerList","eInnerList","seteInnerList","alignItems","priceIncrease","marginLeft","marginRight","window","pageYOffset","selectedCaseValue","handleDataUpdate","copyProductData","categories","products","goBack","copy","structuredClone","newProductUseRef","OptionsAddingSection","data","offset","id","toString","Math","random","substr","width","flex","alignSelf","marginTop","styles","StyleSheet","create"],"sources":["/Users/peterputros/Desktop/PosMate-1/components/TestAdd.tsx"],"sourcesContent":["import {\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"state/state\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst AddProduct = ({ route, navigation }) => {\n  const { existingProduct, existingProductIndex } = route.params\n    ? route.params\n    : { existingProduct: null, existingProductIndex: null };\n\n  const catalog = userStoreState.use();\n  const [newProduct, setnewProduct] = useState(\n    existingProduct\n      ? existingProduct\n      : {\n          name: null,\n          price: null,\n          catagory: null,\n          options: [],\n          description: null,\n        }\n  );\n  const newProductOptions = useRef(\n    existingProduct ? existingProduct.options : []\n  );\n  const [indexOn, setindexOn] = useState(0);\n  const [currentY, setcurrentY] = useState(0);\n\n  const MyListItem = useMemo(\n    () =>\n      ({ item, index }) => {\n        // const memoizedItem = useMemo(() => item, [item]);\n        const memoizedItem = item;\n\n        if (indexOn !== index) {\n          return (\n            <TouchableOpacity\n              onPress={() => setindexOn(index)}\n              style={{\n                padding: 25,\n                margin: 15,\n                backgroundColor: \"lightgrey\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                height: 100,\n              }}\n            >\n              <Text>{memoizedItem.label}</Text>\n              <TouchableOpacity\n                onPress={() => {\n                  newProductOptions.current.push({\n                    ...memoizedItem,\n                    label: memoizedItem.label + \" Copy\",\n                  });\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: newProductOptions.current,\n                  }));\n                  setindexOn(newProductOptions.current.length - 1);\n                }}\n              >\n                <Text\n                  style={{\n                    marginBottom: 25,\n                    fontWeight: \"700\",\n                    color: \"red\",\n                  }}\n                >\n                  Copy\n                </Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                onPress={() => {\n                  newProductOptions.current.splice(index, 1);\n\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: newProductOptions.current,\n                  }));\n                  setindexOn(indexOn - 1);\n                }}\n              >\n                <Text\n                  style={{\n                    marginBottom: 25,\n                    fontWeight: \"700\",\n                    color: \"red\",\n                  }}\n                >\n                  X\n                </Text>\n              </TouchableOpacity>\n            </TouchableOpacity>\n          );\n        } else {\n          const [optionLblsValues, setoptionLblsValues] = useState([]);\n          const [e, sete] = useState(memoizedItem);\n          var optionLbls = newProduct.options.map(function (el) {\n            if (el.label !== e.label && el.label !== null) {\n              return el.label;\n            }\n          });\n\n          // useEffect(() => {\n          if (e.selectedCaseKey !== null) {\n            const local = newProduct.options.filter(\n              (localE) => localE.label == e.selectedCaseKey\n            );\n            const optionLblsValuesLocal = local[0].optionsList.map(function (\n              el\n            ) {\n              return el.label;\n            });\n            setoptionLblsValues(optionLblsValuesLocal);\n          }\n          //?\n\n          return (\n            <View>\n              <View\n                style={{\n                  padding: 25,\n                  margin: 15,\n                  backgroundColor: \"lightgrey\",\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => {\n                    newProductOptions.current.push({\n                      ...e,\n                      label: e.label + \" Copy\",\n                    });\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: newProductOptions.current,\n                    }));\n                    setindexOn(newProductOptions.current.length - 1);\n                  }}\n                >\n                  <Text\n                    style={{\n                      marginBottom: 25,\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    Copy\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={() => {\n                    newProductOptions.current.splice(index, 1);\n\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: newProductOptions.current,\n                    }));\n                    setindexOn(indexOn - 1);\n                  }}\n                >\n                  <Text\n                    style={{\n                      marginBottom: 25,\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n                <TextInput\n                  placeholder=\"Enter Select List Label\"\n                  onChangeText={(val) => {\n                    sete((prevState) => ({ ...prevState, label: val }));\n                    newProductOptions.current[index].label = val;\n                  }}\n                  value={e.label}\n                  style={{ marginBottom: 25 }}\n                />\n                {/* optionType */}\n                <DropDown\n                  label=\"Option Type\"\n                  options={[\"Standard\", \"Dropdown\"]}\n                  setValue={(val) => {\n                    // sete((prevState) => ({\n                    //   ...prevState,\n                    //   optionType: val,\n                    // }));\n                    if (e.optionType) {\n                      newProductOptions.current[index].optionType = val;\n                    } else {\n                      newProductOptions.current[index] = {\n                        ...e,\n                        optionType: val,\n                      };\n                      console.log(newProductOptions.current[index].optionType);\n                    }\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: newProductOptions.current,\n                    }));\n                  }}\n                  value={e.optionType}\n                  style={{ marginBottom: 25 }}\n                />\n                <TextInput\n                  placeholder=\"Enter Number Of Selectable; If There Is\"\n                  onChangeText={(val) => {\n                    sete((prevState) => ({\n                      ...prevState,\n                      numOfSelectable: val,\n                    }));\n                    newProductOptions.current[index].numOfSelectable = val;\n                  }}\n                  value={e.numOfSelectable}\n                  style={{ marginBottom: 25 }}\n                />\n                {e.optionsList.map((eInnerListStart, indexInnerList) => {\n                  const [eInnerList, seteInnerList] = useState(eInnerListStart);\n                  return (\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        marginBottom: 25,\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <TextInput\n                        placeholder=\"Enter Option Label\"\n                        onChangeText={(val) => {\n                          newProductOptions.current[index].optionsList[\n                            indexInnerList\n                          ].label = val;\n                          seteInnerList((prevState) => ({\n                            ...prevState,\n                            label: val,\n                          }));\n                        }}\n                        value={eInnerList.label}\n                      />\n                      <TextInput\n                        placeholder=\"Enter price increase\"\n                        onChangeText={(val) => {\n                          newProductOptions.current[index].optionsList[\n                            indexInnerList\n                          ].priceIncrease = val;\n                          seteInnerList((prevState) => ({\n                            ...prevState,\n                            priceIncrease: val,\n                          }));\n                        }}\n                        value={eInnerList.priceIncrease}\n                        style={{ marginLeft: 20, marginRight: 20 }}\n                      />\n                      <TouchableOpacity\n                        onPress={() => {\n                          newProductOptions.current[index].optionsList.splice(\n                            indexInnerList,\n                            1\n                          );\n                          setnewProduct((prevState) => ({\n                            ...prevState,\n                            options: newProductOptions.current,\n                          }));\n                        }}\n                      >\n                        <Text\n                          style={{\n                            fontWeight: \"700\",\n                            color: \"red\",\n                          }}\n                        >\n                          X\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                  );\n                })}\n                <Button\n                  title=\"Add Option Choice\"\n                  onPress={() => {\n                    newProductOptions.current[index].optionsList.push({\n                      label: null,\n                      priceIncrease: null,\n                    });\n                    setcurrentY(window.pageYOffset);\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: newProductOptions.current,\n                    }));\n                  }}\n                  style={{ marginBottom: 25 }}\n                />\n                {optionLbls.length > 1 && (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      marginBottom: 25,\n                    }}\n                  >\n                    <DropDown\n                      label=\"Show if...\"\n                      options={optionLbls}\n                      setValue={(val) => {\n                        sete((prevState) => ({\n                          ...prevState,\n                          selectedCaseKey: val,\n                        }));\n                        newProductOptions.current[index].selectedCaseKey = val;\n                      }}\n                      value={e.selectedCaseKey}\n                      style={{ marginBottom: 25 }}\n                    />\n                    <Text>\"=\"</Text>\n                    <DropDown\n                      label=\"Show if...\"\n                      options={optionLblsValues}\n                      setValue={(val) => {\n                        sete((prevState) => ({\n                          ...prevState,\n                          selectedCaseValue: val,\n                        }));\n                        newProductOptions.current[index].selectedCaseValue =\n                          val;\n                      }}\n                      value={e.selectedCaseValue}\n                      style={{ marginBottom: 25 }}\n                    />\n                  </View>\n                )}\n              </View>\n            </View>\n          );\n        }\n      },\n    [indexOn]\n  );\n\n  // useEffect(() => {\n  //   //setTimeout(() => {\n  //   window.scrollTo({\n  //     top: currentY,\n  //     behavior: \"instant\",\n  //   });\n  //   //}, 500);\n  // }, [currentY]);\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(\n        [...catalog.categories],\n        [...catalog.products, copyProductData]\n      );\n      navigation.goBack();\n    } else if (existingProduct) {\n      let copy = structuredClone(catalog.products);\n      const newProductUseRef = {\n        ...newProduct,\n        options: newProductOptions.current,\n      };\n      copy[existingProductIndex] = newProductUseRef;\n      updateData([...catalog.categories], copy);\n      navigation.goBack();\n    } else {\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\n      navigation.goBack();\n    }\n  }\n\n  const OptionsAddingSection = () => {\n    return (\n      <View>\n        <FlatList\n          // onLayout={() =>\n          //   window.scrollTo({\n          //     top: currentY,\n          //     behavior: \"instant\",\n          //   })\n          // }\n          getItemLayout={(data, index) => ({\n            length: index === indexOn ? 400 * data.optionsList?.length : 100,\n            offset: 400 * index,\n            index,\n          })}\n          data={newProduct.options}\n          keyExtractor={(item) => item.id?.toString()}\n          renderItem={MyListItem}\n        />\n        <Button\n          title=\"Add Product Option\"\n          onPress={() => {\n            newProductOptions.current.push({\n              label: null,\n              optionsList: [],\n              selectedCaseKey: null,\n              selectedCaseValue: null,\n              numOfSelectable: null,\n              id: Math.random().toString(36).substr(2, 9),\n              optionType: null,\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(newProductOptions.current.length - 1);\n          }}\n          style={{ marginBottom: 25 }}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView\n      style={{ width: \"100%\", height: \"100%\", flex: 1 }}\n      contentContainerStyle={{\n        width: \"93%\",\n        alignSelf: \"center\",\n        marginTop: 25,\n      }}\n    >\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            padding: 20,\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <TouchableOpacity onPress={() => navigation.goBack()}>\n            <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n              X\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              let copy = structuredClone(newProduct);\n              copy.name = copy.name + \" Copy\";\n              handleDataUpdate(copy);\n            }}\n          >\n            <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n              Copy\n            </Text>\n          </TouchableOpacity>\n          <Text style={{ marginBottom: 25 }}>AddProduct</Text>\n        </View>\n        <TextInput\n          placeholder=\"Enter Product Name\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, name: val }));\n          }}\n          value={newProduct.name}\n          style={{ marginBottom: 25 }}\n        />\n        <TextInput\n          placeholder=\"Enter any other items that come with this\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, description: val }));\n          }}\n          style={{ marginBottom: 25 }}\n          value={newProduct.description}\n        />\n        <TextInput\n          placeholder=\"Enter Product Price\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, price: val }));\n          }}\n          style={{ marginBottom: 25 }}\n          value={newProduct.price}\n        />\n        <DropDown\n          label=\"Choose catagory\"\n          options={catalog.categories}\n          setValue={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, catagory: val }));\n          }}\n          value={newProduct.catagory}\n          style={{ marginBottom: 25 }}\n        />\n        <OptionsAddingSection />\n        <Button\n          title=\"Add/Save Product\"\n          onPress={() => {\n            handleDataUpdate();\n          }}\n          style={{\n            marginBottom: 25,\n            marginTop: 25,\n            backgroundColor: \"lightgreen\",\n          }}\n        />\n      </>\n    </ScrollView>\n  );\n};\n\nexport default AddProduct;\n\nconst styles = StyleSheet.create({});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}