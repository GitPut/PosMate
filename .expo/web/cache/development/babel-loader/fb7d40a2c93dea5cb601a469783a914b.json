{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { setStoreDetailState, storeDetailState } from \"../state/state\";\nimport { updateStoreDetails } from \"../state/firebaseFunctions\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\nvar EditStoreDetails = function EditStoreDetails(_ref) {\n  var customBtnLbl = _ref.customBtnLbl,\n    customBtnExtraFunction = _ref.customBtnExtraFunction;\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width,\n    height = _useWindowDimensions.height;\n  var storeDetails = storeDetailState.use();\n  var _useState = useState(storeDetails.name),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setname = _useState2[1];\n  var _useState3 = useState(storeDetails.phoneNumber),\n    _useState4 = _slicedToArray(_useState3, 2),\n    phoneNumber = _useState4[0],\n    setphoneNumber = _useState4[1];\n  var _useState5 = useState(storeDetails.address),\n    _useState6 = _slicedToArray(_useState5, 2),\n    address = _useState6[0],\n    setaddress = _useState6[1];\n  var _useState7 = useState(storeDetails.website),\n    _useState8 = _slicedToArray(_useState7, 2),\n    website = _useState8[0],\n    setwebsite = _useState8[1];\n  var _useState9 = useState(storeDetails.deliveryPrice),\n    _useState10 = _slicedToArray(_useState9, 2),\n    deliveryPrice = _useState10[0],\n    setdeliveryPrice = _useState10[1];\n  var _useState11 = useState(storeDetails.comSelected),\n    _useState12 = _slicedToArray(_useState11, 2),\n    com = _useState12[0],\n    setcom = _useState12[1];\n  var _useState13 = useState(storeDetails.settingsPassword),\n    _useState14 = _slicedToArray(_useState13, 2),\n    settingsPassword = _useState14[0],\n    setsettingsPassword = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    localAddress = _useState16[0],\n    setlocalAddress = _useState16[1];\n  useEffect(function () {\n    setaddress(localAddress == null ? void 0 : localAddress.label);\n  }, [localAddress]);\n  var handleDataUpdate = function handleDataUpdate() {\n    if (name !== null && phoneNumber !== null && address !== null && settingsPassword !== null) {\n      setStoreDetailState({\n        name: name,\n        phoneNumber: phoneNumber,\n        address: address,\n        website: website,\n        deliveryPrice: deliveryPrice,\n        comSelected: com,\n        settingsPassword: settingsPassword\n      });\n      updateStoreDetails({\n        name: name,\n        phoneNumber: phoneNumber,\n        address: address,\n        website: website,\n        deliveryPrice: deliveryPrice,\n        comSelected: com,\n        settingsPassword: settingsPassword\n      });\n      customBtnExtraFunction();\n    }\n  };\n  return _jsxs(ScrollView, {\n    style: {\n      padding: 25\n    },\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        flex: 1\n      },\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter Store Name\",\n        onChangeText: function onChangeText(val) {\n          return setname(val);\n        },\n        style: {\n          margin: 10,\n          minWidth: \"30%\",\n          flex: 1\n        },\n        value: name\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Store Website Url\",\n        onChangeText: function onChangeText(val) {\n          return setwebsite(val);\n        },\n        style: {\n          margin: 10,\n          minWidth: \"30%\",\n          flex: 1\n        },\n        value: website\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Store Phone Number\",\n        onChangeText: function onChangeText(val) {\n          return setphoneNumber(val);\n        },\n        style: {\n          margin: 10,\n          minWidth: \"30%\",\n          flex: 1\n        },\n        value: phoneNumber\n      }), _jsx(View, {}), _jsx(GooglePlacesAutocomplete, {\n        apiOptions: {\n          region: \"CA\"\n        },\n        debounce: 800,\n        apiKey: GOOGLE_API_KEY\n        ,\n        selectProps: {\n          localAddress: localAddress,\n          onChange: setlocalAddress\n        },\n        renderSuggestions: function renderSuggestions(active, suggestions, onSelectSuggestion) {\n          return _jsx(\"div\", {\n            style: {\n              width: width * 0.8,\n              margin: 10,\n              flex: 1\n            },\n            children: suggestions.map(function (suggestion) {\n              return _jsx(\"div\", {\n                className: \"suggestion\",\n                onClick: function onClick(event) {\n                  onSelectSuggestion(suggestion, event);\n                },\n                children: suggestion.description\n              });\n            })\n          });\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Delivery Price\",\n        onChangeText: function onChangeText(val) {\n          return setdeliveryPrice(val);\n        },\n        style: {\n          margin: 10,\n          minWidth: \"30%\"\n        },\n        value: deliveryPrice\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Printer Name\",\n        onChangeText: function onChangeText(val) {\n          return setcom(val);\n        },\n        style: {\n          margin: 10,\n          minWidth: \"30%\"\n        },\n        value: com\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Settings Page Password\",\n        onChangeText: function onChangeText(val) {\n          return setsettingsPassword(val);\n        },\n        style: {\n          margin: 10,\n          minWidth: \"30%\"\n        },\n        value: settingsPassword\n      })]\n    }), _jsx(Button, {\n      title: customBtnLbl ? customBtnLbl : \"Save\",\n      onPress: handleDataUpdate,\n      style: {\n        margin: 10\n      }\n    }), _jsx(Text, {\n      style: {\n        marginTop: 30\n      },\n      children: \"DOWNLOAD HELPER WINDOWS\"\n    }), _jsx(\"a\", {\n      href: require(\"../assets/divine-pos-helper.exe\"),\n      download: \"Divine Pos Helper.exe\",\n      children: _jsx(Button, {\n        title: \"DOWNLOAD HELPER WINDOWS\"\n      })\n    }), _jsx(Text, {\n      style: {\n        marginTop: 30\n      },\n      children: \"DOWNLOAD HELPER MAC\"\n    }), _jsx(\"a\", {\n      href: require(\"../assets/divine-pos-helper.pkg\"),\n      download: \"Divine Pos Helper.pkg\",\n      children: _jsx(Button, {\n        title: \"DOWNLOAD HELPER MAC\"\n      })\n    })]\n  });\n};\nexport default EditStoreDetails;","map":{"version":3,"names":["React","useEffect","useState","Button","TextInput","setStoreDetailState","storeDetailState","updateStoreDetails","GooglePlacesAutocomplete","GOOGLE_API_KEY","EditStoreDetails","customBtnLbl","customBtnExtraFunction","useWindowDimensions","width","height","storeDetails","use","name","setname","phoneNumber","setphoneNumber","address","setaddress","website","setwebsite","deliveryPrice","setdeliveryPrice","comSelected","com","setcom","settingsPassword","setsettingsPassword","localAddress","setlocalAddress","label","handleDataUpdate","padding","flexDirection","flexWrap","flex","val","margin","minWidth","region","onChange","active","suggestions","onSelectSuggestion","map","suggestion","event","description","marginTop","require"],"sources":["/Users/peterputros/Desktop/PosMate/components/EditStoreDetails.tsx"],"sourcesContent":["import { View, Text, ScrollView, useWindowDimensions } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport { setStoreDetailState, storeDetailState } from \"state/state\";\nimport { updateStoreDetails } from \"state/firebaseFunctions\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\n\nconst GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\n\nconst EditStoreDetails = ({ customBtnLbl, customBtnExtraFunction }) => {\n  const { width, height } = useWindowDimensions();\n  const storeDetails = storeDetailState.use();\n  const [name, setname] = useState(storeDetails.name);\n  const [phoneNumber, setphoneNumber] = useState(storeDetails.phoneNumber);\n  const [address, setaddress] = useState(storeDetails.address);\n  const [website, setwebsite] = useState(storeDetails.website);\n  const [deliveryPrice, setdeliveryPrice] = useState(\n    storeDetails.deliveryPrice\n  );\n  const [com, setcom] = useState(storeDetails.comSelected);\n  const [settingsPassword, setsettingsPassword] = useState(\n    storeDetails.settingsPassword\n  );\n  const [localAddress, setlocalAddress] = useState(null);\n\n  useEffect(() => {\n    setaddress(localAddress?.label);\n  }, [localAddress]);\n\n  const handleDataUpdate = () => {\n    if (\n      name !== null &&\n      phoneNumber !== null &&\n      address !== null &&\n      settingsPassword !== null\n    ) {\n      setStoreDetailState({\n        name: name,\n        phoneNumber: phoneNumber,\n        address: address,\n        website: website,\n        deliveryPrice: deliveryPrice,\n        comSelected: com,\n        settingsPassword: settingsPassword,\n      });\n      updateStoreDetails({\n        name: name,\n        phoneNumber: phoneNumber,\n        address: address,\n        website: website,\n        deliveryPrice: deliveryPrice,\n        comSelected: com,\n        settingsPassword: settingsPassword,\n      });\n      customBtnExtraFunction();\n    }\n  };\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <View style={{ flexDirection: \"row\", flexWrap: \"wrap\", flex: 1 }}>\n        <TextInput\n          placeholder=\"Enter Store Name\"\n          onChangeText={(val) => setname(val)}\n          style={{ margin: 10, minWidth: \"30%\", flex: 1 }}\n          value={name}\n        />\n        <TextInput\n          placeholder=\"Enter Store Website Url\"\n          onChangeText={(val) => setwebsite(val)}\n          style={{ margin: 10, minWidth: \"30%\", flex: 1 }}\n          value={website}\n        />\n        <TextInput\n          placeholder=\"Enter Store Phone Number\"\n          onChangeText={(val) => setphoneNumber(val)}\n          style={{ margin: 10, minWidth: \"30%\", flex: 1 }}\n          value={phoneNumber}\n        />\n        <View></View>\n        <GooglePlacesAutocomplete\n          apiOptions={{\n            region: \"CA\",\n          }}\n          debounce={800}\n          apiKey={GOOGLE_API_KEY}\n          // onSelect={handleAddress}\n          selectProps={{\n            localAddress,\n            onChange: setlocalAddress,\n          }}\n          renderSuggestions={(active, suggestions, onSelectSuggestion) => (\n            <div style={{ width: width * 0.8, margin: 10, flex: 1 }}>\n              {suggestions.map((suggestion) => (\n                <div\n                  className=\"suggestion\"\n                  onClick={(event) => {\n                    onSelectSuggestion(suggestion, event);\n                  }}\n                >\n                  {suggestion.description}\n                </div>\n              ))}\n            </div>\n          )}\n        />\n        <TextInput\n          placeholder=\"Enter Delivery Price\"\n          onChangeText={(val) => setdeliveryPrice(val)}\n          style={{ margin: 10, minWidth: \"30%\" }}\n          value={deliveryPrice}\n        />\n        <TextInput\n          placeholder=\"Enter Printer Name\"\n          onChangeText={(val) => setcom(val)}\n          style={{ margin: 10, minWidth: \"30%\" }}\n          value={com}\n        />\n        <TextInput\n          placeholder=\"Enter Settings Page Password\"\n          onChangeText={(val) => setsettingsPassword(val)}\n          style={{ margin: 10, minWidth: \"30%\" }}\n          value={settingsPassword}\n        />\n      </View>\n      <Button\n        title={customBtnLbl ? customBtnLbl : \"Save\"}\n        onPress={handleDataUpdate}\n        style={{ margin: 10 }}\n      />\n      {/* <Spinner isModalVisible={isModalVisible} /> */}\n      <Text style={{ marginTop: 30 }}>DOWNLOAD HELPER WINDOWS</Text>\n      <a\n        href={require(\"assets/divine-pos-helper.exe\")}\n        download=\"Divine Pos Helper.exe\"\n      >\n        <Button title=\"DOWNLOAD HELPER WINDOWS\" />\n      </a>\n      <Text style={{ marginTop: 30 }}>DOWNLOAD HELPER MAC</Text>\n      <a\n        href={require(\"assets/divine-pos-helper.pkg\")}\n        download=\"Divine Pos Helper.pkg\"\n      >\n        <Button title=\"DOWNLOAD HELPER MAC\" />\n      </a>\n    </ScrollView>\n  );\n};\n\nexport default EditStoreDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}