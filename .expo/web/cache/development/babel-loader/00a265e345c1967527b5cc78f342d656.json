{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"react-select2-wrapper/css/select2.css\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport { deviceIdState, deviceTreeState, setDeviceTreeState, setMyDeviceDetailsState } from \"../../../../../state/state\";\nimport { auth, db } from \"../../../../../state/firebaseConfig\";\nimport ReactSelect from \"react-select\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport tw from 'twrnc';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DeviceSettings = function DeviceSettings() {\n  var deviceTree = deviceTreeState.use();\n  var myDeviceID = deviceIdState.use();\n  var fadeAnim = useRef(new Animated.Value(0)).current;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    viewVisible = _useState2[0],\n    setviewVisible = _useState2[1];\n  var fadeIn = function fadeIn() {\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 500,\n      useNativeDriver: false\n    }).start();\n  };\n  var resetLoader = function resetLoader() {\n    setviewVisible(true);\n    fadeIn();\n  };\n  var AddNewDevice = function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield db.collection(\"users\").doc(auth.currentUser.uid).collection(\"checkout_sessions\").add({\n        price: 'price_1OgX1pCIw3L7DOwIIavoer1P',\n        quantity: 1,\n        success_url: window.location.href,\n        cancel_url: window.location.href\n      }).then(function (docRef) {\n        docRef.onSnapshot(function () {\n          var _ref2 = _asyncToGenerator(function* (snap) {\n            var _snap$data = snap.data(),\n              error = _snap$data.error,\n              sessionId = _snap$data.sessionId;\n            if (error) {\n              alert(\"An error occurred: \" + error.message);\n            }\n            if (sessionId) {\n              var stripe = yield loadStripe(\"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\");\n\n              console.log(\"redirecting\");\n              yield stripe.redirectToCheckout({\n                sessionId: sessionId\n              });\n            }\n          });\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    return function AddNewDevice() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return _jsx(\"div\", {\n    className: \"page-wrapper\",\n    children: _jsxs(\"div\", {\n      className: \"content\",\n      children: [_jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: styles.headerRowContainer,\n          children: _jsx(Text, {\n            style: styles.headerTxt,\n            children: \"Device Settings\"\n          })\n        }), deviceTree.devices.map(function (device, index) {\n          var otherDeviceOptions = [];\n          deviceTree.devices.map(function (deviceSearch, index) {\n            if (deviceSearch.id !== device.id) {\n              otherDeviceOptions.push({\n                value: deviceSearch.docID,\n                label: deviceSearch.name\n              });\n            }\n          });\n          return _jsxs(View, {\n            style: tw.style(['flex-1', 'p-5', 'border', 'border-gray-200', 'rounded-md', 'mb-5', 'bg-white', 'shadow-md', 'w-11/12']),\n            children: [_jsxs(View, {\n              children: [_jsx(Text, {\n                style: tw.style(['text-sm', 'mb-2']),\n                children: \"Device Name\"\n              }), _jsx(TextInput, {\n                placeholder: \"Enter device name\",\n                value: device.name,\n                onChangeText: function onChangeText(val) {\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[index].name = val;\n                  setDeviceTreeState(clone);\n                },\n                style: tw.style(['w-1/2', 'p-2', 'border', 'border-gray-300', 'rounded-md', 'mb-2'])\n              })]\n            }), _jsxs(Text, {\n              style: tw.style(['text-sm', 'mb-2']),\n              children: [\"Id: \", device.id ? device.id.toUppercase() : 'No Id set to this device']\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                alignItems: 'center',\n                marginBottom: 10\n              },\n              children: [_jsx(Text, {\n                style: {\n                  marginRight: 10\n                },\n                children: \"Use Different Device To Print: \"\n              }), _jsx(Switch, {\n                value: device.useDifferentDeviceToPrint,\n                onValueChange: function onValueChange(val) {\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[index].useDifferentDeviceToPrint = val;\n                  setDeviceTreeState(clone);\n                }\n              })]\n            }), !device.useDifferentDeviceToPrint ? _jsx(TextInput, {\n              placeholder: \"Print To Printer: \" + device.printToPrinter,\n              value: device.printToPrinter,\n              onChangeText: function onChangeText(val) {\n                var clone = _objectSpread({}, deviceTree);\n                clone.devices[index].printToPrinter = val;\n                setDeviceTreeState(clone);\n              }\n            }) : _jsx(ReactSelect, {\n              options: otherDeviceOptions,\n              value: device.sendPrintToUserID,\n              onChange: function onChange(val) {\n                var clone = _objectSpread({}, deviceTree);\n                clone.devices[index].sendPrintToUserID = val;\n                setDeviceTreeState(clone);\n              },\n              placeholder: \"Choose Device To Send Print To\",\n              menuPortalTarget: document.body,\n              styles: {\n                menuPortal: function menuPortal(base) {\n                  return _objectSpread(_objectSpread({}, base), {}, {\n                    zIndex: 9999\n                  });\n                },\n                control: function control(provided, state) {\n                  return _objectSpread(_objectSpread({}, provided), {}, {\n                    background: \"#fff\",\n                    borderColor: \"#9e9e9e\",\n                    minHeight: \"52px\",\n                    height: \"52px\",\n                    boxShadow: state.isFocused ? null : null\n                  });\n                },\n                valueContainer: function valueContainer(provided, state) {\n                  return _objectSpread(_objectSpread({}, provided), {}, {\n                    height: \"52px\",\n                    padding: \"0 6px\"\n                  });\n                },\n                input: function input(provided, state) {\n                  return _objectSpread(_objectSpread({}, provided), {}, {\n                    margin: \"0px\"\n                  });\n                },\n                indicatorSeparator: function indicatorSeparator(state) {\n                  return {\n                    display: \"none\"\n                  };\n                },\n                indicatorsContainer: function indicatorsContainer(provided, state) {\n                  return _objectSpread(_objectSpread({}, provided), {}, {\n                    height: \"52px\"\n                  });\n                }\n              },\n              menuPlacement: \"auto\",\n              menuPosition: \"fixed\"\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                alignItems: 'center',\n                marginBottom: 10,\n                marginTop: 10\n              },\n              children: [_jsx(Text, {\n                children: \"Would you like online orders to print to this device?\"\n              }), _jsx(Switch, {\n                value: device.printOnlineOrders,\n                onValueChange: function onValueChange(val) {\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[index].printOnlineOrders = val;\n                  setDeviceTreeState(clone);\n                }\n              })]\n            }), _jsx(Button, {\n              title: \"Update Device\",\n              onPress: function onPress() {\n                db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).update(device);\n                var clone = _objectSpread({}, deviceTree);\n                clone.devices[index] = device;\n                setDeviceTreeState(clone);\n                console.log('Updated Device');\n                setMyDeviceDetailsState(device);\n              },\n              style: {\n                marginBottom: 10\n              }\n            }), _jsx(Button, {\n              title: \"Set To My ID\",\n              onPress: function onPress() {\n                if (deviceTree.devices.filter(function (deviceSearch) {\n                  return deviceSearch.id === myDeviceID;\n                }).length > 0) {\n                  db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices.filter(function (deviceSearch) {\n                    return deviceSearch.id === myDeviceID;\n                  })[0].docID).update({\n                    id: null\n                  });\n                  var _clone = _objectSpread({}, deviceTree);\n                  _clone.devices.filter(function (deviceSearch) {\n                    return deviceSearch.id === myDeviceID;\n                  })[0].id = null;\n                  setDeviceTreeState(_clone);\n                }\n                db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).update({\n                  id: myDeviceID\n                });\n                var clone = _objectSpread({}, deviceTree);\n                clone.devices[index].id = myDeviceID;\n                setDeviceTreeState(clone);\n                setMyDeviceDetailsState(device);\n              },\n              style: {\n                marginBottom: 10\n              }\n            }), _jsx(Button, {\n              title: \"Delete Device\",\n              onPress: function onPress() {\n                db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).delete();\n                var clone = _objectSpread({}, deviceTree);\n                clone = _objectSpread(_objectSpread({}, clone), {}, {\n                  devices: clone.devices.filter(function (deviceSearch) {\n                    return deviceSearch.docID !== device.docID;\n                  })\n                });\n                setDeviceTreeState(clone);\n              },\n              style: {\n                marginBottom: 10\n              }\n            })]\n          }, index);\n        }), deviceTree.devices.length < 2 + deviceTree.extraDevicesPayingFor ? _jsx(Button, {\n          title: \"Add Device\",\n          onPress: function onPress() {\n            db.collection('users').doc(auth.currentUser.uid).collection('devices').add({\n              name: \"Device\" + deviceTree.devices.length,\n              id: null,\n              printToPrinter: null\n            }).then(function (docRef) {\n              var clone = _objectSpread({}, deviceTree);\n              clone.devices.push({\n                name: \"Device\",\n                id: null,\n                printToPrinter: null,\n                sendPrintToUserID: null,\n                docID: docRef.id\n              });\n              setDeviceTreeState(clone);\n            });\n          }\n        }) : _jsx(Button, {\n          title: \"Pay For Another Device\",\n          onPress: function onPress() {\n            resetLoader();\n            AddNewDevice();\n          }\n        })]\n      }), viewVisible && _jsx(Modal, {\n        visible: true,\n        children: _jsx(Animated.View, {\n          style: {\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"white\",\n            position: \"absolute\",\n            opacity: fadeAnim,\n            height: \"100%\",\n            width: \"100%\"\n          },\n          children: _jsx(Image, {\n            source: require(\"../../../../../assets/loading.gif\"),\n            style: {\n              width: 450,\n              height: 450,\n              resizeMode: \"contain\"\n            }\n          })\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"rgba(255,255,255,1)\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  headerRowContainer: {\n    width: \"90%\",\n    height: 60,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 20\n  },\n  headerTxt: {\n    fontFamily: \"archivo-600\",\n    color: \"rgba(98,96,96,1)\",\n    fontSize: 20\n  },\n  billingBtn: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"#E6E6E6\",\n    borderRadius: 30,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  billingIcon: {\n    color: \"rgba(128,128,128,1)\",\n    fontSize: 30\n  },\n  detailInputContainer: {\n    width: \"90%\",\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: \"rgba(155,152,152,1)\",\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 45,\n    shadowOpacity: 0.2,\n    shadowRadius: 15,\n    padding: 30,\n    minHeight: \"75%\",\n    marginTop: 15\n  },\n  materialStackedLabelTextbox1: {\n    height: 60,\n    width: 483\n  },\n  materialStackedLabelTextbox2: {\n    height: 60,\n    width: 483,\n    marginLeft: 43\n  },\n  materialStackedLabelTextbox1Row: {\n    height: 60,\n    flexDirection: \"row\",\n    marginTop: 23,\n    marginLeft: 36,\n    marginRight: 32\n  },\n  materialStackedLabelTextbox3: {\n    height: 60,\n    width: 483\n  },\n  materialStackedLabelTextbox5: {\n    height: 60,\n    width: 483,\n    marginLeft: 43\n  },\n  materialStackedLabelTextbox3Row: {\n    height: 60,\n    flexDirection: \"row\",\n    marginTop: 30,\n    marginLeft: 36,\n    marginRight: 32\n  },\n  materialStackedLabelTextbox4: {\n    height: 60,\n    width: 483\n  },\n  materialStackedLabelTextbox6: {\n    height: 60,\n    width: 483,\n    marginLeft: 43\n  },\n  materialStackedLabelTextbox4Row: {\n    height: 60,\n    flexDirection: \"row\",\n    marginTop: 29,\n    marginLeft: 36,\n    marginRight: 32\n  },\n  materialStackedLabelTextbox7: {\n    height: 60,\n    width: 483\n  },\n  materialButtonViolet2: {\n    height: 48,\n    width: 483,\n    marginLeft: 43,\n    marginTop: 12\n  },\n  materialStackedLabelTextbox7Row: {\n    height: 60,\n    flexDirection: \"row\",\n    marginTop: 14,\n    marginLeft: 36,\n    marginRight: 32\n  },\n  helperDownloadContainer: {\n    width: \"100%\",\n    height: 79,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 10\n  },\n  helperTxt: {\n    fontFamily: \"archivo-500\",\n    color: \"#121212\",\n    fontSize: 19,\n    width: 483,\n    height: 52\n  },\n  badgeWindows: {\n    width: 200,\n    height: 79\n  },\n  badgeMac: {\n    width: 200,\n    height: 79\n  }\n});\nexport default DeviceSettings;","map":{"version":3,"names":["React","useEffect","useRef","useState","Button","Switch","TextInput","deviceIdState","deviceTreeState","setDeviceTreeState","setMyDeviceDetailsState","auth","db","ReactSelect","loadStripe","tw","DeviceSettings","deviceTree","use","myDeviceID","fadeAnim","Animated","Value","current","viewVisible","setviewVisible","fadeIn","timing","toValue","duration","useNativeDriver","start","resetLoader","AddNewDevice","collection","doc","currentUser","uid","add","price","quantity","success_url","window","location","href","cancel_url","then","docRef","onSnapshot","snap","data","error","sessionId","alert","message","stripe","console","log","redirectToCheckout","styles","container","headerRowContainer","headerTxt","devices","map","device","index","otherDeviceOptions","deviceSearch","id","push","value","docID","label","name","style","val","clone","toUppercase","flexDirection","alignItems","marginBottom","marginRight","useDifferentDeviceToPrint","printToPrinter","sendPrintToUserID","document","body","menuPortal","base","zIndex","control","provided","state","background","borderColor","minHeight","height","boxShadow","isFocused","valueContainer","padding","input","margin","indicatorSeparator","display","indicatorsContainer","marginTop","printOnlineOrders","update","filter","length","delete","extraDevicesPayingFor","justifyContent","backgroundColor","position","opacity","width","require","resizeMode","StyleSheet","create","fontFamily","color","fontSize","billingBtn","borderRadius","billingIcon","detailInputContainer","borderWidth","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","materialStackedLabelTextbox1","materialStackedLabelTextbox2","marginLeft","materialStackedLabelTextbox1Row","materialStackedLabelTextbox3","materialStackedLabelTextbox5","materialStackedLabelTextbox3Row","materialStackedLabelTextbox4","materialStackedLabelTextbox6","materialStackedLabelTextbox4Row","materialStackedLabelTextbox7","materialButtonViolet2","materialStackedLabelTextbox7Row","helperDownloadContainer","helperTxt","badgeWindows","badgeMac"],"sources":["/Users/peterputros/Desktop/PosMate/pages/authed/main/MainPage/settings/DeviceSettings.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"react-select2-wrapper/css/select2.css\";\nimport {\n    View,\n    Text,\n    ScrollView,\n    StyleSheet,\n    Animated,\n    Modal,\n} from \"react-native\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport {\n    deviceIdState,\n    deviceTreeState,\n    setDeviceTreeState,\n    setMyDeviceDetailsState,\n} from \"state/state\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport ReactSelect from \"react-select\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Image } from \"react-native\";\nimport tw from 'twrnc';\n\nconst DeviceSettings = () => {\n    const deviceTree = deviceTreeState.use()\n    const myDeviceID = deviceIdState.use()\n    const fadeAnim = useRef(new Animated.Value(0)).current;\n    const [viewVisible, setviewVisible] = useState(false);\n\n    const fadeIn = () => {\n        // Will change fadeAnim value to 0 in 3 seconds\n        Animated.timing(fadeAnim, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: false,\n        }).start();\n    };\n\n    const resetLoader = () => {\n        setviewVisible(true);\n        fadeIn();\n    };\n\n    const AddNewDevice = async () => {\n        await db\n            .collection(\"users\")\n            .doc(auth.currentUser.uid)\n            .collection(\"checkout_sessions\")\n            .add({\n                price: 'price_1OgX1pCIw3L7DOwIIavoer1P', // todo price Id from your products price in the Stripe Dashboard\n                quantity: 1,\n                success_url: window.location.href, // return user to this screen on successful purchase\n                cancel_url: window.location.href, // return user to this screen on failed purchase\n            })\n            .then((docRef) => {\n                // Wait for the checkoutSession to get attached by the extension\n                docRef.onSnapshot(async (snap) => {\n                    const { error, sessionId } = snap.data();\n                    if (error) {\n                        // Show an error to your customer and inspect\n                        // your Cloud Function logs in the Firebase console.\n                        alert(`An error occurred: ${error.message}`);\n                    }\n\n                    if (sessionId) {\n                        // We have a session, let's redirect to Checkout\n                        // Init Stripe\n                        const stripe = await loadStripe(\n                            \"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\" // todo enter your public stripe key here\n                        );\n                        console.log(`redirecting`);\n                        await stripe.redirectToCheckout({ sessionId });\n                    }\n                });\n            });\n    }\n\n    //Make style better\n\n    return (\n        <div className=\"page-wrapper\">\n            <div className=\"content\">\n                <View style={styles.container}>\n                    <View style={styles.headerRowContainer}>\n                        <Text style={styles.headerTxt}>Device Settings</Text>\n                    </View>\n                    {deviceTree.devices.map((device, index) => {\n\n                        const otherDeviceOptions = []\n                        deviceTree.devices.map((deviceSearch, index) => {\n                            if (deviceSearch.id !== device.id) {\n                                otherDeviceOptions.push({ value: deviceSearch.docID, label: deviceSearch.name })\n                            }\n                        })\n\n                        return (\n                            <View key={index} style={tw.style([\n                                'flex-1',\n                                'p-5',\n                                'border',\n                                'border-gray-200',\n                                'rounded-md',\n                                'mb-5',\n                                'bg-white',\n                                'shadow-md',\n                                'w-11/12'\n                            ])}>\n                                {/* <TextInput placeholder={`Name: ${device.name}`} value={device.name} onChangeText={val => {\n                                    const clone = { ...deviceTree }\n                                    clone.devices[index].name = val\n\n                                    setDeviceTreeState(clone)\n\n                                }}\n                                    style={{ marginBottom: 10 }}\n                                /> */}\n                                <View>\n                                    <Text style={tw.style([\n                                        'text-sm',\n                                        'mb-2',\n\n                                    ])} >Device Name</Text>\n                                    <TextInput placeholder='Enter device name' value={device.name} onChangeText={val => {\n                                        const clone = { ...deviceTree }\n                                        clone.devices[index].name = val\n                                        setDeviceTreeState(clone)\n                                    }}\n                                        style={tw.style(['w-1/2', 'p-2', 'border', 'border-gray-300', 'rounded-md', 'mb-2'])}\n                                    />\n                                </View>\n                                <Text style={tw.style([\n                                    'text-sm',\n                                    'mb-2',\n                                ])} >Id: {device.id ? device.id.toUppercase() : 'No Id set to this device'}</Text>\n                                <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>\n                                    <Text style={{ marginRight: 10 }}>Use Different Device To Print: </Text>\n                                    <Switch value={device.useDifferentDeviceToPrint} onValueChange={val => {\n                                        const clone = { ...deviceTree }\n                                        clone.devices[index].useDifferentDeviceToPrint = val\n                                        setDeviceTreeState(clone)\n                                    }} />\n                                </View>\n                                {!device.useDifferentDeviceToPrint ? <TextInput placeholder={`Print To Printer: ${device.printToPrinter}`} value={device.printToPrinter} onChangeText={val => {\n                                    const clone = { ...deviceTree }\n                                    clone.devices[index].printToPrinter = val\n                                    setDeviceTreeState(clone)\n                                }}\n                                /> :\n                                    <ReactSelect\n                                        options={otherDeviceOptions}\n                                        value={\n                                            device.sendPrintToUserID\n                                        }\n                                        onChange={(val) => {\n                                            const clone = { ...deviceTree }\n                                            clone.devices[index].sendPrintToUserID = val\n                                            setDeviceTreeState(clone)\n                                        }}\n                                        placeholder={\"Choose Device To Send Print To\"}\n                                        menuPortalTarget={document.body}\n                                        styles={{\n                                            menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                                            control: (provided, state) => ({\n                                                ...provided,\n                                                background: \"#fff\",\n                                                borderColor: \"#9e9e9e\",\n                                                minHeight: \"52px\",\n                                                height: \"52px\",\n                                                boxShadow: state.isFocused ? null : null,\n                                            }),\n\n                                            valueContainer: (provided, state) => ({\n                                                ...provided,\n                                                height: \"52px\",\n                                                padding: \"0 6px\",\n                                            }),\n\n                                            input: (provided, state) => ({\n                                                ...provided,\n                                                margin: \"0px\",\n                                            }),\n                                            indicatorSeparator: (state) => ({\n                                                display: \"none\",\n                                            }),\n                                            indicatorsContainer: (provided, state) => ({\n                                                ...provided,\n                                                height: \"52px\",\n                                            }),\n                                        }}\n                                        menuPlacement=\"auto\"\n                                        menuPosition=\"fixed\"\n                                    />\n                                }\n                                <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10, marginTop: 10 }}>\n                                    <Text>Would you like online orders to print to this device?</Text>\n                                    <Switch value={device.printOnlineOrders} onValueChange={val => {\n                                        const clone = { ...deviceTree }\n                                        clone.devices[index].printOnlineOrders = val\n                                        setDeviceTreeState(clone)\n                                    }} />\n                                </View>\n                                <Button\n                                    title=\"Update Device\"\n                                    onPress={() => {\n                                        db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).update(device)\n                                        const clone = { ...deviceTree }\n                                        clone.devices[index] = device\n                                        setDeviceTreeState(clone\n                                        )\n                                        console.log('Updated Device')\n                                        setMyDeviceDetailsState(device)\n                                    }}\n                                    style={{\n                                        marginBottom: 10\n                                    }}\n                                />\n                                <Button\n                                    title=\"Set To My ID\"\n                                    onPress={() => {\n                                        if (deviceTree.devices.filter(deviceSearch => deviceSearch.id === myDeviceID).length > 0) {\n                                            db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices.filter(deviceSearch => deviceSearch.id === myDeviceID)[0].docID).update({ id: null })\n                                            const clone = { ...deviceTree }\n                                            clone.devices.filter(deviceSearch => deviceSearch.id === myDeviceID)[0].id = null\n                                            setDeviceTreeState(clone)\n                                        }\n                                        db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).update({ id: myDeviceID })\n                                        const clone = { ...deviceTree }\n                                        clone.devices[index].id = myDeviceID\n                                        setDeviceTreeState(clone)\n                                        setMyDeviceDetailsState(device)\n                                    }}\n                                    style={{\n                                        marginBottom: 10\n                                    }}\n                                />\n                                <Button title=\"Delete Device\" onPress={() => {\n                                    db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).delete()\n                                    let clone = { ...deviceTree }\n                                    clone = { ...clone, devices: clone.devices.filter(deviceSearch => deviceSearch.docID !== device.docID) }\n                                    setDeviceTreeState(clone)\n                                }\n                                }\n                                    style={{\n                                        marginBottom: 10\n                                    }}\n                                />\n                            </View>\n                        )\n                    })}\n                    {deviceTree.devices.length < 2 + deviceTree.extraDevicesPayingFor ? <Button title=\"Add Device\" onPress={() => {\n\n                        db.collection('users').doc(auth.currentUser.uid).collection('devices').add({ name: `Device${deviceTree.devices.length}`, id: null, printToPrinter: null }).then((docRef) => {\n                            const clone = { ...deviceTree }\n                            clone.devices.push({ name: \"Device\", id: null, printToPrinter: null, sendPrintToUserID: null, docID: docRef.id })\n                            setDeviceTreeState(clone)\n                        })\n                    }} />\n                        :\n                        <Button title=\"Pay For Another Device\" onPress={() => {\n                            resetLoader()\n                            AddNewDevice()\n                        }\n                        } />\n                    }\n                </View>\n                {viewVisible && (\n                    <Modal visible={true}>\n                        <Animated.View\n                            style={{\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                backgroundColor: \"white\",\n                                position: \"absolute\",\n                                opacity: fadeAnim,\n                                height: \"100%\",\n                                width: \"100%\",\n                            }}\n                        >\n                            <Image\n                                source={require(\"assets/loading.gif\")}\n                                style={{ width: 450, height: 450, resizeMode: \"contain\" }}\n                            />\n                        </Animated.View>\n                    </Modal>\n                )}\n            </div>\n        </div >\n    );\n\n\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"rgba(255,255,255,1)\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    headerRowContainer: {\n        width: \"90%\",\n        height: 60,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginBottom: 20,\n    },\n    headerTxt: {\n        fontFamily: \"archivo-600\",\n        color: \"rgba(98,96,96,1)\",\n        fontSize: 20,\n    },\n    billingBtn: {\n        width: 60,\n        height: 60,\n        backgroundColor: \"#E6E6E6\",\n        borderRadius: 30,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    billingIcon: {\n        color: \"rgba(128,128,128,1)\",\n        fontSize: 30,\n    },\n    detailInputContainer: {\n        width: \"90%\",\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: \"rgba(155,152,152,1)\",\n        shadowColor: \"rgba(0,0,0,1)\",\n        shadowOffset: {\n            width: 3,\n            height: 3,\n        },\n        elevation: 45,\n        shadowOpacity: 0.2,\n        shadowRadius: 15,\n        padding: 30,\n        minHeight: \"75%\",\n        marginTop: 15,\n    },\n    materialStackedLabelTextbox1: {\n        height: 60,\n        width: 483,\n    },\n    materialStackedLabelTextbox2: {\n        height: 60,\n        width: 483,\n        marginLeft: 43,\n    },\n    materialStackedLabelTextbox1Row: {\n        height: 60,\n        flexDirection: \"row\",\n        marginTop: 23,\n        marginLeft: 36,\n        marginRight: 32,\n    },\n    materialStackedLabelTextbox3: {\n        height: 60,\n        width: 483,\n    },\n    materialStackedLabelTextbox5: {\n        height: 60,\n        width: 483,\n        marginLeft: 43,\n    },\n    materialStackedLabelTextbox3Row: {\n        height: 60,\n        flexDirection: \"row\",\n        marginTop: 30,\n        marginLeft: 36,\n        marginRight: 32,\n    },\n    materialStackedLabelTextbox4: {\n        height: 60,\n        width: 483,\n    },\n    materialStackedLabelTextbox6: {\n        height: 60,\n        width: 483,\n        marginLeft: 43,\n    },\n    materialStackedLabelTextbox4Row: {\n        height: 60,\n        flexDirection: \"row\",\n        marginTop: 29,\n        marginLeft: 36,\n        marginRight: 32,\n    },\n    materialStackedLabelTextbox7: {\n        height: 60,\n        width: 483,\n    },\n    materialButtonViolet2: {\n        height: 48,\n        width: 483,\n        marginLeft: 43,\n        marginTop: 12,\n    },\n    materialStackedLabelTextbox7Row: {\n        height: 60,\n        flexDirection: \"row\",\n        marginTop: 14,\n        marginLeft: 36,\n        marginRight: 32,\n    },\n    helperDownloadContainer: {\n        width: \"100%\",\n        height: 79,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        padding: 10,\n    },\n    helperTxt: {\n        fontFamily: \"archivo-500\",\n        color: \"#121212\",\n        fontSize: 19,\n        width: 483,\n        height: 52,\n    },\n    badgeWindows: {\n        width: 200,\n        height: 79,\n    },\n    badgeMac: {\n        width: 200,\n        height: 79,\n    },\n});\n\nexport default DeviceSettings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}