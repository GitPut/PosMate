{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Text } from \"@react-native-material/core\";\nimport { storeDetailState, woocommerceState } from \"../../state/state\";\nimport { auth, db } from \"../../state/firebaseConfig\";\nvar tz = require(\"moment-timezone\");\nimport { ReactGrid } from \"@silevis/reactgrid\";\nimport \"@silevis/reactgrid/styles.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar getDate = function getDate(seconds) {\n  var newDate = new Date(seconds * 1000);\n  var targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  var result = tz(newDate).tz(targetTimezone, true).format(\"dddd, MMMM Do YYYY, h:mm:ss a z\");\n  return result;\n};\nvar ViewTransactions = function ViewTransactions() {\n  var today = new Date();\n  var storeDetails = storeDetailState.use();\n  var wooCredentials = woocommerceState.use();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    transList = _useState2[0],\n    settransList = _useState2[1];\n  var _useState3 = useState({\n      todaysReceiptValue: 0,\n      todaysReceipts: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    todaysDetails = _useState4[0],\n    setTodaysDetails = _useState4[1];\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width,\n    height = _useWindowDimensions.height;\n  var getColumns = function getColumns() {\n    return [{\n      columnId: \"name\",\n      width: width * 0.8 * 0.125\n    }, {\n      columnId: \"phone\",\n      width: width * 0.8 * 0.125\n    }, {\n      columnId: \"address\",\n      width: width * 0.8 * 0.17\n    }, {\n      columnId: \"orderFrom\",\n      width: width * 0.8 * 0.125\n    }, {\n      columnId: \"method\",\n      width: width * 0.8 * 8\n    }, {\n      columnId: \"cart\",\n      width: width * 0.8 * 0.125\n    }, {\n      columnId: \"total\",\n      width: width * 0.8 * 0.125\n    }, {\n      columnId: \"date\",\n      width: width * 0.8 * 0.125\n    }];\n  };\n  var headerRow = {\n    rowId: \"header\",\n    cells: [{\n      type: \"header\",\n      text: \"Name\"\n    }, {\n      type: \"header\",\n      text: \"Phone #\"\n    }, {\n      type: \"header\",\n      text: \"Address\"\n    }, {\n      type: \"header\",\n      text: \"Order From\"\n    }, {\n      type: \"header\",\n      text: \"Method\"\n    }, {\n      type: \"header\",\n      text: \"Cart\"\n    }, {\n      type: \"header\",\n      text: \"Total\"\n    }, {\n      type: \"header\",\n      text: \"Date\"\n    }]\n  };\n  var getRows = function getRows() {\n    return [headerRow].concat(_toConsumableArray(transList.map(function (receipt, idx) {\n      return {\n        rowId: idx,\n        cells: [{\n          type: \"text\",\n          text: receipt.customer.name\n        }, {\n          type: \"text\",\n          text: receipt.customer.phone ? receipt.customer.phone : \"\"\n        }, {\n          type: \"text\",\n          text: receipt.customer.address ? receipt.customer.address : \"\"\n        }, {\n          type: \"text\",\n          text: receipt.cart_hash ? \"Online\" : \"POS\"\n        }, {\n          type: \"text\",\n          text: receipt.method === \"deliveryOrder\" ? \"Delivery\" : \"Pickup\"\n        }, {\n          type: \"text\",\n          text: receipt.customer.phone ? receipt.customer.phone : \"\"\n        }, {\n          type: \"text\",\n          text: receipt.total ? receipt.total : \"\"\n        }, {\n          type: \"text\",\n          text: receipt.date ? getDate(receipt.date.seconds) : \"\"\n        }]\n      };\n    })));\n  };\n\n  var rows = getRows();\n  var columns = getColumns();\n\n  useEffect(function () {\n    try {\n      var _auth$currentUser;\n      db.collection(\"users\").doc((_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid).collection(\"transList\").get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          settransList(function (prevState) {\n            return [].concat(_toConsumableArray(prevState), [doc.data()]);\n          });\n          console.log(doc.data());\n        });\n      });\n    } catch (_unused) {\n      console.log(\"Error occured retrieving tranasctions\");\n    }\n    if (wooCredentials.useWoocommerce === true) {\n      try {\n        var WooCommerceAPI = require(\"woocommerce-api\");\n        var WooCommerce = new WooCommerceAPI({\n          url: wooCredentials.apiUrl,\n          consumerKey: wooCredentials.ck,\n          consumerSecret: wooCredentials.cs,\n          wpAPI: true,\n          version: \"wc/v1\"\n        });\n        var page = 1;\n        var orders = [];\n        var getOrders = function () {\n          var _ref = _asyncToGenerator(function* () {\n            var response = yield WooCommerce.getAsync(\"orders?page=\" + page + \"&per_page=100\");\n            var data = JSON.parse(response.body);\n            orders = [].concat(_toConsumableArray(orders), _toConsumableArray(data));\n            if (data.length === 100) {\n              page++;\n              getOrders();\n            } else {\n            }\n          });\n          return function getOrders() {\n            return _ref.apply(this, arguments);\n          };\n        }();\n        getOrders().then(function () {\n          return settransList(function (prevState) {\n            return [].concat(_toConsumableArray(prevState), _toConsumableArray(orders));\n          });\n        }).catch(function (e) {\n          return console.log(\"error has occured\");\n        });\n      } catch (_unused2) {\n        console.log(\"Something occured with woo\");\n      }\n    }\n  }, []);\n  useEffect(function () {\n    try {\n      if (transList.length > 0) {\n        settransList(function (prev) {\n          return prev.sort(function (a, b) {\n            if (a.date && b.date) {\n              return a.date.seconds - b.date.seconds;\n            } else if (a.date && b.date_created) {\n              var targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n              var newDateA = new Date(a.date.seconds * 1000);\n              var newDateB = new Date(b.date_created + \"Z\");\n              var resultA = tz(newDateA).tz(targetTimezone, true);\n              var resultB = tz(newDateB).tz(targetTimezone, true);\n              return resultA.valueOf() - resultB.valueOf();\n            } else if (a.date_created && b.date) {\n              var _targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n              var _newDateA = new Date(a.date_created + \"Z\");\n              var _newDateB = new Date(b.date.seconds * 1000);\n              var _resultA = tz(_newDateA).tz(_targetTimezone, true);\n              var _resultB = tz(_newDateB).tz(_targetTimezone, true);\n              return _resultA.valueOf() - _resultB.valueOf();\n            } else {\n              var _targetTimezone2 = Intl.DateTimeFormat().resolvedOptions().timeZone;\n              var _newDateA2 = new Date(a.date_created + \"Z\");\n              var _newDateB2 = new Date(b.date_created + \"Z\");\n              var _resultA2 = tz(_newDateA2).tz(_targetTimezone2, true);\n              var _resultB2 = tz(_newDateB2).tz(_targetTimezone2, true);\n              return _resultA2.valueOf() - _resultB2.valueOf();\n            }\n          }).reverse();\n        });\n        var todaysReceiptValue = transList.reduce(function (accumulator, current) {\n          var date;\n          var targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n          if (current.date) {\n            var localDatePreConv = new Date(current.date.seconds * 1000);\n            date = tz(localDatePreConv).tz(targetTimezone, true);\n          } else {\n            var _localDatePreConv = new Date(current.date_created + \"Z\");\n            date = tz(_localDatePreConv).tz(targetTimezone, true);\n          }\n          var today = tz().tz(targetTimezone);\n          if (today.year() === date.year() && today.month() === date.month() && today.dayOfYear() === date.dayOfYear()) {\n            return accumulator + parseFloat(current.date ? current.total : current.total / 1.13);\n          } else {\n            return accumulator;\n          }\n        }, 0);\n        var todaysReceipts = transList.reduce(function (accumulator, current) {\n          var date;\n          var targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n          if (current.date) {\n            var localDatePreConv = new Date(current.date.seconds * 1000);\n            date = tz(localDatePreConv).tz(targetTimezone, true);\n          } else {\n            var _localDatePreConv2 = new Date(current.date_created + \"Z\");\n            date = tz(_localDatePreConv2).tz(targetTimezone, true);\n          }\n          var today = tz().tz(targetTimezone);\n          if (today.year() === date.year() && today.month() === date.month() && today.dayOfYear() === date.dayOfYear()) {\n            return accumulator + 1;\n          } else {\n            return accumulator;\n          }\n        }, 0);\n        setTodaysDetails({\n          todaysReceiptValue: todaysReceiptValue.toFixed(2),\n          todaysReceipts: todaysReceipts\n        });\n      }\n    } catch (_unused3) {\n      console.log(\"Error Occured when sorting dates\");\n    }\n  }, [transList]);\n  var PrintTodaysTotal = function PrintTodaysTotal() {\n    var _storeDetails$address;\n    var data = [\"\\x1B\" + \"\\x40\",\n    \"\\x1B\" + \"\\x61\" + \"\\x31\",\n    storeDetails.name, \"\\x0A\", ((_storeDetails$address = storeDetails.address) == null ? void 0 : _storeDetails$address.label) + \"\\x0A\", storeDetails.website + \"\\x0A\",\n    storeDetails.phoneNumber + \"\\x0A\",\n    today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\", \"\\x0A\", \"\\x0A\", \"\\x0A\", \"\\x0A\", \"\\x1B\" + \"\\x61\" + \"\\x30\",\n    \"\\x0A\" + \"\\x0A\", \"Number Of Receipts: \" + todaysDetails.todaysReceipts + \"\\x0A\" + \"\\x0A\", \"Sub-Total: \" + \"$\" + (todaysDetails.todaysReceiptValue / 1.13).toFixed(2) + \"\\x0A\" + \"\\x0A\", \"Tax: \" + \"$\" + (todaysDetails.todaysReceiptValue / 1.13 * 0.13).toFixed(2) + \"\\x0A\" + \"\\x0A\", \"Total Including (13% Tax): \" + \"$\" + todaysDetails.todaysReceiptValue + \"\\x0A\" + \"\\x0A\", \"------------------------------------------\" + \"\\x0A\", \"\\x0A\",\n    \"\\x0A\",\n    \"\\x0A\",\n    \"\\x0A\",\n    \"\\x0A\",\n    \"\\x0A\",\n    \"\\x1D\" + \"\\x56\" + \"\\x30\"];\n    var qz = require(\"qz-tray\");\n    qz.websocket.connect().then(function () {\n      var config = qz.configs.create(storeDetails.comSelected);\n      return qz.print(config, data);\n    }).then(qz.websocket.disconnect).catch(function (err) {\n      console.error(err);\n    });\n\n  };\n\n  var CleanupOps = function CleanupOps(metaList) {\n    var opsArray = [];\n    metaList.forEach(function (op) {\n      var arrContaingMe = opsArray.filter(function (filterOp) {\n        return filterOp.key === op.key;\n      });\n      if (arrContaingMe.length > 0) {\n        opsArray.forEach(function (opsArrItem, index) {\n          if (opsArrItem.key === op.key) {\n            opsArray[index].vals.push(op.value);\n          }\n        });\n      } else {\n        opsArray.push({\n          key: op.key,\n          vals: [op.value]\n        });\n      }\n    });\n    return opsArray;\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        textAlign: \"center\",\n        margin: 25\n      },\n      children: \"List Of Transactions\"\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        width: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [_jsxs(Text, {\n        style: {\n          textAlign: \"center\",\n          margin: 25\n        },\n        children: [\"Todays Total Price: \", todaysDetails.todaysReceiptValue]\n      }), _jsx(Button, {\n        style: {\n          height: 40,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        title: \"Print Todays Receipts\",\n        onPress: PrintTodaysTotal\n      }), _jsxs(Text, {\n        style: {\n          textAlign: \"center\",\n          margin: 25\n        },\n        children: [\"Todays Total Receipts: \", todaysDetails.todaysReceipts]\n      })]\n    }), _jsx(View, {\n      style: styles.contentContainer,\n      children: _jsx(ReactGrid, {\n        rows: rows,\n        columns: columns\n      })\n    })]\n  });\n};\nexport default ViewTransactions;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\"\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Button","Text","storeDetailState","woocommerceState","auth","db","tz","require","ReactGrid","getDate","seconds","newDate","Date","targetTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","result","format","ViewTransactions","today","storeDetails","use","wooCredentials","transList","settransList","todaysReceiptValue","todaysReceipts","todaysDetails","setTodaysDetails","useWindowDimensions","width","height","getColumns","columnId","headerRow","rowId","cells","type","text","getRows","map","receipt","idx","customer","name","phone","address","cart_hash","method","total","date","rows","columns","collection","doc","currentUser","uid","get","then","querySnapshot","forEach","prevState","data","console","log","useWoocommerce","WooCommerceAPI","WooCommerce","url","apiUrl","consumerKey","ck","consumerSecret","cs","wpAPI","version","page","orders","getOrders","response","getAsync","JSON","parse","body","length","catch","e","prev","sort","a","b","date_created","newDateA","newDateB","resultA","resultB","valueOf","reverse","reduce","accumulator","current","localDatePreConv","year","month","dayOfYear","parseFloat","toFixed","PrintTodaysTotal","label","website","phoneNumber","toLocaleDateString","toLocaleTimeString","qz","websocket","connect","config","configs","create","comSelected","print","disconnect","err","error","CleanupOps","metaList","opsArray","op","arrContaingMe","filter","filterOp","key","opsArrItem","index","vals","push","value","styles","container","textAlign","margin","flexDirection","alignItems","justifyContent","contentContainer","StyleSheet","backgroundColor","flex","flexWrap","paddingLeft","paddingRight","paddingBottom"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/ViewTransactions.tsx"],"sourcesContent":["import {\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { Button, Text } from \"@react-native-material/core\";\nimport {\n  storeDetailState,\n  transListState,\n  woocommerceState,\n} from \"state/state\";\nimport { auth, db } from \"state/firebaseConfig\";\nconst tz = require(\"moment-timezone\");\nimport { ReactGrid, Column, Row } from \"@silevis/reactgrid\";\nimport \"@silevis/reactgrid/styles.css\";\n\nconst getDate = (seconds) => {\n  const newDate = new Date(seconds * 1000);\n  const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  const result = tz(newDate)\n    .tz(targetTimezone, true)\n    .format(\"dddd, MMMM Do YYYY, h:mm:ss a z\");\n\n  return result;\n};\n\nconst ViewTransactions = () => {\n  const today = new Date();\n  const storeDetails = storeDetailState.use();\n  const wooCredentials = woocommerceState.use();\n  const [transList, settransList] = useState([]);\n  const [todaysDetails, setTodaysDetails] = useState({\n    todaysReceiptValue: 0,\n    todaysReceipts: 0,\n  });\n  const { width, height } = useWindowDimensions();\n\n  const getColumns = (): Column[] => [\n    { columnId: \"name\", width: width * 0.8 * 0.125 },\n    { columnId: \"phone\", width: width * 0.8 * 0.125 },\n    { columnId: \"address\", width: width * 0.8 * 0.17 },\n    { columnId: \"orderFrom\", width: width * 0.8 * 0.125 },\n    { columnId: \"method\", width: width * 0.8 * 8 },\n    { columnId: \"cart\", width: width * 0.8 * 0.125 },\n    { columnId: \"total\", width: width * 0.8 * 0.125 },\n    { columnId: \"date\", width: width * 0.8 * 0.125 },\n  ];\n\n  const headerRow: Row = {\n    rowId: \"header\",\n    cells: [\n      { type: \"header\", text: \"Name\" },\n      { type: \"header\", text: \"Phone #\" },\n      { type: \"header\", text: \"Address\" },\n      { type: \"header\", text: \"Order From\" },\n      { type: \"header\", text: \"Method\" },\n      { type: \"header\", text: \"Cart\" },\n      { type: \"header\", text: \"Total\" },\n      { type: \"header\", text: \"Date\" },\n    ],\n  };\n\n  const getRows = () => [\n    headerRow,\n    ...transList.map<Row>((receipt, idx) => ({\n      rowId: idx,\n      cells: [\n        { type: \"text\", text: receipt.customer.name },\n        {\n          type: \"text\",\n          text: receipt.customer.phone ? receipt.customer.phone : \"\",\n        },\n        {\n          type: \"text\",\n          text: receipt.customer.address ? receipt.customer.address : \"\",\n        },\n        {\n          type: \"text\",\n          text: receipt.cart_hash ? \"Online\" : \"POS\",\n        },\n        {\n          type: \"text\",\n          text: receipt.method === \"deliveryOrder\" ? \"Delivery\" : \"Pickup\",\n        },\n        {\n          type: \"text\",\n          text: receipt.customer.phone ? receipt.customer.phone : \"\",\n        },\n        {\n          type: \"text\",\n          text: receipt.total ? receipt.total : \"\",\n        },\n        {\n          type: \"text\",\n          text: receipt.date ? getDate(receipt.date.seconds) : \"\",\n        },\n      ],\n    })),\n  ];\n\n  ///\n\n  const rows = getRows();\n  const columns = getColumns();\n  ///\n\n  useEffect(() => {\n    try {\n      db.collection(\"users\")\n        .doc(auth.currentUser?.uid)\n        .collection(\"transList\")\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.forEach((doc) => {\n            // doc.data() is never undefined for query doc snapshots\n            // console.log(doc.id, \" => \", doc.data());\n            settransList((prevState) => [...prevState, doc.data()]);\n            console.log(doc.data());\n          });\n        });\n    } catch {\n      console.log(\"Error occured retrieving tranasctions\");\n    }\n\n    if (wooCredentials.useWoocommerce === true) {\n      try {\n        const WooCommerceAPI = require(\"woocommerce-api\");\n\n        const WooCommerce = new WooCommerceAPI({\n          url: wooCredentials.apiUrl,\n          consumerKey: wooCredentials.ck,\n          consumerSecret: wooCredentials.cs,\n          wpAPI: true,\n          version: \"wc/v1\",\n        });\n\n        let page = 1;\n        let orders = [];\n\n        const getOrders = async () => {\n          const response = await WooCommerce.getAsync(\n            `orders?page=${page}&per_page=100`\n          );\n          const data = JSON.parse(response.body);\n          orders = [...orders, ...data];\n          if (data.length === 100) {\n            page++;\n            getOrders();\n          } else {\n            // console.log(orders);\n          }\n        };\n\n        getOrders()\n          .then(() => settransList((prevState) => [...prevState, ...orders]))\n          .catch((e) => console.log(\"error has occured\"));\n      } catch {\n        console.log(\"Something occured with woo\");\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    try {\n      if (transList.length > 0) {\n        settransList((prev) =>\n          prev\n            .sort(function (a, b) {\n              if (a.date && b.date) {\n                return a.date.seconds - b.date.seconds;\n              } else if (a.date && b.date_created) {\n                const targetTimezone =\n                  Intl.DateTimeFormat().resolvedOptions().timeZone;\n                const newDateA = new Date(a.date.seconds * 1000);\n                const newDateB = new Date(b.date_created + \"Z\");\n                const resultA = tz(newDateA).tz(targetTimezone, true);\n                const resultB = tz(newDateB).tz(targetTimezone, true);\n\n                return resultA.valueOf() - resultB.valueOf();\n              } else if (a.date_created && b.date) {\n                const targetTimezone =\n                  Intl.DateTimeFormat().resolvedOptions().timeZone;\n                const newDateA = new Date(a.date_created + \"Z\");\n                const newDateB = new Date(b.date.seconds * 1000);\n                const resultA = tz(newDateA).tz(targetTimezone, true);\n                const resultB = tz(newDateB).tz(targetTimezone, true);\n\n                return resultA.valueOf() - resultB.valueOf();\n              } else {\n                const targetTimezone =\n                  Intl.DateTimeFormat().resolvedOptions().timeZone;\n                const newDateA = new Date(a.date_created + \"Z\");\n                const newDateB = new Date(b.date_created + \"Z\");\n                const resultA = tz(newDateA).tz(targetTimezone, true);\n                const resultB = tz(newDateB).tz(targetTimezone, true);\n\n                return resultA.valueOf() - resultB.valueOf();\n              }\n            })\n            .reverse()\n        );\n        // settransList(sortedTransList);\n        const todaysReceiptValue = transList.reduce((accumulator, current) => {\n          let date;\n          const targetTimezone =\n            Intl.DateTimeFormat().resolvedOptions().timeZone;\n          if (current.date) {\n            const localDatePreConv = new Date(current.date.seconds * 1000);\n            date = tz(localDatePreConv).tz(targetTimezone, true);\n          } else {\n            const localDatePreConv = new Date(current.date_created + \"Z\");\n            date = tz(localDatePreConv).tz(targetTimezone, true);\n          }\n          // Get the current date in the desired time zone\n          let today = tz().tz(targetTimezone);\n\n          if (\n            today.year() === date.year() &&\n            today.month() === date.month() &&\n            today.dayOfYear() === date.dayOfYear()\n          ) {\n            return (\n              accumulator +\n              parseFloat(current.date ? current.total : current.total / 1.13)\n            );\n          } else {\n            return accumulator;\n          }\n        }, 0);\n        const todaysReceipts = transList.reduce((accumulator, current) => {\n          let date;\n          const targetTimezone =\n            Intl.DateTimeFormat().resolvedOptions().timeZone;\n          if (current.date) {\n            const localDatePreConv = new Date(current.date.seconds * 1000);\n            date = tz(localDatePreConv).tz(targetTimezone, true);\n          } else {\n            const localDatePreConv = new Date(current.date_created + \"Z\");\n            date = tz(localDatePreConv).tz(targetTimezone, true);\n          }\n          // Get the current date in the desired time zone\n          let today = tz().tz(targetTimezone);\n\n          if (\n            today.year() === date.year() &&\n            today.month() === date.month() &&\n            today.dayOfYear() === date.dayOfYear()\n          ) {\n            return accumulator + 1;\n          } else {\n            return accumulator;\n          }\n        }, 0);\n        setTodaysDetails({\n          todaysReceiptValue: todaysReceiptValue.toFixed(2),\n          todaysReceipts: todaysReceipts,\n        });\n      }\n    } catch {\n      console.log(\"Error Occured when sorting dates\");\n    }\n  }, [transList]);\n\n  const PrintTodaysTotal = () => {\n    let data = [\n      \"\\x1B\" + \"\\x40\", // init\n      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n      storeDetails.name,\n      \"\\x0A\",\n      storeDetails.address?.label + \"\\x0A\",\n      storeDetails.website + \"\\x0A\", // text and line break\n      storeDetails.phoneNumber + \"\\x0A\", // text and line break\n      today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      \"\\x0A\" + \"\\x0A\",\n      \"Number Of Receipts: \" + todaysDetails.todaysReceipts + \"\\x0A\" + \"\\x0A\",\n      \"Sub-Total: \" +\n        \"$\" +\n        (todaysDetails.todaysReceiptValue / 1.13).toFixed(2) +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"Tax: \" +\n        \"$\" +\n        ((todaysDetails.todaysReceiptValue / 1.13) * 0.13).toFixed(2) +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"Total Including (13% Tax): \" +\n        \"$\" +\n        todaysDetails.todaysReceiptValue +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"------------------------------------------\" + \"\\x0A\",\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x1D\" + \"\\x56\" + \"\\x30\",\n    ];\n\n    const qz = require(\"qz-tray\");\n    qz.websocket\n      .connect()\n      .then(function () {\n        let config = qz.configs.create(storeDetails.comSelected);\n        return qz.print(config, data);\n      })\n      .then(qz.websocket.disconnect)\n      .catch(function (err) {\n        console.error(err);\n      });\n\n    // fetch(\"http://localhost:8080/print\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({\n    //     printData: data,\n    //     comSelected: storeDetails.comSelected,\n    //   }),\n    // })\n    //   .then((response) => response.json())\n    //   .then((respData) => {\n    //     console.log(respData);\n    //   })\n    //   .catch((e) => alert(\"Error with printer\"));\n  };\n\n  const CleanupOps = (metaList) => {\n    const opsArray = [];\n\n    metaList.forEach((op) => {\n      const arrContaingMe = opsArray.filter(\n        (filterOp) => filterOp.key === op.key\n      );\n\n      if (arrContaingMe.length > 0) {\n        opsArray.forEach((opsArrItem, index) => {\n          if (opsArrItem.key === op.key) {\n            opsArray[index].vals.push(op.value);\n          }\n        });\n      } else {\n        opsArray.push({ key: op.key, vals: [op.value] });\n      }\n    });\n    return opsArray;\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ textAlign: \"center\", margin: 25 }}>\n        List Of Transactions\n      </Text>\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Price: {todaysDetails.todaysReceiptValue}\n        </Text>\n        <Button\n          style={{ height: 40, alignItems: \"center\", justifyContent: \"center\" }}\n          title=\"Print Todays Receipts\"\n          onPress={PrintTodaysTotal}\n        />\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Receipts: {todaysDetails.todaysReceipts}\n        </Text>\n      </View>\n      <View style={styles.contentContainer}>\n        {/* {transList ? (\n          <FlatList\n            maxToRenderPerBatch={6}\n            data={transList}\n            renderItem={({ item, index }) => {\n              const element = item;\n              let date;\n\n              if (element.date_created) {\n                const dateString = element.date_created;\n\n                const newDate = new Date(dateString + \"Z\");\n\n                const targetTimezone =\n                  Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n                const result = tz(newDate)\n                  .tz(targetTimezone, true)\n                  .format(\"dddd, MMMM Do YYYY, h:mm:ss a z\");\n\n                date = result;\n              } else if (element.date) {\n                const newDate = new Date(element.date.seconds * 1000);\n                const targetTimezone =\n                  Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n                const result = tz(newDate)\n                  .tz(targetTimezone, true)\n                  .format(\"dddd, MMMM Do YYYY, h:mm:ss a z\");\n\n                date = result;\n              }\n\n              return (\n                <View\n                  style={{\n                    backgroundColor: \"white\",\n                    borderWidth: 1,\n                    padding: 30,\n                    margin: 10,\n                  }}\n                  key={index}\n                >\n                  <Text>\n                    {element.cart_hash ? \"Online Order\" : \"POS Order\"}\n                  </Text>\n                  {element.customer && (\n                    <>\n                      <Text>\n                        {element.customer.address\n                          ? `Delivery Order To: ${element.customer.address}`\n                          : \"Pickup Order\"}\n                      </Text>\n                      <Text>Name: {element.customer.name}</Text>\n                      <Text>Phone Number: {element.customer.phone}</Text>\n                    </>\n                  )}\n                  <Text style={{ marginBottom: 10 }}>{date}</Text>\n                  {element.cart?.map((cartItem, index) => (\n                    <View style={{ marginBottom: 20 }} key={index}>\n                      <Text>Name: {cartItem.name}</Text>\n                      <Text>Quantity: {cartItem.quantity}</Text>\n                      <Text>Price: {cartItem.price}</Text>\n                      {cartItem.options &&\n                        cartItem.options?.map((option) => (\n                          <Text>{option}</Text>\n                        ))}\n                    </View>\n                  ))}\n                  {element.line_items?.map((cartItem, index) => (\n                    <View style={{ marginBottom: 20 }} key={index}>\n                      <Text>Name: {cartItem.name}</Text>\n                      <Text>Quantity: {cartItem.quantity}</Text>\n                      <Text>Price: {cartItem.price}</Text>\n                      {cartItem.meta &&\n                        CleanupOps(cartItem.meta).map((returnedItem) => (\n                          <View style={{ flexDirection: \"row\" }}>\n                            <Text>{returnedItem.key} : </Text>\n                            {returnedItem.vals.map((val, index) => (\n                              <Text>\n                                {val}\n                                {index >= 0 &&\n                                  index < returnedItem.vals.length - 1 &&\n                                  \", \"}\n                              </Text>\n                            ))}\n                          </View>\n                        ))}\n                    </View>\n                  ))}\n                  {element.billing && (\n                    <>\n                      <Text>Customer Details:</Text>\n                      <Text>Address: {element.shipping.address_1}</Text>\n                      <Text>City: {element.shipping.city}</Text>\n                      <Text>Postal Code: {element.shipping.postcode}</Text>\n                      <Text>Province/State: {element.shipping.state}</Text>\n                      <Text>\n                        Name: {element.shipping.first_name}{\" \"}\n                        {element.shipping.last_name}\n                      </Text>\n                      {element.shipping_lines.map((line) => (\n                        <Text>Shipping Method: {line.method_title}</Text>\n                      ))}\n                      <Text>Phone Number: {element.billing.phone}</Text>\n                      {element.customer_note?.length > 0 && (\n                        <Text>Customer Note: {element.customer_note}</Text>\n                      )}\n                    </>\n                  )}\n                  <Button\n                    title=\"Print\"\n                    style={{ marginTop: 10 }}\n                    onPress={() => {\n                      if (element.date) {\n                        let total = 0;\n\n                        let data = [\n                          \"\\x1B\" + \"\\x40\", // init\n                          \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                          storeDetails.name,\n                          \"\\x0A\",\n                          storeDetails.address?.label + \"\\x0A\",\n                          storeDetails.website + \"\\x0A\", // text and line break\n                          storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                          date + \"\\x0A\",\n                          \"\\x0A\",\n                          `Transaction ID ${element.transNum}` + \"\\x0A\",\n                          \"\\x0A\",\n                          \"\\x0A\",\n                          \"\\x0A\",\n                          \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n                        ];\n\n                        element.cart?.map((cartItem) => {\n                          total += parseFloat(cartItem.price);\n                          data.push(`Name: ${cartItem.name}`);\n                          data.push(\"\\x0A\");\n                          data.push(`Price: $${cartItem.price}`);\n\n                          if (cartItem.options) {\n                            data.push(\"\\x0A\");\n                            cartItem.options?.map((option) => {\n                              data.push(option);\n                              data.push(\"\\x0A\");\n                            });\n                          }\n                          data.push(\"\\x0A\" + \"\\x0A\");\n                        });\n\n                        total = total * 1.13;\n                        total = total.toFixed(2);\n\n                        if (element.billing) {\n                          data.push(`Phone Number: ${element.billing.phone}`);\n                          data.push(\"\\x0A\");\n                        }\n\n                        if (element.customer_note) {\n                          data.push(`Customer Note: ${element.customer_note}`);\n                          data.push(\"\\x0A\");\n                        }\n\n                        //push ending\n                        data.push(\n                          \"\\x0A\",\n                          \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                          \"\\x0A\" + \"\\x0A\",\n                          \"Total Including (13% Tax): \" +\n                            \"$\" +\n                            total +\n                            \"\\x0A\" +\n                            \"\\x0A\",\n                          \"------------------------------------------\" + \"\\x0A\",\n                          \"\\x0A\", // line break\n                          \"\\x0A\", // line break\n                          \"\\x0A\", // line break\n                          \"\\x0A\", // line break\n                          \"\\x0A\", // line break\n                          \"\\x0A\", // line break\n                          //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n                          \"\\x1D\" + \"\\x56\" + \"\\x30\"\n                        );\n\n                        const qz = require(\"qz-tray\");\n                        qz.websocket\n                          .connect()\n                          .then(function () {\n                            let config = qz.configs.create(\n                              storeDetails.comSelected\n                            );\n                            return qz.print(config, data);\n                          })\n                          .then(qz.websocket.disconnect)\n                          .catch(function (err) {\n                            console.error(err);\n                          });\n                        // fetch(\"http://localhost:8080/print\", {\n                        //   method: \"POST\",\n                        //   headers: {\n                        //     \"Content-Type\": \"application/json\",\n                        //   },\n                        //   body: JSON.stringify({\n                        //     printData: data,\n                        //     comSelected: storeDetails.comSelected,\n                        //   }),\n                        // })\n                        //   .then((response) => response.json())\n                        //   .then((respData) => {\n                        //     console.log(respData);\n                        //   })\n                        //   .catch((e) => alert(\"Error with printer\"));\n                      } else {\n                        const printData = [];\n\n                        printData.push(\n                          \"\\x1B\" + \"\\x40\", // init\n                          \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                          storeDetails.name,\n                          \"\\x0A\",\n                          storeDetails.address?.label + \"\\x0A\",\n                          storeDetails.website + \"\\x0A\", // text and line break\n                          storeDetails.phoneNumber + \"\\x0A\", // text and line break\n                          date + \"\\x0A\",\n                          \"\\x0A\",\n                          \"Online Order\" + \"\\x0A\", // text and line break\n                          `Transaction ID ${element.number}` + \"\\x0A\",\n                          \"\\x0A\",\n                          \"\\x0A\",\n                          \"\\x0A\",\n                          \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n                        );\n\n                        element.line_items?.map((cartItem) => {\n                          printData.push(\"\\x0A\");\n                          printData.push(`Name: ${cartItem.name}`);\n                          printData.push(\"\\x0A\");\n                          printData.push(`Quantity: ${cartItem.quantity}`);\n                          printData.push(\"\\x0A\");\n                          printData.push(`Price: $${cartItem.price}`);\n                          printData.push(\"\\x0A\");\n\n                          if (cartItem.meta) {\n                            CleanupOps(cartItem.meta).map((returnedItem) => {\n                              printData.push(`${returnedItem.key} : `);\n                              returnedItem.vals.map((val, index) => {\n                                printData.push(`${val}`);\n                                if (\n                                  index >= 0 &&\n                                  index < returnedItem.vals.length - 1\n                                ) {\n                                  printData.push(\", \");\n                                }\n                              });\n                              printData.push(\"\\x0A\");\n                            });\n                          } else {\n                            printData.push(\"\\x0A\" + \"\\x0A\");\n                          }\n                        });\n\n                        printData.push(\"\\x0A\");\n                        printData.push(\"\\x0A\");\n                        printData.push(`Customer Details:`);\n                        printData.push(\"\\x0A\");\n                        printData.push(\n                          `Address: ${element.shipping.address_1}`\n                        );\n                        printData.push(\"\\x0A\");\n                        printData.push(`City: ${element.shipping.city}`);\n                        printData.push(\"\\x0A\");\n                        printData.push(\n                          `Zip/Postal Code: ${element.shipping.postcode}`\n                        );\n                        printData.push(\"\\x0A\");\n                        printData.push(\n                          `Province/State: ${element.shipping.state}`\n                        );\n                        printData.push(\"\\x0A\");\n                        printData.push(\n                          `Name: ${element.shipping.first_name} ${element.shipping.last_name}`\n                        );\n                        printData.push(\"\\x0A\");\n                        element.shipping_lines.map((line) => {\n                          printData.push(\n                            `Shipping Method: ${line.method_title}`\n                          );\n                          printData.push(\"\\x0A\");\n                        });\n                        if (element.billing) {\n                          printData.push(\n                            `Phone Number: ${element.billing.phone}`\n                          );\n                          printData.push(\"\\x0A\");\n                        }\n                        if (element.customer_note) {\n                          printData.push(\n                            `Customer Note: ${element.customer_note}`\n                          );\n                          printData.push(\"\\x0A\");\n                        }\n                        printData.push(\"\\x0A\");\n                        printData.push(\"\\x0A\");\n\n                        printData.push(\n                          \"\\x0A\",\n                          \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                          \"\\x0A\" + \"\\x0A\",\n                          \"Payment Method: \" +\n                            element.payment_method_title +\n                            \"\\x0A\" +\n                            \"\\x0A\",\n                          \"Total Including (13% Tax): \" +\n                            \"$\" +\n                            element.total +\n                            \"\\x0A\" +\n                            \"\\x0A\",\n                          \"------------------------------------------\" + \"\\x0A\",\n                          \"\\x0A\", // line break\n                          \"\\x0A\", // line break\n                          \"\\x0A\", // line break\n                          \"\\x0A\", // line break\n                          \"\\x0A\", // line break\n                          \"\\x0A\" // line break\n                        );\n\n                        printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n                        const qz = require(\"qz-tray\");\n                        qz.websocket\n                          .connect()\n                          .then(function () {\n                            let config = qz.configs.create(\n                              storeDetails.comSelected\n                            );\n                            return qz.print(config, printData);\n                          })\n                          .then(qz.websocket.disconnect)\n                          .catch(function (err) {\n                            console.error(err);\n                          });\n\n                        // fetch(\"http://localhost:8080/print\", {\n                        //   method: \"POST\",\n                        //   headers: {\n                        //     \"Content-Type\": \"application/json\",\n                        //   },\n                        //   body: JSON.stringify({\n                        //     printData: printData,\n                        //     comSelected: storeDetails.comSelected,\n                        //   }),\n                        // })\n                        //   .then((response) => response.json())\n                        //   .then((respData) => {\n                        //     console.log(respData);\n                        //   })\n                        //   .catch((e) => alert(\"Error with printer\"));\n                      }\n                    }}\n                  />\n                </View>\n              );\n            }}\n          />\n        ) : (\n          <Text>No receipts yet</Text>\n        )} */}\n        <ReactGrid rows={rows} columns={columns} />\n      </View>\n    </View>\n  );\n};\n\nexport default ViewTransactions;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\",\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}