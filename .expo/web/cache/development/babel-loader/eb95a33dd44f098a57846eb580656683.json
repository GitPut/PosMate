{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport { Button, Text } from \"@react-native-material/core\";\nimport { storeDetailState } from \"../../state/state\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar tz = require(\"moment-timezone\");\nvar ViewTransactions = function ViewTransactions(_ref) {\n  var transList = _ref.transList,\n    todaysDetails = _ref.todaysDetails;\n  var today = new Date();\n  var storeDetails = storeDetailState.use();\n\n  var PrintTodaysTotal = function PrintTodaysTotal() {\n    var data = [\"\\x1B\" + \"\\x40\",\n    \"\\x1B\" + \"\\x61\" + \"\\x31\",\n    storeDetails.name, \"\\x0A\", storeDetails.address + \"\\x0A\", storeDetails.website + \"\\x0A\",\n    storeDetails.phoneNumber + \"\\x0A\",\n    today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\", \"\\x0A\", \"\\x0A\", \"\\x0A\", \"\\x0A\", \"\\x1B\" + \"\\x61\" + \"\\x30\",\n    \"\\x0A\" + \"\\x0A\", \"Number Of Receipts: \" + todaysDetails.todaysReceipts + \"\\x0A\" + \"\\x0A\", \"Sub-Total: \" + \"$\" + (todaysDetails.todaysReceiptValue / 1.13).toFixed(2) + \"\\x0A\" + \"\\x0A\", \"Tax: \" + \"$\" + (todaysDetails.todaysReceiptValue / 1.13 * 0.13).toFixed(2) + \"\\x0A\" + \"\\x0A\", \"Total Including (13% Tax): \" + \"$\" + todaysDetails.todaysReceiptValue + \"\\x0A\" + \"\\x0A\", \"------------------------------------------\" + \"\\x0A\", \"\\x0A\",\n    \"\\x0A\",\n    \"\\x0A\",\n    \"\\x0A\",\n    \"\\x0A\",\n    \"\\x0A\",\n    \"\\x1D\" + \"\\x56\" + \"\\x30\"];\n    var qz = require(\"qz-tray\");\n    qz.websocket.connect().then(function () {\n      var config = qz.configs.create(storeDetails.comSelected);\n      return qz.print(config, data);\n    }).then(qz.websocket.disconnect).catch(function (err) {\n      console.error(err);\n    });\n\n  };\n\n  var CleanupOps = function CleanupOps(metaList) {\n    var opsArray = [];\n    metaList.forEach(function (op) {\n      var arrContaingMe = opsArray.filter(function (filterOp) {\n        return filterOp.key === op.key;\n      });\n      if (arrContaingMe.length > 0) {\n        opsArray.forEach(function (opsArrItem, index) {\n          if (opsArrItem.key === op.key) {\n            opsArray[index].vals.push(op.value);\n          }\n        });\n      } else {\n        opsArray.push({\n          key: op.key,\n          vals: [op.value]\n        });\n      }\n    });\n    return opsArray;\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        textAlign: \"center\",\n        margin: 25\n      },\n      children: \"List Of Transactions\"\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        width: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [_jsxs(Text, {\n        style: {\n          textAlign: \"center\",\n          margin: 25\n        },\n        children: [\"Todays Total Price: \", todaysDetails.todaysReceiptValue]\n      }), _jsx(Button, {\n        style: {\n          height: 40,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        title: \"Print Todays Receipts\",\n        onPress: PrintTodaysTotal\n      }), _jsxs(Text, {\n        style: {\n          textAlign: \"center\",\n          margin: 25\n        },\n        children: [\"Todays Total Receipts: \", todaysDetails.todaysReceipts]\n      })]\n    }), _jsx(View, {\n      style: styles.contentContainer,\n      children: transList ? transList == null ? void 0 : transList.map(function (element, index) {\n\n        return _jsx(Text, {\n          children: \"Order\"\n        });\n      }) : _jsx(Text, {\n        children: \"No receipts yet\"\n      })\n    })]\n  });\n};\nexport default ViewTransactions;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\"\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"names":["React","Button","Text","storeDetailState","tz","require","ViewTransactions","transList","todaysDetails","today","Date","storeDetails","use","PrintTodaysTotal","data","name","address","website","phoneNumber","toLocaleDateString","toLocaleTimeString","todaysReceipts","todaysReceiptValue","toFixed","qz","websocket","connect","then","config","configs","create","comSelected","print","disconnect","catch","err","console","error","CleanupOps","metaList","opsArray","forEach","op","arrContaingMe","filter","filterOp","key","length","opsArrItem","index","vals","push","value","styles","container","textAlign","margin","flexDirection","width","alignItems","justifyContent","height","contentContainer","map","element","StyleSheet","backgroundColor","flex","flexWrap","paddingLeft","paddingRight","paddingBottom"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/ViewTransactions.tsx"],"sourcesContent":["import { ScrollView, StyleSheet, View } from \"react-native\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { Button, Text } from \"@react-native-material/core\";\nimport {\n  storeDetailState,\n  transListState,\n  woocommerceState,\n} from \"state/state\";\nimport { auth, db } from \"state/firebaseConfig\";\nconst tz = require(\"moment-timezone\");\n\nconst ViewTransactions = ({ transList, todaysDetails }) => {\n  const today = new Date();\n  const storeDetails = storeDetailState.use();\n\n  // useEffect(() => {\n  //   try {\n  //     db.collection(\"users\")\n  //       .doc(auth.currentUser?.uid)\n  //       .collection(\"transList\")\n  //       .get()\n  //       .then((querySnapshot) => {\n  //         querySnapshot.forEach((doc) => {\n  //           // doc.data() is never undefined for query doc snapshots\n  //           // console.log(doc.id, \" => \", doc.data());\n  //           settransList((prevState) => [...prevState, doc.data()]);\n  //           console.log(doc.data());\n  //         });\n  //       });\n  //   } catch {\n  //     console.log(\"Error occured retrieving tranasctions\");\n  //   }\n\n  //   if (wooCredentials.useWoocommerce === true) {\n  //     try {\n  //       const WooCommerceAPI = require(\"woocommerce-api\");\n\n  //       const WooCommerce = new WooCommerceAPI({\n  //         url: wooCredentials.apiUrl,\n  //         consumerKey: wooCredentials.ck,\n  //         consumerSecret: wooCredentials.cs,\n  //         wpAPI: true,\n  //         version: \"wc/v1\",\n  //       });\n\n  //       let page = 1;\n  //       let orders = [];\n\n  //       const getOrders = async () => {\n  //         const response = await WooCommerce.getAsync(\n  //           `orders?page=${page}&per_page=100`\n  //         );\n  //         const data = JSON.parse(response.body);\n  //         orders = [...orders, ...data];\n  //         if (data.length === 100) {\n  //           page++;\n  //           getOrders();\n  //         } else {\n  //           // console.log(orders);\n  //         }\n  //       };\n\n  //       getOrders().then(() =>\n  //         settransList((prevState) => [...prevState, ...orders])\n  //       );\n  //     } catch {\n  //       console.log(\"Something occured with woo\");\n  //     }\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   try {\n  //     if (transList.length > 0) {\n  //       const sortedTransList = transList\n  //         .sort(function (a, b) {\n  //           if (a.date && b.date) {\n  //             return a.date.seconds - b.date.seconds;\n  //           } else if (a.date && b.date_created) {\n  //             const targetTimezone =\n  //               Intl.DateTimeFormat().resolvedOptions().timeZone;\n  //             const newDateA = new Date(a.date.seconds * 1000);\n  //             const newDateB = new Date(b.date_created + \"Z\");\n  //             const resultA = tz(newDateA).tz(targetTimezone, true);\n  //             const resultB = tz(newDateB).tz(targetTimezone, true);\n\n  //             return resultA.valueOf() - resultB.valueOf();\n  //           } else if (a.date_created && b.date) {\n  //             const targetTimezone =\n  //               Intl.DateTimeFormat().resolvedOptions().timeZone;\n  //             const newDateA = new Date(a.date_created + \"Z\");\n  //             const newDateB = new Date(b.date.seconds * 1000);\n  //             const resultA = tz(newDateA).tz(targetTimezone, true);\n  //             const resultB = tz(newDateB).tz(targetTimezone, true);\n\n  //             return resultA.valueOf() - resultB.valueOf();\n  //           } else {\n  //             const targetTimezone =\n  //               Intl.DateTimeFormat().resolvedOptions().timeZone;\n  //             const newDateA = new Date(a.date_created + \"Z\");\n  //             const newDateB = new Date(b.date_created + \"Z\");\n  //             const resultA = tz(newDateA).tz(targetTimezone, true);\n  //             const resultB = tz(newDateB).tz(targetTimezone, true);\n\n  //             return resultA.valueOf() - resultB.valueOf();\n  //           }\n  //         })\n  //         .reverse();\n  //       settransList(sortedTransList);\n  //       const todaysReceiptValue = transList.reduce((accumulator, current) => {\n  //         let date;\n  //         const targetTimezone =\n  //           Intl.DateTimeFormat().resolvedOptions().timeZone;\n  //         if (current.date) {\n  //           const localDatePreConv = new Date(current.date.seconds * 1000);\n  //           date = tz(localDatePreConv).tz(targetTimezone, true);\n  //         } else {\n  //           const localDatePreConv = new Date(current.date_created + \"Z\");\n  //           date = tz(localDatePreConv).tz(targetTimezone, true);\n  //         }\n  //         // Get the current date in the desired time zone\n  //         let today = tz().tz(targetTimezone);\n\n  //         if (\n  //           today.year() === date.year() &&\n  //           today.month() === date.month() &&\n  //           today.dayOfYear() === date.dayOfYear()\n  //         ) {\n  //           return (\n  //             accumulator +\n  //             parseFloat(current.date ? current.total : current.total / 1.13)\n  //           );\n  //         } else {\n  //           return accumulator;\n  //         }\n  //       }, 0);\n  //       const todaysReceipts = transList.reduce((accumulator, current) => {\n  //         let date;\n  //         const targetTimezone =\n  //           Intl.DateTimeFormat().resolvedOptions().timeZone;\n  //         if (current.date) {\n  //           const localDatePreConv = new Date(current.date.seconds * 1000);\n  //           date = tz(localDatePreConv).tz(targetTimezone, true);\n  //         } else {\n  //           const localDatePreConv = new Date(current.date_created + \"Z\");\n  //           date = tz(localDatePreConv).tz(targetTimezone, true);\n  //         }\n  //         // Get the current date in the desired time zone\n  //         let today = tz().tz(targetTimezone);\n\n  //         if (\n  //           today.year() === date.year() &&\n  //           today.month() === date.month() &&\n  //           today.dayOfYear() === date.dayOfYear()\n  //         ) {\n  //           return accumulator + 1;\n  //         } else {\n  //           return accumulator;\n  //         }\n  //       }, 0);\n  //       setTodaysDetails({\n  //         todaysReceiptValue: todaysReceiptValue.toFixed(2),\n  //         todaysReceipts: todaysReceipts,\n  //       });\n  //     }\n  //   } catch {\n  //     console.log(\"Error Occured when sorting dates\");\n  //   }\n  // }, [transList]);\n\n  const PrintTodaysTotal = () => {\n    let data = [\n      \"\\x1B\" + \"\\x40\", // init\n      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n      storeDetails.name,\n      \"\\x0A\",\n      storeDetails.address + \"\\x0A\",\n      storeDetails.website + \"\\x0A\", // text and line break\n      storeDetails.phoneNumber + \"\\x0A\", // text and line break\n      today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      \"\\x0A\" + \"\\x0A\",\n      \"Number Of Receipts: \" + todaysDetails.todaysReceipts + \"\\x0A\" + \"\\x0A\",\n      \"Sub-Total: \" +\n        \"$\" +\n        (todaysDetails.todaysReceiptValue / 1.13).toFixed(2) +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"Tax: \" +\n        \"$\" +\n        ((todaysDetails.todaysReceiptValue / 1.13) * 0.13).toFixed(2) +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"Total Including (13% Tax): \" +\n        \"$\" +\n        todaysDetails.todaysReceiptValue +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"------------------------------------------\" + \"\\x0A\",\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x1D\" + \"\\x56\" + \"\\x30\",\n    ];\n\n    const qz = require(\"qz-tray\");\n    qz.websocket\n      .connect()\n      .then(function () {\n        let config = qz.configs.create(storeDetails.comSelected);\n        return qz.print(config, data);\n      })\n      .then(qz.websocket.disconnect)\n      .catch(function (err) {\n        console.error(err);\n      });\n\n    // fetch(\"http://localhost:8080/print\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({\n    //     printData: data,\n    //     comSelected: storeDetails.comSelected,\n    //   }),\n    // })\n    //   .then((response) => response.json())\n    //   .then((respData) => {\n    //     console.log(respData);\n    //   })\n    //   .catch((e) => alert(\"Error with printer\"));\n  };\n\n  const CleanupOps = (metaList) => {\n    const opsArray = [];\n\n    metaList.forEach((op) => {\n      const arrContaingMe = opsArray.filter(\n        (filterOp) => filterOp.key === op.key\n      );\n\n      if (arrContaingMe.length > 0) {\n        opsArray.forEach((opsArrItem, index) => {\n          if (opsArrItem.key === op.key) {\n            opsArray[index].vals.push(op.value);\n          }\n        });\n      } else {\n        opsArray.push({ key: op.key, vals: [op.value] });\n      }\n    });\n    return opsArray;\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ textAlign: \"center\", margin: 25 }}>\n        List Of Transactions\n      </Text>\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Price: {todaysDetails.todaysReceiptValue}\n        </Text>\n        <Button\n          style={{ height: 40, alignItems: \"center\", justifyContent: \"center\" }}\n          title=\"Print Todays Receipts\"\n          onPress={PrintTodaysTotal}\n        />\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Receipts: {todaysDetails.todaysReceipts}\n        </Text>\n      </View>\n      <View style={styles.contentContainer}>\n        {transList ? (\n          transList?.map((element, index) => {\n            // let date;\n\n            // if (element.date_created) {\n            //   const dateString = element.date_created;\n\n            //   const newDate = new Date(dateString + \"Z\");\n\n            //   const targetTimezone =\n            //     Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n            //   const result = tz(newDate)\n            //     .tz(targetTimezone, true)\n            //     .format(\"dddd, MMMM Do YYYY, h:mm:ss a z\");\n\n            //   date = result;\n            // } else if (element.date) {\n            //   const newDate = new Date(element.date.seconds * 1000);\n            //   const targetTimezone =\n            //     Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n            //   const result = tz(newDate)\n            //     .tz(targetTimezone, true)\n            //     .format(\"dddd, MMMM Do YYYY, h:mm:ss a z\");\n\n            //   date = result;\n            // }\n\n            // return (\n            //   <View\n            //     style={{ backgroundColor: \"grey\", padding: 30, margin: 10 }}\n            //     key={index}\n            //   >\n            //     {element.cart_hash && <Text>Online Order</Text>}\n            //     <Text>{date}</Text>\n            //     {element.cart?.map((cartItem, index) => (\n            //       <View style={{ marginBottom: 20 }} key={index}>\n            //         <Text>Name: {cartItem.name}</Text>\n            //         <Text>Quantity: {cartItem.quantity}</Text>\n            //         <Text>Price: {cartItem.price}</Text>\n            //         {cartItem.options &&\n            //           cartItem.options?.map((option) => <Text>{option}</Text>)}\n            //       </View>\n            //     ))}\n            //     {element.line_items?.map((cartItem, index) => (\n            //       <View style={{ marginBottom: 20 }} key={index}>\n            //         <Text>Name: {cartItem.name}</Text>\n            //         <Text>Quantity: {cartItem.quantity}</Text>\n            //         <Text>Price: {cartItem.price}</Text>\n            //         {cartItem.meta &&\n            //           CleanupOps(cartItem.meta).map((returnedItem) => (\n            //             <View style={{ flexDirection: \"row\" }}>\n            //               <Text>{returnedItem.key} : </Text>\n            //               {returnedItem.vals.map((val, index) => (\n            //                 <Text>\n            //                   {val}\n            //                   {index >= 0 &&\n            //                     index < returnedItem.vals.length - 1 &&\n            //                     \", \"}\n            //                 </Text>\n            //               ))}\n            //             </View>\n            //           ))}\n            //       </View>\n            //     ))}\n            //     {element.billing && (\n            //       <Text>Phone Number: {element.billing.phone}</Text>\n            //     )}\n            //     {element.customer_note?.length > 0 && (\n            //       <Text>Customer Note: {element.customer_note}</Text>\n            //     )}\n            //     <Button\n            //       title=\"Print\"\n            //       onPress={() => {\n            //         if (element.date) {\n            //           let total = 0;\n\n            //           let data = [\n            //             \"\\x1B\" + \"\\x40\", // init\n            //             \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n            //             storeDetails.name,\n            //             \"\\x0A\",\n            //             storeDetails.address + \"\\x0A\",\n            //             storeDetails.website + \"\\x0A\", // text and line break\n            //             storeDetails.phoneNumber + \"\\x0A\", // text and line break\n            //             date.toLocaleDateString() +\n            //               \" \" +\n            //               date.toLocaleTimeString() +\n            //               \"\\x0A\",\n            //             \"\\x0A\",\n            //             `Transaction # ${element.transNum}` + \"\\x0A\",\n            //             \"\\x0A\",\n            //             \"\\x0A\",\n            //             \"\\x0A\",\n            //             \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n            //           ];\n\n            //           element.cart?.map((cartItem) => {\n            //             total += parseFloat(cartItem.price);\n            //             data.push(`Name: ${cartItem.name}`);\n            //             data.push(\"\\x0A\");\n            //             data.push(`Price: $${cartItem.price}`);\n\n            //             if (cartItem.options) {\n            //               data.push(\"\\x0A\");\n            //               cartItem.options?.map((option) => {\n            //                 data.push(option);\n            //                 data.push(\"\\x0A\");\n            //               });\n            //             }\n            //             data.push(\"\\x0A\" + \"\\x0A\");\n            //           });\n\n            //           total = total * 1.13;\n            //           total = total.toFixed(2);\n\n            //           if (element.billing) {\n            //             data.push(`Phone Number: ${element.billing.phone}`);\n            //             data.push(\"\\x0A\");\n            //           }\n\n            //           if (element.customer_note) {\n            //             data.push(`Customer Note: ${element.customer_note}`);\n            //             data.push(\"\\x0A\");\n            //           }\n\n            //           //push ending\n            //           data.push(\n            //             \"\\x0A\",\n            //             \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n            //             \"\\x0A\" + \"\\x0A\",\n            //             \"Total Including (13% Tax): \" +\n            //               \"$\" +\n            //               total +\n            //               \"\\x0A\" +\n            //               \"\\x0A\",\n            //             \"------------------------------------------\" + \"\\x0A\",\n            //             \"\\x0A\", // line break\n            //             \"\\x0A\", // line break\n            //             \"\\x0A\", // line break\n            //             \"\\x0A\", // line break\n            //             \"\\x0A\", // line break\n            //             \"\\x0A\", // line break\n            //             //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n            //             \"\\x1D\" + \"\\x56\" + \"\\x30\"\n            //           );\n\n            //           const qz = require(\"qz-tray\");\n            //           qz.websocket\n            //             .connect()\n            //             .then(function () {\n            //               let config = qz.configs.create(\n            //                 storeDetails.comSelected\n            //               );\n            //               return qz.print(config, data);\n            //             })\n            //             .then(qz.websocket.disconnect)\n            //             .catch(function (err) {\n            //               console.error(err);\n            //             });\n            //           // fetch(\"http://localhost:8080/print\", {\n            //           //   method: \"POST\",\n            //           //   headers: {\n            //           //     \"Content-Type\": \"application/json\",\n            //           //   },\n            //           //   body: JSON.stringify({\n            //           //     printData: data,\n            //           //     comSelected: storeDetails.comSelected,\n            //           //   }),\n            //           // })\n            //           //   .then((response) => response.json())\n            //           //   .then((respData) => {\n            //           //     console.log(respData);\n            //           //   })\n            //           //   .catch((e) => alert(\"Error with printer\"));\n            //         } else {\n            //           const printData = [];\n\n            //           printData.push(\n            //             \"\\x1B\" + \"\\x40\", // init\n            //             \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n            //             storeDetails.name,\n            //             \"\\x0A\",\n            //             storeDetails.address + \"\\x0A\",\n            //             storeDetails.website + \"\\x0A\", // text and line break\n            //             storeDetails.phoneNumber + \"\\x0A\", // text and line break\n            //             date + \"\\x0A\",\n            //             \"\\x0A\",\n            //             \"Online Order\" + \"\\x0A\", // text and line break\n            //             `Transaction # ${element.number}` + \"\\x0A\",\n            //             \"\\x0A\",\n            //             \"\\x0A\",\n            //             \"\\x0A\",\n            //             \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n            //           );\n\n            //           element.line_items?.map((cartItem) => {\n            //             printData.push(\"\\x0A\");\n            //             printData.push(`Name: ${cartItem.name}`);\n            //             printData.push(\"\\x0A\");\n            //             printData.push(`Quantity: ${cartItem.quantity}`);\n            //             printData.push(\"\\x0A\");\n            //             printData.push(`Price: $${cartItem.price}`);\n            //             printData.push(\"\\x0A\");\n\n            //             if (cartItem.meta) {\n            //               cartItem.meta?.map((meta, index) => {\n            //                 if (index === 0) {\n            //                   printData.push(`${meta.key} : ${meta.value}`);\n            //                   if (cartItem.meta[index + 1].key !== meta.key) {\n            //                     printData.push(\"\\x0A\");\n            //                   }\n            //                 } else {\n            //                   if (index !== cartItem.meta.length - 1) {\n            //                     if (cartItem.meta[index - 1].key === meta.key) {\n            //                       printData.push(` , ${meta.value}`);\n            //                     } else {\n            //                       printData.push(`${meta.key} : ${meta.value}`);\n            //                     }\n\n            //                     if (cartItem.meta[index + 1].key !== meta.key) {\n            //                       printData.push(\"\\x0A\");\n            //                     }\n            //                   }\n            //                 }\n            //               });\n            //             } else {\n            //               printData.push(\"\\x0A\" + \"\\x0A\");\n            //             }\n            //           });\n\n            //           printData.push(\"\\x0A\");\n            //           printData.push(\"\\x0A\");\n            //           printData.push(`Customer Details:`);\n            //           printData.push(\"\\x0A\");\n            //           printData.push(`Address: ${element.shipping.address_1}`);\n            //           printData.push(\"\\x0A\");\n            //           printData.push(`City: ${element.shipping.city}`);\n            //           printData.push(\"\\x0A\");\n            //           printData.push(\n            //             `Zip/Postal Code: ${element.shipping.postcode}`\n            //           );\n            //           printData.push(\"\\x0A\");\n            //           printData.push(\n            //             `Province/State: ${element.shipping.state}`\n            //           );\n            //           printData.push(\"\\x0A\");\n            //           printData.push(\n            //             `Name: ${element.shipping.first_name} ${element.shipping.last_name}`\n            //           );\n            //           printData.push(\"\\x0A\");\n            //           element.shipping_lines.map((line) =>\n            //             printData.push(`Shipping Method: ${line.method_title}`)\n            //           );\n            //           if (element.billing) {\n            //             printData.push(\n            //               `Phone Number: ${element.billing.phone}`\n            //             );\n            //             printData.push(\"\\x0A\");\n            //           }\n            //           if (element.customer_note) {\n            //             printData.push(\n            //               `Customer Note: ${element.customer_note}`\n            //             );\n            //             printData.push(\"\\x0A\");\n            //           }\n            //           printData.push(\"\\x0A\");\n            //           printData.push(\"\\x0A\");\n\n            //           printData.push(\n            //             \"\\x0A\",\n            //             \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n            //             \"\\x0A\" + \"\\x0A\",\n            //             \"Payment Method: \" +\n            //               element.payment_method_title +\n            //               \"\\x0A\" +\n            //               \"\\x0A\",\n            //             \"Total Including (13% Tax): \" +\n            //               \"$\" +\n            //               element.total +\n            //               \"\\x0A\" +\n            //               \"\\x0A\",\n            //             \"------------------------------------------\" + \"\\x0A\",\n            //             \"\\x0A\", // line break\n            //             \"\\x0A\", // line break\n            //             \"\\x0A\", // line break\n            //             \"\\x0A\", // line break\n            //             \"\\x0A\", // line break\n            //             \"\\x0A\" // line break\n            //           );\n\n            //           printData.push(\"\\x1D\" + \"\\x56\" + \"\\x00\");\n\n            //           const qz = require(\"qz-tray\");\n            //           qz.websocket\n            //             .connect()\n            //             .then(function () {\n            //               let config = qz.configs.create(\n            //                 storeDetails.comSelected\n            //               );\n            //               return qz.print(config, printData);\n            //             })\n            //             .then(qz.websocket.disconnect)\n            //             .catch(function (err) {\n            //               console.error(err);\n            //             });\n\n            //           // fetch(\"http://localhost:8080/print\", {\n            //           //   method: \"POST\",\n            //           //   headers: {\n            //           //     \"Content-Type\": \"application/json\",\n            //           //   },\n            //           //   body: JSON.stringify({\n            //           //     printData: printData,\n            //           //     comSelected: storeDetails.comSelected,\n            //           //   }),\n            //           // })\n            //           //   .then((response) => response.json())\n            //           //   .then((respData) => {\n            //           //     console.log(respData);\n            //           //   })\n            //           //   .catch((e) => alert(\"Error with printer\"));\n            //         }\n            //       }}\n            //     />\n            //   </View>\n            //);\n            return <Text>Order</Text>;\n          })\n        ) : (\n          <Text>No receipts yet</Text>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default ViewTransactions;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\",\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}