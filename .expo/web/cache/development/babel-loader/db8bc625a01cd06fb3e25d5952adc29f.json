{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { customersList, setCustomersList, storeDetailState } from \"../../state/state\";\nimport { Switch } from \"react-native-gesture-handler\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { addCustomerDetailsToDb } from \"../../state/firebaseFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\nvar DeliveryScreen = function DeliveryScreen(_ref) {\n  var setDeliveryModal = _ref.setDeliveryModal,\n    setOngoingDelivery = _ref.setOngoingDelivery,\n    setName = _ref.setName,\n    setPhone = _ref.setPhone,\n    setAddress = _ref.setAddress,\n    name = _ref.name,\n    phone = _ref.phone,\n    address = _ref.address,\n    deliveryChecked = _ref.deliveryChecked,\n    setDeliveryChecked = _ref.setDeliveryChecked,\n    setsavedCustomerDetails = _ref.setsavedCustomerDetails,\n    ongoingDelivery = _ref.ongoingDelivery,\n    setsaveCustomerModal = _ref.setsaveCustomerModal,\n    buzzCode = _ref.buzzCode,\n    setBuzzCode = _ref.setBuzzCode,\n    unitNumber = _ref.unitNumber,\n    setUnitNumber = _ref.setUnitNumber;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    localAddress = _useState2[0],\n    setlocalAddress = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    saveCustomerChecked = _useState4[0],\n    setsaveCustomerChecked = _useState4[1];\n  var customers = customersList.use();\n  var storeDetails = storeDetailState.use();\n\n  function calculateDistance(lat1, lon1, lat2, lon2) {\n    var R = 6371;\n    var dLat = (lat2 - lat1) * (Math.PI / 180);\n    var dLon = (lon2 - lon1) * (Math.PI / 180);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * (Math.PI / 180)) * Math.cos(lat2 * (Math.PI / 180)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var distance = R * c;\n    return distance;\n  }\n\n  function getLatLng(_x) {\n    return _getLatLng.apply(this, arguments);\n  }\n  function _getLatLng() {\n    _getLatLng = _asyncToGenerator(function* (placeId) {\n      var response = yield fetch(\"https://us-central1-posmate-5fc0a.cloudfunctions.net/getLatLng\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          placeId: placeId\n        })\n      });\n      try {\n        var responseData = yield response.json();\n        if (response.ok && responseData.success) {\n          console.log(\"Success!\");\n          return responseData.data;\n        } else {\n          console.error(responseData.message);\n        }\n      } catch (jsonError) {\n        console.error(\"Error parsing JSON response:\", jsonError);\n      }\n    });\n    return _getLatLng.apply(this, arguments);\n  }\n  function calculateDistanceBetweenAddresses(_x2, _x3) {\n    return _calculateDistanceBetweenAddresses.apply(this, arguments);\n  }\n  function _calculateDistanceBetweenAddresses() {\n    _calculateDistanceBetweenAddresses = _asyncToGenerator(function* (address1, address2) {\n      try {\n        var _yield$getLatLng = yield getLatLng(address1),\n          lat1 = _yield$getLatLng.lat,\n          lon1 = _yield$getLatLng.lng;\n        var _yield$getLatLng2 = yield getLatLng(address2),\n          lat2 = _yield$getLatLng2.lat,\n          lon2 = _yield$getLatLng2.lng;\n        var distance = calculateDistance(lat1, lon1, lat2, lon2);\n        return distance;\n      } catch (error) {\n        console.error(\"Error calculating distance:\", error);\n        return null;\n      }\n    });\n    return _calculateDistanceBetweenAddresses.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    if (address) {\n      console.log(\"Set address: \", address);\n      setlocalAddress(address);\n      try {\n        calculateDistanceBetweenAddresses(storeDetails.address.value.reference, address.value.reference).then(function (distance) {\n          if (distance !== null) {\n            console.log(\"Distance between addresses: \" + distance.toFixed(2) + \" km\");\n            if (storeDetails.deliveryRange) {\n              if (distance > parseFloat(storeDetails.deliveryRange) && deliveryChecked) {\n                alert(\"The delivery address is out of range\");\n              }\n            }\n          }\n        });\n      } catch (_unused) {\n        console.log(\"Error calculating distance between addresses\");\n      }\n    }\n  }, []);\n  useEffect(function () {\n    if (localAddress) {\n      setAddress(localAddress);\n      try {\n        calculateDistanceBetweenAddresses(storeDetails.address.value.reference, localAddress.value.reference).then(function (distance) {\n          if (distance !== null) {\n            console.log(\"Distance between addresses: \" + distance.toFixed(2) + \" km\");\n            if (storeDetails.deliveryRange) {\n              if (distance > parseFloat(storeDetails.deliveryRange) && deliveryChecked) {\n                alert(\"The delivery address is out of range\");\n              }\n            }\n          }\n        });\n      } catch (_unused2) {\n        console.log(\"Error calculating distance between addresses\");\n      }\n    }\n  }, [localAddress]);\n  var SaveCustomer = function SaveCustomer() {\n    addCustomerDetailsToDb({\n      name: name,\n      phone: phone,\n      address: address ? address : null,\n      buzzCode: buzzCode ? buzzCode : null,\n      unitNumber: unitNumber ? unitNumber : null,\n      orders: []\n    }).then(function (docRef) {\n      setsavedCustomerDetails({\n        name: name,\n        phone: phone,\n        address: address ? address : null,\n        buzzCode: buzzCode ? buzzCode : null,\n        unitNumber: unitNumber ? unitNumber : null,\n        orders: [],\n        id: docRef.id\n      });\n      setCustomersList([].concat(_toConsumableArray(customers), [{\n        name: name,\n        phone: phone,\n        address: address ? address : null,\n        buzzCode: buzzCode ? buzzCode : null,\n        unitNumber: unitNumber ? unitNumber : null,\n        orders: [],\n        id: docRef.id\n      }]));\n    });\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setDeliveryModal(false);\n      },\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flex: 1\n      }\n    }), _jsx(View, {\n      style: {\n        position: \"absolute\",\n        alignSelf: \"center\",\n        padding: 50,\n        backgroundColor: \"rgba(255,255,255,1)\",\n        borderRadius: 30,\n        shadowColor: \"rgba(0,0,0,1)\",\n        shadowOffset: {\n          width: 3,\n          height: 3\n        },\n        elevation: 30,\n        shadowOpacity: 0.57,\n        shadowRadius: 10,\n        width: \"35%\",\n        top: \"10%\",\n        bottom: \"10%\",\n        height: \"80%\"\n      },\n      children: _jsxs(View, {\n        children: [_jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            marginBottom: 15\n          },\n          children: [_jsx(MaterialCommunityIcons, {\n            onPress: function onPress() {\n              return setDeliveryModal(false);\n            },\n            name: \"close\",\n            size: 26,\n            color: \"rgba(74,74,74,1)\"\n          }), _jsx(Text, {\n            style: {\n              margin: 25,\n              fontSize: 20,\n              fontWeight: \"600\",\n              textAlign: \"center\"\n            },\n            children: \"Phone Order\"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              setsaveCustomerModal(true);\n              setDeliveryModal(false);\n            },\n            disabled: ongoingDelivery,\n            children: _jsx(MaterialCommunityIcons, {\n              name: \"history\",\n              size: 26,\n              color: \"rgba(74,74,74,1)\"\n            })\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            backgroundColor: \"rgba(243,243,243,1)\",\n            borderRadius: 30,\n            height: 60,\n            marginBottom: 25\n          },\n          children: [_jsx(View, {\n            style: {\n              width: 60,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              backgroundColor: \"rgba(218,216,216,1)\",\n              borderRadius: 30,\n              height: 60\n            },\n            children: _jsx(MaterialCommunityIcons, {\n              name: \"account\",\n              size: 32,\n              color: \"rgba(71,106,229,1)\"\n            })\n          }), _jsx(TextInput, {\n            color: \"black\",\n            placeholder: \"Enter name\",\n            style: {\n              width: \"80%\"\n            },\n            inputStyle: {\n              backgroundColor: \"rgba(243,243,243,1)\"\n            },\n            value: name,\n            onChangeText: function onChangeText(val) {\n              return setName(val);\n            },\n            autoCorrect: false,\n            textContentType: \"name\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            backgroundColor: \"rgba(243,243,243,1)\",\n            borderRadius: 30,\n            height: 60,\n            marginBottom: 25\n          },\n          children: [_jsx(View, {\n            style: {\n              width: 60,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              backgroundColor: \"rgba(218,216,216,1)\",\n              borderRadius: 30,\n              height: 60\n            },\n            children: _jsx(MaterialCommunityIcons, {\n              name: \"phone\",\n              size: 32,\n              color: \"rgba(74,74,74,1)\"\n            })\n          }), _jsx(TextInput, {\n            color: \"black\",\n            placeholder: \"Enter Phone #\",\n            style: {\n              width: \"80%\"\n            },\n            inputStyle: {\n              backgroundColor: \"rgba(243,243,243,1)\"\n            },\n            value: phone,\n            onChangeText: function onChangeText(val) {\n              return setPhone(val);\n            }\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginBottom: 25\n          },\n          children: [_jsx(Text, {\n            style: {\n              fontWeight: \"400\",\n              marginRight: 20,\n              marginLeft: 30\n            },\n            children: \"Would you like to save customer?\"\n          }), _jsx(Switch, {\n            value: saveCustomerChecked,\n            onValueChange: function onValueChange() {\n              setsaveCustomerChecked(!saveCustomerChecked);\n            }\n          })]\n        }), storeDetails.acceptDelivery && _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginBottom: 25\n          },\n          children: [_jsx(Text, {\n            style: {\n              fontWeight: \"400\",\n              marginRight: 20,\n              marginLeft: 30\n            },\n            children: \"Delivery Included?\"\n          }), _jsx(Switch, {\n            value: deliveryChecked,\n            onValueChange: function onValueChange() {\n              setDeliveryChecked(!deliveryChecked);\n            }\n          })]\n        }), deliveryChecked && _jsxs(_Fragment, {\n          children: [\" \", _jsx(GooglePlacesAutocomplete, {\n            apiOptions: {\n              region: \"CA\"\n            },\n            debounce: 800,\n            apiKey: GOOGLE_API_KEY\n            ,\n            selectProps: {\n              localAddress: localAddress,\n              onChange: setlocalAddress,\n              placeholder: \"Enter customer address\",\n              defaultValue: address,\n              menuPortalTarget: document.body,\n              styles: {\n                menuPortal: function menuPortal(base) {\n                  return _objectSpread(_objectSpread({}, base), {}, {\n                    zIndex: 9999\n                  });\n                }\n              }\n            },\n            renderSuggestions: function renderSuggestions(active, suggestions, onSelectSuggestion) {\n              return _jsx(\"div\", {\n                style: {\n                  width: \"80%\"\n                },\n                children: suggestions.map(function (suggestion) {\n                  return _jsx(\"div\", {\n                    className: \"suggestion\",\n                    onClick: function onClick(event) {\n                      onSelectSuggestion(suggestion, event);\n                    },\n                    children: suggestion.description\n                  });\n                })\n              });\n            }\n          }), _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\"\n            },\n            children: [_jsx(TextInput, {\n              placeholder: \"Enter Unit #\",\n              onChangeText: function onChangeText(val) {\n                return setUnitNumber(val);\n              },\n              style: {\n                width: \"50%\",\n                height: 50\n              },\n              value: unitNumber\n            }), _jsx(TextInput, {\n              placeholder: \"Enter Buzz Code\",\n              onChangeText: function onChangeText(val) {\n                return setBuzzCode(val);\n              },\n              style: {\n                width: \"50%\",\n                height: 50\n              },\n              value: buzzCode\n            })]\n          })]\n        }), _jsx(Button, {\n          title: ongoingDelivery ? \"Update\" : \"Order\"\n          ,\n          onPress: function onPress() {\n            if (name && phone) {\n              setDeliveryModal(false);\n              setOngoingDelivery(true);\n              if (saveCustomerChecked) {\n                SaveCustomer();\n              }\n            }\n          },\n          contentContainerStyle: styles.btn,\n          style: {\n            margin: 25,\n            backgroundColor: \"#4050B5\"\n          }\n        }), _jsx(Button, {\n          disabled: ongoingDelivery,\n          title: \"Cancel\",\n          onPress: function onPress() {\n            setDeliveryModal(false);\n            setOngoingDelivery(null);\n            setName(null);\n            setPhone(null);\n            setAddress(null);\n            setDeliveryChecked(false);\n            setlocalAddress(null);\n          },\n          contentContainerStyle: styles.btn,\n          style: {\n            margin: 25,\n            backgroundColor: \"#4050B5\"\n          }\n        })]\n      })\n    })]\n  });\n};\nexport default DeliveryScreen;\nvar styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 25\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\"\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25\n  },\n  touchable: {\n    margin: 25,\n    width: 300\n  },\n  modalContainer: {\n    padding: 50,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 30,\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 0.57,\n    shadowRadius: 10,\n    width: \"35%\"\n  },\n  btn: {\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  input: {\n    marginTop: 25,\n    marginBottom: 25\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Button","TextInput","customersList","setCustomersList","storeDetailState","Switch","MaterialCommunityIcons","GooglePlacesAutocomplete","addCustomerDetailsToDb","GOOGLE_API_KEY","DeliveryScreen","setDeliveryModal","setOngoingDelivery","setName","setPhone","setAddress","name","phone","address","deliveryChecked","setDeliveryChecked","setsavedCustomerDetails","ongoingDelivery","setsaveCustomerModal","buzzCode","setBuzzCode","unitNumber","setUnitNumber","localAddress","setlocalAddress","saveCustomerChecked","setsaveCustomerChecked","customers","use","storeDetails","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","distance","getLatLng","placeId","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","success","console","log","data","error","message","jsonError","calculateDistanceBetweenAddresses","address1","address2","lat","lng","value","reference","then","toFixed","deliveryRange","parseFloat","alert","SaveCustomer","orders","docRef","id","backgroundColor","justifyContent","alignItems","flex","position","alignSelf","padding","borderRadius","shadowColor","shadowOffset","width","height","elevation","shadowOpacity","shadowRadius","top","bottom","flexDirection","marginBottom","margin","fontSize","fontWeight","textAlign","val","marginRight","marginLeft","acceptDelivery","region","onChange","placeholder","defaultValue","menuPortalTarget","document","styles","menuPortal","base","zIndex","active","suggestions","onSelectSuggestion","map","suggestion","event","description","btn","StyleSheet","create","sizeRow","halfRow","toppingsContainer","flexWrap","marginTop","touchable","modalContainer","input"],"sources":["/Users/peterputros/Desktop/PosMate/components/modals/DeliveryScreen.tsx"],"sourcesContent":["import { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { customersList, setCustomersList, storeDetailState } from \"state/state\";\nimport { Switch } from \"react-native-gesture-handler\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { addCustomerDetailsToDb } from \"state/firebaseFunctions\";\n\nconst GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\n\nconst DeliveryScreen = ({\n  setDeliveryModal,\n  setOngoingDelivery,\n  setName,\n  setPhone,\n  setAddress,\n  name,\n  phone,\n  address,\n  deliveryChecked,\n  setDeliveryChecked,\n  setsavedCustomerDetails,\n  ongoingDelivery,\n  setsaveCustomerModal,\n  buzzCode,\n  setBuzzCode,\n  unitNumber,\n  setUnitNumber,\n}) => {\n  const [localAddress, setlocalAddress] = useState(null);\n  const [saveCustomerChecked, setsaveCustomerChecked] = useState(false);\n  const customers = customersList.use();\n  const storeDetails = storeDetailState.use();\n\n  //\n\n  // Function to calculate distance between two points using Haversine formula\n  function calculateDistance(lat1, lon1, lat2, lon2) {\n    const R = 6371; // Radius of the Earth in km\n    const dLat = (lat2 - lat1) * (Math.PI / 180); // Convert degrees to radians\n    const dLon = (lon2 - lon1) * (Math.PI / 180);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(lat1 * (Math.PI / 180)) *\n        Math.cos(lat2 * (Math.PI / 180)) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in km\n    return distance;\n  }\n\n  // Function to get the latitude and longitude of an address using the Google Maps Geocoding API\n  async function getLatLng(placeId) {\n    const response = await fetch(\n      \"https://us-central1-posmate-5fc0a.cloudfunctions.net/getLatLng\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          placeId: placeId,\n        }),\n      }\n    );\n\n    try {\n      const responseData = await response.json();\n\n      if (response.ok && responseData.success) {\n        console.log(\"Success!\");\n        return responseData.data;\n      } else {\n        console.error(responseData.message);\n      }\n    } catch (jsonError) {\n      console.error(\"Error parsing JSON response:\", jsonError);\n    }\n  }\n\n  // Function to calculate distance between two addresses using Google Places API\n  async function calculateDistanceBetweenAddresses(address1, address2) {\n    try {\n      const { lat: lat1, lng: lon1 } = await getLatLng(address1);\n      const { lat: lat2, lng: lon2 } = await getLatLng(address2);\n      const distance = calculateDistance(lat1, lon1, lat2, lon2);\n      return distance;\n    } catch (error) {\n      console.error(\"Error calculating distance:\", error);\n      return null;\n    }\n  }\n\n  //\n\n  useEffect(() => {\n    if (address) {\n      console.log(\"Set address: \", address);\n      setlocalAddress(address);\n      try {\n        calculateDistanceBetweenAddresses(\n          storeDetails.address.value.reference,\n          address.value.reference\n        ).then((distance) => {\n          if (distance !== null) {\n            console.log(\n              `Distance between addresses: ${distance.toFixed(2)} km`\n            );\n            if (storeDetails.deliveryRange) {\n              if (\n                distance > parseFloat(storeDetails.deliveryRange) &&\n                deliveryChecked\n              ) {\n                alert(\"The delivery address is out of range\");\n              }\n            }\n          }\n        });\n      } catch {\n        console.log(\"Error calculating distance between addresses\");\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (localAddress) {\n      setAddress(localAddress);\n      try {\n        calculateDistanceBetweenAddresses(\n          storeDetails.address.value.reference,\n          localAddress.value.reference\n        ).then((distance) => {\n          if (distance !== null) {\n            console.log(\n              `Distance between addresses: ${distance.toFixed(2)} km`\n            );\n            if (storeDetails.deliveryRange) {\n              if (\n                distance > parseFloat(storeDetails.deliveryRange) &&\n                deliveryChecked\n              ) {\n                alert(\"The delivery address is out of range\");\n              }\n            }\n          }\n        });\n      } catch {\n        console.log(\"Error calculating distance between addresses\");\n      }\n    }\n  }, [localAddress]);\n\n  const SaveCustomer = () => {\n    addCustomerDetailsToDb({\n      name: name,\n      phone: phone,\n      address: address ? address : null,\n      buzzCode: buzzCode ? buzzCode : null,\n      unitNumber: unitNumber ? unitNumber : null,\n      orders: [],\n    }).then((docRef) => {\n      setsavedCustomerDetails({\n        name: name,\n        phone: phone,\n        address: address ? address : null,\n        buzzCode: buzzCode ? buzzCode : null,\n        unitNumber: unitNumber ? unitNumber : null,\n        orders: [],\n        id: docRef.id,\n      });\n\n      setCustomersList([\n        ...customers,\n        {\n          name: name,\n          phone: phone,\n          address: address ? address : null,\n          buzzCode: buzzCode ? buzzCode : null,\n          unitNumber: unitNumber ? unitNumber : null,\n          orders: [],\n          id: docRef.id,\n        },\n      ]);\n    });\n  };\n\n  return (\n    <>\n      <TouchableOpacity\n        onPress={() => setDeliveryModal(false)}\n        style={{\n          backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flex: 1,\n        }}\n      />\n      <View\n        style={{\n          position: \"absolute\",\n          alignSelf: \"center\",\n          padding: 50,\n          backgroundColor: \"rgba(255,255,255,1)\",\n          borderRadius: 30,\n          shadowColor: \"rgba(0,0,0,1)\",\n          shadowOffset: {\n            width: 3,\n            height: 3,\n          },\n          elevation: 30,\n          shadowOpacity: 0.57,\n          shadowRadius: 10,\n          width: \"35%\",\n          top: \"10%\",\n          bottom: \"10%\",\n          height: \"80%\",\n        }}\n      >\n        <View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginBottom: 15,\n            }}\n          >\n            <MaterialCommunityIcons\n              onPress={() => setDeliveryModal(false)}\n              name=\"close\"\n              size={26}\n              color=\"rgba(74,74,74,1)\"\n            />\n            <Text\n              style={{\n                margin: 25,\n                fontSize: 20,\n                fontWeight: \"600\",\n                textAlign: \"center\",\n              }}\n            >\n              Phone Order\n            </Text>\n            <TouchableOpacity\n              onPress={() => {\n                setsaveCustomerModal(true);\n                setDeliveryModal(false);\n              }}\n              disabled={ongoingDelivery}\n            >\n              <MaterialCommunityIcons\n                name=\"history\"\n                size={26}\n                color=\"rgba(74,74,74,1)\"\n              />\n            </TouchableOpacity>\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              backgroundColor: \"rgba(243,243,243,1)\",\n              borderRadius: 30,\n              height: 60,\n              marginBottom: 25,\n            }}\n          >\n            <View\n              style={{\n                width: 60,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgba(218,216,216,1)\",\n                borderRadius: 30,\n                height: 60,\n              }}\n            >\n              <MaterialCommunityIcons\n                name=\"account\"\n                size={32}\n                color=\"rgba(71,106,229,1)\"\n              />\n            </View>\n            <TextInput\n              color=\"black\"\n              placeholder=\"Enter name\"\n              style={{ width: \"80%\" }}\n              inputStyle={{ backgroundColor: \"rgba(243,243,243,1)\" }}\n              value={name}\n              onChangeText={(val) => setName(val)}\n              autoCorrect={false}\n              textContentType={\"name\"}\n            />\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              backgroundColor: \"rgba(243,243,243,1)\",\n              borderRadius: 30,\n              height: 60,\n              marginBottom: 25,\n            }}\n          >\n            <View\n              style={{\n                width: 60,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgba(218,216,216,1)\",\n                borderRadius: 30,\n                height: 60,\n              }}\n            >\n              <MaterialCommunityIcons\n                name=\"phone\"\n                size={32}\n                color=\"rgba(74,74,74,1)\"\n              />\n            </View>\n            <TextInput\n              color=\"black\"\n              placeholder=\"Enter Phone #\"\n              style={{ width: \"80%\" }}\n              inputStyle={{ backgroundColor: \"rgba(243,243,243,1)\" }}\n              value={phone}\n              onChangeText={(val) => setPhone(val)}\n            />\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              marginBottom: 25,\n            }}\n          >\n            <Text\n              style={{ fontWeight: \"400\", marginRight: 20, marginLeft: 30 }}\n            >\n              Would you like to save customer?\n            </Text>\n            <Switch\n              value={saveCustomerChecked}\n              onValueChange={() => {\n                setsaveCustomerChecked(!saveCustomerChecked);\n              }}\n            />\n          </View>\n          {storeDetails.acceptDelivery && (\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                marginBottom: 25,\n              }}\n            >\n              <Text\n                style={{ fontWeight: \"400\", marginRight: 20, marginLeft: 30 }}\n              >\n                Delivery Included?\n              </Text>\n              <Switch\n                value={deliveryChecked}\n                onValueChange={() => {\n                  setDeliveryChecked(!deliveryChecked);\n                }}\n              />\n            </View>\n          )}\n          {deliveryChecked && (\n            <>\n              {\" \"}\n              <GooglePlacesAutocomplete\n                apiOptions={{\n                  region: \"CA\",\n                }}\n                debounce={800}\n                apiKey={GOOGLE_API_KEY}\n                // onSelect={handleAddress}\n                selectProps={{\n                  localAddress,\n                  onChange: setlocalAddress,\n                  placeholder: \"Enter customer address\",\n                  defaultValue: address,\n                  menuPortalTarget: document.body,\n                  styles: { menuPortal: (base) => ({ ...base, zIndex: 9999 }) },\n                }}\n                renderSuggestions={(\n                  active,\n                  suggestions,\n                  onSelectSuggestion\n                ) => (\n                  <div style={{ width: \"80%\" }}>\n                    {suggestions.map((suggestion) => (\n                      <div\n                        className=\"suggestion\"\n                        onClick={(event) => {\n                          onSelectSuggestion(suggestion, event);\n                        }}\n                      >\n                        {suggestion.description}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              />\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <TextInput\n                  placeholder=\"Enter Unit #\"\n                  onChangeText={(val) => setUnitNumber(val)}\n                  style={{ width: \"50%\", height: 50 }}\n                  value={unitNumber}\n                />\n                <TextInput\n                  placeholder=\"Enter Buzz Code\"\n                  onChangeText={(val) => setBuzzCode(val)}\n                  style={{ width: \"50%\", height: 50 }}\n                  value={buzzCode}\n                />\n              </View>\n            </>\n          )}\n          {/* <Text>ADDRESS: {address}</Text> */}\n          <Button\n            title={ongoingDelivery ? \"Update\" : \"Order\"}\n            // onPress={GetTrans}\n            onPress={() => {\n              if (name && phone) {\n                setDeliveryModal(false);\n                setOngoingDelivery(true);\n                if (saveCustomerChecked) {\n                  SaveCustomer();\n                }\n              }\n            }}\n            contentContainerStyle={styles.btn}\n            style={{ margin: 25, backgroundColor: \"#4050B5\" }}\n          />\n          <Button\n            disabled={ongoingDelivery}\n            title=\"Cancel\"\n            onPress={() => {\n              setDeliveryModal(false);\n              setOngoingDelivery(null);\n              setName(null);\n              setPhone(null);\n              setAddress(null);\n              setDeliveryChecked(false);\n              setlocalAddress(null);\n            }}\n            contentContainerStyle={styles.btn}\n            style={{ margin: 25, backgroundColor: \"#4050B5\" }}\n          />\n        </View>\n      </View>\n    </>\n  );\n};\n\nexport default DeliveryScreen;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 30,\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3,\n    },\n    elevation: 30,\n    shadowOpacity: 0.57,\n    shadowRadius: 10,\n    width: \"35%\",\n  },\n  btn: {\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  input: {\n    marginTop: 25,\n    marginBottom: 25,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}