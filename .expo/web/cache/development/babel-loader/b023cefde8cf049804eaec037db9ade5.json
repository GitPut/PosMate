{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Svg from 'react-native-svg';\nimport AnimatedSvgPath from \"./AnimatedPath\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar windowDimensions = Dimensions.get('window');\nvar defaultSvgPath = function defaultSvgPath(_ref) {\n  var size = _ref.size,\n    position = _ref.position,\n    canvasSize = _ref.canvasSize;\n  return \"M0,0H\" + canvasSize.x + \"V\" + canvasSize.y + \"H0V0ZM\" + position.x._value + \",\" + position.y._value + \"H\" + (position.x._value + size.x._value) + \"V\" + (position.y._value + size.y._value) + \"H\" + position.x._value + \"V\" + position.y._value + \"Z\";\n};\nvar SvgMask = function (_Component) {\n  _inherits(SvgMask, _Component);\n  var _super = _createSuper(SvgMask);\n  function SvgMask(props) {\n    var _this;\n    _classCallCheck(this, SvgMask);\n    _this = _super.call(this, props);\n    _this.animationListener = function () {\n      var d = _this.props.svgMaskPath({\n        size: _this.state.size,\n        position: _this.state.position,\n        canvasSize: _this.state.canvasSize\n      });\n      if (_this.mask) {\n        _this.mask.setNativeProps({\n          d: d\n        });\n      }\n    };\n    _this.animate = function () {\n      var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props.size;\n      var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.position;\n      if (_this.props.animated) {\n        Animated.parallel([Animated.timing(_this.state.size, {\n          toValue: size,\n          duration: _this.props.animationDuration,\n          easing: _this.props.easing,\n          useNativeDriver: false\n        }), Animated.timing(_this.state.position, {\n          toValue: position,\n          duration: _this.props.animationDuration,\n          easing: _this.props.easing,\n          useNativeDriver: false\n        })]).start();\n      } else {\n        _this.state.size.setValue(size);\n        _this.state.position.setValue(position);\n      }\n    };\n    _this.handleLayout = function (_ref2) {\n      var _ref2$nativeEvent$lay = _ref2.nativeEvent.layout,\n        width = _ref2$nativeEvent$lay.width,\n        height = _ref2$nativeEvent$lay.height;\n      _this.setState({\n        canvasSize: {\n          x: width,\n          y: height\n        }\n      });\n    };\n    _this.state = {\n      canvasSize: {\n        x: windowDimensions.width,\n        y: windowDimensions.height\n      },\n      size: new Animated.ValueXY(props.size),\n      position: new Animated.ValueXY(props.position)\n    };\n    _this.state.position.addListener(_this.animationListener);\n    return _this;\n  }\n  _createClass(SvgMask, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.position !== this.props.position || prevProps.size !== this.props.size) {\n        this.animate(this.props.size, this.props.position);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return _jsx(View, {\n        style: this.props.style,\n        onLayout: this.handleLayout,\n        onStartShouldSetResponder: this.props.onClick,\n        children: this.state.canvasSize ? _jsx(Svg, {\n          pointerEvents: \"none\",\n          width: this.state.canvasSize.x,\n          height: this.state.canvasSize.y,\n          children: _jsx(AnimatedSvgPath, {\n            ref: function ref(_ref3) {\n              _this2.mask = _ref3;\n            },\n            fill: this.props.backdropColor,\n            fillRule: \"evenodd\",\n            strokeWidth: 1,\n            d: this.props.svgMaskPath({\n              size: this.state.size,\n              position: this.state.position,\n              canvasSize: this.state.canvasSize\n            })\n          })\n        }) : null\n      });\n    }\n  }]);\n  return SvgMask;\n}(Component);\nSvgMask.defaultProps = {\n  animationDuration: 300,\n  easing: Easing.linear,\n  svgMaskPath: defaultSvgPath\n};\nexport default SvgMask;","map":{"version":3,"names":["React","Component","Svg","AnimatedSvgPath","windowDimensions","Dimensions","get","defaultSvgPath","size","position","canvasSize","x","y","_value","SvgMask","props","animationListener","d","svgMaskPath","state","mask","setNativeProps","animate","animated","Animated","parallel","timing","toValue","duration","animationDuration","easing","useNativeDriver","start","setValue","handleLayout","nativeEvent","layout","width","height","setState","ValueXY","addListener","prevProps","style","onClick","ref","backdropColor","defaultProps","Easing","linear"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-copilot/src/components/SvgMask.js"],"sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport {\n  View,\n  Animated,\n  Easing,\n  Dimensions,\n} from 'react-native';\nimport Svg from 'react-native-svg';\nimport AnimatedSvgPath from './AnimatedPath';\n\nimport type { valueXY, svgMaskPath } from '../types';\n\nconst windowDimensions = Dimensions.get('window');\nconst defaultSvgPath = ({ size, position, canvasSize }): string => `M0,0H${canvasSize.x}V${canvasSize.y}H0V0ZM${position.x._value},${position.y._value}H${position.x._value + size.x._value}V${position.y._value + size.y._value}H${position.x._value}V${position.y._value}Z`;\n\ntype Props = {\n  size: valueXY,\n  position: valueXY,\n  style: object | number | Array,\n  easing: func,\n  animationDuration: number,\n  animated: boolean,\n  backdropColor: string,\n  svgMaskPath?: svgMaskPath,\n  onClick?: () => void,\n};\n\ntype State = {\n  size: Animated.ValueXY,\n  position: Animated.ValueXY,\n  canvasSize: ?valueXY,\n};\n\nclass SvgMask extends Component<Props, State> {\n  static defaultProps = {\n    animationDuration: 300,\n    easing: Easing.linear,\n    svgMaskPath: defaultSvgPath,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      canvasSize: {\n        x: windowDimensions.width,\n        y: windowDimensions.height,\n      },\n      size: new Animated.ValueXY(props.size),\n      position: new Animated.ValueXY(props.position),\n    };\n\n    this.state.position.addListener(this.animationListener);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.position !== this.props.position || prevProps.size !== this.props.size) {\n      this.animate(this.props.size, this.props.position);\n    }\n  }\n\n  animationListener = (): void => {\n    const d: string = this.props.svgMaskPath({\n      size: this.state.size,\n      position: this.state.position,\n      canvasSize: this.state.canvasSize,\n    });\n    if (this.mask) {\n      this.mask.setNativeProps({ d });\n    }\n  };\n\n  animate = (size: valueXY = this.props.size, position: valueXY = this.props.position): void => {\n    if (this.props.animated) {\n      Animated.parallel([\n        Animated.timing(this.state.size, {\n          toValue: size,\n          duration: this.props.animationDuration,\n          easing: this.props.easing,\n          useNativeDriver: false,\n        }),\n        Animated.timing(this.state.position, {\n          toValue: position,\n          duration: this.props.animationDuration,\n          easing: this.props.easing,\n          useNativeDriver: false,\n        }),\n      ]).start();\n    } else {\n      this.state.size.setValue(size);\n      this.state.position.setValue(position);\n    }\n  }\n\n  handleLayout = ({ nativeEvent: { layout: { width, height } } }) => {\n    this.setState({\n      canvasSize: {\n        x: width,\n        y: height,\n      },\n    });\n  }\n\n  render() {\n    return (\n      <View\n        style={this.props.style}\n        onLayout={this.handleLayout}\n        onStartShouldSetResponder={this.props.onClick}\n      >\n        {\n          this.state.canvasSize\n            ? (\n              <Svg pointerEvents=\"none\" width={this.state.canvasSize.x} height={this.state.canvasSize.y}>\n                <AnimatedSvgPath\n                  ref={(ref) => { this.mask = ref; }}\n                  fill={this.props.backdropColor}\n                  fillRule=\"evenodd\"\n                  strokeWidth={1}\n                  d={this.props.svgMaskPath({\n                    size: this.state.size,\n                    position: this.state.position,\n                    canvasSize: this.state.canvasSize,\n                  })}\n                />\n              </Svg>\n            )\n            : null\n        }\n      </View>\n    );\n  }\n}\n\nexport default SvgMask;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}