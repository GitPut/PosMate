{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport EditStoreDetails from \"../../components/EditStoreDetails\";\nimport DropDown from \"../../components/DropDown\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NewUserPayment = function NewUserPayment() {\n  var _useState = useState(\"Pay $50 each month\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    planType = _useState2[0],\n    setplanType = _useState2[1];\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.innerContainer,\n      children: [_jsx(Text, {\n        children: \"Welcome To Divine Pos\"\n      }), _jsx(Text, {\n        children: \"Please enter your busienss details to start!\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          width: '90%'\n        },\n        children: [_jsx(Text, {\n          children: \"Choose plan type\"\n        }), _jsx(DropDown, {\n          label: \"\",\n          options: [\"Pay $50 each month\", \"Pay $480 Per Year/Each month @$40\", \"Test\"],\n          setValue: setplanType,\n          value: planType\n        })]\n      }), _jsx(EditStoreDetails, {\n        customBtnLbl: \"Check Out\",\n        customBtnExtraFunction: function customBtnExtraFunction() {\n          var sendToCheckout = function () {\n            var _ref = _asyncToGenerator(function* () {\n              yield db.collection(\"users\").doc(auth.currentUser.uid).collection(\"checkout_sessions\").add({\n                price: \"price_1Mb4uSCIw3L7DOwI6exh9JBt\",\n                success_url: window.location.origin,\n                cancel_url: window.location.origin\n              }).then(function (docRef) {\n                docRef.onSnapshot(function () {\n                  var _ref2 = _asyncToGenerator(function* (snap) {\n                    var _snap$data = snap.data(),\n                      error = _snap$data.error,\n                      sessionId = _snap$data.sessionId;\n                    if (error) {\n                      alert(\"An error occurred: \" + error.message);\n                    }\n                    if (sessionId) {\n                      var stripe = yield loadStripe(\"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\");\n\n                      console.log(\"redirecting\");\n                      yield stripe.redirectToCheckout({\n                        sessionId: sessionId\n                      });\n                    }\n                  });\n                  return function (_x) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n              });\n            });\n            return function sendToCheckout() {\n              return _ref.apply(this, arguments);\n            };\n          }();\n        }\n      })]\n    })\n  });\n};\nexport default NewUserPayment;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"rgba(31,35,48,1)\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  innerContainer: {\n    backgroundColor: \"white\",\n    width: \"95%\",\n    height: \"90%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 6,\n    padding: 50\n  }\n});","map":{"version":3,"names":["React","useState","EditStoreDetails","DropDown","NewUserPayment","planType","setplanType","styles","container","innerContainer","flexDirection","justifyContent","alignItems","width","sendToCheckout","db","collection","doc","auth","currentUser","uid","add","price","success_url","window","location","origin","cancel_url","then","docRef","onSnapshot","snap","data","error","sessionId","alert","message","stripe","loadStripe","console","log","redirectToCheckout","StyleSheet","create","backgroundColor","height","borderRadius","padding"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/NewUserPayment.tsx"],"sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport EditStoreDetails from \"components/EditStoreDetails\";\nimport DropDown from \"components/DropDown\";\n\nconst NewUserPayment = () => {\n  const [planType, setplanType] = useState(\"Pay $50 each month\");\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.innerContainer}>\n        <Text>Welcome To Divine Pos</Text>\n        <Text>Please enter your busienss details to start!</Text>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n                      alignItems: \"center\",\n            width: '90%'\n          }}\n        >\n          <Text>Choose plan type</Text>\n          <DropDown\n            label=\"\"\n            options={[\n              \"Pay $50 each month\",\n              \"Pay $480 Per Year/Each month @$40\",\n              \"Test\",\n            ]}\n            setValue={setplanType}\n            value={planType}\n          />\n        </View>\n              <EditStoreDetails customBtnLbl=\"Check Out\" customBtnExtraFunction={() => {\n                 const sendToCheckout = async () => {\n                   await db\n                     .collection(\"users\")\n                     .doc(auth.currentUser.uid)\n                     .collection(\"checkout_sessions\")\n                     .add({\n                       price: \"price_1Mb4uSCIw3L7DOwI6exh9JBt\", // todo price Id from your products price in the Stripe Dashboard\n                       success_url: window.location.origin, // return user to this screen on successful purchase\n                       cancel_url: window.location.origin, // return user to this screen on failed purchase\n                     })\n                     .then((docRef) => {\n                       // Wait for the checkoutSession to get attached by the extension\n                       docRef.onSnapshot(async (snap) => {\n                         const { error, sessionId } = snap.data();\n                         if (error) {\n                           // Show an error to your customer and inspect\n                           // your Cloud Function logs in the Firebase console.\n                           alert(`An error occurred: ${error.message}`);\n                         }\n\n                         if (sessionId) {\n                           // We have a session, let's redirect to Checkout\n                           // Init Stripe\n                           const stripe = await loadStripe(\n                             \"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\" // todo enter your public stripe key here\n                           );\n                           console.log(`redirecting`);\n                           await stripe.redirectToCheckout({ sessionId });\n                         }\n                       });\n                     });\n                 };\n        }} />\n      </View>\n    </View>\n  );\n};\n\nexport default NewUserPayment;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"rgba(31,35,48,1)\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  innerContainer: {\n    backgroundColor: \"white\",\n    width: \"95%\",\n    height: \"90%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n      borderRadius: 6,\n    padding: 50\n  },\n});\n"],"mappings":";;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB;AACvB,OAAOC,QAAQ;AAA4B;AAAA;AAE3C,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,gBAAgCH,QAAQ,CAAC,oBAAoB,CAAC;IAAA;IAAvDI,QAAQ;IAAEC,WAAW;EAE5B,OACE,KAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,UAC5B,MAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,cAAe;MAAA,WACjC,KAAC,IAAI;QAAA;MAAA,EAA6B,EAClC,KAAC,IAAI;QAAA;MAAA,EAAoD,EACzD,MAAC,IAAI;QACH,KAAK,EAAE;UACLC,aAAa,EAAE,KAAK;UACpBC,cAAc,EAAE,eAAe;UACrBC,UAAU,EAAE,QAAQ;UAC9BC,KAAK,EAAE;QACT,CAAE;QAAA,WAEF,KAAC,IAAI;UAAA;QAAA,EAAwB,EAC7B,KAAC,QAAQ;UACP,KAAK,EAAC,EAAE;UACR,OAAO,EAAE,CACP,oBAAoB,EACpB,mCAAmC,EACnC,MAAM,CACN;UACF,QAAQ,EAAEP,WAAY;UACtB,KAAK,EAAED;QAAS,EAChB;MAAA,EACG,EACD,KAAC,gBAAgB;QAAC,YAAY,EAAC,WAAW;QAAC,sBAAsB,EAAE,kCAAM;UACtE,IAAMS,cAAc;YAAA,6BAAG,aAAY;cACjC,MAAMC,EAAE,CACLC,UAAU,CAAC,OAAO,CAAC,CACnBC,GAAG,CAACC,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,CACzBJ,UAAU,CAAC,mBAAmB,CAAC,CAC/BK,GAAG,CAAC;gBACHC,KAAK,EAAE,gCAAgC;gBACvCC,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM;gBACnCC,UAAU,EAAEH,MAAM,CAACC,QAAQ,CAACC;cAC9B,CAAC,CAAC,CACDE,IAAI,CAAC,UAACC,MAAM,EAAK;gBAEhBA,MAAM,CAACC,UAAU;kBAAA,8BAAC,WAAOC,IAAI,EAAK;oBAChC,iBAA6BA,IAAI,CAACC,IAAI,EAAE;sBAAhCC,KAAK,cAALA,KAAK;sBAAEC,SAAS,cAATA,SAAS;oBACxB,IAAID,KAAK,EAAE;sBAGTE,KAAK,yBAAuBF,KAAK,CAACG,OAAO,CAAG;oBAC9C;oBAEA,IAAIF,SAAS,EAAE;sBAGb,IAAMG,MAAM,SAASC,UAAU,CAC7B,6GAA6G,CAC9G;;sBACDC,OAAO,CAACC,GAAG,eAAe;sBAC1B,MAAMH,MAAM,CAACI,kBAAkB,CAAC;wBAAEP,SAAS,EAATA;sBAAU,CAAC,CAAC;oBAChD;kBACF,CAAC;kBAAA;oBAAA;kBAAA;gBAAA,IAAC;cACJ,CAAC,CAAC;YACN,CAAC;YAAA,gBA/BKpB,cAAc;cAAA;YAAA;UAAA,GA+BnB;QACV;MAAE,EAAG;IAAA;EACA,EACF;AAEX,CAAC;AAED,eAAeV,cAAc;AAE7B,IAAMG,MAAM,GAAGmC,UAAU,CAACC,MAAM,CAAC;EAC/BnC,SAAS,EAAE;IACToC,eAAe,EAAE,kBAAkB;IACnC/B,KAAK,EAAE,MAAM;IACbgC,MAAM,EAAE,MAAM;IACdlC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDH,cAAc,EAAE;IACdmC,eAAe,EAAE,OAAO;IACxB/B,KAAK,EAAE,KAAK;IACZgC,MAAM,EAAE,KAAK;IACblC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IAClBkC,YAAY,EAAE,CAAC;IACjBC,OAAO,EAAE;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}