{"ast":null,"code":"import React, { Component, useEffect } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { isSignedInSettingsState } from \"../../state/state\";\n\nimport { useHistory } from \"react-router-dom\";\nimport Default from \"./Default\";\nimport WebHome from \"../../screens/non-authed/WebHome\";\nimport Features from \"../../screens/non-authed/Features\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NonAuthRoute = function NonAuthRoute(props) {\n  var isLoginSettings = isSignedInSettingsState.use();\n  var location = props.location;\n  var history = useHistory();\n\n  return _jsxs(Switch, {\n    children: [_jsx(Route, {\n      exact: true,\n      path: \"/\",\n      component: WebHome\n    }), _jsx(Route, {\n      path: \"/features\",\n      component: Features\n    }), \"path=\\\"/\\\" component=\", WebHome, \"/> path=\\\"features\\\" component=\", Features, \" /> path=\\\"about-us\\\" component=\", AboutUs, \" /> path=\\\"pricing\\\" component=\", Pricing, \" /> path=\\\"faqs\\\" component=\", Faqs, \" /> path=\\\"contact\\\" component=\", Contact, \" /> path=\\\"log-in\\\" component=\", LatestUpdates, \" /> path=\\\"sign-up\\\" component=\", Legal, \" /> path=\\\"legal\\\" component=\", Login, \"/> path=\\\"reset-password\\\" component=\", Signup, \" /> path=\\\"latest-updates\\\" component=\", ResetPassword, \"/> path=\\\"*\\\" component=\", NotFound, \" />\"]\n  });\n};\nexport default NonAuthRoute;","map":{"version":3,"names":["React","Component","useEffect","Redirect","Route","Switch","isSignedInSettingsState","useHistory","Default","WebHome","Features","NonAuthRoute","props","isLoginSettings","use","location","history","AboutUs","Pricing","Faqs","Contact","LatestUpdates","Legal","Login","Signup","ResetPassword","NotFound"],"sources":["/Users/peterputros/Desktop/PosMate/navigation/non-authed/NonAuthRoute.jsx"],"sourcesContent":["import React, { Component, useEffect } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { isSignedInSettingsState } from 'state/state';\r\n\r\n// import SignIn from './SignIn'\r\n// import ForgetPassword from './ForgetPassword';\r\n// import SignUp from './SignUp'\r\n// import Pos from './pos/pos'\r\n\r\n\r\n// import Error404 from '../MainPage/ErrorPage/Error404';\r\n// import Error500 from '../MainPage/ErrorPage/Error500';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Default from './Default';\r\nimport WebHome from 'screens/non-authed/WebHome';\r\nimport Features from 'screens/non-authed/Features';\r\n\r\n\r\nconst NonAuthRoute = (props) => {\r\n    const isLoginSettings = isSignedInSettingsState.use()\r\n    const { location } = props;\r\n      const history = useHistory();\r\n    \r\n    // useEffect(() => {\r\n    //    if (!location.pathname.includes(\"/authed\") || location.pathname.includes(\"/authed\") && isLoginSettings === false) {\r\n    //        history.push(\"/pos\");\r\n    // }\r\n    // }, [])\r\n    \r\n\r\n        return (\r\n            <Switch>\r\n                {/* <Route path=\"/signIn\" component={SignIn} />\r\n                <Route path=\"/forgetPassword\" component={ForgetPassword} />\r\n                <Route path=\"/signUp\" component={SignUp} /> */}\r\n                <Route exact path=\"/\" component={WebHome} />\r\n                <Route path=\"/features\" component={Features} />\r\n                  path=\"/\" component={WebHome}/>\r\n path=\"features\" component={Features} />\r\n path=\"about-us\" component={AboutUs} />\r\n path=\"pricing\" component={Pricing} />\r\n path=\"faqs\" component={Faqs} />\r\n path=\"contact\" component={Contact} />\r\n path=\"log-in\" component={LatestUpdates} />\r\n path=\"sign-up\" component={Legal} />\r\n path=\"legal\" component={Login}/>\r\n path=\"reset-password\" component={Signup} />\r\n path=\"latest-updates\" component={ResetPassword}/>\r\n path=\"*\" component={NotFound} />\r\n                \r\n                {/* <Route path=\"/error-404\" component={Error404} />\r\n                <Route path=\"/error-500\" component={Error500} />\r\n                <Route path=\"/pos\" component={Pos} /> */}\r\n\r\n            </Switch>\r\n        )\r\n}\r\n\r\nexport default NonAuthRoute"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAC1D,SAASC,uBAAuB;;AAWhC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,OAAO;AACd,OAAOC,OAAO;AACd,OAAOC,QAAQ;AAAoC;AAAA;AAGnD,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAK,EAAK;EAC5B,IAAMC,eAAe,GAAGP,uBAAuB,CAACQ,GAAG,EAAE;EACrD,IAAQC,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ;EACd,IAAMC,OAAO,GAAGT,UAAU,EAAE;;EAS1B,OACI,MAAC,MAAM;IAAA,WAIH,KAAC,KAAK;MAAC,KAAK;MAAC,IAAI,EAAC,GAAG;MAAC,SAAS,EAAEE;IAAQ,EAAG,EAC5C,KAAC,KAAK;MAAC,IAAI,EAAC,WAAW;MAAC,SAAS,EAAEC;IAAS,EAAG,2BACzBD,OAAO,qCACjBC,QAAQ,sCACRO,OAAO,qCACRC,OAAO,kCACVC,IAAI,qCACDC,OAAO,oCACRC,aAAa,qCACZC,KAAK,mCACPC,KAAK,2CACIC,MAAM,4CACNC,aAAa,8BAC1BC,QAAQ;EAAA,EAMR;AAErB,CAAC;AAED,eAAef,YAAY"},"metadata":{},"sourceType":"module"}