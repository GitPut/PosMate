{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport NativeReanimatedModule from \"./NativeReanimated\";\nimport { isJest, shouldBeUseWeb } from \"./PlatformChecker\";\nimport { makeShareableCloneOnUIRecursive, makeShareableCloneRecursive } from \"./shareables\";\nvar IS_JEST = isJest();\nvar IS_WEB = shouldBeUseWeb();\nvar _runOnUIQueue = [];\nvar _worklet_12503582210614_init_data = {\n  code: \"function setupMicrotasks() {\\n  let microtasksQueue = [];\\n  let isExecutingMicrotasksQueue = false;\\n\\n  global.queueMicrotask = function (callback) {\\n    microtasksQueue.push(callback);\\n    return -1;\\n  };\\n  global.__callMicrotasks = function () {\\n    if (isExecutingMicrotasksQueue) {\\n      return;\\n    }\\n    try {\\n      isExecutingMicrotasksQueue = true;\\n      for (let index = 0; index < microtasksQueue.length; index += 1) {\\n        microtasksQueue[index]();\\n      }\\n      microtasksQueue = [];\\n      global._maybeFlushUIUpdatesQueue();\\n    } finally {\\n      isExecutingMicrotasksQueue = false;\\n    }\\n  };\\n}\",\n  location: \"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAMO,wBAASA,GAAe;EAG7B,IAAIC,eAAe,GAAG,EAAE;EACxB,IAAIC,0BAA0B,GAAG,KAAK;;EAGtCC,MAAM,CAACC,cAAc,GAAGC,kBAAQ,EAAI;IAClCJ,eAAe,CAACK,IAAI,CAACD,QAAQ,CAAC;IAC9B,OAAO,CAAC,CAAC;EACX,CAAC;EACDF,MAAM,CAACI,gBAAgB,GAAG,YAAM;IAC9B,IAAIL,0BAA0B,EAAE;MAC9B;IACF;IACA,IAAI;MACFA,0BAA0B,GAAG,IAAI;MACjC,KAAK,IAAIM,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGP,eAAe,CAACQ,MAAM,EAAED,KAAK,IAAI,CAAC,EAAE;QAE9DP,eAAe,CAACO,KAAK,CAAC,EAAE;MAC1B;MACAP,eAAe,GAAG,EAAE;MACpBE,MAAM,CAACO,yBAAyB,EAAE;IACpC,CAAC,SAAS;MACRR,0BAA0B,GAAG,KAAK;IACpC;EACF,CAAC;AACH\\\",\\\"names\\\":[\\\"setupMicrotasks\\\",\\\"microtasksQueue\\\",\\\"isExecutingMicrotasksQueue\\\",\\\"global\\\",\\\"queueMicrotask\\\",\\\"callback\\\",\\\"push\\\",\\\"__callMicrotasks\\\",\\\"index\\\",\\\"length\\\",\\\"_maybeFlushUIUpdatesQueue\\\"],\\\"sources\\\":[\\\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\\\"]}\"\n};\nexport var setupMicrotasks = function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f() {\n    var microtasksQueue = [];\n    var isExecutingMicrotasksQueue = false;\n\n    global.queueMicrotask = function (callback) {\n      microtasksQueue.push(callback);\n      return -1;\n    };\n    global.__callMicrotasks = function () {\n      if (isExecutingMicrotasksQueue) {\n        return;\n      }\n      try {\n        isExecutingMicrotasksQueue = true;\n        for (var index = 0; index < microtasksQueue.length; index += 1) {\n          microtasksQueue[index]();\n        }\n        microtasksQueue = [];\n        global._maybeFlushUIUpdatesQueue();\n      } finally {\n        isExecutingMicrotasksQueue = false;\n      }\n    };\n  };\n  _f._closure = {};\n  _f.__initData = _worklet_12503582210614_init_data;\n  _f.__workletHash = 12503582210614;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_9338539058190_init_data = {\n  code: \"function callMicrotasksOnUIThread() {\\n  global.__callMicrotasks();\\n}\",\n  location: \"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAkCA,iCAASA,GAAwB;EAG/BC,MAAM,CAACC,gBAAgB,EAAE;AAC3B\\\",\\\"names\\\":[\\\"callMicrotasksOnUIThread\\\",\\\"global\\\",\\\"__callMicrotasks\\\"],\\\"sources\\\":[\\\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\\\"]}\"\n};\nvar callMicrotasksOnUIThread = function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f() {\n    global.__callMicrotasks();\n  };\n  _f._closure = {};\n  _f.__initData = _worklet_9338539058190_init_data;\n  _f.__workletHash = 9338539058190;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nexport var callMicrotasks = shouldBeUseWeb() ? function () {\n} : callMicrotasksOnUIThread;\n\nvar _worklet_6075541312704_init_data = {\n  code: \"function runOnUI(worklet) {\\n  const {\\n    __DEV__,\\n    IS_WEB,\\n    IS_JEST,\\n    NativeReanimatedModule,\\n    makeShareableCloneRecursive,\\n    callMicrotasks\\n  } = this._closure;\\n  if (__DEV__ && !IS_WEB && _WORKLET) {\\n    throw new Error('runOnUI() cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');\\n  }\\n  if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {\\n    throw new Error('runOnUI() can only be used on worklets');\\n  }\\n  return function () {\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n    if (IS_JEST) {\\n      NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\\n        'worklet';\\n\\n        worklet(...args);\\n      }));\\n      return;\\n    }\\n    if (__DEV__) {\\n      makeShareableCloneRecursive(worklet);\\n      makeShareableCloneRecursive(args);\\n    }\\n    _runOnUIQueue.push([worklet, args]);\\n    if (_runOnUIQueue.length === 1) {\\n      queueMicrotask(function () {\\n        const queue = _runOnUIQueue;\\n        _runOnUIQueue = [];\\n        NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\\n          'worklet';\\n\\n          queue.forEach(function (_ref) {\\n            let [worklet, args] = _ref;\\n            worklet(...args);\\n          });\\n          callMicrotasks();\\n        }));\\n      });\\n    }\\n  };\\n}\",\n  location: \"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAgDO,gBAASA,CAAQC,SAAO;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAG7B,IAAIC,OAAO,IAAI,CAACC,MAAM,IAAIC,QAAQ,EAAE;IAClC,MAAM,IAAIC,KAAK,CAAC,kJAAkJ,CAAC;EACrK;EACA,IAAIH,OAAO,IAAI,CAACC,MAAM,IAAIF,OAAO,CAACK,aAAa,KAAKC,SAAS,EAAE;IAC7D,MAAM,IAAIF,KAAK,CAAC,wCAAwC,CAAC;EAC3D;EACA,OAAO,YAAY;IACjB,KAAK,IAAIG,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;MACvFF,IAAI,CAACE,IAAI,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;IAC9B;IACA,IAAIC,OAAO,EAAE;MAUXC,sBAAsB,CAACC,YAAY,CAACC,2BAA2B,CAAC,YAAM;QACpE,SAAS;;QAEThB,OAAO,CAAC,GAAGU,IAAI,CAAC;MAClB,CAAC,CAAC,CAAC;MACH;IACF;IACA,IAAIT,OAAO,EAAE;MAMXe,2BAA2B,CAAChB,OAAO,CAAC;MACpCgB,2BAA2B,CAACN,IAAI,CAAC;IACnC;IACAO,aAAa,CAACC,IAAI,CAAC,CAAClB,OAAO,EAAEU,IAAI,CAAC,CAAC;IACnC,IAAIO,aAAa,CAACR,MAAM,KAAK,CAAC,EAAE;MAC9BU,cAAc,CAAC,YAAM;QACnB,MAAMC,KAAK,GAAGH,aAAa;QAC3BA,aAAa,GAAG,EAAE;QAClBH,sBAAsB,CAACC,YAAY,CAACC,2BAA2B,CAAC,YAAM;UACpE,SAAS;;UAETI,KAAK,CAACC,OAAO,CAACC,cAAI,EAAI;YACpB,IAAI,CAACtB,OAAO,EAAEU,IAAI,CAAC,GAAGY,IAAI;YAC1BtB,OAAO,CAAC,GAAGU,IAAI,CAAC;UAClB,CAAC,CAAC;UACFa,cAAc,EAAE;QAClB,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;IACJ;EACF,CAAC;AACH\\\",\\\"names\\\":[\\\"runOnUI\\\",\\\"worklet\\\",\\\"__DEV__\\\",\\\"IS_WEB\\\",\\\"_WORKLET\\\",\\\"Error\\\",\\\"__workletHash\\\",\\\"undefined\\\",\\\"_len\\\",\\\"arguments\\\",\\\"length\\\",\\\"args\\\",\\\"Array\\\",\\\"_key\\\",\\\"IS_JEST\\\",\\\"NativeReanimatedModule\\\",\\\"scheduleOnUI\\\",\\\"makeShareableCloneRecursive\\\",\\\"_runOnUIQueue\\\",\\\"push\\\",\\\"queueMicrotask\\\",\\\"queue\\\",\\\"forEach\\\",\\\"_ref\\\",\\\"callMicrotasks\\\"],\\\"sources\\\":[\\\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\\\"]}\"\n};\nvar _worklet_9052027840618_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    worklet,\\n    args\\n  } = this._closure;\\n  worklet(...args);\\n}\",\n  location: \"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAuEsE,kBAAM;EAAA;IAAA;IAAA;EAAA;EAGpEA,OAAO,CAAC,GAAGC,IAAI,CAAC;AAClB\\\",\\\"names\\\":[\\\"worklet\\\",\\\"args\\\"],\\\"sources\\\":[\\\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\\\"]}\"\n};\nvar _worklet_15920347530628_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    queue,\\n    callMicrotasks\\n  } = this._closure;\\n  queue.forEach(function (_ref) {\\n    let [worklet, args] = _ref;\\n    worklet(...args);\\n  });\\n  callMicrotasks();\\n}\",\n  location: \"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA4FwE,kBAAM;EAAA;IAAA;IAAA;EAAA;EAGpEA,KAAK,CAACC,OAAO,CAACC,cAAI,EAAI;IACpB,IAAI,CAACC,OAAO,EAAEC,IAAI,CAAC,GAAGF,IAAI;IAC1BC,OAAO,CAAC,GAAGC,IAAI,CAAC;EAClB,CAAC,CAAC;EACFC,cAAc,EAAE;AAClB\\\",\\\"names\\\":[\\\"queue\\\",\\\"forEach\\\",\\\"_ref\\\",\\\"worklet\\\",\\\"args\\\",\\\"callMicrotasks\\\"],\\\"sources\\\":[\\\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\\\"]}\"\n};\nexport var runOnUI = function () {\n  var _e = [new global.Error(), -7, -27];\n  var _f = function _f(worklet) {\n    if (__DEV__ && !IS_WEB && _WORKLET) {\n      throw new Error('runOnUI() cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');\n    }\n    if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {\n      throw new Error('runOnUI() can only be used on worklets');\n    }\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      if (IS_JEST) {\n        NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\n          var _e = [new global.Error(), -3, -27];\n          var _f = function _f() {\n            worklet.apply(void 0, args);\n          };\n          _f._closure = {\n            worklet: worklet,\n            args: args\n          };\n          _f.__initData = _worklet_9052027840618_init_data;\n          _f.__workletHash = 9052027840618;\n          _f.__stackDetails = _e;\n          _f.__version = \"3.3.0\";\n          return _f;\n        }()));\n        return;\n      }\n      if (__DEV__) {\n        makeShareableCloneRecursive(worklet);\n        makeShareableCloneRecursive(args);\n      }\n      _runOnUIQueue.push([worklet, args]);\n      if (_runOnUIQueue.length === 1) {\n        queueMicrotask(function () {\n          var queue = _runOnUIQueue;\n          _runOnUIQueue = [];\n          NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\n            var _e = [new global.Error(), -3, -27];\n            var _f = function _f() {\n              queue.forEach(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 2),\n                  worklet = _ref2[0],\n                  args = _ref2[1];\n                worklet.apply(void 0, _toConsumableArray(args));\n              });\n              callMicrotasks();\n            };\n            _f._closure = {\n              queue: queue,\n              callMicrotasks: callMicrotasks\n            };\n            _f.__initData = _worklet_15920347530628_init_data;\n            _f.__workletHash = 15920347530628;\n            _f.__stackDetails = _e;\n            _f.__version = \"3.3.0\";\n            return _f;\n          }()));\n        });\n      }\n    };\n  };\n  _f._closure = {\n    __DEV__: __DEV__,\n    IS_WEB: IS_WEB,\n    IS_JEST: IS_JEST,\n    NativeReanimatedModule: NativeReanimatedModule,\n    makeShareableCloneRecursive: makeShareableCloneRecursive,\n    callMicrotasks: callMicrotasks\n  };\n  _f.__initData = _worklet_6075541312704_init_data;\n  _f.__workletHash = 6075541312704;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\n\nvar _worklet_5355002833846_init_data = {\n  code: \"function runOnUIImmediately(worklet) {\\n  const {\\n    __DEV__,\\n    IS_WEB,\\n    NativeReanimatedModule,\\n    makeShareableCloneRecursive\\n  } = this._closure;\\n  if (__DEV__ && !IS_WEB && _WORKLET) {\\n    throw new Error('runOnUIImmediately() cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');\\n  }\\n  if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {\\n    throw new Error('runOnUIImmediately() can only be used on worklets');\\n  }\\n  return function () {\\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\\n      args[_key2] = arguments[_key2];\\n    }\\n    NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\\n      'worklet';\\n\\n      worklet(...args);\\n    }));\\n  };\\n}\",\n  location: \"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA6GO,2BAASA,CAAmBC,SAAO;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAGxC,IAAIC,OAAO,IAAI,CAACC,MAAM,IAAIC,QAAQ,EAAE;IAClC,MAAM,IAAIC,KAAK,CAAC,6JAA6J,CAAC;EAChL;EACA,IAAIH,OAAO,IAAI,CAACC,MAAM,IAAIF,OAAO,CAACK,aAAa,KAAKC,SAAS,EAAE;IAC7D,MAAM,IAAIF,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAO,YAAY;IACjB,KAAK,IAAIG,KAAK,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,KAAK,CAAC,EAAEK,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGL,KAAK,EAAEK,KAAK,EAAE,EAAE;MAC7FF,IAAI,CAACE,KAAK,CAAC,GAAGJ,SAAS,CAACI,KAAK,CAAC;IAChC;IACAC,sBAAsB,CAACC,YAAY,CAACC,2BAA2B,CAAC,YAAM;MACpE,SAAS;;MAETf,OAAO,CAAC,GAAGU,IAAI,CAAC;IAClB,CAAC,CAAC,CAAC;EACL,CAAC;AACH\\\",\\\"names\\\":[\\\"runOnUIImmediately\\\",\\\"worklet\\\",\\\"__DEV__\\\",\\\"IS_WEB\\\",\\\"_WORKLET\\\",\\\"Error\\\",\\\"__workletHash\\\",\\\"undefined\\\",\\\"_len2\\\",\\\"arguments\\\",\\\"length\\\",\\\"args\\\",\\\"Array\\\",\\\"_key2\\\",\\\"NativeReanimatedModule\\\",\\\"scheduleOnUI\\\",\\\"makeShareableCloneRecursive\\\"],\\\"sources\\\":[\\\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\\\"]}\"\n};\nvar _worklet_9052027840618_init_data2 = {\n  code: \"function anonymous() {\\n  const {\\n    worklet,\\n    args\\n  } = this._closure;\\n  worklet(...args);\\n}\",\n  location: \"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA0HoE,kBAAM;EAAA;IAAA;IAAA;EAAA;EAGpEA,OAAO,CAAC,GAAGC,IAAI,CAAC;AAClB\\\",\\\"names\\\":[\\\"worklet\\\",\\\"args\\\"],\\\"sources\\\":[\\\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\\\"]}\"\n};\nexport var runOnUIImmediately = function () {\n  var _e = [new global.Error(), -5, -27];\n  var _f = function _f(worklet) {\n    if (__DEV__ && !IS_WEB && _WORKLET) {\n      throw new Error('runOnUIImmediately() cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');\n    }\n    if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {\n      throw new Error('runOnUIImmediately() can only be used on worklets');\n    }\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      NativeReanimatedModule.scheduleOnUI(makeShareableCloneRecursive(function () {\n        var _e = [new global.Error(), -3, -27];\n        var _f = function _f() {\n          worklet.apply(void 0, args);\n        };\n        _f._closure = {\n          worklet: worklet,\n          args: args\n        };\n        _f.__initData = _worklet_9052027840618_init_data2;\n        _f.__workletHash = 9052027840618;\n        _f.__stackDetails = _e;\n        _f.__version = \"3.3.0\";\n        return _f;\n      }()));\n    };\n  };\n  _f._closure = {\n    __DEV__: __DEV__,\n    IS_WEB: IS_WEB,\n    NativeReanimatedModule: NativeReanimatedModule,\n    makeShareableCloneRecursive: makeShareableCloneRecursive\n  };\n  _f.__initData = _worklet_5355002833846_init_data;\n  _f.__workletHash = 5355002833846;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_16556756009009_init_data = {\n  code: \"function anonymous() {}\",\n  location: \"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAkIY,kBAEV\\\",\\\"names\\\":[],\\\"sources\\\":[\\\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\\\"]}\"\n};\nif (__DEV__ && !IS_WEB) {\n  var f = function () {\n    var _e = [new global.Error(), 1, -27];\n    var _f = function _f() {};\n    _f._closure = {};\n    _f.__initData = _worklet_16556756009009_init_data;\n    _f.__workletHash = 16556756009009;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }();\n  if (f.__workletHash === undefined) {\n    throw new Error('Failed to create a worklet. Did you forget to add Reanimated Babel plugin in babel.config.js? See installation docs at https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation#babel-plugin.');\n  }\n}\nvar _worklet_7336242302191_init_data = {\n  code: \"function runOnJS(fun) {\\n  const {\\n    makeShareableCloneOnUIRecursive\\n  } = this._closure;\\n  if (fun.__remoteFunction) {\\n    fun = fun.__remoteFunction;\\n  }\\n  if (!_WORKLET) {\\n    return fun;\\n  }\\n  return function () {\\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\\n      args[_key3] = arguments[_key3];\\n    }\\n    _scheduleOnJS(fun, args.length > 0 ? makeShareableCloneOnUIRecursive(args) : undefined);\\n  };\\n}\",\n  location: \"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA0IO,gBAASA,CAAQC,KAAG;EAAA;IAAA;EAAA;EAGzB,IAAIA,GAAG,CAACC,gBAAgB,EAAE;IAKxBD,GAAG,GAAGA,GAAG,CAACC,gBAAgB;EAC5B;EACA,IAAI,CAACC,QAAQ,EAAE;IACb,OAAOF,GAAG;EACZ;EACA,OAAO,YAAY;IACjB,KAAK,IAAIG,KAAK,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,KAAK,CAAC,EAAEK,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGL,KAAK,EAAEK,KAAK,EAAE,EAAE;MAC7FF,IAAI,CAACE,KAAK,CAAC,GAAGJ,SAAS,CAACI,KAAK,CAAC;IAChC;IACAC,aAAa,CAACT,GAAG,EAAEM,IAAI,CAACD,MAAM,GAAG,CAAC,GAAGK,+BAA+B,CAACJ,IAAI,CAAC,GAAGK,SAAS,CAAC;EACzF,CAAC;AACH\\\",\\\"names\\\":[\\\"runOnJS\\\",\\\"fun\\\",\\\"__remoteFunction\\\",\\\"_WORKLET\\\",\\\"_len3\\\",\\\"arguments\\\",\\\"length\\\",\\\"args\\\",\\\"Array\\\",\\\"_key3\\\",\\\"_scheduleOnJS\\\",\\\"makeShareableCloneOnUIRecursive\\\",\\\"undefined\\\"],\\\"sources\\\":[\\\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.js\\\"]}\"\n};\nexport var runOnJS = function () {\n  var _e = [new global.Error(), -2, -27];\n  var _f = function _f(fun) {\n    if (fun.__remoteFunction) {\n      fun = fun.__remoteFunction;\n    }\n    if (!_WORKLET) {\n      return fun;\n    }\n    return function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      _scheduleOnJS(fun, args.length > 0 ? makeShareableCloneOnUIRecursive(args) : undefined);\n    };\n  };\n  _f._closure = {\n    makeShareableCloneOnUIRecursive: makeShareableCloneOnUIRecursive\n  };\n  _f.__initData = _worklet_7336242302191_init_data;\n  _f.__workletHash = 7336242302191;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();","map":{"version":3,"mappings":"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","names":["NativeReanimatedModule","isJest","shouldBeUseWeb","makeShareableCloneOnUIRecursive","makeShareableCloneRecursive","IS_JEST","IS_WEB","_runOnUIQueue","setupMicrotasks","microtasksQueue","isExecutingMicrotasksQueue","global","queueMicrotask","callback","push","__callMicrotasks","index","length","_maybeFlushUIUpdatesQueue","callMicrotasksOnUIThread","callMicrotasks","runOnUI","worklet","__DEV__","_WORKLET","Error","__workletHash","undefined","args","scheduleOnUI","queue","forEach","_ref","runOnUIImmediately","f","runOnJS","fun","__remoteFunction","_scheduleOnJS"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/threads.ts"],"sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport { isJest, shouldBeUseWeb } from './PlatformChecker';\nimport { ComplexWorkletFunction } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n} from './shareables';\n\nconst IS_JEST = isJest();\nconst IS_WEB = shouldBeUseWeb();\n\nlet _runOnUIQueue: Array<[ComplexWorkletFunction<any[], any>, any[]]> = [];\n\nexport function setupMicrotasks() {\n  'worklet';\n\n  let microtasksQueue: Array<() => void> = [];\n  let isExecutingMicrotasksQueue = false;\n\n  // @ts-ignore – typescript expects this to conform to NodeJS definition and expects the return value to be NodeJS.Immediate which is an object and not a number\n  global.queueMicrotask = (callback: () => void): number => {\n    microtasksQueue.push(callback);\n    return -1;\n  };\n\n  global.__callMicrotasks = () => {\n    if (isExecutingMicrotasksQueue) {\n      return;\n    }\n    try {\n      isExecutingMicrotasksQueue = true;\n      for (let index = 0; index < microtasksQueue.length; index += 1) {\n        // we use classic 'for' loop because the size of the currentTasks array may change while executing some of the callbacks due to queueMicrotask calls\n        microtasksQueue[index]();\n      }\n      microtasksQueue = [];\n      global._maybeFlushUIUpdatesQueue();\n    } finally {\n      isExecutingMicrotasksQueue = false;\n    }\n  };\n}\n\nfunction callMicrotasksOnUIThread() {\n  'worklet';\n  global.__callMicrotasks();\n}\n\nexport const callMicrotasks = shouldBeUseWeb()\n  ? () => {\n      // on web flushing is a noop as immediates are handled by the browser\n    }\n  : callMicrotasksOnUIThread;\n\n/**\n * Schedule a worklet to execute on the UI runtime. This method does not schedule the work immediately but instead\n * waits for other worklets to be scheduled within the same JS loop. It uses queueMicrotask to schedule all the worklets\n * at once making sure they will run within the same frame boundaries on the UI thread.\n */\nexport function runOnUI<A extends any[], R>(\n  worklet: ComplexWorkletFunction<A, R>\n): (...args: A) => void {\n  'worklet';\n  if (__DEV__ && !IS_WEB && _WORKLET) {\n    throw new Error(\n      'runOnUI() cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.'\n    );\n  }\n  if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {\n    throw new Error('runOnUI() can only be used on worklets');\n  }\n  return (...args) => {\n    if (IS_JEST) {\n      // Mocking time in Jest is tricky as both requestAnimationFrame and queueMicrotask\n      // callbacks run on the same queue and can be interleaved. There is no way\n      // to flush particular queue in Jest and the only control over mocked timers\n      // is by using jest.advanceTimersByTime() method which advances all types\n      // of timers including immediate and animation callbacks. Ideally we'd like\n      // to have some way here to schedule work along with React updates, but\n      // that's not possible, and hence in Jest environment instead of using scheduling\n      // mechanism we just schedule the work ommiting the queue. This is ok for the\n      // uses that we currently have but may not be ok for future tests that we write.\n      NativeReanimatedModule.scheduleOnUI(\n        makeShareableCloneRecursive(() => {\n          'worklet';\n          worklet(...args);\n        })\n      );\n      return;\n    }\n    if (__DEV__) {\n      // in DEV mode we call shareable conversion here because in case the object\n      // can't be converted, we will get a meaningful stack-trace as opposed to the\n      // situation when conversion is only done via microtask queue. This does not\n      // make the app particularily less efficient as converted objects are cached\n      // and for a given worklet the conversion only happens once.\n      makeShareableCloneRecursive(worklet);\n      makeShareableCloneRecursive(args);\n    }\n    _runOnUIQueue.push([worklet, args]);\n    if (_runOnUIQueue.length === 1) {\n      queueMicrotask(() => {\n        const queue = _runOnUIQueue;\n        _runOnUIQueue = [];\n        NativeReanimatedModule.scheduleOnUI(\n          makeShareableCloneRecursive(() => {\n            'worklet';\n            queue.forEach(([worklet, args]) => {\n              worklet(...args);\n            });\n            callMicrotasks();\n          })\n        );\n      });\n    }\n  };\n}\n\n/**\n * Schedule a worklet to execute on the UI runtime skipping batching mechanism.\n */\nexport function runOnUIImmediately<A extends any[], R>(\n  worklet: ComplexWorkletFunction<A, R>\n): (...args: A) => void {\n  'worklet';\n  if (__DEV__ && !IS_WEB && _WORKLET) {\n    throw new Error(\n      'runOnUIImmediately() cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.'\n    );\n  }\n  if (__DEV__ && !IS_WEB && worklet.__workletHash === undefined) {\n    throw new Error('runOnUIImmediately() can only be used on worklets');\n  }\n  return (...args) => {\n    NativeReanimatedModule.scheduleOnUI(\n      makeShareableCloneRecursive(() => {\n        'worklet';\n        worklet(...args);\n      })\n    );\n  };\n}\n\nif (__DEV__ && !IS_WEB) {\n  const f = () => {\n    'worklet';\n  };\n  // @ts-ignore plugin\n  if (f.__workletHash === undefined) {\n    throw new Error(\n      'Failed to create a worklet. Did you forget to add Reanimated Babel plugin in babel.config.js? See installation docs at https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation#babel-plugin.'\n    );\n  }\n}\n\nexport function runOnJS<A extends any[], R>(\n  fun: ComplexWorkletFunction<A, R>\n): (...args: A) => void {\n  'worklet';\n  if (fun.__remoteFunction) {\n    // in development mode the function provided as `fun` throws an error message\n    // such that when someone accidently calls it directly on the UI runtime, they\n    // see that they should use `runOnJS` instead. To facilitate that we purt the\n    // reference to the original remote function in the `__remoteFunction` property.\n    fun = fun.__remoteFunction;\n  }\n  if (!_WORKLET) {\n    return fun;\n  }\n  return (...args) => {\n    _scheduleOnJS(\n      fun,\n      args.length > 0 ? makeShareableCloneOnUIRecursive(args) : undefined\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}