{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nexport var GooglePlacesStyles = {\n  menu: function menu(provided) {\n    return _objectSpread(_objectSpread({}, provided), {}, {\n      fontFamily: \"sans-serif\"\n    });\n  },\n  menuList: function menuList(provided) {\n    return _objectSpread(_objectSpread({}, provided), {}, {\n      fontFamily: \"sans-serif\"\n    });\n  },\n  menuPortal: function menuPortal(base) {\n    return _objectSpread(_objectSpread({}, base), {}, {\n      zIndex: 9999\n    });\n  },\n  option: function option(provided) {\n    return _objectSpread(_objectSpread({}, provided), {}, {\n      fontFamily: \"sans-serif\"\n    });\n  },\n  input: function input(provided) {\n    return _objectSpread(_objectSpread({}, provided), {}, {\n      fontFamily: \"sans-serif\"\n    });\n  },\n  placeholder: function placeholder(provided) {\n    return _objectSpread(_objectSpread({}, provided), {}, {\n      fontFamily: \"sans-serif\",\n      color: \"#999\"\n    });\n  },\n  singleValue: function singleValue(provided) {\n    return _objectSpread(_objectSpread({}, provided), {}, {\n      fontFamily: \"sans-serif\"\n    });\n  },\n  noOptionsMessage: function noOptionsMessage(provided) {\n    return _objectSpread(_objectSpread({}, provided), {}, {\n      fontFamily: \"sans-serif\"\n    });\n  }\n};","map":{"version":3,"names":["GooglePlacesStyles","menu","provided","_objectSpread","fontFamily","menuList","menuPortal","base","zIndex","option","input","placeholder","color","singleValue","noOptionsMessage"],"sources":["/Users/peterputros/Desktop/PosMate/components/functional/GooglePlacesStyles.ts"],"sourcesContent":["export const GooglePlacesStyles = {\n  menu: (provided) => ({\n    ...provided,\n    fontFamily: \"sans-serif\",\n  }),\n  menuList: (provided) => ({\n    ...provided,\n    fontFamily: \"sans-serif\",\n  }),\n  menuPortal: (base) => ({\n    ...base,\n    zIndex: 9999,\n  }),\n  // Customizing the options\n  option: (provided) => ({\n    ...provided,\n    fontFamily: \"sans-serif\",\n  }),\n  // Customizing the input\n  input: (provided) => ({\n    ...provided,\n    fontFamily: \"sans-serif\",\n  }),\n  // Adjusting placeholder styling here\n  placeholder: (provided) => ({\n    ...provided,\n    fontFamily: \"sans-serif\",\n    color: \"#999\", // Example to add more placeholder-specific styles\n  }),\n  singleValue: (provided) => ({\n    ...provided,\n    fontFamily: \"sans-serif\",\n  }),\n  noOptionsMessage: (provided) => ({\n    ...provided,\n    fontFamily: \"sans-serif\",\n  }),\n};\n"],"mappings":";;;AAAA,OAAO,IAAMA,kBAAkB,GAAG;EAChCC,IAAI,EAAE,SAAAA,KAACC,QAAQ;IAAA,OAAAC,aAAA,CAAAA,aAAA,KACVD,QAAQ;MACXE,UAAU,EAAE;IAAY;EAAA,CACxB;EACFC,QAAQ,EAAE,SAAAA,SAACH,QAAQ;IAAA,OAAAC,aAAA,CAAAA,aAAA,KACdD,QAAQ;MACXE,UAAU,EAAE;IAAY;EAAA,CACxB;EACFE,UAAU,EAAE,SAAAA,WAACC,IAAI;IAAA,OAAAJ,aAAA,CAAAA,aAAA,KACZI,IAAI;MACPC,MAAM,EAAE;IAAI;EAAA,CACZ;EAEFC,MAAM,EAAE,SAAAA,OAACP,QAAQ;IAAA,OAAAC,aAAA,CAAAA,aAAA,KACZD,QAAQ;MACXE,UAAU,EAAE;IAAY;EAAA,CACxB;EAEFM,KAAK,EAAE,SAAAA,MAACR,QAAQ;IAAA,OAAAC,aAAA,CAAAA,aAAA,KACXD,QAAQ;MACXE,UAAU,EAAE;IAAY;EAAA,CACxB;EAEFO,WAAW,EAAE,SAAAA,YAACT,QAAQ;IAAA,OAAAC,aAAA,CAAAA,aAAA,KACjBD,QAAQ;MACXE,UAAU,EAAE,YAAY;MACxBQ,KAAK,EAAE;IAAM;EAAA,CACb;EACFC,WAAW,EAAE,SAAAA,YAACX,QAAQ;IAAA,OAAAC,aAAA,CAAAA,aAAA,KACjBD,QAAQ;MACXE,UAAU,EAAE;IAAY;EAAA,CACxB;EACFU,gBAAgB,EAAE,SAAAA,iBAACZ,QAAQ;IAAA,OAAAC,aAAA,CAAAA,aAAA,KACtBD,QAAQ;MACXE,UAAU,EAAE;IAAY;EAAA;AAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}