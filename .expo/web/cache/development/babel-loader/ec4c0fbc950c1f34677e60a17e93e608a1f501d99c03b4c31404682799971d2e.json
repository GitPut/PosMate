{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport RNFlatList from \"react-native-web/dist/exports/FlatList\";\nimport RNSwitch from \"react-native-web/dist/exports/Switch\";\nimport RNTextInput from \"react-native-web/dist/exports/TextInput\";\nimport RNScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport createNativeWrapper from \"../handlers/createNativeWrapper\";\nexport var ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: false\n});\nexport var Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nexport var TextInput = createNativeWrapper(RNTextInput);\nexport var DrawerLayoutAndroid = function DrawerLayoutAndroid() {\n  console.warn('DrawerLayoutAndroid is not supported on web!');\n  return React.createElement(View, null);\n};\n\nexport var RefreshControl = createNativeWrapper(View);\nexport var FlatList = React.forwardRef(function (props, ref) {\n  return React.createElement(RNFlatList, _extends({\n    ref: ref\n  }, props, {\n    renderScrollComponent: function renderScrollComponent(scrollProps) {\n      return React.createElement(ScrollView, scrollProps);\n    }\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,OAAOC,mBAAP;AAEA,OAAO,IAAMC,UAAU,GAAGD,mBAAmB,CAACE,YAAD,EAAe;EAC1DC,oBAAoB,EAAE;AADoC,CAAf,CAAtC;AAIP,OAAO,IAAMC,MAAM,GAAGJ,mBAAmB,CAACK,QAAD,EAAW;EAClDC,uBAAuB,EAAE,KADyB;EAElDC,qBAAqB,EAAE,IAF2B;EAGlDJ,oBAAoB,EAAE;AAH4B,CAAX,CAAlC;AAKP,OAAO,IAAMK,SAAS,GAAGR,mBAAmB,CAACS,WAAD,CAArC;AACP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,GAAS;EACvCC,OAAO,CAACC,IAAR,CAAa,8CAAb;EACA,OAAOb,oBAACc,IAAD,OAAP;AACD,CAHM;;AAQP,OAAO,IAAMC,cAAc,GAAGd,mBAAmB,CAACa,IAAD,CAA1C;AAEP,OAAO,IAAME,QAAQ,GAAGhB,KAAK,CAACiB,UAAN,CACtB,UAAoBC,KAApB,EAAiDC,GAAjD;EAAA,OACEnB,oBAACoB,UAAD;IACED,GAAG,EAAEA;EADP,GAEMD,KAFN;IAGEG,qBAAqB,EAAGC,0CAAD;MAAA,OAAiBtB,oBAACE,UAAD,EAAgBoB,WAAhB;IAAA;EAH1C,GAFoB;AAAA,EAAjB","names":["React","createNativeWrapper","ScrollView","RNScrollView","disallowInterruption","Switch","RNSwitch","shouldCancelWhenOutside","shouldActivateOnStart","TextInput","RNTextInput","DrawerLayoutAndroid","console","warn","View","RefreshControl","FlatList","forwardRef","props","ref","RNFlatList","renderScrollComponent","scrollProps"],"sources":["/Users/georgebadal/Desktop/PosMate/node_modules/react-native-gesture-handler/lib/module/components/GestureComponents.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n  FlatListProps,\n  View,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: false,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = () => {\n  console.warn('DrawerLayoutAndroid is not supported on web!');\n  return <View />;\n};\n\n// RefreshControl is implemented as a functional component, rendering a View\n// NativeViewGestureHandler needs to set a ref on its child, which cannot be done\n// on functional components\nexport const RefreshControl = createNativeWrapper(View);\n\nexport const FlatList = React.forwardRef(\n  <ItemT extends any>(props: FlatListProps<ItemT>, ref: any) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}