{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React, { useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport ReactSelect from \"react-select\";\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar InnerOn = function InnerOn(_ref) {\n  var _e$selectedCaseList;\n  var item = _ref.item,\n    newProduct = _ref.newProduct,\n    newProductOptions = _ref.newProductOptions,\n    setnewProductOptions = _ref.setnewProductOptions,\n    index = _ref.index,\n    e = _ref.e,\n    sete = _ref.sete;\n  var _useState = useState(structuredClone(item.optionsList)),\n    _useState2 = _slicedToArray(_useState, 2),\n    testMap = _useState2[0],\n    settestMap = _useState2[1];\n  var optionLbls = newProduct.options.map(function (el) {\n    if (el.label !== e.label && el.label !== null) {\n      return el.label;\n    }\n  });\n  var ifOptionOptions = [];\n  optionLbls.map(function (opLbl) {\n    return ifOptionOptions.push({\n      value: opLbl,\n      label: opLbl\n    });\n  });\n  if (e.selectedCaseKey || e.selectedCaseValue) {\n\n    setnewProductOptions(function (prev) {\n      var clone = structuredClone(prev);\n      clone[index].selectedCaseList = [{\n        selectedCaseKey: null,\n        selectedCaseValue: null\n      }];\n      clone[index].selectedCaseKey = null;\n      clone[index].selectedCaseValue = null;\n      return clone;\n    });\n    sete(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        selectedCaseList: [{\n          selectedCaseKey: null,\n          selectedCaseValue: null\n        }]\n      });\n    });\n  }\n  var TestMapItem = function TestMapItem(eInnerListStart, indexInnerList) {\n    console.log('eInnerListStart', indexInnerList);\n    var eInnerList = structuredClone(eInnerListStart);\n    return _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        paddingTop: 20,\n        alignItems: \"center\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n      },\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter option selection\",\n        onChangeText: function onChangeText(val) {\n          var cloneOuter = structuredClone(testMap);\n          cloneOuter[indexInnerList].label = val;\n          setnewProductOptions(function (prev) {\n            var clone = structuredClone(prev);\n            clone[index].optionsList = cloneOuter;\n            return clone;\n          });\n          settestMap(cloneOuter);\n        },\n        value: eInnerList.label,\n        label: \"Enter option selection\",\n        variant: \"outlined\",\n        color: \"black\",\n        style: {\n          width: \"45%\"\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Enter price increase\",\n        onChangeText: function onChangeText(val) {\n          var re = /^[0-9.]+$/;\n\n          if (val === \"\" || re.test(val)) {\n            var cloneOuter = structuredClone(testMap);\n            cloneOuter[indexInnerList].priceIncrease = val;\n            setnewProductOptions(function (prev) {\n              var clone = structuredClone(prev);\n              clone[index].optionsList = cloneOuter;\n              return clone;\n            });\n            settestMap(cloneOuter);\n          }\n        },\n        value: eInnerList.priceIncrease,\n        style: {\n          width: \"45%\"\n        },\n        label: \"Enter price increase\",\n        variant: \"outlined\",\n        color: \"black\"\n      }), _jsx(TouchableOpacity, {\n        style: {\n          height: 40,\n          width: 40,\n          borderRadius: 20,\n          backgroundColor: \"grey\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        onPress: function onPress() {\n          var cloneOuter = structuredClone(testMap);\n          cloneOuter.splice(indexInnerList, 1);\n          setnewProductOptions(function (prev) {\n            var clone = structuredClone(prev);\n            clone[index].optionsList = cloneOuter;\n            return clone;\n          });\n          settestMap(cloneOuter);\n        },\n        children: _jsx(Feather, {\n          name: \"x\",\n          size: 30,\n          color: \"white\"\n        })\n      })]\n    }, indexInnerList);\n  };\n  var ESelectedCaseListMapItem = function ESelectedCaseListMapItem(ifStatement, indexOfIf) {\n    var local = newProduct.options.filter(function (localE) {\n      return localE.label == ifStatement.selectedCaseKey;\n    });\n    var optionLblsValuesLocal = local.length > 0 ? local[0].optionsList.map(function (el) {\n      return el.label;\n    }) : [];\n    var ifOptionVals = [];\n    optionLblsValuesLocal.map(function (opLbl) {\n      return ifOptionVals.push({\n        value: opLbl,\n        label: opLbl\n      });\n    });\n    return _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        marginBottom: 25,\n        alignItems: \"center\"\n      },\n      children: [_jsx(View, {\n        style: {\n          margin: 10,\n          width: \"40%\",\n          height: 52\n        },\n        children: _jsx(ReactSelect, {\n          options: ifOptionOptions,\n          value: ifStatement.selectedCaseKey && {\n            value: ifStatement.selectedCaseKey,\n            label: ifStatement.selectedCaseKey\n          },\n          onChange: function onChange(val) {\n            setnewProductOptions(function (prev) {\n              var clone = structuredClone(prev);\n              clone[index].selectedCaseList[indexOfIf].selectedCaseKey = val.value;\n              return clone;\n            });\n            sete(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                selectedCaseList: newProductOptions[index].selectedCaseList\n              });\n            });\n          },\n          placeholder: \"Show if option\",\n          menuPortalTarget: document.body,\n          styles: {\n            menuPortal: function menuPortal(base) {\n              return _objectSpread(_objectSpread({}, base), {}, {\n                zIndex: 9999\n              });\n            },\n            control: function control(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                background: \"#fff\",\n                borderColor: \"#9e9e9e\",\n                minHeight: \"52px\",\n                height: \"52px\",\n                boxShadow: state.isFocused ? null : null\n              });\n            },\n            valueContainer: function valueContainer(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                height: \"52px\",\n                padding: \"0 6px\"\n              });\n            },\n            input: function input(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                margin: \"0px\"\n              });\n            },\n            indicatorSeparator: function indicatorSeparator(state) {\n              return {\n                display: \"none\"\n              };\n            },\n            indicatorsContainer: function indicatorsContainer(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                height: \"52px\"\n              });\n            }\n          },\n          menuPlacement: \"auto\",\n          menuPosition: \"fixed\"\n        })\n      }), _jsx(FontAwesome5, {\n        name: \"equals\",\n        size: 30,\n        color: \"black\"\n      }), _jsx(View, {\n        style: {\n          margin: 10,\n          width: \"40%\",\n          height: 52\n        },\n        children: _jsx(ReactSelect, {\n          options: ifOptionVals,\n          value: ifStatement.selectedCaseValue && {\n            value: ifStatement.selectedCaseValue,\n            label: ifStatement.selectedCaseValue\n          },\n          onChange: function onChange(val) {\n            setnewProductOptions(function (prev) {\n              var clone = structuredClone(prev);\n              clone[index].selectedCaseList[indexOfIf].selectedCaseValue = val.value;\n              return clone;\n            });\n            sete(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                selectedCaseList: newProductOptions[index].selectedCaseList\n              });\n            });\n          },\n          placeholder: \"Show if value\",\n          menuPortalTarget: document.body,\n          styles: {\n            menuPortal: function menuPortal(base) {\n              return _objectSpread(_objectSpread({}, base), {}, {\n                zIndex: 9999\n              });\n            },\n            control: function control(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                background: \"#fff\",\n                borderColor: \"#9e9e9e\",\n                minHeight: \"52px\",\n                height: \"52px\",\n                boxShadow: state.isFocused ? null : null\n              });\n            },\n            valueContainer: function valueContainer(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                height: \"52px\",\n                padding: \"0 6px\"\n              });\n            },\n            input: function input(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                margin: \"0px\"\n              });\n            },\n            indicatorSeparator: function indicatorSeparator(state) {\n              return {\n                display: \"none\"\n              };\n            },\n            indicatorsContainer: function indicatorsContainer(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                height: \"52px\"\n              });\n            }\n          },\n          menuPlacement: \"auto\",\n          menuPosition: \"fixed\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          height: 40,\n          width: 40,\n          borderRadius: 20,\n          backgroundColor: \"grey\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        onPress: function onPress() {\n          setnewProductOptions(function (prev) {\n            var clone = structuredClone(prev);\n            clone[index].selectedCaseList.splice(indexOfIf, 1);\n            return clone;\n          });\n          sete(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              selectedCaseList: newProductOptions[index].selectedCaseList\n            });\n          });\n        },\n        children: _jsx(Feather, {\n          name: \"x\",\n          size: 30,\n          color: \"white\"\n        })\n      })]\n    }, indexOfIf);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n        paddingBottom: 20,\n        borderBottomColor: \"grey\",\n        borderBottomWidth: 1,\n        flexWrap: \"wrap\"\n      },\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter Option Label\",\n        onChangeText: function onChangeText(val) {\n          sete(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              label: val\n            });\n          });\n          setnewProductOptions(function (prev) {\n            var clone = structuredClone(prev);\n            clone[index].label = val;\n            return clone;\n          });\n        },\n        value: e.label,\n        style: {\n          margin: 10,\n          width: \"97.5%\",\n          height: 52\n        },\n        label: \"Enter Option Label\",\n        variant: \"outlined\",\n        color: \"black\"\n      }), _jsx(View, {\n        style: {\n          margin: 10,\n          width: \"47%\",\n          height: 52\n        },\n        children: _jsx(ReactSelect, {\n          options: [{\n            value: \"Multi Choice\",\n            label: \"Multi Choice\"\n          }, {\n            value: \"Dropdown\",\n            label: \"Dropdown\"\n          }],\n          value: e.optionType && {\n            value: e.optionType,\n            label: e.optionType\n          },\n          onChange: function onChange(val) {\n            if (e.optionType) {\n              setnewProductOptions(function (prev) {\n                var clone = structuredClone(prev);\n                clone[index].optionType = val.value;\n                return clone;\n              });\n            } else {\n              setnewProductOptions(function (prev) {\n                var clone = structuredClone(prev);\n                clone[index] = _objectSpread(_objectSpread({}, e), {}, {\n                  optionType: val.value\n                });\n                return clone;\n              });\n            }\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                optionType: val.value\n              });\n            });\n          },\n          placeholder: \"Choose Option Type\",\n          menuPortalTarget: document.body,\n          styles: {\n            menuPortal: function menuPortal(base) {\n              return _objectSpread(_objectSpread({}, base), {}, {\n                zIndex: 9999\n              });\n            },\n            control: function control(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                background: \"#fff\",\n                borderColor: \"#9e9e9e\",\n                minHeight: \"52px\",\n                height: \"52px\",\n                boxShadow: state.isFocused ? null : null\n              });\n            },\n            valueContainer: function valueContainer(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                height: \"52px\",\n                padding: \"0 6px\"\n              });\n            },\n            input: function input(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                margin: \"0px\"\n              });\n            },\n            indicatorSeparator: function indicatorSeparator(state) {\n              return {\n                display: \"none\"\n              };\n            },\n            indicatorsContainer: function indicatorsContainer(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                height: \"52px\"\n              });\n            }\n          },\n          menuPlacement: \"auto\",\n          menuPosition: \"fixed\"\n        })\n      }), _jsx(TouchableOpacity, {\n        disabled: e.optionType !== \"Multi Choice\",\n        style: {\n          margin: 10,\n          width: \"47%\",\n          height: 52\n        },\n        children: _jsx(TextInput, {\n          placeholder: \"Enter selection limit or leave empty\",\n          onChangeText: function onChangeText(val) {\n            var re = /^[0-9\\b]+$/;\n\n            if (val === \"\" || re.test(val)) {\n              if (e.optionType === \"Multi Choice\") {\n                sete(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    numOfSelectable: val\n                  });\n                });\n                setnewProductOptions(function (prev) {\n                  var clone = structuredClone(prev);\n                  clone[index].numOfSelectable = val;\n                  return clone;\n                });\n              }\n            }\n          },\n          value: e.numOfSelectable,\n          label: \"Enter selection limit\",\n          variant: \"outlined\",\n          style: {\n            width: \"100%\",\n            opacity: e.optionType === \"Dropdown\" ? 0.5 : 1\n          },\n          color: \"black\"\n        })\n      }), _jsxs(View, {\n        style: {\n          margin: 10,\n          width: \"47%\",\n          height: 52,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(Text, {\n          style: {\n            marginBottom: 5,\n            fontSize: 14\n          },\n          children: \"Is Option Required?\"\n        }), _jsx(Switch, {\n          value: e.isRequired,\n          onValueChange: function onValueChange(val) {\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                isRequired: val\n              });\n            });\n            setnewProductOptions(function (prev) {\n              var clone = structuredClone(prev);\n              clone[index].isRequired = val;\n              return clone;\n            });\n          }\n        })]\n      })]\n    }), _jsx(FlatList, {\n      data: testMap,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(TestMapItem, {\n          eInnerListStart: item.label,\n          indexInnerList: item.priceIncrease\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }), _jsx(Button, {\n      title: \"Add Option Choice\",\n      onPress: function onPress() {\n        var cloneOuter = structuredClone(testMap);\n        cloneOuter.push({\n          label: null,\n          priceIncrease: null\n        });\n        setnewProductOptions(function (prev) {\n          var clone = structuredClone(prev);\n          clone[index].optionsList = cloneOuter;\n          return clone;\n        });\n        settestMap(cloneOuter);\n      },\n      style: {\n        marginBottom: 25,\n        marginTop: 25,\n        backgroundColor: \"#4050B5\"\n      },\n      disabled: testMap.length > 0 && testMap[testMap.length - 1].label === null\n    }), ((_e$selectedCaseList = e.selectedCaseList) == null ? void 0 : _e$selectedCaseList.length) > 0 && _jsx(View, {\n      style: {\n        width: \"100%\",\n        height: 1,\n        backgroundColor: \"grey\",\n        marginTop: 10,\n        marginBottom: 10\n      }\n    }), _jsx(FlatList, {\n      data: e.selectedCaseList,\n      renderItem: function renderItem(_ref3) {\n        var ifStatement = _ref3.ifStatement,\n          indexOfIf = _ref3.indexOfIf;\n        return _jsx(ESelectedCaseListMapItem, {\n          ifStatement: ifStatement,\n          indexOfIf: indexOfIf\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }), optionLbls.length > 1 && _jsx(Button, {\n      title: \"Add If Statement\",\n      onPress: function onPress() {\n        if (!newProductOptions[index].selectedCaseList) {\n          setnewProductOptions(function (prev) {\n            var clone = structuredClone(prev);\n            clone[index].selectedCaseList = [{\n              selectedCaseKey: null,\n              selectedCaseValue: null\n            }];\n            return clone;\n          });\n          sete(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              selectedCaseList: [{\n                selectedCaseKey: null,\n                selectedCaseValue: null\n              }]\n            });\n          });\n        } else {\n          setnewProductOptions(function (prev) {\n            var clone = structuredClone(prev);\n            clone[index].selectedCaseList.push({\n              selectedCaseKey: null,\n              selectedCaseValue: null\n            });\n            return clone;\n          });\n          sete(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              selectedCaseList: newProductOptions[index].selectedCaseList\n            });\n          });\n        }\n      },\n      style: {\n        backgroundColor: \"#4050B5\",\n        marginBottom: 25\n      }\n    })]\n  });\n};\nvar OptionView = function OptionView(_ref4) {\n  var item = _ref4.item,\n    index = _ref4.index,\n    setnewProduct = _ref4.setnewProduct,\n    newProduct = _ref4.newProduct,\n    newProductOptions = _ref4.newProductOptions,\n    setnewProductOptions = _ref4.setnewProductOptions,\n    indexOn = _ref4.indexOn,\n    setindexOn = _ref4.setindexOn;\n  var _useState3 = useState(structuredClone(item)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    e = _useState4[0],\n    sete = _useState4[1];\n\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: {\n        margin: 15,\n        backgroundColor: \"lightgrey\",\n        borderRadius: 10\n      },\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return indexOn !== index ? setindexOn(index) : setindexOn(null);\n        },\n        style: [{\n          backgroundColor: \"grey\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          padding: 5,\n          borderTopLeftRadius: 10,\n          borderTopRightRadius: 10\n        }, indexOn !== index && {\n          borderBottomLeftRadius: 10,\n          borderBottomRightRadius: 10\n        }],\n        children: [_jsx(Text, {\n          style: {\n            width: \"50%\",\n            paddingLeft: 5,\n            fontSize: 16,\n            color: \"white\",\n            fontFamily: \"archivo-600\"\n          },\n          children: item.label ? item.label : \"New Option\"\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            function moveItem(from, to) {\n\n              setnewProductOptions(function (prev) {\n                var clone = structuredClone(prev);\n                var f = clone.splice(from, 1)[0];\n                clone.splice(to, 0, f);\n                return clone;\n              });\n            }\n            moveItem(index, index + 1);\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"chevron-down\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            function moveItem(from, to) {\n\n              setnewProductOptions(function (prev) {\n                var clone = structuredClone(prev);\n                var f = clone.splice(from, 1)[0];\n                clone.splice(to, 0, f);\n                return clone;\n              });\n            }\n            moveItem(index, index - 1);\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"chevron-up\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n\n            setnewProductOptions(function (prev) {\n              var clone = structuredClone(prev);\n              clone.push(_objectSpread(_objectSpread({}, item), {}, {\n                label: item.label + \" Copy\"\n              }));\n              return clone;\n            });\n\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions\n              });\n            });\n            setindexOn(newProductOptions.length - 1);\n          },\n          children: _jsx(Feather, {\n            name: \"copy\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            var newProductOptionsUpdated = newProduct.options.filter(function (e, filterIndex) {\n              return filterIndex !== index;\n            });\n            setnewProductOptions(function (prev) {\n              var clone = structuredClone(prev);\n              clone.splice(index, 1);\n              return clone;\n            });\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptionsUpdated\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(Feather, {\n            name: \"x\",\n            size: 32,\n            color: \"white\"\n          })\n        })]\n      }), indexOn === index && _jsx(View, {\n        style: {\n          padding: 20\n        },\n        children: _jsx(InnerOn, {\n          item: item,\n          index: index,\n          newProduct: newProduct,\n          newProductOptions: newProductOptions,\n          setnewProductOptions: setnewProductOptions,\n          e: e,\n          sete: sete\n        })\n      })]\n    }), newProduct.options.length - 1 === index && _jsx(Button, {\n      title: \"Add Option\",\n      onPress: function onPress() {\n\n        setnewProductOptions(function (prev) {\n          var clone = structuredClone(prev);\n          clone.push({\n            label: null,\n            optionsList: [],\n            selectedCaseKey: null,\n            selectedCaseValue: null,\n            numOfSelectable: null,\n            id: Math.random().toString(36).substr(2, 9),\n            optionType: null\n          });\n          return clone;\n        });\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            options: newProductOptions\n          });\n        });\n        setindexOn(newProductOptions.length - 1);\n      },\n      style: {\n        marginBottom: 25,\n        backgroundColor: \"#4050B5\"\n      },\n      disabled: e.label === null\n    })]\n  });\n};\nexport default OptionView;","map":{"version":3,"names":["React","useState","Button","Switch","TextInput","MaterialCommunityIcons","Feather","ReactSelect","FontAwesome5","InnerOn","item","newProduct","newProductOptions","setnewProductOptions","index","e","sete","structuredClone","optionsList","testMap","settestMap","optionLbls","options","map","el","label","ifOptionOptions","opLbl","push","value","selectedCaseKey","selectedCaseValue","prev","clone","selectedCaseList","TestMapItem","eInnerListStart","indexInnerList","console","log","eInnerList","flexDirection","paddingTop","alignItems","width","justifyContent","val","cloneOuter","re","test","priceIncrease","height","borderRadius","backgroundColor","splice","ESelectedCaseListMapItem","ifStatement","indexOfIf","local","filter","localE","optionLblsValuesLocal","length","ifOptionVals","marginBottom","margin","document","body","menuPortal","base","zIndex","control","provided","state","background","borderColor","minHeight","boxShadow","isFocused","valueContainer","padding","input","indicatorSeparator","display","indicatorsContainer","alignSelf","paddingBottom","borderBottomColor","borderBottomWidth","flexWrap","prevState","optionType","numOfSelectable","opacity","fontSize","isRequired","id","marginTop","OptionView","setnewProduct","indexOn","setindexOn","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","paddingLeft","color","fontFamily","moveItem","from","to","f","newProductOptionsUpdated","filterIndex","Math","random","toString","substr"],"sources":["/Users/peterputros/Desktop/PosMate/components/OptionView.tsx"],"sourcesContent":["import { View, Text, TouchableOpacity, FlatList } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport ReactSelect from \"react-select\";\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\nimport { set } from \"react-native-reanimated\";\n\nconst InnerOn = ({\n  item,\n  newProduct,\n  newProductOptions,\n  setnewProductOptions,\n  index,\n  e,\n  sete,\n}) => {\n  const [testMap, settestMap] = useState(structuredClone(item.optionsList));\n  const optionLbls = newProduct.options.map(function (el) {\n    if (el.label !== e.label && el.label !== null) {\n      return el.label;\n    }\n  });\n\n  const ifOptionOptions = [];\n  optionLbls.map((opLbl) =>\n    ifOptionOptions.push({ value: opLbl, label: opLbl })\n  );\n\n  if (e.selectedCaseKey || e.selectedCaseValue) {\n    // newProductOptions.current[index].selectedCaseList = [\n    //   {\n    //     selectedCaseKey: e.selectedCaseKey,\n    //     selectedCaseValue: e.selectedCaseValue,\n    //   },\n    // ];\n    // newProductOptions.current[index].selectedCaseKey = null;\n    // newProductOptions.current[index].selectedCaseValue = null;\n\n    //convert to usestate\n    setnewProductOptions((prev) => {\n      const clone = structuredClone(prev);\n      clone[index].selectedCaseList = [\n        {\n          selectedCaseKey: null,\n          selectedCaseValue: null,\n        },\n      ];\n\n      clone[index].selectedCaseKey = null;\n      clone[index].selectedCaseValue = null;\n\n      return clone;\n    });\n\n    sete((prev) => ({\n      ...prev,\n      selectedCaseList: [{ selectedCaseKey: null, selectedCaseValue: null }],\n    }));\n  }\n\n  const TestMapItem = (eInnerListStart, indexInnerList) => {\nconsole.log('eInnerListStart', indexInnerList)\n\n    const eInnerList = structuredClone(eInnerListStart);\n    return (\n      <View\n        key={indexInnerList}\n        style={{\n          flexDirection: \"row\",\n          paddingTop: 20,\n          alignItems: \"center\",\n          width: \"100%\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <TextInput\n          placeholder=\"Enter option selection\"\n          onChangeText={(val) => {\n            const cloneOuter = structuredClone(testMap);\n            cloneOuter[indexInnerList].label = val;\n            // newProductOptions.current[index].optionsList = clone;\n            setnewProductOptions((prev) => {\n              const clone = structuredClone(prev);\n              clone[index].optionsList = cloneOuter;\n              return clone;\n            });\n            settestMap(cloneOuter);\n          }}\n          value={eInnerList.label}\n          label=\"Enter option selection\"\n          variant=\"outlined\"\n          color=\"black\"\n          style={{ width: \"45%\" }}\n        />\n        <TextInput\n          placeholder=\"Enter price increase\"\n          onChangeText={(val) => {\n            const re = /^[0-9.]+$/;\n\n            // if value is not blank, then test the regex\n\n            if (val === \"\" || re.test(val)) {\n              const cloneOuter = structuredClone(testMap);\n              cloneOuter[indexInnerList].priceIncrease = val;\n              // newProductOptions.current[index].optionsList = cloneOuter;\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                clone[index].optionsList = cloneOuter;\n                return clone;\n              });\n              settestMap(cloneOuter);\n            }\n          }}\n          value={eInnerList.priceIncrease}\n          style={{ width: \"45%\" }}\n          label=\"Enter price increase\"\n          variant=\"outlined\"\n          color=\"black\"\n        />\n        <TouchableOpacity\n          style={{\n            height: 40,\n            width: 40,\n            borderRadius: 20,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n          onPress={() => {\n            const cloneOuter = structuredClone(testMap);\n            cloneOuter.splice(indexInnerList, 1);\n            // newProductOptions.current[index].optionsList = clone;\n            setnewProductOptions((prev) => {\n              const clone = structuredClone(prev);\n              clone[index].optionsList = cloneOuter;\n              return clone;\n            });\n            settestMap(cloneOuter);\n          }}\n        >\n          <Feather name=\"x\" size={30} color=\"white\" />\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  const ESelectedCaseListMapItem = (ifStatement, indexOfIf) => {\n    const local = newProduct.options.filter(\n      (localE) => localE.label == ifStatement.selectedCaseKey\n    );\n    const optionLblsValuesLocal =\n      local.length > 0\n        ? local[0].optionsList.map(function (el) {\n            return el.label;\n          })\n        : [];\n\n    const ifOptionVals = [];\n    optionLblsValuesLocal.map((opLbl) =>\n      ifOptionVals.push({ value: opLbl, label: opLbl })\n    );\n\n    return (\n      <View\n        key={indexOfIf}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          marginBottom: 25,\n          alignItems: \"center\",\n        }}\n      >\n        <View\n          style={{\n            margin: 10,\n            width: \"40%\",\n            height: 52,\n          }}\n        >\n          <ReactSelect\n            options={ifOptionOptions}\n            value={\n              ifStatement.selectedCaseKey && {\n                value: ifStatement.selectedCaseKey,\n                label: ifStatement.selectedCaseKey,\n              }\n            }\n            onChange={(val) => {\n              // newProductOptions.current[index].selectedCaseList[\n              //   indexOfIf\n              // ].selectedCaseKey = val.value;\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                clone[index].selectedCaseList[indexOfIf].selectedCaseKey =\n                  val.value;\n                return clone;\n              });\n              sete((prev) => ({\n                ...prev,\n                selectedCaseList: newProductOptions[index].selectedCaseList,\n              }));\n            }}\n            placeholder={\"Show if option\"}\n            menuPortalTarget={document.body}\n            styles={{\n              menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n              control: (provided, state) => ({\n                ...provided,\n                background: \"#fff\",\n                borderColor: \"#9e9e9e\",\n                minHeight: \"52px\",\n                height: \"52px\",\n                boxShadow: state.isFocused ? null : null,\n              }),\n\n              valueContainer: (provided, state) => ({\n                ...provided,\n                height: \"52px\",\n                padding: \"0 6px\",\n              }),\n\n              input: (provided, state) => ({\n                ...provided,\n                margin: \"0px\",\n              }),\n              indicatorSeparator: (state) => ({\n                display: \"none\",\n              }),\n              indicatorsContainer: (provided, state) => ({\n                ...provided,\n                height: \"52px\",\n              }),\n            }}\n            menuPlacement=\"auto\"\n            menuPosition=\"fixed\"\n          />\n        </View>\n        <FontAwesome5 name=\"equals\" size={30} color=\"black\" />\n        <View\n          style={{\n            margin: 10,\n            width: \"40%\",\n            height: 52,\n          }}\n        >\n          <ReactSelect\n            options={ifOptionVals}\n            value={\n              ifStatement.selectedCaseValue && {\n                value: ifStatement.selectedCaseValue,\n                label: ifStatement.selectedCaseValue,\n              }\n            }\n            onChange={(val) => {\n              // newProductOptions.current[index].selectedCaseList[\n              //   indexOfIf\n              // ].selectedCaseValue = val.value;\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                clone[index].selectedCaseList[indexOfIf].selectedCaseValue =\n                  val.value;\n                return clone;\n              });\n              sete((prev) => ({\n                ...prev,\n                selectedCaseList: newProductOptions[index].selectedCaseList,\n              }));\n            }}\n            placeholder={\"Show if value\"}\n            menuPortalTarget={document.body}\n            styles={{\n              menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n              control: (provided, state) => ({\n                ...provided,\n                background: \"#fff\",\n                borderColor: \"#9e9e9e\",\n                minHeight: \"52px\",\n                height: \"52px\",\n                boxShadow: state.isFocused ? null : null,\n              }),\n\n              valueContainer: (provided, state) => ({\n                ...provided,\n                height: \"52px\",\n                padding: \"0 6px\",\n              }),\n\n              input: (provided, state) => ({\n                ...provided,\n                margin: \"0px\",\n              }),\n              indicatorSeparator: (state) => ({\n                display: \"none\",\n              }),\n              indicatorsContainer: (provided, state) => ({\n                ...provided,\n                height: \"52px\",\n              }),\n            }}\n            menuPlacement=\"auto\"\n            menuPosition=\"fixed\"\n          />\n        </View>\n        <TouchableOpacity\n          style={{\n            height: 40,\n            width: 40,\n            borderRadius: 20,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n          onPress={() => {\n            // newProductOptions.current[index].selectedCaseList.splice(\n            //   indexOfIf,\n            //   1\n            // );\n            setnewProductOptions((prev) => {\n              const clone = structuredClone(prev);\n              clone[index].selectedCaseList.splice(indexOfIf, 1);\n              return clone;\n            });\n            sete((prev) => ({\n              ...prev,\n              selectedCaseList: newProductOptions[index].selectedCaseList,\n            }));\n          }}\n        >\n          <Feather name=\"x\" size={30} color=\"white\" />\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  return (\n    <>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          alignSelf: \"center\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          paddingBottom: 20,\n          borderBottomColor: \"grey\",\n          borderBottomWidth: 1,\n          flexWrap: \"wrap\",\n        }}\n      >\n        <TextInput\n          placeholder=\"Enter Option Label\"\n          onChangeText={(val) => {\n            sete((prevState) => ({ ...prevState, label: val }));\n            // newProductOptions.current[index].label = val;\n            setnewProductOptions((prev) => {\n              const clone = structuredClone(prev);\n              clone[index].label = val;\n              return clone;\n            });\n          }}\n          value={e.label}\n          style={{ margin: 10, width: \"97.5%\", height: 52 }}\n          label=\"Enter Option Label\"\n          variant=\"outlined\"\n          color=\"black\"\n        />\n        <View\n          style={{\n            margin: 10,\n            width: \"47%\",\n            height: 52,\n          }}\n        >\n          <ReactSelect\n            options={[\n              { value: \"Multi Choice\", label: \"Multi Choice\" },\n              { value: \"Dropdown\", label: \"Dropdown\" },\n            ]}\n            value={\n              e.optionType && {\n                value: e.optionType,\n                label: e.optionType,\n              }\n            }\n            onChange={(val) => {\n              if (e.optionType) {\n                // newProductOptions.current[index].optionType = val.value;\n                setnewProductOptions((prev) => {\n                  const clone = structuredClone(prev);\n                  clone[index].optionType = val.value;\n                  return clone;\n                });\n              } else {\n                // newProductOptions.current[index] = {\n                //   ...e,\n                //   optionType: val.value,\n                // };\n                setnewProductOptions((prev) => {\n                  const clone = structuredClone(prev);\n                  clone[index] = {\n                    ...e,\n                    optionType: val.value,\n                  };\n                  return clone;\n                });\n              }\n              sete((prevState) => ({\n                ...prevState,\n                optionType: val.value,\n              }));\n            }}\n            placeholder={\"Choose Option Type\"}\n            menuPortalTarget={document.body}\n            styles={{\n              menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n              control: (provided, state) => ({\n                ...provided,\n                background: \"#fff\",\n                borderColor: \"#9e9e9e\",\n                minHeight: \"52px\",\n                height: \"52px\",\n                boxShadow: state.isFocused ? null : null,\n              }),\n\n              valueContainer: (provided, state) => ({\n                ...provided,\n                height: \"52px\",\n                padding: \"0 6px\",\n              }),\n\n              input: (provided, state) => ({\n                ...provided,\n                margin: \"0px\",\n              }),\n              indicatorSeparator: (state) => ({\n                display: \"none\",\n              }),\n              indicatorsContainer: (provided, state) => ({\n                ...provided,\n                height: \"52px\",\n              }),\n            }}\n            menuPlacement=\"auto\"\n            menuPosition=\"fixed\"\n          />\n        </View>\n        <TouchableOpacity\n          disabled={e.optionType !== \"Multi Choice\"}\n          style={{ margin: 10, width: \"47%\", height: 52 }}\n        >\n          <TextInput\n            placeholder=\"Enter selection limit or leave empty\"\n            onChangeText={(val) => {\n              const re = /^[0-9\\b]+$/;\n\n              // if value is not blank, then test the regex\n\n              if (val === \"\" || re.test(val)) {\n                if (e.optionType === \"Multi Choice\") {\n                  sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n                  // newProductOptions.current[index].numOfSelectable = val;\n                  setnewProductOptions((prev) => {\n                    const clone = structuredClone(prev);\n                    clone[index].numOfSelectable = val;\n                    return clone;\n                  });\n                }\n              }\n            }}\n            value={e.numOfSelectable}\n            label=\"Enter selection limit\"\n            variant=\"outlined\"\n            style={{\n              width: \"100%\",\n              opacity: e.optionType === \"Dropdown\" ? 0.5 : 1,\n            }}\n            color=\"black\"\n          />\n        </TouchableOpacity>\n        <View\n          style={{\n            margin: 10,\n            width: \"47%\",\n            height: 52,\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Text style={{ marginBottom: 5, fontSize: 14 }}>\n            Is Option Required?\n          </Text>\n          <Switch\n            value={e.isRequired}\n            onValueChange={(val) => {\n              sete((prevState) => ({ ...prevState, isRequired: val }));\n              // newProductOptions.current[index].isRequired = val;\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                clone[index].isRequired = val;\n                return clone;\n              });\n            }}\n          />\n        </View>\n      </View>\n      {/* Convert .map to flatlist */}\n      <FlatList\n        data={testMap}\n        renderItem={({ item }) => (\n          <TestMapItem\n            eInnerListStart={item.label}\n            indexInnerList={item.priceIncrease}\n          />\n        )}\n        keyExtractor={(item) => item.id}\n      />\n      <Button\n        title=\"Add Option Choice\"\n        onPress={() => {\n          const cloneOuter = structuredClone(testMap);\n          cloneOuter.push({\n            label: null,\n            priceIncrease: null,\n          });\n          // newProductOptions.current[index].optionsList = clone;\n          setnewProductOptions((prev) => {\n            const clone = structuredClone(prev);\n            clone[index].optionsList = cloneOuter;\n            return clone;\n          });\n          settestMap(cloneOuter);\n        }}\n        style={{\n          marginBottom: 25,\n          marginTop: 25,\n          backgroundColor: \"#4050B5\",\n        }}\n        disabled={\n          testMap.length > 0 && testMap[testMap.length - 1].label === null\n        }\n      />\n      {e.selectedCaseList?.length > 0 && (\n        <View\n          style={{\n            width: \"100%\",\n            height: 1,\n            backgroundColor: \"grey\",\n            marginTop: 10,\n            marginBottom: 10,\n          }}\n        />\n      )}\n      <FlatList\n        data={e.selectedCaseList}\n        renderItem={({ ifStatement, indexOfIf }) => (\n          <ESelectedCaseListMapItem\n            ifStatement={ifStatement}\n            indexOfIf={indexOfIf}\n          />\n        )}\n        keyExtractor={(item) => item.id}\n      />\n      {optionLbls.length > 1 && (\n        <Button\n          title=\"Add If Statement\"\n          onPress={() => {\n            if (!newProductOptions[index].selectedCaseList) {\n              // newProductOptions.current[index].selectedCaseList = [\n              //   {\n              //     selectedCaseKey: null,\n              //     selectedCaseValue: null,\n              //   },\n              // ];\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                clone[index].selectedCaseList = [\n                  {\n                    selectedCaseKey: null,\n                    selectedCaseValue: null,\n                  },\n                ];\n                return clone;\n              });\n              sete((prev) => ({\n                ...prev,\n                selectedCaseList: [\n                  { selectedCaseKey: null, selectedCaseValue: null },\n                ],\n              }));\n            } else {\n              // newProductOptions.current[index].selectedCaseList.push({\n              //   selectedCaseKey: null,\n              //   selectedCaseValue: null,\n              // });\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                clone[index].selectedCaseList.push({\n                  selectedCaseKey: null,\n                  selectedCaseValue: null,\n                });\n                return clone;\n              });\n              sete((prev) => ({\n                ...prev,\n                selectedCaseList: newProductOptions[index].selectedCaseList,\n              }));\n            }\n          }}\n          style={{ backgroundColor: \"#4050B5\", marginBottom: 25 }}\n        />\n      )}\n    </>\n  );\n};\n\nconst OptionView = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n  setnewProductOptions,\n  indexOn,\n  setindexOn,\n}) => {\n  const [e, sete] = useState(structuredClone(item));\n  // const [testMap, settestMap] = useState(structuredClone(item.optionsList));\n  // var optionLbls = newProduct.options.map(function (el) {\n  //   if (el.label !== e.label && el.label !== null) {\n  //     return el.label;\n  //   }\n  // });\n\n  // if (e.selectedCaseKey || e.selectedCaseValue) {\n  //   newProductOptions.current[index].selectedCaseList = [\n  //     {\n  //       selectedCaseKey: e.selectedCaseKey,\n  //       selectedCaseValue: e.selectedCaseValue,\n  //     },\n  //   ];\n  //   newProductOptions.current[index].selectedCaseKey = null;\n  //   newProductOptions.current[index].selectedCaseValue = null;\n  //   sete((prev) => ({\n  //     ...prev,\n  //     selectedCaseList: [{ selectedCaseKey: null, selectedCaseValue: null }],\n  //   }));\n  // }\n\n  return (\n    <View>\n      <View\n        style={{\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n          borderRadius: 10,\n        }}\n      >\n        <TouchableOpacity\n          onPress={() =>\n            indexOn !== index ? setindexOn(index) : setindexOn(null)\n          }\n          style={[\n            {\n              backgroundColor: \"grey\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: 5,\n              borderTopLeftRadius: 10,\n              borderTopRightRadius: 10,\n            },\n            indexOn !== index && {\n              borderBottomLeftRadius: 10,\n              borderBottomRightRadius: 10,\n            },\n          ]}\n        >\n          <Text\n            style={{\n              width: \"50%\",\n              paddingLeft: 5,\n              fontSize: 16,\n              color: \"white\",\n              fontFamily: \"archivo-600\",\n            }}\n          >\n            {item.label ? item.label : \"New Option\"}\n          </Text>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              function moveItem(from, to) {\n                // remove `from` item and store it\n                // const f = newProductOptions.current.splice(from, 1)[0];\n                // // insert stored item into position `to`\n                // newProductOptions.current.splice(to, 0, f);\n\n                //convert to usestate\n                setnewProductOptions((prev) => {\n                  const clone = structuredClone(prev);\n                  const f = clone.splice(from, 1)[0];\n                  clone.splice(to, 0, f);\n                  return clone;\n                });\n              }\n\n              moveItem(index, index + 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <MaterialCommunityIcons\n              name=\"chevron-down\"\n              size={32}\n              color=\"white\"\n            />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              function moveItem(from, to) {\n                // remove `from` item and store it\n                // const f = newProductOptions.current.splice(from, 1)[0];\n                // // insert stored item into position `to`\n                // newProductOptions.current.splice(to, 0, f);\n\n                setnewProductOptions((prev) => {\n                  const clone = structuredClone(prev);\n                  const f = clone.splice(from, 1)[0];\n                  clone.splice(to, 0, f);\n                  return clone;\n                });\n              }\n\n              moveItem(index, index - 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <MaterialCommunityIcons name=\"chevron-up\" size={32} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              // newProductOptions.current.push({\n              //   ...item,\n              //   label: item.label + \" Copy\",\n              // });\n\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                clone.push({\n                  ...item,\n                  label: item.label + \" Copy\",\n                });\n                return clone;\n              });\n\n              // setnewProduct((prevState) => ({\n              //   ...prevState,\n              //   options: newProductOptions.current,\n              // }));\n              // setindexOn(null);\n\n              //\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions,\n              }));\n              setindexOn(newProductOptions.length - 1);\n              //\n            }}\n          >\n            <Feather name=\"copy\" size={32} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              const newProductOptionsUpdated = newProduct.options.filter(\n                (e, filterIndex) => filterIndex !== index\n              );\n              // newProductOptions.current.splice(index, 1);\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                clone.splice(index, 1);\n                return clone;\n              });\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptionsUpdated,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <Feather name=\"x\" size={32} color=\"white\" />\n          </TouchableOpacity>\n        </TouchableOpacity>\n        {indexOn === index && (\n          <View style={{ padding: 20 }}>\n            <InnerOn\n              item={item}\n              index={index}\n              newProduct={newProduct}\n              newProductOptions={newProductOptions}\n              setnewProductOptions={setnewProductOptions}\n              e={e}\n              sete={sete}\n            />\n          </View>\n        )}\n      </View>\n      {newProduct.options.length - 1 === index && (\n        <Button\n          title=\"Add Option\"\n          onPress={() => {\n            // newProductOptions.current.push({\n            //   label: null,\n            //   optionsList: [],\n            //   selectedCaseKey: null,\n            //   selectedCaseValue: null,\n            //   numOfSelectable: null,\n            //   id: Math.random().toString(36).substr(2, 9),\n            //   optionType: null,\n            // });\n\n            setnewProductOptions((prev) => {\n              const clone = structuredClone(prev);\n              clone.push({\n                label: null,\n                optionsList: [],\n                selectedCaseKey: null,\n                selectedCaseValue: null,\n                numOfSelectable: null,\n                id: Math.random().toString(36).substr(2, 9),\n                optionType: null,\n              });\n              return clone;\n            });\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions,\n            }));\n            setindexOn(newProductOptions.length - 1);\n          }}\n          style={{ marginBottom: 25, backgroundColor: \"#4050B5\" }}\n          disabled={e.label === null}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default OptionView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}