{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar CircularBuffer = function () {\n  function CircularBuffer(size) {\n    _classCallCheck(this, CircularBuffer);\n    _defineProperty(this, \"bufferSize\", void 0);\n    _defineProperty(this, \"buffer\", void 0);\n    _defineProperty(this, \"index\", void 0);\n    _defineProperty(this, \"actualSize\", void 0);\n    this.bufferSize = size;\n    this.buffer = new Array(size);\n    this.index = 0;\n    this.actualSize = 0;\n  }\n  _createClass(CircularBuffer, [{\n    key: \"size\",\n    get: function get() {\n      return this.actualSize;\n    }\n  }, {\n    key: \"push\",\n    value: function push(element) {\n      this.buffer[this.index] = element;\n      this.index = (this.index + 1) % this.bufferSize;\n      this.actualSize = Math.min(this.actualSize + 1, this.bufferSize);\n    }\n  }, {\n    key: \"get\",\n    value: function get(at) {\n      if (this.actualSize === this.bufferSize) {\n        var index = (this.index + at) % this.bufferSize;\n        if (index < 0) {\n          index += this.bufferSize;\n        }\n        return this.buffer[index];\n      } else {\n        return this.buffer[at];\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.buffer = new Array(this.bufferSize);\n      this.index = 0;\n      this.actualSize = 0;\n    }\n  }]);\n  return CircularBuffer;\n}();\nexport { CircularBuffer as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;IAAqBA,cAAN;EAMbC,wBAAYC,IAAD,EAAe;IAAA;IAAAC;IAAAA;IAAAA;IAAAA;IACxB,KAAKC,UAAL,GAAkBF,IAAlB;IACA,KAAKG,MAAL,GAAc,IAAIC,KAAJ,CAAaJ,IAAb,CAAd;IACA,KAAKK,KAAL,GAAa,CAAb;IACA,KAAKC,UAAL,GAAkB,CAAlB;EACD;EAAA;IAAA;IAAA,KAEc,eAAW;MACxB,OAAO,KAAKA,UAAZ;IACD;EAAA;IAAA;IAAA,OAEMC,cAAKC,OAAD,EAAmB;MAC5B,KAAKL,MAAL,CAAY,KAAKE,KAAjB,IAA0BG,OAA1B;MACA,KAAKH,KAAL,GAAa,CAAC,KAAKA,KAAL,GAAa,CAAd,IAAmB,KAAKH,UAArC;MACA,KAAKI,UAAL,GAAkBG,IAAI,CAACC,GAAL,CAAS,KAAKJ,UAAL,GAAkB,CAA3B,EAA8B,KAAKJ,UAAnC,CAAlB;IACD;EAAA;IAAA;IAAA,OAEMS,aAAIC,EAAD,EAAgB;MACxB,IAAI,KAAKN,UAAL,KAAoB,KAAKJ,UAA7B,EAAyC;QACvC,IAAIG,KAAK,GAAG,CAAC,KAAKA,KAAL,GAAaO,EAAd,IAAoB,KAAKV,UAArC;QACA,IAAIG,KAAK,GAAG,CAAZ,EAAe;UACbA,KAAK,IAAI,KAAKH,UAAd;QACD;QAED,OAAO,KAAKC,MAAL,CAAYE,KAAZ,CAAP;MACD,CAPD,MAOO;QACL,OAAO,KAAKF,MAAL,CAAYS,EAAZ,CAAP;MACD;IACF;EAAA;IAAA;IAAA,OAEMC,iBAAc;MACnB,KAAKV,MAAL,GAAc,IAAIC,KAAJ,CAAa,KAAKF,UAAlB,CAAd;MACA,KAAKG,KAAL,GAAa,CAAb;MACA,KAAKC,UAAL,GAAkB,CAAlB;IACD;EAAA;EAAA;AAAA;AAAA,SAxCkBR,cAAN","names":["CircularBuffer","constructor","size","_defineProperty","bufferSize","buffer","Array","index","actualSize","push","element","Math","min","get","at","clear"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-gesture-handler/lib/module/web/tools/CircularBuffer.ts"],"sourcesContent":["export default class CircularBuffer<T> {\n  private bufferSize: number;\n  private buffer: T[];\n  private index: number;\n  private actualSize: number;\n\n  constructor(size: number) {\n    this.bufferSize = size;\n    this.buffer = new Array<T>(size);\n    this.index = 0;\n    this.actualSize = 0;\n  }\n\n  public get size(): number {\n    return this.actualSize;\n  }\n\n  public push(element: T): void {\n    this.buffer[this.index] = element;\n    this.index = (this.index + 1) % this.bufferSize;\n    this.actualSize = Math.min(this.actualSize + 1, this.bufferSize);\n  }\n\n  public get(at: number): T {\n    if (this.actualSize === this.bufferSize) {\n      let index = (this.index + at) % this.bufferSize;\n      if (index < 0) {\n        index += this.bufferSize;\n      }\n\n      return this.buffer[index];\n    } else {\n      return this.buffer[at];\n    }\n  }\n\n  public clear(): void {\n    this.buffer = new Array<T>(this.bufferSize);\n    this.index = 0;\n    this.actualSize = 0;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}