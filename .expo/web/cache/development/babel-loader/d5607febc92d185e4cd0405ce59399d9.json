{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport { myDeviceDetailsState, storeDetailState, woocommerceState } from \"../../../../../state/state\";\nimport { auth, db } from \"../../../../../state/firebaseConfig\";\nvar tz = require(\"moment-timezone\");\nimport ReceiptPrint from \"../../../../../components/ReceiptPrint\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EmployeeReport = function EmployeeReport() {\n  var _useState = useState(new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    startDate = _useState2[0],\n    setStartDate = _useState2[1];\n  var _useState3 = useState(new Date()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    startDate1 = _useState4[0],\n    setStartDate1 = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    inputfilter = _useState6[0],\n    setInputfilter = _useState6[1];\n  var storeDetails = storeDetailState.use();\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    baseSelectedRows = _useState8[0],\n    setbaseSelectedRows = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    updateBaseSelectedRows = _useState10[0],\n    setupdateBaseSelectedRows = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    filteredTranLlist = _useState12[0],\n    setfilteredTransList = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    search = _useState14[0],\n    setsearch = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    transList = _useState16[0],\n    settransList = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    transListTableOrg = _useState18[0],\n    settransListTableOrg = _useState18[1];\n  var wooCredentials = woocommerceState.use();\n  var myDeviceDetails = myDeviceDetailsState.use();\n  var togglefilter = function togglefilter(value) {\n    setInputfilter(value);\n  };\n  var getDate = function getDate(receipt) {\n    if (receipt.date_created) {\n      var dateString = receipt.date_created;\n      var newDate = new Date(dateString + \"Z\");\n      var targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n      var result = tz(newDate).tz(targetTimezone, true).format(\"YYYY-MM-DD HH:mm a\");\n      return result;\n    } else if (receipt.date) {\n      var _newDate = new Date(receipt.date.seconds * 1000);\n      var _targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n      var _result = tz(_newDate).tz(_targetTimezone, true).format(\"YYYY-MM-DD HH:mm a\");\n      return _result;\n    }\n  };\n  useEffect(function () {\n    try {\n      var _auth$currentUser;\n      db.collection(\"users\").doc((_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid).collection(\"transList\").get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          var orderType = \"\";\n          if (doc.data().method === \"deliveryOrder\") {\n            orderType = \"Delivery\";\n          }\n          if (doc.data().method === \"pickupOrder\") {\n            orderType = \"Pickup\";\n          }\n          if (doc.data().method === \"inStoreOrder\") {\n            orderType = \"In Store\";\n          }\n          settransList(function (prevState) {\n            return [].concat(_toConsumableArray(prevState), [doc.data()]);\n          });\n          settransListTableOrg(function (prevState) {\n            var _doc$data$customer, _doc$data$customer2;\n            return [].concat(_toConsumableArray(prevState), [{\n              id: doc.data().transNum.toUpperCase(),\n              number: doc.data().transNum,\n              name: (_doc$data$customer = doc.data().customer) != null && _doc$data$customer.name ? (_doc$data$customer2 = doc.data().customer) == null ? void 0 : _doc$data$customer2.name : \"N/A\",\n              date: getDate(doc.data()),\n              originalData: doc.data(),\n              amount: doc.data().total,\n              system: 'POS',\n              type: orderType\n            }]);\n          });\n        });\n        settransListTableOrg(function (prevState) {\n          return _toConsumableArray(prevState.sort(function (a, b) {\n            return new Date(b.originalData.date_created ? b.originalData.date_created : b.originalData.date.seconds * 1000) - new Date(a.originalData.date_created ? a.originalData.date_created : a.originalData.date.seconds * 1000);\n          }));\n        });\n      });\n    } catch (_unused) {\n      console.log(\"Error occured retrieving tranasctions\");\n    }\n    if (wooCredentials.useWoocommerce === true) {\n      try {\n        var WooCommerceAPI = require(\"woocommerce-api\");\n        var WooCommerce = new WooCommerceAPI({\n          url: wooCredentials.apiUrl,\n          consumerKey: wooCredentials.ck,\n          consumerSecret: wooCredentials.cs,\n          wpAPI: true,\n          version: \"wc/v1\"\n        });\n        var page = 1;\n        var orders = [];\n        var getOrders = function () {\n          var _ref = _asyncToGenerator(function* () {\n            var response = yield WooCommerce.getAsync(\"orders?page=\" + page + \"&per_page=100\");\n            var data = JSON.parse(response.body);\n            orders = [].concat(_toConsumableArray(orders), _toConsumableArray(data));\n            if (data.length === 100) {\n              page++;\n              getOrders();\n            } else {\n            }\n          });\n          return function getOrders() {\n            return _ref.apply(this, arguments);\n          };\n        }();\n        getOrders().then(function () {\n          return settransList(function (prevState) {\n            return [].concat(_toConsumableArray(prevState), _toConsumableArray(orders));\n          });\n        }).catch(function (e) {\n          return console.log(\"error has occured\");\n        });\n      } catch (_unused2) {\n        console.log(\"Something occured with woo\");\n      }\n    }\n  }, []);\n  var columns = [{\n    title: \"Order ID\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"Customer name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"Date\",\n    dataIndex: \"date\",\n    key: \"date\"\n  }, {\n    title: \"Amount\",\n    dataIndex: \"amount\",\n    key: \"amount\"\n  }, {\n    title: \"System Type\",\n    dataIndex: \"system\",\n    key: \"system\"\n  }, {\n    title: \"Type\",\n    dataIndex: \"type\",\n    key: \"type\"\n  }];\n\n  useEffect(function () {\n    console.log('Selected rows from base: ', baseSelectedRows);\n    if (updateBaseSelectedRows === true) {\n      if (baseSelectedRows.length > 1) {\n        var data = [];\n        baseSelectedRows.forEach(function (idx) {\n          var orderIndex = transListTableOrg.findIndex(function (item) {\n            return item.id === idx;\n          });\n          var element = transList[orderIndex];\n          console.log('THIS IS ELEMENT: ', element, ' This is Index: ', orderIndex);\n          var formatedData = ReceiptPrint(element, storeDetails);\n          data = data.concat(formatedData);\n        });\n        var qz = require(\"qz-tray\");\n        if (myDeviceDetails.sendPrintToUserID && myDeviceDetails.useDifferentDeviceToPrint) {\n          var _auth$currentUser2;\n          console.log(\"Sending print to different user\");\n          db.collection(\"users\").doc((_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.uid).collection(\"devices\").doc(myDeviceDetails.sendPrintToUserID.value).collection(\"printRequests\").add({\n            printData: data\n          });\n        } else {\n          qz.websocket.connect().then(function () {\n            var config = qz.configs.create(myDeviceDetails.printToPrinter);\n            return qz.print(config, data);\n          }).then(qz.websocket.disconnect).catch(function (err) {\n            console.error(err);\n          });\n        }\n      } else if (baseSelectedRows.length === 1) {\n        var orderIndex = transListTableOrg.findIndex(function (item) {\n          return item.id === baseSelectedRows[0];\n        });\n        var element = transList[orderIndex];\n        console.log('THIS IS ELEMENT: ', element, ' This is Index: ', orderIndex);\n        var formatedData = ReceiptPrint(element, storeDetails);\n        var _qz = require(\"qz-tray\");\n        if (myDeviceDetails.sendPrintToUserID && myDeviceDetails.useDifferentDeviceToPrint) {\n          var _auth$currentUser3;\n          console.log(\"Sending print to different user\");\n          db.collection(\"users\").doc((_auth$currentUser3 = auth.currentUser) == null ? void 0 : _auth$currentUser3.uid).collection(\"devices\").doc(myDeviceDetails.sendPrintToUserID.value).collection(\"printRequests\").add({\n            printData: formatedData\n          });\n        } else {\n          _qz.websocket.connect().then(function () {\n            var config = _qz.configs.create(myDeviceDetails.printToPrinter);\n            return _qz.print(config, formatedData);\n          }).then(_qz.websocket.disconnect).catch(function (err) {\n            console.error(err);\n          });\n        }\n      } else {\n        alert(\"Higlight one or multiple receipt then click to print them\");\n      }\n      setupdateBaseSelectedRows(false);\n    }\n  }, [baseSelectedRows]);\n  useEffect(function () {\n    if (search) {\n      var filtered = transListTableOrg.filter(function (item) {\n        return item.id.toLowerCase().includes(search.toLowerCase()) || item.name.toLowerCase().includes(search.toLowerCase());\n      });\n      setfilteredTransList(filtered);\n    } else {\n      setfilteredTransList([]);\n    }\n  }, [search]);\n  var SearchDate = function SearchDate() {\n    console.log('Searching date');\n    if (search) {\n      var filtered = filteredTranLlist.filter(function (item) {\n        var targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        var itemDateFormatted;\n        if (item.originalData.date_created) {\n          var dateString = item.originalData.date_created;\n          var newDate = new Date(dateString + \"Z\");\n          var _targetTimezone2 = Intl.DateTimeFormat().resolvedOptions().timeZone;\n          var result = tz(newDate).tz(_targetTimezone2, true);\n          itemDateFormatted = result;\n        } else if (item.originalData.date) {\n          var _newDate2 = new Date(item.originalData.date.seconds * 1000);\n          var _targetTimezone3 = Intl.DateTimeFormat().resolvedOptions().timeZone;\n          var _result2 = tz(_newDate2).tz(_targetTimezone3, true);\n          itemDateFormatted = _result2;\n        }\n        var startFormatted = tz(startDate).tz(targetTimezone, true);\n        var endFormatted = tz(startDate1).tz(targetTimezone, true);\n        startFormatted.hour(0);\n        startFormatted.minute(0);\n        endFormatted.hour(23);\n        endFormatted.minute(59);\n        var bool1 = itemDateFormatted.isBetween(startFormatted, endFormatted);\n        console.log('Date: ', itemDateFormatted, ' Start Date: ', startFormatted, ' End Date: ', endFormatted, ' Bool: ', bool1);\n        return bool1;\n      });\n      setfilteredTransList(filtered);\n    } else {\n      var _filtered = transListTableOrg.filter(function (item) {\n        var targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        var itemDateFormatted;\n        if (item.originalData.date_created) {\n          var dateString = item.originalData.date_created;\n          var newDate = new Date(dateString + \"Z\");\n          var _targetTimezone4 = Intl.DateTimeFormat().resolvedOptions().timeZone;\n          var result = tz(newDate).tz(_targetTimezone4, true);\n          itemDateFormatted = result;\n        } else if (item.originalData.date) {\n          var _newDate3 = new Date(item.originalData.date.seconds * 1000);\n          var _targetTimezone5 = Intl.DateTimeFormat().resolvedOptions().timeZone;\n          var _result3 = tz(_newDate3).tz(_targetTimezone5, true);\n          itemDateFormatted = _result3;\n        }\n        var startFormatted = tz(startDate).tz(targetTimezone, true);\n        var endFormatted = tz(startDate1).tz(targetTimezone, true);\n        startFormatted.hour(0);\n        startFormatted.minute(0);\n        endFormatted.hour(23);\n        endFormatted.minute(59);\n        var bool1 = itemDateFormatted.isBetween(startFormatted, endFormatted);\n        console.log('Date: ', itemDateFormatted, ' Start Date: ', startFormatted, ' End Date: ', endFormatted, ' Bool: ', bool1);\n        return bool1;\n      });\n      setfilteredTransList(_filtered);\n    }\n  };\n\n  var DownloadExcel = function DownloadExcel() {\n    var excelDownload = new ExcelDownload();\n    excelDownload.addSheet(\"history\").addColumns(columns).addDataSource(filteredTranLlist.length > 0 ? filteredTranLlist : transListTableOrg, {\n      str2Percent: true\n    }).saveAs(\"StoreReceipts.xlsx\");\n  };\n  return _jsx(\"div\", {\n    className: \"page-wrapper\",\n    children: _jsxs(\"div\", {\n      className: \"content\",\n      children: [_jsx(\"div\", {\n        className: \"page-header\",\n        children: _jsxs(\"div\", {\n          className: \"page-title\",\n          children: [_jsx(\"h4\", {\n            children: \"Invoices Report\"\n          }), _jsx(\"h6\", {\n            children: \"Manage your Invoices Report\"\n          })]\n        })\n      }), _jsx(\"div\", {\n        className: \"card\",\n        children: _jsxs(\"div\", {\n          className: \"card-body\",\n          children: [_jsxs(\"div\", {\n            className: \"table-top\",\n            children: [_jsxs(\"div\", {\n              className: \"search-set\",\n              children: [_jsx(\"div\", {\n                className: \"search-path\",\n                children: _jsxs(\"a\", {\n                  className: \" btn \" + (inputfilter ? \"btn-filter setclose\" : \"btn-filter\") + \" \",\n                  id: \"filter_search\",\n                  onClick: function onClick() {\n                    return togglefilter(!inputfilter);\n                  },\n                  children: [_jsx(\"img\", {\n                    src: Filter,\n                    alt: \"img\"\n                  }), _jsx(\"span\", {\n                    children: _jsx(\"img\", {\n                      src: ClosesIcon,\n                      alt: \"img\"\n                    })\n                  })]\n                })\n              }), _jsx(\"div\", {\n                className: \"search-input\",\n                children: _jsx(\"input\", {\n                  className: \"form-control form-control-sm search-icon\",\n                  type: \"text\",\n                  placeholder: \"Search...\",\n                  onChange: function onChange(e) {\n                    return setsearch(e.target.value);\n                  }\n                })\n              })]\n            }), _jsx(\"div\", {\n              className: \"wordset\",\n              children: _jsxs(\"ul\", {\n                children: [_jsx(\"li\", {\n                  children: _jsx(\"a\", {\n                    \"data-bs-toggle\": \"tooltip\",\n                    \"data-bs-placement\": \"top\",\n                    title: \"excel\",\n                    onClick: DownloadExcel,\n                    children: _jsx(\"img\", {\n                      src: Excel,\n                      alt: \"img\"\n                    })\n                  })\n                }), _jsx(\"li\", {\n                  children: _jsx(\"a\", {\n                    \"data-bs-toggle\": \"tooltip\",\n                    \"data-bs-placement\": \"top\",\n                    title: \"print\",\n                    onClick: function onClick() {\n                      setupdateBaseSelectedRows(!updateBaseSelectedRows);\n                    },\n                    children: _jsx(\"img\", {\n                      src: Printer,\n                      alt: \"img\"\n                    })\n                  })\n                })]\n              })\n            })]\n          }), _jsx(\"div\", {\n            className: \"card mb-0 \" + (inputfilter ? \"toggleCls\" : \"\"),\n            id: \"filter_inputs\",\n            style: {\n              display: inputfilter ? \"block\" : \"none\"\n            },\n            children: _jsx(\"div\", {\n              className: \"card-body pb-0\",\n              children: _jsxs(\"div\", {\n                className: \"row\",\n                children: [_jsx(\"div\", {\n                  className: \"col-lg-2 col-sm-6 col-12\",\n                  children: _jsx(\"div\", {\n                    className: \"form-group\",\n                    children: _jsxs(\"div\", {\n                      className: \"input-groupicon\",\n                      children: [_jsx(DatePicker, {\n                        selected: startDate,\n                        onChange: function onChange(date) {\n                          return setStartDate(date);\n                        }\n                      }), _jsx(\"div\", {\n                        className: \"addonset\",\n                        children: _jsx(\"img\", {\n                          src: Calendar,\n                          alt: \"img\"\n                        })\n                      })]\n                    })\n                  })\n                }), _jsx(\"div\", {\n                  className: \"col-lg-2 col-sm-6 col-12\",\n                  children: _jsx(\"div\", {\n                    className: \"form-group\",\n                    children: _jsxs(\"div\", {\n                      className: \"input-groupicon\",\n                      children: [_jsx(DatePicker, {\n                        selected: startDate1,\n                        onChange: function onChange(date) {\n                          return setStartDate1(date);\n                        }\n                      }), _jsx(\"div\", {\n                        className: \"addonset\",\n                        children: _jsx(\"img\", {\n                          src: Calendar,\n                          alt: \"img\"\n                        })\n                      })]\n                    })\n                  })\n                }), _jsx(\"div\", {\n                  className: \"col-lg-1 col-sm-6 col-12 ms-auto\",\n                  children: _jsx(\"div\", {\n                    className: \"form-group\",\n                    children: _jsx(\"a\", {\n                      className: \"btn btn-filters ms-auto\",\n                      onClick: SearchDate,\n                      children: _jsx(\"img\", {\n                        src: search_whites,\n                        alt: \"img\"\n                      })\n                    })\n                  })\n                })]\n              })\n            })\n          }), _jsx(\"div\", {\n            className: \"table-responsive\",\n            children: _jsx(Table, {\n              columns: columns,\n              dataSource: filteredTranLlist.length > 0 ? filteredTranLlist : transListTableOrg,\n              updateBaseSelectedRows: updateBaseSelectedRows,\n              setbaseSelectedRows: setbaseSelectedRows\n            })\n          })]\n        })\n      })]\n    })\n  });\n};\nexport default EmployeeReport;","map":{"version":3,"names":["React","useEffect","useState","myDeviceDetailsState","storeDetailState","woocommerceState","auth","db","tz","require","ReceiptPrint","EmployeeReport","Date","startDate","setStartDate","startDate1","setStartDate1","inputfilter","setInputfilter","storeDetails","use","baseSelectedRows","setbaseSelectedRows","updateBaseSelectedRows","setupdateBaseSelectedRows","filteredTranLlist","setfilteredTransList","search","setsearch","transList","settransList","transListTableOrg","settransListTableOrg","wooCredentials","myDeviceDetails","togglefilter","value","getDate","receipt","date_created","dateString","newDate","targetTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","result","format","date","seconds","collection","doc","currentUser","uid","get","then","querySnapshot","forEach","orderType","data","method","prevState","id","transNum","toUpperCase","number","name","customer","originalData","amount","total","system","type","sort","a","b","console","log","useWoocommerce","WooCommerceAPI","WooCommerce","url","apiUrl","consumerKey","ck","consumerSecret","cs","wpAPI","version","page","orders","getOrders","response","getAsync","JSON","parse","body","length","catch","e","columns","title","dataIndex","key","idx","orderIndex","findIndex","item","element","formatedData","concat","qz","sendPrintToUserID","useDifferentDeviceToPrint","add","printData","websocket","connect","config","configs","create","printToPrinter","print","disconnect","err","error","alert","filtered","filter","toLowerCase","includes","SearchDate","itemDateFormatted","startFormatted","endFormatted","hour","minute","bool1","isBetween","DownloadExcel","excelDownload","ExcelDownload","addSheet","addColumns","addDataSource","str2Percent","saveAs","Filter","ClosesIcon","target","Excel","Printer","display","Calendar","search_whites"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/main/MainPage/report/EmployeeReport.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { myDeviceDetailsState, storeDetailState, woocommerceState } from \"state/state\";\nimport { auth, db } from \"state/firebaseConfig\";\nconst tz = require(\"moment-timezone\");\nimport ReceiptPrint from \"components/ReceiptPrint\";\n\nconst EmployeeReport = () => {\n    const [startDate, setStartDate] = useState(new Date());\n    const [startDate1, setStartDate1] = useState(new Date());\n    const [inputfilter, setInputfilter] = useState(false);\n    const storeDetails = storeDetailState.use();\n    const [baseSelectedRows, setbaseSelectedRows] = useState(null)\n    const [updateBaseSelectedRows, setupdateBaseSelectedRows] = useState(false)\n    const [filteredTranLlist, setfilteredTransList] = useState([])\n    const [search, setsearch] = useState(null)\n\n    const [transList, settransList] = useState([]);\n    const [transListTableOrg, settransListTableOrg] = useState([]);\n    const wooCredentials = woocommerceState.use()\n\n    const myDeviceDetails = myDeviceDetailsState.use();\n\n    const togglefilter = (value) => {\n        setInputfilter(value);\n    };\n\n\n\n    const getDate = (receipt) => {\n        if (receipt.date_created) {\n            const dateString = receipt.date_created;\n\n            const newDate = new Date(dateString + \"Z\");\n\n            const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n            const result = tz(newDate)\n                .tz(targetTimezone, true)\n                .format(\"YYYY-MM-DD HH:mm a\");\n\n            return result;\n        } else if (receipt.date) {\n            const newDate = new Date(receipt.date.seconds * 1000);\n            const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n            const result = tz(newDate)\n                .tz(targetTimezone, true)\n                .format(\"YYYY-MM-DD HH:mm a\");\n\n            return result;\n        }\n    };\n\n    useEffect(() => {\n        try {\n            db.collection(\"users\")\n                .doc(auth.currentUser?.uid)\n                .collection(\"transList\")\n                .get()\n                .then((querySnapshot) => {\n                    querySnapshot.forEach((doc) => {\n                        // doc.data() is never undefined for query doc snapshots\n                        // console.log(doc.id, \" => \", doc.data());\n                        let orderType = \"\";\n                        if (doc.data().method === \"deliveryOrder\") {\n                            orderType = \"Delivery\";\n                        }\n                        if (doc.data().method === \"pickupOrder\") {\n                            orderType = \"Pickup\";\n                        }\n                        if (doc.data().method === \"inStoreOrder\") {\n                            orderType = \"In Store\";\n                        }\n\n                        settransList((prevState) => [...prevState, doc.data()]);\n                        settransListTableOrg((prevState) => [...prevState,\n                        {\n                            id: doc.data().transNum.toUpperCase(),\n                            number: doc.data().transNum,\n                            name: doc.data().customer?.name ? doc.data().customer?.name : \"N/A\",\n                            date: getDate(doc.data()),\n                            originalData: doc.data(),\n                            amount: doc.data().total,\n                            system: 'POS',\n                            type: orderType,\n                        }\n                        ]);\n                    });\n                    //sort by date\n                    settransListTableOrg((prevState) => [...prevState.sort((a, b) => new Date(b.originalData.date_created ? b.originalData.date_created : b.originalData.date.seconds * 1000) - new Date(a.originalData.date_created ? a.originalData.date_created : a.originalData.date.seconds * 1000))])\n\n                });\n        } catch {\n            console.log(\"Error occured retrieving tranasctions\");\n        }\n\n        if (wooCredentials.useWoocommerce === true) {\n            try {\n                const WooCommerceAPI = require(\"woocommerce-api\");\n\n                const WooCommerce = new WooCommerceAPI({\n                    url: wooCredentials.apiUrl,\n                    consumerKey: wooCredentials.ck,\n                    consumerSecret: wooCredentials.cs,\n                    wpAPI: true,\n                    version: \"wc/v1\",\n                });\n\n                let page = 1;\n                let orders = [];\n\n                const getOrders = async () => {\n                    const response = await WooCommerce.getAsync(\n                        `orders?page=${page}&per_page=100`\n                    );\n                    const data = JSON.parse(response.body);\n                    orders = [...orders, ...data];\n                    if (data.length === 100) {\n                        page++;\n                        getOrders();\n                    } else {\n                        // console.log(orders);\n                    }\n                };\n\n                getOrders()\n                    .then(() => settransList((prevState) => [...prevState, ...orders]))\n                    .catch((e) => console.log(\"error has occured\"));\n            } catch {\n                console.log(\"Something occured with woo\");\n            }\n        }\n    }, []);\n\n\n\n    const columns = [\n        {\n            title: \"Order ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n            // sorter: (a, b) => a.number.length - b.number.length,\n            // //make text uppercase\n            // render: (text, record) => (<>{text?.toUpperCase()}</>)\n        },\n        {\n            title: \"Customer name\",\n            dataIndex: \"name\",\n            key: \"name\",\n            // sorter: (a, b) => a.Category.length - b.Category.length,\n        },\n        {\n            title: \"Date\",\n            dataIndex: \"date\",\n            key: \"date\",\n            // sorter: (a, b) => a.Brand.length - b.Brand.length,\n        },\n        {\n            title: \"Amount\",\n            dataIndex: \"amount\",\n            key: \"amount\",\n            // sorter: (a, b) => a.Price.length - b.Price.length,\n        },\n        {\n            title: \"System Type\",\n            dataIndex: \"system\",\n            key: \"system\",\n            // sorter: (a, b) => a.System.length - b.System.length,\n        },\n        {\n            title: \"Type\",\n            dataIndex: \"type\",\n            key: \"type\",\n            // render: (text, record) => (\n            //   <>\n            //     {text === \"Delivery\" && (\n            //       <span className=\"badges bg-lightgreen\">{text}</span>\n            //     )}\n            //     {text === \"Pickup\" && (\n            //       <span className=\"badges bg-lightgrey\">{text}</span>\n            //     )}\n            //   </>\n            // ),\n            // sorter: (a, b) => a.Name.length - b.Name.length,\n        },\n    ];\n\n    useEffect(() => {\n        console.log('Selected rows from base: ', baseSelectedRows)\n        if (updateBaseSelectedRows === true) {\n            if (baseSelectedRows.length > 1) {\n                let data = [];\n                baseSelectedRows.forEach((idx) => {\n                    //find index of item in transList that matches id of selected row\n                    const orderIndex = transListTableOrg.findIndex((item) => item.id === idx)\n\n                    const element =\n                        transList[\n                        orderIndex\n                        ];\n                    console.log('THIS IS ELEMENT: ', element, ' This is Index: ', orderIndex)\n                    const formatedData = ReceiptPrint(element, storeDetails);\n                    data = data.concat(formatedData);\n                });\n                const qz = require(\"qz-tray\");\n                if (\n                    myDeviceDetails.sendPrintToUserID &&\n                    myDeviceDetails.useDifferentDeviceToPrint\n                ) {\n                    console.log(\"Sending print to different user\");\n                    db.collection(\"users\")\n                        .doc(auth.currentUser?.uid)\n                        .collection(\"devices\")\n                        .doc(myDeviceDetails.sendPrintToUserID.value)\n                        .collection(\"printRequests\")\n                        .add({\n                            printData: data,\n                        });\n                } else {\n                    qz.websocket\n                        .connect()\n                        .then(function () {\n                            const config = qz.configs.create(myDeviceDetails.printToPrinter);\n                            return qz.print(config, data);\n                        })\n                        .then(qz.websocket.disconnect)\n                        .catch(function (err) {\n                            console.error(err);\n                        });\n                }\n            } else if (baseSelectedRows.length === 1) {\n\n                //find index of item in transList that matches id of selected row\n                const orderIndex = transListTableOrg.findIndex((item) => item.id === baseSelectedRows[0])\n\n                const element =\n                    transList[\n                    orderIndex\n                    ];\n                console.log('THIS IS ELEMENT: ', element, ' This is Index: ', orderIndex)\n\n                const formatedData = ReceiptPrint(element, storeDetails);\n\n                const qz = require(\"qz-tray\");\n                if (\n                    myDeviceDetails.sendPrintToUserID &&\n                    myDeviceDetails.useDifferentDeviceToPrint\n                ) {\n                    console.log(\"Sending print to different user\");\n                    db.collection(\"users\")\n                        .doc(auth.currentUser?.uid)\n                        .collection(\"devices\")\n                        .doc(myDeviceDetails.sendPrintToUserID.value)\n                        .collection(\"printRequests\")\n                        .add({\n                            printData: formatedData,\n                        });\n                } else {\n                    qz.websocket\n                        .connect()\n                        .then(function () {\n                            const config = qz.configs.create(myDeviceDetails.printToPrinter);\n                            return qz.print(config, formatedData);\n                        })\n                        .then(qz.websocket.disconnect)\n                        .catch(function (err) {\n                            console.error(err);\n                        });\n                }\n            } else {\n                alert(\n                    \"Higlight one or multiple receipt then click to print them\"\n                );\n            }\n            setupdateBaseSelectedRows(false)\n        }\n    }, [baseSelectedRows])\n\n    useEffect(() => {\n        if (search) {\n            const filtered = transListTableOrg.filter((item) => {\n                return item.id.toLowerCase().includes(search.toLowerCase()) || item.name.toLowerCase().includes(search.toLowerCase())\n            })\n            setfilteredTransList(filtered)\n        } else {\n            setfilteredTransList([])\n        }\n    }\n        , [search])\n\n    const SearchDate = () => {\n        console.log('Searching date')\n        if (search) {\n            const filtered = filteredTranLlist.filter((item) => {\n                const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n                let itemDateFormatted;\n\n                if (item.originalData.date_created) {\n                    const dateString = item.originalData.date_created;\n\n                    const newDate = new Date(dateString + \"Z\");\n\n                    const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n                    const result = tz(newDate)\n                        .tz(targetTimezone, true)\n\n                    itemDateFormatted = result;\n                } else if (item.originalData.date) {\n                    const newDate = new Date(item.originalData.date.seconds * 1000);\n                    const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n                    const result = tz(newDate)\n                        .tz(targetTimezone, true)\n\n                    itemDateFormatted = result;\n                }\n\n                const startFormatted = tz(startDate)\n                    .tz(targetTimezone, true)\n\n                const endFormatted = tz(startDate1)\n                    .tz(targetTimezone, true)\n\n                startFormatted.hour(0)\n                startFormatted.minute(0)\n\n                endFormatted.hour(23)\n                endFormatted.minute(59)\n\n                let bool1 = itemDateFormatted.isBetween(startFormatted, endFormatted)\n\n                console.log('Date: ', itemDateFormatted, ' Start Date: ', startFormatted, ' End Date: ', endFormatted, ' Bool: ', bool1)\n                return bool1\n            })\n            setfilteredTransList(filtered)\n        } else {\n            const filtered = transListTableOrg.filter((item) => {\n                const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n                let itemDateFormatted;\n\n                if (item.originalData.date_created) {\n                    const dateString = item.originalData.date_created;\n\n                    const newDate = new Date(dateString + \"Z\");\n\n                    const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n                    const result = tz(newDate)\n                        .tz(targetTimezone, true)\n\n                    itemDateFormatted = result;\n                } else if (item.originalData.date) {\n                    const newDate = new Date(item.originalData.date.seconds * 1000);\n                    const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n                    const result = tz(newDate)\n                        .tz(targetTimezone, true)\n\n                    itemDateFormatted = result;\n                }\n\n                const startFormatted = tz(startDate)\n                    .tz(targetTimezone, true)\n\n                const endFormatted = tz(startDate1)\n                    .tz(targetTimezone, true)\n\n                startFormatted.hour(0)\n                startFormatted.minute(0)\n\n                endFormatted.hour(23)\n                endFormatted.minute(59)\n\n                let bool1 = itemDateFormatted.isBetween(startFormatted, endFormatted)\n\n                console.log('Date: ', itemDateFormatted, ' Start Date: ', startFormatted, ' End Date: ', endFormatted, ' Bool: ', bool1)\n                return bool1\n            })\n            setfilteredTransList(filtered)\n        }\n    }\n\n    //Printing function\n    const DownloadExcel = () => {\n        const excelDownload = new ExcelDownload();\n        excelDownload\n            .addSheet(\"history\")\n            .addColumns(columns)\n            .addDataSource(filteredTranLlist.length > 0 ? filteredTranLlist : transListTableOrg, {\n                str2Percent: true\n            })\n            .saveAs(\"StoreReceipts.xlsx\");\n    };\n\n\n    return (\n        <div className=\"page-wrapper\">\n            <div className=\"content\">\n                <div className=\"page-header\">\n                    <div className=\"page-title\">\n                        <h4>Invoices Report</h4>\n                        <h6>Manage your Invoices Report</h6>\n                    </div>\n                </div>\n                {/* /product list */}\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"table-top\">\n                            <div className=\"search-set\">\n                                <div className=\"search-path\">\n                                    <a\n                                        className={` btn ${inputfilter ? \"btn-filter setclose\" : \"btn-filter\"\n                                            } `}\n                                        id=\"filter_search\"\n                                        onClick={() => togglefilter(!inputfilter)}\n                                    >\n                                        <img src={Filter} alt=\"img\" />\n                                        <span>\n                                            <img src={ClosesIcon} alt=\"img\" />\n                                        </span>\n                                    </a>\n                                </div>\n                                <div className=\"search-input\">\n                                    <input\n                                        className=\"form-control form-control-sm search-icon\"\n                                        type=\"text\"\n                                        placeholder=\"Search...\"\n                                        onChange={(e) => setsearch(e.target.value)}\n                                    />\n                                    {/* <a className=\"btn btn-searchset\">\n                    <img src={Search} alt=\"img\" />\n                  </a> */}\n                                </div>\n                            </div>\n                            <div className=\"wordset\">\n                                <ul>\n                                    <li>\n                                        <a\n                                            data-bs-toggle=\"tooltip\"\n                                            data-bs-placement=\"top\"\n                                            title=\"excel\"\n                                            onClick={DownloadExcel}\n                                        >\n                                            <img src={Excel} alt=\"img\" />\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a\n                                            data-bs-toggle=\"tooltip\"\n                                            data-bs-placement=\"top\"\n                                            title=\"print\"\n                                            onClick={() => {\n                                                setupdateBaseSelectedRows(!updateBaseSelectedRows)\n                                            }}\n                                        >\n                                            <img src={Printer} alt=\"img\" />\n                                        </a>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        {/* /Filter */}\n                        <div\n                            className={`card mb-0 ${inputfilter ? \"toggleCls\" : \"\"}`}\n                            id=\"filter_inputs\"\n                            style={{ display: inputfilter ? \"block\" : \"none\" }}\n                        >\n                            <div className=\"card-body pb-0\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-2 col-sm-6 col-12\">\n                                        <div className=\"form-group\">\n                                            <div className=\"input-groupicon\">\n                                                <DatePicker\n                                                    selected={startDate}\n                                                    onChange={(date) => setStartDate(date)}\n                                                />\n                                                <div className=\"addonset\">\n                                                    <img src={Calendar} alt=\"img\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-lg-2 col-sm-6 col-12\">\n                                        <div className=\"form-group\">\n                                            <div className=\"input-groupicon\">\n                                                <DatePicker\n                                                    selected={startDate1}\n                                                    onChange={(date) => setStartDate1(date)}\n                                                />\n                                                <div className=\"addonset\">\n                                                    <img src={Calendar} alt=\"img\" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-lg-1 col-sm-6 col-12 ms-auto\">\n                                        <div className=\"form-group\">\n                                            <a className=\"btn btn-filters ms-auto\" onClick={SearchDate}>\n                                                <img src={search_whites} alt=\"img\" />\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {/* /Filter */}\n                        <div className=\"table-responsive\">\n                            <Table columns={columns} dataSource={filteredTranLlist.length > 0 ? filteredTranLlist : transListTableOrg} updateBaseSelectedRows={updateBaseSelectedRows} setbaseSelectedRows={setbaseSelectedRows} />\n                        </div>\n                    </div>\n                </div>\n                {/* /product list */}\n            </div>\n        </div>\n    );\n};\n\nexport default EmployeeReport;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}