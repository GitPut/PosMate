{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"../state/state\";\nimport { updateData } from \"../state/firebaseFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MyListItem = function MyListItem(_ref) {\n  var item = _ref.item,\n    index = _ref.index,\n    setnewProduct = _ref.setnewProduct,\n    newProduct = _ref.newProduct,\n    newProductOptions = _ref.newProductOptions;\n  var memoizedItem = useMemo(function () {\n    return item;\n  }, [item]);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    optionLblsValues = _useState2[0],\n    setoptionLblsValues = _useState2[1];\n  var optionLbls = newpro.filter(function (checkUseE) {\n    return checkUseE.label !== e.label;\n  });\n  var _useState3 = useState(memoizedItem),\n    _useState4 = _slicedToArray(_useState3, 2),\n    e = _useState4[0],\n    sete = _useState4[1];\n  if (e.selectedCaseKey !== null) {\n    var local = newpro.filter(function (localE) {\n      return localE.label == e.selectedCaseKey;\n    });\n    var optionLblsValuesLocal = [];\n    local[0].optionsList.forEach(function (eVals) {\n      optionLblsValuesLocal.push(eVals.label);\n    });\n    setoptionLblsValues(optionLblsValuesLocal);\n  }\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: {\n        padding: 25,\n        margin: 15,\n        backgroundColor: \"lightgrey\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          newProductOptions.current.push(_objectSpread(_objectSpread({}, e), {}, {\n            label: e.label + \" Copy\"\n          }));\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"Copy\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          newProductOptions.current.splice(index, 1);\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"X\"\n        })\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Select List Label\",\n        onChangeText: function onChangeText(val) {\n          sete(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              label: val\n            });\n          });\n          newProductOptions.current[index].label = val;\n        },\n        value: e.label,\n        style: {\n          marginBottom: 25\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Number Of Selectable; If There Is\",\n        onChangeText: function onChangeText(val) {\n          sete(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              numOfSelectable: val\n            });\n          });\n          newProductOptions.current[index].numOfSelectable = val;\n        },\n        value: e.numOfSelectable,\n        style: {\n          marginBottom: 25\n        }\n      }), e.optionsList.map(function (eInnerListStart, indexInnerList) {\n        var _useState5 = useState(eInnerListStart),\n          _useState6 = _slicedToArray(_useState5, 2),\n          eInnerList = _useState6[0],\n          seteInnerList = _useState6[1];\n        return _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            marginBottom: 25,\n            alignItems: \"center\"\n          },\n          children: [_jsx(TextInput, {\n            placeholder: \"Enter Option Label\",\n            onChangeText: function onChangeText(val) {\n              newProductOptions.current[index].optionsList[indexInnerList].label = val;\n              seteInnerList(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  label: val\n                });\n              });\n            },\n            value: eInnerList.label\n          }), _jsx(TextInput, {\n            placeholder: \"Enter price increase\",\n            onChangeText: function onChangeText(val) {\n              newProductOptions.current[index].optionsList[indexInnerList].priceIncrease = val;\n              seteInnerList(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  priceIncrease: val\n                });\n              });\n            },\n            value: eInnerList.priceIncrease,\n            style: {\n              marginLeft: 20,\n              marginRight: 20\n            }\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              newProductOptions.current[index].optionsList.splice(indexInnerList, 1);\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newProductOptions.current\n                });\n              });\n            },\n            children: _jsx(Text, {\n              style: {\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"X\"\n            })\n          })]\n        });\n      }), _jsx(Button, {\n        title: \"Add Option Choice\",\n        onPress: function onPress() {\n          newProductOptions.current[index].optionsList.push({\n            label: null,\n            priceIncrease: null\n          });\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n        },\n        style: {\n          marginBottom: 25\n        }\n      }), optionLbls.length > 1 && _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          marginBottom: 25\n        },\n        children: [_jsx(DropDown, {\n          label: \"Show if...\",\n          options: optionLbls,\n          setValue: function setValue(val) {\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                selectedCaseKey: val\n              });\n            });\n            newProductOptions.current[index].selectedCaseKey = val;\n          },\n          value: e.selectedCaseKey,\n          style: {\n            marginBottom: 25\n          }\n        }), _jsx(Text, {\n          children: \"\\\"=\\\"\"\n        }), _jsx(DropDown, {\n          label: \"Show if...\",\n          options: optionLblsValues,\n          setValue: function setValue(val) {\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                selectedCaseValue: val\n              });\n            });\n            newProductOptions.current[index].selectedCaseValue = val;\n          },\n          value: e.selectedCaseValue,\n          style: {\n            marginBottom: 25\n          }\n        })]\n      })]\n    })\n  });\n};\nvar AddProduct = function AddProduct(_ref2) {\n  var setProductModal = _ref2.setProductModal,\n    setisModalVisible = _ref2.setisModalVisible,\n    existingProduct = _ref2.existingProduct,\n    existingProductIndex = _ref2.existingProductIndex;\n  var catalog = userStoreState.use();\n  var _useState7 = useState(existingProduct ? existingProduct : {\n      name: null,\n      price: null,\n      catagory: null,\n      options: [],\n      description: null\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    newProduct = _useState8[0],\n    setnewProduct = _useState8[1];\n  var newProductOptions = useRef([]);\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [copyProductData]));\n    } else if (existingProduct) {\n      var copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n      updateData(_toConsumableArray(catalog.categories), copy);\n    } else {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [newProduct]));\n    }\n    setisModalVisible(true);\n  }\n  var OptionsAddingSection = function OptionsAddingSection() {\n    return _jsxs(View, {\n      children: [_jsx(FlatList, {\n        data: newProduct.options,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item,\n            index = _ref3.index;\n          return _jsx(MyListItem, {\n            item: item,\n            index: index,\n            newProduct: newProduct,\n            setnewProduct: setnewProduct,\n            newProductOptions: newProductOptions\n          });\n        }\n      }), _jsx(Button, {\n        title: \"Add Product Option\",\n        onPress: function onPress() {\n          newProductOptions.current.push({\n            label: null,\n            optionsList: [],\n            selectedCaseKey: null,\n            selectedCaseValue: null,\n            numOfSelectable: null,\n            id: Math.random().toString(36).substr(2, 9)\n          });\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n        },\n        style: {\n          marginBottom: 25\n        }\n      })]\n    });\n  };\n  return _jsxs(ScrollView, {\n    contentContainerStyle: {\n      width: \"93%\",\n      alignSelf: \"center\",\n      marginTop: 25\n    },\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        padding: 20,\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setProductModal(false);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"X\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          var copy = structuredClone(newProduct);\n          copy.name = copy.name + \" Copy\";\n          handleDataUpdate(copy);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"Copy\"\n        })\n      }), _jsx(Text, {\n        style: {\n          marginBottom: 25\n        },\n        children: \"AddProduct\"\n      })]\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Product Name\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            name: val\n          });\n        });\n      },\n      value: newProduct.name,\n      style: {\n        marginBottom: 25\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Enter any other items that come with this\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            description: val\n          });\n        });\n      },\n      style: {\n        marginBottom: 25\n      },\n      value: newProduct.description\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Product Price\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            price: val\n          });\n        });\n      },\n      style: {\n        marginBottom: 25\n      },\n      value: newProduct.price\n    }), _jsx(DropDown, {\n      label: \"Choose catagory\",\n      options: catalog.categories,\n      setValue: function setValue(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            catagory: val\n          });\n        });\n      },\n      value: newProduct.catagory,\n      style: {\n        marginBottom: 25\n      }\n    }), _jsx(OptionsAddingSection, {}), _jsx(Button, {\n      title: \"Add/Save Product\",\n      onPress: function onPress() {\n        return handleDataUpdate();\n      },\n      style: {\n        marginBottom: 25,\n        marginTop: 25,\n        backgroundColor: \"lightgreen\"\n      }\n    })]\n  });\n};\nexport default AddProduct;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useMemo","useRef","useState","Button","TextInput","DropDown","userStoreState","updateData","MyListItem","item","index","setnewProduct","newProduct","newProductOptions","memoizedItem","optionLblsValues","setoptionLblsValues","optionLbls","newpro","filter","checkUseE","label","e","sete","selectedCaseKey","local","localE","optionLblsValuesLocal","optionsList","forEach","eVals","push","padding","margin","backgroundColor","current","prevState","options","marginBottom","fontWeight","color","splice","val","numOfSelectable","map","eInnerListStart","indexInnerList","eInnerList","seteInnerList","flexDirection","alignItems","priceIncrease","marginLeft","marginRight","length","justifyContent","selectedCaseValue","AddProduct","setProductModal","setisModalVisible","existingProduct","existingProductIndex","catalog","use","name","price","catagory","description","handleDataUpdate","copyProductData","categories","products","copy","structuredClone","OptionsAddingSection","id","toString","Math","random","substr","width","alignSelf","marginTop","styles","StyleSheet","create"],"sources":["/Users/peterputros/Desktop/PosMate-1/components/TestAdd.tsx"],"sourcesContent":["import {\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"state/state\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst MyListItem = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n}) => {\n  const memoizedItem = useMemo(() => item, [item]);\n\n  const [optionLblsValues, setoptionLblsValues] = useState([]);\n  const optionLbls = newpro.filter(\n    (checkUseE) => checkUseE.label !== e.label\n  );\n  const [e, sete] = useState(memoizedItem);\n\n  if (e.selectedCaseKey !== null) {\n    const local = newpro.filter(\n      (localE) => localE.label == e.selectedCaseKey\n    );\n    const optionLblsValuesLocal = [];\n    local[0].optionsList.forEach((eVals) => {\n      optionLblsValuesLocal.push(eVals.label);\n    });\n    setoptionLblsValues(optionLblsValuesLocal);\n  }\n\n  return (\n    <View>\n      <View\n        style={{\n          padding: 25,\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.push({\n              ...e,\n              label: e.label + \" Copy\",\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.splice(index, 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            X\n          </Text>\n        </TouchableOpacity>\n        <TextInput\n          placeholder=\"Enter Select List Label\"\n          onChangeText={(val) => {\n            sete((prevState) => ({ ...prevState, label: val }));\n            newProductOptions.current[index].label = val;\n          }}\n          value={e.label}\n          style={{ marginBottom: 25 }}\n        />\n        <TextInput\n          placeholder=\"Enter Number Of Selectable; If There Is\"\n          onChangeText={(val) => {\n            sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n            newProductOptions.current[index].numOfSelectable = val;\n          }}\n          value={e.numOfSelectable}\n          style={{ marginBottom: 25 }}\n        />\n        {e.optionsList.map((eInnerListStart, indexInnerList) => {\n          const [eInnerList, seteInnerList] = useState(eInnerListStart);\n          return (\n            <View\n              style={{\n                flexDirection: \"row\",\n                marginBottom: 25,\n                alignItems: \"center\",\n              }}\n            >\n              <TextInput\n                placeholder=\"Enter Option Label\"\n                onChangeText={(val) => {\n                  newProductOptions.current[index].optionsList[\n                    indexInnerList\n                  ].label = val;\n                  seteInnerList((prevState) => ({\n                    ...prevState,\n                    label: val,\n                  }));\n                }}\n                value={eInnerList.label}\n              />\n              <TextInput\n                placeholder=\"Enter price increase\"\n                onChangeText={(val) => {\n                  newProductOptions.current[index].optionsList[\n                    indexInnerList\n                  ].priceIncrease = val;\n                  seteInnerList((prevState) => ({\n                    ...prevState,\n                    priceIncrease: val,\n                  }));\n                }}\n                value={eInnerList.priceIncrease}\n                style={{ marginLeft: 20, marginRight: 20 }}\n              />\n              <TouchableOpacity\n                onPress={() => {\n                  newProductOptions.current[index].optionsList.splice(\n                    indexInnerList,\n                    1\n                  );\n                  setnewProduct((prevState) => ({\n                    ...prevState,\n                    options: newProductOptions.current,\n                  }));\n                }}\n              >\n                <Text\n                  style={{\n                    fontWeight: \"700\",\n                    color: \"red\",\n                  }}\n                >\n                  X\n                </Text>\n              </TouchableOpacity>\n            </View>\n          );\n        })}\n        <Button\n          title=\"Add Option Choice\"\n          onPress={() => {\n            newProductOptions.current[index].optionsList.push({\n              label: null,\n              priceIncrease: null,\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n          }}\n          style={{ marginBottom: 25 }}\n        />\n        {optionLbls.length > 1 && (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              marginBottom: 25,\n            }}\n          >\n            <DropDown\n              label=\"Show if...\"\n              options={optionLbls}\n              setValue={(val) => {\n                sete((prevState) => ({ ...prevState, selectedCaseKey: val }));\n                newProductOptions.current[index].selectedCaseKey = val;\n              }}\n              value={e.selectedCaseKey}\n              style={{ marginBottom: 25 }}\n            />\n            <Text>\"=\"</Text>\n            <DropDown\n              label=\"Show if...\"\n              options={optionLblsValues}\n              setValue={(val) => {\n                sete((prevState) => ({ ...prevState, selectedCaseValue: val }));\n                newProductOptions.current[index].selectedCaseValue = val;\n              }}\n              value={e.selectedCaseValue}\n              style={{ marginBottom: 25 }}\n            />\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst AddProduct = ({\n  setProductModal,\n  setisModalVisible,\n  existingProduct,\n  existingProductIndex,\n}) => {\n  const catalog = userStoreState.use();\n  const [newProduct, setnewProduct] = useState(\n    existingProduct\n      ? existingProduct\n      : {\n          name: null,\n          price: null,\n          catagory: null,\n          options: [],\n          description: null,\n        }\n  );\n  const newProductOptions = useRef([]);\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(\n        [...catalog.categories],\n        [...catalog.products, copyProductData]\n      );\n    } else if (existingProduct) {\n      let copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n\n      updateData([...catalog.categories], copy);\n    } else {\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\n    }\n    setisModalVisible(true);\n  }\n\n  const OptionsAddingSection = () => {\n    return (\n      <View>\n        <FlatList\n          data={newProduct.options}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={({ item, index }) => (\n            <MyListItem\n              item={item}\n              index={index}\n              newProduct={newProduct}\n              setnewProduct={setnewProduct}\n              newProductOptions={newProductOptions}\n            />\n          )}\n        />\n        {/* {newProduct.options.length === 0 && ( */}\n        <Button\n          title=\"Add Product Option\"\n          onPress={() => {\n            newProductOptions.current.push({\n              label: null,\n              optionsList: [],\n              selectedCaseKey: null,\n              selectedCaseValue: null,\n              numOfSelectable: null,\n              id: Math.random().toString(36).substr(2, 9),\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n          }}\n          style={{ marginBottom: 25 }}\n        />\n        {/* )} */}\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView\n      contentContainerStyle={{\n        width: \"93%\",\n        alignSelf: \"center\",\n        marginTop: 25,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 20,\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <TouchableOpacity onPress={() => setProductModal(false)}>\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n            X\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            let copy = structuredClone(newProduct);\n            copy.name = copy.name + \" Copy\";\n            handleDataUpdate(copy);\n          }}\n        >\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <Text style={{ marginBottom: 25 }}>AddProduct</Text>\n      </View>\n      <TextInput\n        placeholder=\"Enter Product Name\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, name: val }));\n        }}\n        value={newProduct.name}\n        style={{ marginBottom: 25 }}\n      />\n      <TextInput\n        placeholder=\"Enter any other items that come with this\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, description: val }));\n        }}\n        style={{ marginBottom: 25 }}\n        value={newProduct.description}\n      />\n      <TextInput\n        placeholder=\"Enter Product Price\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, price: val }));\n        }}\n        style={{ marginBottom: 25 }}\n        value={newProduct.price}\n      />\n      <DropDown\n        label=\"Choose catagory\"\n        options={catalog.categories}\n        setValue={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, catagory: val }));\n        }}\n        value={newProduct.catagory}\n        style={{ marginBottom: 25 }}\n      />\n      <OptionsAddingSection />\n      <Button\n        title=\"Add/Save Product\"\n        onPress={() => handleDataUpdate()}\n        style={{\n          marginBottom: 25,\n          marginTop: 25,\n          backgroundColor: \"lightgreen\",\n        }}\n      />\n    </ScrollView>\n  );\n};\n\nexport default AddProduct;\n\nconst styles = StyleSheet.create({});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}