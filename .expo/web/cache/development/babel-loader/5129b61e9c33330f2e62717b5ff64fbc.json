{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useState } from \"react\";\nimport NewUserPaymentUpdate from \"./NewUserPaymentUpdate\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar NewUserPayment = function NewUserPayment() {\n  var _useState = useState(\"Pay $50 each month\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    planType = _useState2[0],\n    setplanType = _useState2[1];\n  var _useState3 = useState(second),\n    _useState4 = _slicedToArray(_useState3, 2),\n    stageNum = _useState4[0],\n    setstageNum = _useState4[1];\n\n  return _jsx(NewUserPaymentUpdate, {\n    currentStageNum: 1\n  });\n};\nexport default NewUserPayment;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"rgba(31,35,48,1)\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  innerContainer: {\n    backgroundColor: \"white\",\n    width: \"95%\",\n    height: \"90%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 6,\n    padding: 50\n  }\n});","map":{"version":3,"names":["React","useState","NewUserPaymentUpdate","NewUserPayment","planType","setplanType","second","stageNum","setstageNum","styles","StyleSheet","create","container","backgroundColor","width","height","justifyContent","alignItems","innerContainer","borderRadius","padding"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/NewUserPayment.tsx"],"sourcesContent":["import { Button, StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport EditStoreDetails from \"components/EditStoreDetails\";\nimport DropDown from \"components/DropDown\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { logout } from \"state/firebaseFunctions\";\nimport NewUserPaymentUpdate from \"./NewUserPaymentUpdate\";\n\nconst NewUserPayment = () => {\n  const [planType, setplanType] = useState(\"Pay $50 each month\");\n  const [stageNum, setstageNum] = useState(second)\n\n  // return (\n  //   <View style={styles.container}>\n  //     <View style={styles.innerContainer}>\n  //       <Text>Welcome To Divine Pos</Text>\n  //       <Text>Please enter your busienss details to start!</Text>\n  //       <View\n  //         style={{\n  //           flexDirection: \"row\",\n  //           justifyContent: \"space-between\",\n  //           alignItems: \"center\",\n  //           width: \"90%\",\n  //         }}\n  //       >\n  //         <Text>Choose plan type</Text>\n  //         <DropDown\n  //           label=\"\"\n  //           options={[\n  //             \"Pay $50 each month\",\n  //             \"Pay $480 Per Year/Each month @$40\",\n  //             \"Test\",\n  //           ]}\n  //           setValue={setplanType}\n  //           value={planType}\n  //         />\n  //       </View>\n  //       <EditStoreDetails\n  //         customBtnLbl=\"Check Out\"\n  //         customBtnExtraFunction={async () => {\n  //           let priceId;\n  //           if (planType === \"Pay $50 each month\") {\n  //             priceId = \"price_1Mb2s4CIw3L7DOwI5PDx3qKx\";\n  //           } else if (planType === \"Pay $480 Per Year/Each month @$40\") {\n  //             priceId = \"price_1Mb2s4CIw3L7DOwIF00zPa4q\";\n  //           } else if (planType === \"Test\") {\n  //             priceId = \"price_1Mb4uSCIw3L7DOwI6exh9JBt\";\n  //           }\n  //           await db\n  //             .collection(\"users\")\n  //             .doc(auth.currentUser.uid)\n  //             .collection(\"checkout_sessions\")\n  //             .add({\n  //               price: priceId, // todo price Id from your products price in the Stripe Dashboard\n  //               success_url: window.location.origin, // return user to this screen on successful purchase\n  //               cancel_url: window.location.origin, // return user to this screen on failed purchase\n  //             })\n  //             .then((docRef) => {\n  //               // Wait for the checkoutSession to get attached by the extension\n  //               docRef.onSnapshot(async (snap) => {\n  //                 const { error, sessionId } = snap.data();\n  //                 if (error) {\n  //                   // Show an error to your customer and inspect\n  //                   // your Cloud Function logs in the Firebase console.\n  //                   alert(`An error occurred: ${error.message}`);\n  //                 }\n\n  //                 if (sessionId) {\n  //                   // We have a session, let's redirect to Checkout\n  //                   // Init Stripe\n  //                   const stripe = await loadStripe(\n  //                     \"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\" // todo enter your public stripe key here\n  //                   );\n  //                   console.log(`redirecting`);\n  //                   await stripe.redirectToCheckout({ sessionId });\n  //                 }\n  //               });\n  //             });\n  //         }}\n  //       />\n  //       <Button title=\"Leave\" onPress={logout} />\n  //     </View>\n  //   </View>\n  // );\n  return <NewUserPaymentUpdate currentStageNum={1} />;\n};\n\nexport default NewUserPayment;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"rgba(31,35,48,1)\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  innerContainer: {\n    backgroundColor: \"white\",\n    width: \"95%\",\n    height: \"90%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 6,\n    padding: 50,\n  },\n});\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAMvC,OAAOC,oBAAoB;AAA+B;AAE1D,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,gBAAgCF,QAAQ,CAAC,oBAAoB,CAAC;IAAA;IAAvDG,QAAQ;IAAEC,WAAW;EAC5B,iBAAgCJ,QAAQ,CAACK,MAAM,CAAC;IAAA;IAAzCC,QAAQ;IAAEC,WAAW;;EA0E5B,OAAO,KAAC,oBAAoB;IAAC,eAAe,EAAE;EAAE,EAAG;AACrD,CAAC;AAED,eAAeL,cAAc;AAE7B,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,eAAe,EAAE,kBAAkB;IACnCC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDC,cAAc,EAAE;IACdL,eAAe,EAAE,OAAO;IACxBC,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,KAAK;IACbC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBE,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}