{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport { Button, Text } from \"@react-native-material/core\";\nimport { transListState } from \"../../state/state\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ViewTransactions = function ViewTransactions() {\n  var transList = transListState.use();\n  var today = new Date();\n  var _useState = useState({\n      todaysReceiptValue: 0,\n      todaysReceipts: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    todaysDetails = _useState2[0],\n    setTodaysDetails = _useState2[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        textAlign: \"center\",\n        margin: 25\n      },\n      children: \"List Of Transactions\"\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        width: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [_jsxs(Text, {\n        style: {\n          textAlign: \"center\",\n          margin: 25\n        },\n        children: [\"Todays Total Price: \", todaysDetails.todaysReceiptValue]\n      }), _jsx(Button, {\n        style: {\n          height: 40,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        title: \"Print Todays Receipts\"\n      }), _jsxs(Text, {\n        style: {\n          textAlign: \"center\",\n          margin: 25\n        },\n        children: [\"Todays Total Receipts: \", todaysDetails.todaysReceipts]\n      })]\n    }), _jsx(View, {\n      style: styles.contentContainer,\n      children: transList.length > 0\n    })]\n  });\n};\nexport default ViewTransactions;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\"\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","Button","Text","transListState","ViewTransactions","transList","use","today","Date","todaysReceiptValue","todaysReceipts","todaysDetails","setTodaysDetails","styles","container","textAlign","margin","flexDirection","width","alignItems","justifyContent","height","contentContainer","length","StyleSheet","create","backgroundColor","flex","flexWrap","paddingLeft","paddingRight","paddingBottom"],"sources":["/Users/peterputros/Desktop/PosMate-1/screens/authed/ViewTransactions.tsx"],"sourcesContent":["import { ScrollView, StyleSheet, View } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Text } from \"@react-native-material/core\";\nimport { transListState } from \"state/state\";\n\nconst ViewTransactions = () => {\n  const transList = transListState.use();\n  const today = new Date();\n  const [todaysDetails, setTodaysDetails] = useState({\n    todaysReceiptValue: 0,\n    todaysReceipts: 0,\n  });\n\n  // useEffect(() => {\n  //   // GetTrans();\n  //   const reversed = res.transList.reverse();\n  //   setTransList(reversed);\n  //   const todaysReceiptValue = res.transList.reduce((accumulator, current) => {\n  //     const date = new Date(current.date);\n  //     if (date.toLocaleDateString() === today.toLocaleDateString()) {\n  //       return accumulator + parseFloat(current.total);\n  //     } else {\n  //       return accumulator;\n  //     }\n  //   }, 0);\n  //   const todaysReceipts = res.transList.reduce((accumulator, current) => {\n  //     const date = new Date(current.date);\n  //     if (date.toLocaleDateString() === today.toLocaleDateString()) {\n  //       return accumulator + 1;\n  //     } else {\n  //       return accumulator;\n  //     }\n  //   }, 0);\n  //   setTodaysDetails({\n  //     todaysReceiptValue: todaysReceiptValue.toFixed(2),\n  //     todaysReceipts: todaysReceipts,\n  //   });\n  // }, []);\n\n  // const PrintTodaysTotal = () => {\n  //   const qz = require(\"qz-tray\");\n\n  //   let data = [\n  //     \"\\x1B\" + \"\\x40\", // init\n  //     \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n  //     \"Tomas Pizza\",\n  //     \"\\x0A\",\n  //     \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n  //     \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n  //     \"(519) 650-0409\" + \"\\x0A\", // text and line break\n  //     today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n  //     \"\\x0A\",\n  //     \"\\x0A\",\n  //     \"\\x0A\",\n  //     \"\\x0A\",\n  //     \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n  //     \"\\x0A\" + \"\\x0A\",\n  //     \"Number Of Receipts: \" + todaysDetails.todaysReceipts + \"\\x0A\" + \"\\x0A\",\n  //     \"Sub-Total: \" +\n  //       \"$\" +\n  //       (todaysDetails.todaysReceiptValue / 1.13).toFixed(2) +\n  //       \"\\x0A\" +\n  //       \"\\x0A\",\n  //     \"Tax: \" +\n  //       \"$\" +\n  //       ((todaysDetails.todaysReceiptValue / 1.13) * 0.13).toFixed(2) +\n  //       \"\\x0A\" +\n  //       \"\\x0A\",\n  //     \"Total Including (13% Tax): \" +\n  //       \"$\" +\n  //       todaysDetails.todaysReceiptValue +\n  //       \"\\x0A\" +\n  //       \"\\x0A\",\n  //     \"------------------------------------------\" + \"\\x0A\",\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x0A\", // line break\n  //     \"\\x1D\" + \"\\x56\" + \"\\x00\",\n  //     \"\\x1D\" + \"\\x56\" + \"\\x30\",\n  //   ];\n\n  //   qz.websocket\n  //     .connect()\n  //     .then(function () {\n  //       let config = qz.configs.create(\"jZebra\");\n  //       return qz.print(config, data);\n  //     })\n  //     .then(qz.websocket.disconnect)\n  //     .catch(function (err) {\n  //       console.error(err);\n  //     });\n  // };\n\n  // const Print = () => {\n  //   const qz = require(\"qz-tray\");\n\n  //   const todaysReceiptsList = transList.filter(\n  //     (i) =>\n  //       new Date(i.date).toLocaleDateString() === today.toLocaleDateString()\n  //   );\n\n  //   let data = [];\n\n  //   todaysReceiptsList.forEach((element) => {\n  //     let total = 0;\n  //     data.push(\n  //       \"\\x1B\" + \"\\x40\", // init\n  //       \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n  //       \"Tomas Pizza\",\n  //       \"\\x0A\",\n  //       \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n  //       \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n  //       \"(519) 650-0409\" + \"\\x0A\", // text and line break\n  //       today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n  //       \"\\x0A\",\n  //       `Transaction # ${element.transNum}` + \"\\x0A\",\n  //       \"\\x0A\",\n  //       \"\\x0A\",\n  //       \"\\x0A\",\n  //       \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\n  //     );\n\n  //     element.cart?.map((cartItem) => {\n  //       total += cartItem.price;\n  //       data.push(`Name: ${cartItem.name}`);\n  //       data.push(\"\\x0A\");\n  //       data.push(`Quantity: ${cartItem.quantity}`);\n  //       data.push(\"\\x0A\");\n  //       data.push(`Price: $${cartItem.price}`);\n\n  //       if (cartItem.options) {\n  //         cartItem.options?.map((option) => {\n  //           data.push(option);\n  //           data.push(\"\\x0A\");\n  //         });\n  //       } else {\n  //         data.push(\"\\x0A\" + \"\\x0A\");\n  //       }\n  //     });\n\n  //     data.push(\n  //       \"\\x0A\",\n  //       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n  //       \"\\x0A\" + \"\\x0A\",\n  //       \"Payment Method: \" + element.method + \"\\x0A\" + \"\\x0A\",\n  //       \"Total Including (13% Tax): \" + \"$\" + element.total + \"\\x0A\" + \"\\x0A\",\n  //       \"------------------------------------------\" + \"\\x0A\",\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\", // line break\n  //       \"\\x0A\" // line break\n  //     );\n  //   });\n\n  //   data.push(\"\\x1D\" + \"\\x56\" + \"\\x00\", \"\\x1D\" + \"\\x56\" + \"\\x30\");\n\n  //   qz.websocket\n  //     .connect()\n  //     .then(function () {\n  //       let config = qz.configs.create(\"jZebra\");\n  //       return qz.print(config, data);\n  //     })\n  //     .then(qz.websocket.disconnect)\n  //     .catch(function (err) {\n  //       console.error(err);\n  //     });\n  // };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ textAlign: \"center\", margin: 25 }}>\n        List Of Transactions\n      </Text>\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Price: {todaysDetails.todaysReceiptValue}\n        </Text>\n        <Button\n          style={{ height: 40, alignItems: \"center\", justifyContent: \"center\" }}\n          title=\"Print Todays Receipts\"\n          // onPress={PrintTodaysTotal}\n        />\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Receipts: {todaysDetails.todaysReceipts}\n        </Text>\n      </View>\n      <View style={styles.contentContainer}>\n        {\n          transList.length > 0 \n        }\n        {/* {transList &&\n          transList?.map((element, index) => {\n            const date = new Date(element.date);\n            // if (date.toLocaleDateString() === today.toLocaleDateString()) {\n            //   setTodaysDetails((prevState) => prevState + 1);\n            // }\n            return (\n              <View\n                style={{ backgroundColor: \"grey\", padding: 30, margin: 10 }}\n                key={index}\n              >\n                {element.cart?.map((cartItem, index) => (\n                  <View style={{ marginBottom: 20 }} key={index}>\n                    <Text>Name: {cartItem.name}</Text>\n                    <Text>Quantity: {cartItem.quantity}</Text>\n                    <Text>Price: {cartItem.price}</Text>\n                    <Text>Date: {date.toLocaleDateString()}</Text>\n                    {cartItem.options &&\n                      cartItem.options?.map((option) => <Text>{option}</Text>)}\n                  </View>\n                ))}\n                <Button\n                  title=\"Print\"\n                  onPress={() => {\n                    let total = 0;\n                    const qz = require(\"qz-tray\");\n                    const today = new Date();\n\n                    let data = [\n                      \"\\x1B\" + \"\\x40\", // init\n                      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n                      \"Tomas Pizza\",\n                      \"\\x0A\",\n                      \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\n                      \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\n                      \"(519) 650-0409\" + \"\\x0A\", // text and line break\n                      today.toLocaleDateString() +\n                        \" \" +\n                        today.toLocaleTimeString() +\n                        \"\\x0A\",\n                      \"\\x0A\",\n                      `Transaction # ${element.transNum}` + \"\\x0A\",\n                      \"\\x0A\",\n                      \"\\x0A\",\n                      \"\\x0A\",\n                      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n                    ];\n\n                    element.cart?.map((cartItem) => {\n                      total += parseFloat(cartItem.price);\n                      data.push(`Name: ${cartItem.name}`);\n                      data.push(\"\\x0A\");\n                      data.push(`Quantity: ${cartItem.quantity}`);\n                      data.push(\"\\x0A\");\n                      data.push(`Price: $${cartItem.price}`);\n\n                      if (cartItem.options) {\n                        data.push(\"\\x0A\");\n                        cartItem.options?.map((option) => {\n                          data.push(option);\n                          data.push(\"\\x0A\");\n                        });\n                      }\n                      data.push(\"\\x0A\" + \"\\x0A\");\n                    });\n\n                    total = total * 1.13;\n                    total = total.toFixed(2);\n\n                    //push ending\n                    data.push(\n                      \"\\x0A\",\n                      \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\n                      \"\\x0A\" + \"\\x0A\",\n                      \"Total Including (13% Tax): \" +\n                        \"$\" +\n                        total +\n                        \"\\x0A\" +\n                        \"\\x0A\",\n                      \"------------------------------------------\" + \"\\x0A\",\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      \"\\x0A\", // line break\n                      //\"\\x1D\" + \"\\x56\" + \"\\x00\",\n                      \"\\x1D\" + \"\\x56\" + \"\\x30\"\n                    );\n\n                    qz.websocket\n                      .connect()\n                      .then(function () {\n                        let config = qz.configs.create(\"jZebra\");\n                        return qz.print(config, data);\n                      })\n                      .then(qz.websocket.disconnect)\n                      .catch(function (err) {\n                        console.error(err);\n                      });\n                  }}\n                />\n              </View>\n            );\n          })} */}\n      </View>\n    </View>\n  );\n};\n\nexport default ViewTransactions;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\",\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n});\n"],"mappings":";;;AACA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,QAAQ,6BAA6B;AAC1D,SAASC,cAAc;AAAsB;AAAA;AAE7C,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;EAC7B,IAAMC,SAAS,GAAGF,cAAc,CAACG,GAAG,EAAE;EACtC,IAAMC,KAAK,GAAG,IAAIC,IAAI,EAAE;EACxB,gBAA0CR,QAAQ,CAAC;MACjDS,kBAAkB,EAAE,CAAC;MACrBC,cAAc,EAAE;IAClB,CAAC,CAAC;IAAA;IAHKC,aAAa;IAAEC,gBAAgB;;EAqKtC,OACE,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAG,CAAE;MAAA;IAAA,EAE1C,EACP,MAAC,IAAI;MACH,KAAK,EAAE;QACLC,aAAa,EAAE,KAAK;QACpBC,KAAK,EAAE,MAAM;QACbC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE;MAClB,CAAE;MAAA,WAEF,MAAC,IAAI;QAAC,KAAK,EAAE;UAAEL,SAAS,EAAE,QAAQ;UAAEC,MAAM,EAAE;QAAG,CAAE;QAAA,mCAC1BL,aAAa,CAACF,kBAAkB;MAAA,EAChD,EACP,KAAC,MAAM;QACL,KAAK,EAAE;UAAEY,MAAM,EAAE,EAAE;UAAEF,UAAU,EAAE,QAAQ;UAAEC,cAAc,EAAE;QAAS,CAAE;QACtE,KAAK,EAAC;MAAuB,EAE7B,EACF,MAAC,IAAI;QAAC,KAAK,EAAE;UAAEL,SAAS,EAAE,QAAQ;UAAEC,MAAM,EAAE;QAAG,CAAE;QAAA,sCACvBL,aAAa,CAACD,cAAc;MAAA,EAC/C;IAAA,EACF,EACP,KAAC,IAAI;MAAC,KAAK,EAAEG,MAAM,CAACS,gBAAiB;MAAA,UAEjCjB,SAAS,CAACkB,MAAM,GAAG;IAAC,EA2GjB;EAAA,EACF;AAEX,CAAC;AAED,eAAenB,gBAAgB;AAE/B,IAAMS,MAAM,GAAGW,UAAU,CAACC,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,eAAe,EAAE,OAAO;IACxBC,IAAI,EAAE,CAAC;IACPN,MAAM,EAAE;EACV,CAAC;EACDC,gBAAgB,EAAE;IAChBK,IAAI,EAAE,CAAC;IACPV,aAAa,EAAE,KAAK;IACpBW,QAAQ,EAAE,MAAM;IAChBR,cAAc,EAAE,eAAe;IAC/BS,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE,EAAE;IACjBV,MAAM,EAAE,MAAM;IACdH,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}