{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport { userStoreState } from \"../state/state\";\nimport { Button } from \"@react-native-material/core\";\nimport AddProduct from \"./AddProduct\";\nimport Spinner from \"./Spinner\";\nimport { updateData } from \"../state/firebaseFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EditProductList = function EditProductList() {\n  var catalog = userStoreState.use();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    productModal = _useState2[0],\n    setProductModal = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isModalVisible = _useState4[0],\n    setisModalVisible = _useState4[1];\n  function handleRemoveCatagory(index) {\n    var localCatalog = structuredClone(catalog);\n    localCatalog.products.splice(index, 1);\n    updateData(localCatalog.categories, localCatalog.products);\n    setisModalVisible(true);\n  }\n  return _jsxs(ScrollView, {\n    style: {\n      padding: 25\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 17,\n        fontWeight: \"600\"\n      },\n      children: \"Current Products\"\n    }), catalog.categories.length > 0 ? catalog.products.map(function (e, index) {\n      var _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        productEditModal = _useState6[0],\n        setProductEditModal = _useState6[1];\n      return _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          padding: 15,\n          margin: 10,\n          backgroundColor: \"lightgrey\"\n        },\n        children: [_jsxs(Text, {\n          style: {\n            fontSize: 17\n          },\n          children: [\"Product: \", e.name]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            width: \"10%\"\n          },\n          children: [_jsx(Button, {\n            title: \"Edit\",\n            onPress: function onPress() {\n              return setProductEditModal(true);\n            },\n            style: {\n              margin: 10\n            }\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return handleRemoveCatagory(index);\n            },\n            style: {\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              borderRadius: 3,\n              backgroundColor: \"red\",\n              padding: 10,\n              margin: 10\n            },\n            children: _jsx(Text, {\n              style: {\n                color: \"white\",\n                fontWeight: \"600\",\n                fontSize: 18\n              },\n              children: \"X\"\n            })\n          })]\n        }), _jsx(Modal, {\n          visible: productEditModal,\n          children: _jsx(AddProduct, {\n            setProductModal: setProductEditModal,\n            setisModalVisible: setisModalVisible,\n            existingProduct: e,\n            existingProductIndex: index\n          })\n        })]\n      });\n    }) : _jsx(Text, {\n      style: {\n        marginTop: 50,\n        marginBottom: 50\n      },\n      children: \"You must add a category before you can add a product...\"\n    }), catalog.products.length < 1 && catalog.categories.length > 0 && _jsx(Text, {\n      style: {\n        marginTop: 50,\n        marginBottom: 50\n      },\n      children: \"You have no products...\"\n    }), _jsx(Button, {\n      title: \"Add New Product\",\n      onPress: function onPress() {\n        return setProductModal(true);\n      },\n      style: {\n        margin: 10\n      },\n      disabled: catalog.categories.length < 1\n    }), _jsx(Modal, {\n      visible: productModal,\n      children: _jsx(AddProduct, {\n        setProductModal: setProductModal,\n        setisModalVisible: setisModalVisible\n      })\n    }), _jsx(Spinner, {\n      isModalVisible: isModalVisible\n    })]\n  });\n};\nexport default EditProductList;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","userStoreState","Button","AddProduct","Spinner","updateData","EditProductList","catalog","use","productModal","setProductModal","isModalVisible","setisModalVisible","handleRemoveCatagory","index","localCatalog","structuredClone","products","splice","categories","padding","fontSize","fontWeight","length","map","e","productEditModal","setProductEditModal","flexDirection","justifyContent","margin","backgroundColor","name","alignItems","width","borderRadius","color","marginTop","marginBottom","styles","StyleSheet","create"],"sources":["C:/Users/admin/OneDrive - George Brown College/Desktop/PosMate/components/EditProductList.tsx"],"sourcesContent":["import {\r\n  Modal,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { userStoreState } from \"state/state\";\r\nimport { Button, TextInput } from \"@react-native-material/core\";\r\nimport AddProduct from \"./AddProduct\";\r\nimport Spinner from \"./Spinner\";\r\nimport { updateData } from \"state/firebaseFunctions\";\r\n\r\nconst EditProductList = () => {\r\n  const catalog = userStoreState.use();\r\n  const [productModal, setProductModal] = useState(false);\r\n  const [isModalVisible, setisModalVisible] = useState(false);\r\n\r\n  function handleRemoveCatagory(index) {\r\n    const localCatalog = structuredClone(catalog);\r\n    localCatalog.products.splice(index, 1);\r\n\r\n    updateData(localCatalog.categories, localCatalog.products);\r\n    setisModalVisible(true);\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={{ padding: 25 }}>\r\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>Current Products</Text>\r\n      {catalog.categories.length > 0 ? (\r\n        catalog.products.map((e, index) => {\r\n          const [productEditModal, setProductEditModal] = useState(false);\r\n          return (\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                padding: 15,\r\n                margin: 10,\r\n                backgroundColor: \"lightgrey\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 17 }}>Product: {e.name}</Text>\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                  width: \"10%\",\r\n                }}\r\n              >\r\n                <Button\r\n                  title=\"Edit\"\r\n                  onPress={() => setProductEditModal(true)}\r\n                  style={{ margin: 10 }}\r\n                />\r\n                <TouchableOpacity\r\n                  onPress={() => handleRemoveCatagory(index)}\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    borderRadius: 3,\r\n                    backgroundColor: \"red\",\r\n                    padding: 10,\r\n                    margin: 10,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{ color: \"white\", fontWeight: \"600\", fontSize: 18 }}\r\n                  >\r\n                    X\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n              <Modal visible={productEditModal}>\r\n                <AddProduct\r\n                  setProductModal={setProductEditModal}\r\n                  setisModalVisible={setisModalVisible}\r\n                  existingProduct={e}\r\n                  existingProductIndex={index}\r\n                />\r\n              </Modal>\r\n            </View>\r\n          );\r\n        })\r\n      ) : (\r\n        <Text style={{ marginTop: 50, marginBottom: 50 }}>\r\n          You must add a category before you can add a product...\r\n        </Text>\r\n      )}\r\n      {catalog.products.length < 1 && catalog.categories.length > 0 && (\r\n        <Text style={{ marginTop: 50, marginBottom: 50 }}>\r\n          You have no products...\r\n        </Text>\r\n      )}\r\n      <Button\r\n        title=\"Add New Product\"\r\n        onPress={() => setProductModal(true)}\r\n        style={{ margin: 10 }}\r\n        disabled={catalog.categories.length < 1}\r\n      />\r\n      <Modal visible={productModal}>\r\n        <AddProduct\r\n          setProductModal={setProductModal}\r\n          setisModalVisible={setisModalVisible}\r\n        />\r\n      </Modal>\r\n      <Spinner isModalVisible={isModalVisible} />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default EditProductList;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}