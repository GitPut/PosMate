{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"../state/state\";\nimport { updateData } from \"../state/firebaseFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar MyListItem = function MyListItem(_ref) {\n  var item = _ref.item,\n    index = _ref.index,\n    setnewProduct = _ref.setnewProduct,\n    newProduct = _ref.newProduct,\n    newProductOptions = _ref.newProductOptions,\n    flatListRef = _ref.flatListRef,\n    yPosition = _ref.yPosition,\n    indexOn = _ref.indexOn,\n    setindexOn = _ref.setindexOn;\n  var memoizedItem = useMemo(function () {\n    return item;\n  }, [item]);\n  if (indexOn !== index) {\n    return _jsx(Text, {\n      children: memoizedItem.label\n    });\n  } else {\n    var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      optionLblsValues = _useState2[0],\n      setoptionLblsValues = _useState2[1];\n    var _useState3 = useState(memoizedItem),\n      _useState4 = _slicedToArray(_useState3, 2),\n      e = _useState4[0],\n      sete = _useState4[1];\n    var optionLbls = newProduct.options.map(function (el) {\n      if (el.label !== e.label && el.label !== null) {\n        return el.label;\n      }\n    });\n    useEffect(function () {\n      if (e.selectedCaseKey !== null) {\n        var local = newProduct.options.filter(function (localE) {\n          return localE.label == e.selectedCaseKey;\n        });\n        var optionLblsValuesLocal = local[0].optionsList.map(function (el) {\n          return el.label;\n        });\n        setoptionLblsValues(optionLblsValuesLocal);\n      }\n    }, [e]);\n    return _jsx(View, {\n      children: _jsxs(View, {\n        style: {\n          padding: 25,\n          margin: 15,\n          backgroundColor: \"lightgrey\"\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            newProductOptions.current.push(_objectSpread(_objectSpread({}, e), {}, {\n              label: e.label + \" Copy\"\n            }));\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            flatListRef.current.scrollToOffset({\n              offset: yPosition,\n              animated: false\n            });\n          },\n          children: _jsx(Text, {\n            style: {\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\"\n            },\n            children: \"Copy\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            newProductOptions.current.splice(index, 1);\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            flatListRef.current.scrollToOffset({\n              offset: yPosition,\n              animated: false\n            });\n          },\n          children: _jsx(Text, {\n            style: {\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\"\n            },\n            children: \"X\"\n          })\n        }), _jsx(TextInput, {\n          placeholder: \"Enter Select List Label\",\n          onChangeText: function onChangeText(val) {\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                label: val\n              });\n            });\n            newProductOptions.current[index].label = val;\n          },\n          value: e.label,\n          style: {\n            marginBottom: 25\n          }\n        }), _jsx(DropDown, {\n          label: \"Option Type\",\n          options: [\"Standard\", \"Dropdown\"],\n          setValue: function setValue(val) {\n            if (e.optionType) {\n              newProductOptions.current[index].optionType = val;\n            } else {\n              newProductOptions.current[index] = _objectSpread(_objectSpread({}, e), {}, {\n                optionType: val\n              });\n              console.log(newProductOptions.current[index].optionType);\n            }\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            flatListRef.current.scrollToOffset({\n              offset: yPosition,\n              animated: false\n            });\n          },\n          value: e.optionType,\n          style: {\n            marginBottom: 25\n          }\n        }), _jsx(TextInput, {\n          placeholder: \"Enter Number Of Selectable; If There Is\",\n          onChangeText: function onChangeText(val) {\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                numOfSelectable: val\n              });\n            });\n            newProductOptions.current[index].numOfSelectable = val;\n          },\n          value: e.numOfSelectable,\n          style: {\n            marginBottom: 25\n          }\n        }), e.optionsList.map(function (eInnerListStart, indexInnerList) {\n          var _useState5 = useState(eInnerListStart),\n            _useState6 = _slicedToArray(_useState5, 2),\n            eInnerList = _useState6[0],\n            seteInnerList = _useState6[1];\n          return _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              marginBottom: 25,\n              alignItems: \"center\"\n            },\n            children: [_jsx(TextInput, {\n              placeholder: \"Enter Option Label\",\n              onChangeText: function onChangeText(val) {\n                newProductOptions.current[index].optionsList[indexInnerList].label = val;\n                seteInnerList(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    label: val\n                  });\n                });\n              },\n              value: eInnerList.label\n            }), _jsx(TextInput, {\n              placeholder: \"Enter price increase\",\n              onChangeText: function onChangeText(val) {\n                newProductOptions.current[index].optionsList[indexInnerList].priceIncrease = val;\n                seteInnerList(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    priceIncrease: val\n                  });\n                });\n              },\n              value: eInnerList.priceIncrease,\n              style: {\n                marginLeft: 20,\n                marginRight: 20\n              }\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                newProductOptions.current[index].optionsList.splice(indexInnerList, 1);\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    options: newProductOptions.current\n                  });\n                });\n                flatListRef.current.scrollToOffset({\n                  offset: yPosition,\n                  animated: false\n                });\n              },\n              children: _jsx(Text, {\n                style: {\n                  fontWeight: \"700\",\n                  color: \"red\"\n                },\n                children: \"X\"\n              })\n            })]\n          });\n        }), _jsx(Button, {\n          title: \"Add Option Choice\",\n          onPress: function onPress() {\n            newProductOptions.current[index].optionsList.push({\n              label: null,\n              priceIncrease: null\n            });\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            flatListRef.current.scrollToOffset({\n              offset: yPosition,\n              animated: false\n            });\n          },\n          style: {\n            marginBottom: 25\n          }\n        }), optionLbls.length > 1 && _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginBottom: 25\n          },\n          children: [_jsx(DropDown, {\n            label: \"Show if...\",\n            options: optionLbls,\n            setValue: function setValue(val) {\n              sete(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  selectedCaseKey: val\n                });\n              });\n              newProductOptions.current[index].selectedCaseKey = val;\n            },\n            value: e.selectedCaseKey,\n            style: {\n              marginBottom: 25\n            }\n          }), _jsx(Text, {\n            children: \"\\\"=\\\"\"\n          }), _jsx(DropDown, {\n            label: \"Show if...\",\n            options: optionLblsValues,\n            setValue: function setValue(val) {\n              sete(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  selectedCaseValue: val\n                });\n              });\n              newProductOptions.current[index].selectedCaseValue = val;\n            },\n            value: e.selectedCaseValue,\n            style: {\n              marginBottom: 25\n            }\n          })]\n        })]\n      })\n    });\n  }\n};\nvar AddProduct = function AddProduct(_ref2) {\n  var route = _ref2.route,\n    navigation = _ref2.navigation;\n  var _route$params = route.params,\n    existingProduct = _route$params.existingProduct,\n    existingProductIndex = _route$params.existingProductIndex;\n  var catalog = userStoreState.use();\n  var _useState7 = useState(existingProduct ? existingProduct : {\n      name: null,\n      price: null,\n      catagory: null,\n      options: [],\n      description: null\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    newProduct = _useState8[0],\n    setnewProduct = _useState8[1];\n  var newProductOptions = useRef(existingProduct ? existingProduct.options : []);\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    indexOn = _useState10[0],\n    setindexOn = _useState10[1];\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [copyProductData]));\n      navigation.goBack();\n    } else if (existingProduct) {\n      var copy = structuredClone(catalog.products);\n      var newProductUseRef = _objectSpread(_objectSpread({}, newProduct), {}, {\n        options: newProductOptions.current\n      });\n      copy[existingProductIndex] = newProductUseRef;\n      updateData(_toConsumableArray(catalog.categories), copy);\n      navigation.goBack();\n    } else {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [newProduct]));\n      navigation.goBack();\n    }\n  }\n  var flatListRef = useRef(null);\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    yPosition = _useState12[0],\n    setYPosition = _useState12[1];\n\n  var getItemLayout = function getItemLayout(data, index) {\n    return {\n      length: 400,\n      offset: 400 * index,\n      index: index\n    };\n  };\n  useEffect(function () {\n    flatListRef.current.scrollToIndex({\n      index: indexOn,\n      animated: true\n    });\n  }, [indexOn]);\n  var OptionsAddingSection = function OptionsAddingSection() {\n    return _jsxs(View, {\n      children: [_jsx(FlatList, {\n        ref: flatListRef,\n        getItemLayout: getItemLayout,\n        initialNumToRender: 5,\n        maxToRenderPerBatch: 10,\n        windowSize: 10,\n        data: newProduct.options,\n        keyExtractor: function keyExtractor(item) {\n          var _item$id;\n          return (_item$id = item.id) == null ? void 0 : _item$id.toString();\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item,\n            index = _ref3.index;\n          return _jsx(MyListItem, {\n            item: item,\n            index: index,\n            newProduct: newProduct,\n            setnewProduct: setnewProduct,\n            newProductOptions: newProductOptions,\n            flatListRef: flatListRef,\n            yPosition: yPosition,\n            indexOn: indexOn,\n            setindexOn: setindexOn\n          });\n        }\n      }), _jsx(Button, {\n        title: \"Add Product Option\",\n        onPress: function onPress() {\n          newProductOptions.current.push({\n            label: null,\n            optionsList: [],\n            selectedCaseKey: null,\n            selectedCaseValue: null,\n            numOfSelectable: null,\n            id: Math.random().toString(36).substr(2, 9),\n            optionType: null\n          });\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n          flatListRef.current.scrollToOffset({\n            offset: yPosition,\n            animated: false\n          });\n        },\n        style: {\n          marginBottom: 25\n        }\n      })]\n    });\n  };\n  return _jsx(ScrollView, {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      flex: 1\n    },\n    contentContainerStyle: {\n      width: \"93%\",\n      alignSelf: \"center\",\n      marginTop: 25\n    },\n    children: _jsxs(_Fragment, {\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          padding: 20,\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Text, {\n            style: {\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\"\n            },\n            children: \"X\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            var copy = structuredClone(newProduct);\n            copy.name = copy.name + \" Copy\";\n            handleDataUpdate(copy);\n          },\n          children: _jsx(Text, {\n            style: {\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\"\n            },\n            children: \"Copy\"\n          })\n        }), _jsx(Text, {\n          style: {\n            marginBottom: 25\n          },\n          children: \"AddProduct\"\n        })]\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Product Name\",\n        onChangeText: function onChangeText(val) {\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              name: val\n            });\n          });\n        },\n        value: newProduct.name,\n        style: {\n          marginBottom: 25\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Enter any other items that come with this\",\n        onChangeText: function onChangeText(val) {\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              description: val\n            });\n          });\n        },\n        style: {\n          marginBottom: 25\n        },\n        value: newProduct.description\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Product Price\",\n        onChangeText: function onChangeText(val) {\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              price: val\n            });\n          });\n        },\n        style: {\n          marginBottom: 25\n        },\n        value: newProduct.price\n      }), _jsx(DropDown, {\n        label: \"Choose catagory\",\n        options: catalog.categories,\n        setValue: function setValue(val) {\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              catagory: val\n            });\n          });\n        },\n        value: newProduct.catagory,\n        style: {\n          marginBottom: 25\n        }\n      }), _jsx(OptionsAddingSection, {}), _jsx(Button, {\n        title: \"Add/Save Product\",\n        onPress: function onPress() {\n          handleDataUpdate();\n        },\n        style: {\n          marginBottom: 25,\n          marginTop: 25,\n          backgroundColor: \"lightgreen\"\n        }\n      })]\n    })\n  });\n};\nexport default AddProduct;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","Button","TextInput","DropDown","userStoreState","updateData","MyListItem","item","index","setnewProduct","newProduct","newProductOptions","flatListRef","yPosition","indexOn","setindexOn","memoizedItem","label","optionLblsValues","setoptionLblsValues","e","sete","optionLbls","options","map","el","selectedCaseKey","local","filter","localE","optionLblsValuesLocal","optionsList","padding","margin","backgroundColor","current","push","prevState","scrollToOffset","offset","animated","marginBottom","fontWeight","color","splice","val","optionType","console","log","numOfSelectable","eInnerListStart","indexInnerList","eInnerList","seteInnerList","flexDirection","alignItems","priceIncrease","marginLeft","marginRight","length","justifyContent","selectedCaseValue","AddProduct","route","navigation","params","existingProduct","existingProductIndex","catalog","use","name","price","catagory","description","handleDataUpdate","copyProductData","categories","products","goBack","copy","structuredClone","newProductUseRef","setYPosition","getItemLayout","data","scrollToIndex","OptionsAddingSection","id","toString","Math","random","substr","width","height","flex","alignSelf","marginTop","styles","StyleSheet","create"],"sources":["/Users/peterputros/Desktop/PosMate-1/components/TestAdd.tsx"],"sourcesContent":["import {\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"state/state\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst MyListItem = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n  flatListRef,\n  yPosition,\n  indexOn,\n  setindexOn\n}) => {\n  const memoizedItem = useMemo(() => item, [item]);\n\n  if (indexOn !== index) {\n    return <Text>{memoizedItem.label}</Text>;\n  } else {\n    const [optionLblsValues, setoptionLblsValues] = useState([]);\n    const [e, sete] = useState(memoizedItem);\n    var optionLbls = newProduct.options.map(function (el) {\n      if (el.label !== e.label && el.label !== null) {\n        return el.label;\n      }\n    });\n\n    useEffect(() => {\n      if (e.selectedCaseKey !== null) {\n        const local = newProduct.options.filter(\n          (localE) => localE.label == e.selectedCaseKey\n        );\n        const optionLblsValuesLocal = local[0].optionsList.map(function (el) {\n          return el.label;\n        });\n        setoptionLblsValues(optionLblsValuesLocal);\n      }\n    }, [e]);\n\n    return (\n      <View>\n        <View\n          style={{\n            padding: 25,\n            margin: 15,\n            backgroundColor: \"lightgrey\",\n          }}\n        >\n          <TouchableOpacity\n            onPress={() => {\n              newProductOptions.current.push({\n                ...e,\n                label: e.label + \" Copy\",\n              });\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              flatListRef.current.scrollToOffset({\n                offset: yPosition,\n                animated: false,\n              });\n            }}\n          >\n            <Text\n              style={{\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\",\n              }}\n            >\n              Copy\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              newProductOptions.current.splice(index, 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              flatListRef.current.scrollToOffset({\n                offset: yPosition,\n                animated: false,\n              });\n            }}\n          >\n            <Text\n              style={{\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\",\n              }}\n            >\n              X\n            </Text>\n          </TouchableOpacity>\n          <TextInput\n            placeholder=\"Enter Select List Label\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, label: val }));\n              newProductOptions.current[index].label = val;\n            }}\n            value={e.label}\n            style={{ marginBottom: 25 }}\n          />\n          {/* optionType */}\n          <DropDown\n            label=\"Option Type\"\n            options={[\"Standard\", \"Dropdown\"]}\n            setValue={(val) => {\n              // sete((prevState) => ({\n              //   ...prevState,\n              //   optionType: val,\n              // }));\n              if (e.optionType) {\n                newProductOptions.current[index].optionType = val;\n              } else {\n                newProductOptions.current[index] = { ...e, optionType: val };\n                console.log(newProductOptions.current[index].optionType);\n              }\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              flatListRef.current.scrollToOffset({\n                offset: yPosition,\n                animated: false,\n              });\n            }}\n            value={e.optionType}\n            style={{ marginBottom: 25 }}\n          />\n          <TextInput\n            placeholder=\"Enter Number Of Selectable; If There Is\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n              newProductOptions.current[index].numOfSelectable = val;\n            }}\n            value={e.numOfSelectable}\n            style={{ marginBottom: 25 }}\n          />\n          {e.optionsList.map((eInnerListStart, indexInnerList) => {\n            const [eInnerList, seteInnerList] = useState(eInnerListStart);\n            return (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  marginBottom: 25,\n                  alignItems: \"center\",\n                }}\n              >\n                <TextInput\n                  placeholder=\"Enter Option Label\"\n                  onChangeText={(val) => {\n                    newProductOptions.current[index].optionsList[\n                      indexInnerList\n                    ].label = val;\n                    seteInnerList((prevState) => ({\n                      ...prevState,\n                      label: val,\n                    }));\n                  }}\n                  value={eInnerList.label}\n                />\n                <TextInput\n                  placeholder=\"Enter price increase\"\n                  onChangeText={(val) => {\n                    newProductOptions.current[index].optionsList[\n                      indexInnerList\n                    ].priceIncrease = val;\n                    seteInnerList((prevState) => ({\n                      ...prevState,\n                      priceIncrease: val,\n                    }));\n                  }}\n                  value={eInnerList.priceIncrease}\n                  style={{ marginLeft: 20, marginRight: 20 }}\n                />\n                <TouchableOpacity\n                  onPress={() => {\n                    newProductOptions.current[index].optionsList.splice(\n                      indexInnerList,\n                      1\n                    );\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: newProductOptions.current,\n                    }));\n                    flatListRef.current.scrollToOffset({\n                      offset: yPosition,\n                      animated: false,\n                    });\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            );\n          })}\n          <Button\n            title=\"Add Option Choice\"\n            onPress={() => {\n              newProductOptions.current[index].optionsList.push({\n                label: null,\n                priceIncrease: null,\n              });\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              flatListRef.current.scrollToOffset({\n                offset: yPosition,\n                animated: false,\n              });\n            }}\n            style={{ marginBottom: 25 }}\n          />\n          {optionLbls.length > 1 && (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginBottom: 25,\n              }}\n            >\n              <DropDown\n                label=\"Show if...\"\n                options={optionLbls}\n                setValue={(val) => {\n                  sete((prevState) => ({ ...prevState, selectedCaseKey: val }));\n                  newProductOptions.current[index].selectedCaseKey = val;\n                }}\n                value={e.selectedCaseKey}\n                style={{ marginBottom: 25 }}\n              />\n              <Text>\"=\"</Text>\n              <DropDown\n                label=\"Show if...\"\n                options={optionLblsValues}\n                setValue={(val) => {\n                  sete((prevState) => ({\n                    ...prevState,\n                    selectedCaseValue: val,\n                  }));\n                  newProductOptions.current[index].selectedCaseValue = val;\n                }}\n                value={e.selectedCaseValue}\n                style={{ marginBottom: 25 }}\n              />\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n};\n\nconst AddProduct = ({ route, navigation }) => {\n  const { existingProduct, existingProductIndex } = route.params;\n  const catalog = userStoreState.use();\n  const [newProduct, setnewProduct] = useState(\n    existingProduct\n      ? existingProduct\n      : {\n          name: null,\n          price: null,\n          catagory: null,\n          options: [],\n          description: null,\n        }\n  );\n  const newProductOptions = useRef(\n    existingProduct ? existingProduct.options : []\n  );\n  const [indexOn, setindexOn] = useState(0);\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(\n        [...catalog.categories],\n        [...catalog.products, copyProductData]\n      );\n      navigation.goBack();\n    } else if (existingProduct) {\n      let copy = structuredClone(catalog.products);\n      const newProductUseRef = {\n        ...newProduct,\n        options: newProductOptions.current,\n      };\n      copy[existingProductIndex] = newProductUseRef;\n      updateData([...catalog.categories], copy);\n      navigation.goBack();\n    } else {\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\n      navigation.goBack();\n    }\n  }\n\n  const flatListRef = useRef(null);\n  const [yPosition, setYPosition] = useState(0);\n\n  // we set the height of item is fixed\n  const getItemLayout = (data, index) => ({\n    length: 400,\n    offset: 400 * index,\n    index,\n  });\n\n  useEffect(() => {\n    flatListRef.current.scrollToIndex({ index: indexOn, animated: true });\n  }, [indexOn])\n  \n\n  const OptionsAddingSection = () => {\n    return (\n      <View>\n        <FlatList\n          ref={flatListRef}\n          getItemLayout={getItemLayout}\n          initialNumToRender={5}\n          maxToRenderPerBatch={10}\n          windowSize={10}\n          data={newProduct.options}\n          keyExtractor={(item) => item.id?.toString()}\n          renderItem={({ item, index }) => (\n            <MyListItem\n              item={item}\n              index={index}\n              newProduct={newProduct}\n              setnewProduct={setnewProduct}\n              newProductOptions={newProductOptions}\n              flatListRef={flatListRef}\n              yPosition={yPosition}\n              indexOn={indexOn}\n              setindexOn={setindexOn}\n            />\n          )}\n        />\n        <Button\n          title=\"Add Product Option\"\n          onPress={() => {\n            newProductOptions.current.push({\n              label: null,\n              optionsList: [],\n              selectedCaseKey: null,\n              selectedCaseValue: null,\n              numOfSelectable: null,\n              id: Math.random().toString(36).substr(2, 9),\n              optionType: null,\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            flatListRef.current.scrollToOffset({\n              offset: yPosition,\n              animated: false,\n            });\n          }}\n          style={{ marginBottom: 25 }}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView\n      style={{ width: \"100%\", height: \"100%\", flex: 1 }}\n      contentContainerStyle={{\n        width: \"93%\",\n        alignSelf: \"center\",\n        marginTop: 25,\n      }}\n    >\n      <>\n        <View\n          style={{\n            flexDirection: \"row\",\n            padding: 20,\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <TouchableOpacity onPress={() => navigation.goBack()}>\n            <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n              X\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              let copy = structuredClone(newProduct);\n              copy.name = copy.name + \" Copy\";\n              handleDataUpdate(copy);\n            }}\n          >\n            <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n              Copy\n            </Text>\n          </TouchableOpacity>\n          <Text style={{ marginBottom: 25 }}>AddProduct</Text>\n        </View>\n        <TextInput\n          placeholder=\"Enter Product Name\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, name: val }));\n          }}\n          value={newProduct.name}\n          style={{ marginBottom: 25 }}\n        />\n        <TextInput\n          placeholder=\"Enter any other items that come with this\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, description: val }));\n          }}\n          style={{ marginBottom: 25 }}\n          value={newProduct.description}\n        />\n        <TextInput\n          placeholder=\"Enter Product Price\"\n          onChangeText={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, price: val }));\n          }}\n          style={{ marginBottom: 25 }}\n          value={newProduct.price}\n        />\n        <DropDown\n          label=\"Choose catagory\"\n          options={catalog.categories}\n          setValue={(val) => {\n            setnewProduct((prevState) => ({ ...prevState, catagory: val }));\n          }}\n          value={newProduct.catagory}\n          style={{ marginBottom: 25 }}\n        />\n        <OptionsAddingSection />\n        <Button\n          title=\"Add/Save Product\"\n          onPress={() => {\n            handleDataUpdate();\n          }}\n          style={{\n            marginBottom: 25,\n            marginTop: 25,\n            backgroundColor: \"lightgreen\",\n          }}\n        />\n      </>\n    </ScrollView>\n  );\n};\n\nexport default AddProduct;\n\nconst styles = StyleSheet.create({});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}