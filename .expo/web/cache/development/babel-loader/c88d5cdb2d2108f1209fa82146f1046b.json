{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"style\", \"label\", \"title\", \"value\", \"defaultValue\", \"characterRestriction\", \"editable\", \"disabled\", \"disabledLineType\", \"disabledLineWidth\", \"animationDuration\", \"fontSize\", \"titleFontSize\", \"labelFontSize\", \"labelHeight\", \"labelPadding\", \"inputContainerPadding\", \"labelTextStyle\", \"titleTextStyle\", \"tintColor\", \"baseColor\", \"textColor\", \"errorColor\", \"lineWidth\", \"activeLineWidth\", \"containerStyle\", \"inputContainerStyle\", \"clearTextOnFocus\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport RN from 'react-native/package.json';\nimport Line from \"../line\";\nimport Label from \"../label\";\nimport Affix from \"../affix\";\nimport Helper from \"../helper\";\nimport Counter from \"../counter\";\nimport styles from \"./styles.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TextField = function (_PureComponent) {\n  _inherits(TextField, _PureComponent);\n  var _super = _createSuper(TextField);\n  function TextField(props) {\n    var _this;\n    _classCallCheck(this, TextField);\n    _this = _super.call(this, props);\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onPress = _this.focus.bind(_assertThisInitialized(_this));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onChangeText = _this.onChangeText.bind(_assertThisInitialized(_this));\n    _this.onContentSizeChange = _this.onContentSizeChange.bind(_assertThisInitialized(_this));\n    _this.onFocusAnimationEnd = _this.onFocusAnimationEnd.bind(_assertThisInitialized(_this));\n    _this.updateRef = _this.updateRef.bind(_assertThisInitialized(_this), 'input');\n    var _this$props = _this.props,\n      value = _this$props.value,\n      error = _this$props.error,\n      fontSize = _this$props.fontSize;\n    _this.mounted = false;\n    _this.state = {\n      text: value,\n      focus: new Animated.Value(_this.focusState(error, false)),\n      focused: false,\n      receivedFocus: false,\n      error: error,\n      errored: !!error,\n      height: fontSize * 1.5\n    };\n    return _this;\n  }\n  _createClass(TextField, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var error = this.state.error;\n      if (null != props.value) {\n        this.setState({\n          text: props.value\n        });\n      }\n      if (props.error && props.error !== error) {\n        this.setState({\n          error: props.error\n        });\n      }\n      if (props.error !== this.props.error) {\n        this.setState({\n          errored: !!props.error\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(props, state) {\n      var _this$props2 = this.props,\n        error = _this$props2.error,\n        duration = _this$props2.animationDuration;\n      var _this$state = this.state,\n        focus = _this$state.focus,\n        focused = _this$state.focused;\n      if (props.error !== error || focused ^ state.focused) {\n        var toValue = this.focusState(props.error, state.focused);\n        Animated.timing(focus, {\n          toValue: toValue,\n          duration: duration\n        }).start(this.onFocusAnimationEnd);\n      }\n    }\n  }, {\n    key: \"updateRef\",\n    value: function updateRef(name, ref) {\n      this[name] = ref;\n    }\n  }, {\n    key: \"focusState\",\n    value: function focusState(error, focused) {\n      return error ? -1 : focused ? 1 : 0;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var _this$props3 = this.props,\n        disabled = _this$props3.disabled,\n        editable = _this$props3.editable;\n      if (!disabled && editable) {\n        this.input.focus();\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.input.clear();\n\n      this.onChangeText('');\n    }\n  }, {\n    key: \"value\",\n    value: function value() {\n      var _this$state2 = this.state,\n        text = _this$state2.text,\n        receivedFocus = _this$state2.receivedFocus;\n      var _this$props4 = this.props,\n        value = _this$props4.value,\n        defaultValue = _this$props4.defaultValue;\n      return receivedFocus || null != value || null == defaultValue ? text : defaultValue;\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return this.input.isFocused();\n    }\n  }, {\n    key: \"isRestricted\",\n    value: function isRestricted() {\n      var characterRestriction = this.props.characterRestriction;\n      var _this$state$text = this.state.text,\n        text = _this$state$text === void 0 ? '' : _this$state$text;\n      return characterRestriction < text.length;\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(event) {\n      var _this$props5 = this.props,\n        onFocus = _this$props5.onFocus,\n        clearTextOnFocus = _this$props5.clearTextOnFocus;\n      if ('function' === typeof onFocus) {\n        onFocus(event);\n      }\n      if (clearTextOnFocus) {\n        this.clear();\n      }\n      this.setState({\n        focused: true,\n        receivedFocus: true\n      });\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(event) {\n      var onBlur = this.props.onBlur;\n      if ('function' === typeof onBlur) {\n        onBlur(event);\n      }\n      this.setState({\n        focused: false\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      var _this$props6 = this.props,\n        onChange = _this$props6.onChange,\n        multiline = _this$props6.multiline;\n      if ('function' === typeof onChange) {\n        onChange(event);\n      }\n\n      if (multiline && 'android' === Platform.OS) {\n        if (/^0\\.4[45]\\./.test(RN.version)) {\n          this.onContentSizeChange(event);\n        }\n      }\n    }\n  }, {\n    key: \"onChangeText\",\n    value: function onChangeText(text) {\n      var onChangeText = this.props.onChangeText;\n      this.setState({\n        text: text\n      });\n      if ('function' === typeof onChangeText) {\n        onChangeText(text);\n      }\n    }\n  }, {\n    key: \"onContentSizeChange\",\n    value: function onContentSizeChange(event) {\n      var _this$props7 = this.props,\n        onContentSizeChange = _this$props7.onContentSizeChange,\n        fontSize = _this$props7.fontSize;\n      var height = event.nativeEvent.contentSize.height;\n      if ('function' === typeof onContentSizeChange) {\n        onContentSizeChange(event);\n      }\n      this.setState({\n        height: Math.max(fontSize * 1.5, Math.ceil(height) + Platform.select({\n          ios: 5,\n          android: 1\n        }))\n      });\n    }\n  }, {\n    key: \"onFocusAnimationEnd\",\n    value: function onFocusAnimationEnd() {\n      if (this.mounted) {\n        this.setState(function (state, _ref) {\n          var error = _ref.error;\n          return {\n            error: error\n          };\n        });\n      }\n    }\n  }, {\n    key: \"renderAccessory\",\n    value: function renderAccessory() {\n      var renderAccessory = this.props.renderAccessory;\n      if ('function' !== typeof renderAccessory) {\n        return null;\n      }\n      return _jsx(View, {\n        style: styles.accessory,\n        children: renderAccessory()\n      });\n    }\n  }, {\n    key: \"renderAffix\",\n    value: function renderAffix(type, active, focused) {\n      var _this$props8 = this.props,\n        affix = _this$props8[type],\n        fontSize = _this$props8.fontSize,\n        baseColor = _this$props8.baseColor,\n        animationDuration = _this$props8.animationDuration,\n        affixTextStyle = _this$props8.affixTextStyle;\n      if (null == affix) {\n        return null;\n      }\n      var props = {\n        type: type,\n        active: active,\n        focused: focused,\n        fontSize: fontSize,\n        baseColor: baseColor,\n        animationDuration: animationDuration\n      };\n      return _jsx(Affix, _objectSpread(_objectSpread({\n        style: affixTextStyle\n      }, props), {}, {\n        children: affix\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n        receivedFocus = _this$state3.receivedFocus,\n        focus = _this$state3.focus,\n        focused = _this$state3.focused,\n        error = _this$state3.error,\n        errored = _this$state3.errored,\n        height = _this$state3.height,\n        _this$state3$text = _this$state3.text,\n        text = _this$state3$text === void 0 ? '' : _this$state3$text;\n      var _this$props9 = this.props,\n        inputStyleOverrides = _this$props9.style,\n        label = _this$props9.label,\n        title = _this$props9.title,\n        value = _this$props9.value,\n        defaultValue = _this$props9.defaultValue,\n        limit = _this$props9.characterRestriction,\n        editable = _this$props9.editable,\n        disabled = _this$props9.disabled,\n        disabledLineType = _this$props9.disabledLineType,\n        disabledLineWidth = _this$props9.disabledLineWidth,\n        animationDuration = _this$props9.animationDuration,\n        fontSize = _this$props9.fontSize,\n        titleFontSize = _this$props9.titleFontSize,\n        labelFontSize = _this$props9.labelFontSize,\n        labelHeight = _this$props9.labelHeight,\n        labelPadding = _this$props9.labelPadding,\n        inputContainerPadding = _this$props9.inputContainerPadding,\n        labelTextStyle = _this$props9.labelTextStyle,\n        titleTextStyle = _this$props9.titleTextStyle,\n        tintColor = _this$props9.tintColor,\n        baseColor = _this$props9.baseColor,\n        textColor = _this$props9.textColor,\n        errorColor = _this$props9.errorColor,\n        lineWidth = _this$props9.lineWidth,\n        activeLineWidth = _this$props9.activeLineWidth,\n        containerStyle = _this$props9.containerStyle,\n        inputContainerStyleOverrides = _this$props9.inputContainerStyle,\n        clearTextOnFocus = _this$props9.clearTextOnFocus,\n        props = _objectWithoutProperties(_this$props9, _excluded);\n      if (props.multiline && props.height) {\n        height = props.height;\n      }\n      var defaultVisible = !(receivedFocus || null != value || null == defaultValue);\n      value = defaultVisible ? defaultValue : text;\n      var active = !!(value || props.placeholder);\n      var count = value.length;\n      var restricted = limit < count;\n      var textAlign = I18nManager.isRTL ? 'right' : 'left';\n      var borderBottomColor = restricted ? errorColor : focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [errorColor, baseColor, tintColor]\n      });\n      var borderBottomWidth = restricted ? activeLineWidth : focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [activeLineWidth, lineWidth, activeLineWidth]\n      });\n      var inputContainerStyle = _objectSpread(_objectSpread({\n        paddingTop: labelHeight,\n        paddingBottom: inputContainerPadding\n      }, disabled ? {\n        overflow: 'hidden'\n      } : {\n        borderBottomColor: borderBottomColor,\n        borderBottomWidth: borderBottomWidth\n      }), props.multiline ? {\n        height: 'web' === Platform.OS ? 'auto' : labelHeight + inputContainerPadding + height\n      } : {\n        height: labelHeight + inputContainerPadding + fontSize * 1.5\n      });\n      var inputStyle = _objectSpread({\n        fontSize: fontSize,\n        textAlign: textAlign,\n        color: disabled || defaultVisible ? baseColor : textColor\n      }, props.multiline ? _objectSpread({\n        height: fontSize * 1.5 + height\n      }, Platform.select({\n        ios: {\n          top: -1\n        },\n        android: {\n          textAlignVertical: 'top'\n        }\n      })) : {\n        height: fontSize * 1.5\n      });\n      var errorStyle = {\n        color: errorColor,\n        opacity: focus.interpolate({\n          inputRange: [-1, 0, 1],\n          outputRange: [1, 0, 0]\n        }),\n        fontSize: title ? titleFontSize : focus.interpolate({\n          inputRange: [-1, 0, 1],\n          outputRange: [titleFontSize, 0, 0]\n        })\n      };\n      var titleStyle = {\n        color: baseColor,\n        opacity: focus.interpolate({\n          inputRange: [-1, 0, 1],\n          outputRange: [0, 1, 1]\n        }),\n        fontSize: titleFontSize\n      };\n      var helperContainerStyle = {\n        flexDirection: 'row',\n        height: title || limit ? titleFontSize * 2 : focus.interpolate({\n          inputRange: [-1, 0, 1],\n          outputRange: [titleFontSize * 2, 8, 8]\n        })\n      };\n      var containerProps = {\n        style: containerStyle,\n        onStartShouldSetResponder: function onStartShouldSetResponder() {\n          return true;\n        },\n        onResponderRelease: this.onPress,\n        pointerEvents: !disabled && editable ? 'auto' : 'none'\n      };\n      var inputContainerProps = {\n        style: [styles.inputContainer, inputContainerStyle, inputContainerStyleOverrides]\n      };\n      var lineProps = {\n        type: disabledLineType,\n        width: disabledLineWidth,\n        color: baseColor\n      };\n      var labelProps = {\n        baseSize: labelHeight,\n        basePadding: labelPadding,\n        fontSize: fontSize,\n        activeFontSize: labelFontSize,\n        tintColor: tintColor,\n        baseColor: baseColor,\n        errorColor: errorColor,\n        animationDuration: animationDuration,\n        active: active,\n        focused: focused,\n        errored: errored,\n        restricted: restricted,\n        style: labelTextStyle\n      };\n      var counterProps = {\n        baseColor: baseColor,\n        errorColor: errorColor,\n        count: count,\n        limit: limit,\n        fontSize: titleFontSize,\n        style: titleTextStyle\n      };\n      return _jsxs(View, _objectSpread(_objectSpread({}, containerProps), {}, {\n        children: [_jsxs(Animated.View, _objectSpread(_objectSpread({}, inputContainerProps), {}, {\n          children: [disabled && _jsx(Line, _objectSpread({}, lineProps)), _jsx(Label, _objectSpread(_objectSpread({}, labelProps), {}, {\n            children: label\n          })), _jsxs(View, {\n            style: styles.row,\n            children: [this.renderAffix('prefix', active, focused), _jsx(TextInput, _objectSpread(_objectSpread({\n              style: [styles.input, inputStyle, inputStyleOverrides],\n              selectionColor: tintColor\n            }, props), {}, {\n              editable: !disabled && editable,\n              onChange: this.onChange,\n              onChangeText: this.onChangeText,\n              onContentSizeChange: this.onContentSizeChange,\n              onFocus: this.onFocus,\n              onBlur: this.onBlur,\n              value: value,\n              ref: this.updateRef\n            })), this.renderAffix('suffix', active, focused), this.renderAccessory()]\n          })]\n        })), _jsxs(Animated.View, {\n          style: helperContainerStyle,\n          children: [_jsxs(View, {\n            style: styles.flex,\n            children: [_jsx(Helper, {\n              style: [errorStyle, titleTextStyle],\n              children: error\n            }), _jsx(Helper, {\n              style: [titleStyle, titleTextStyle],\n              children: title\n            })]\n          }), _jsx(Counter, _objectSpread({}, counterProps))]\n        })]\n      }));\n    }\n  }]);\n  return TextField;\n}(PureComponent);\nTextField.defaultProps = {\n  underlineColorAndroid: 'transparent',\n  disableFullscreenUI: true,\n  autoCapitalize: 'sentences',\n  editable: true,\n  animationDuration: 225,\n  fontSize: 16,\n  titleFontSize: 12,\n  labelFontSize: 12,\n  labelHeight: 32,\n  labelPadding: 4,\n  inputContainerPadding: 8,\n  tintColor: 'rgb(0, 145, 234)',\n  textColor: 'rgba(0, 0, 0, .87)',\n  baseColor: 'rgba(0, 0, 0, .38)',\n  errorColor: 'rgb(213, 0, 0)',\n  lineWidth: StyleSheet.hairlineWidth,\n  activeLineWidth: 2,\n  disabled: false,\n  disabledLineType: 'dotted',\n  disabledLineWidth: 1\n};\nTextField.propTypes = _objectSpread(_objectSpread({}, TextInput.propTypes), {}, {\n  animationDuration: PropTypes.number,\n  fontSize: PropTypes.number,\n  titleFontSize: PropTypes.number,\n  labelFontSize: PropTypes.number,\n  labelHeight: PropTypes.number,\n  labelPadding: PropTypes.number,\n  inputContainerPadding: PropTypes.number,\n  labelTextStyle: Text.propTypes.style,\n  titleTextStyle: Text.propTypes.style,\n  affixTextStyle: Text.propTypes.style,\n  tintColor: PropTypes.string,\n  textColor: PropTypes.string,\n  baseColor: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  characterRestriction: PropTypes.number,\n  error: PropTypes.string,\n  errorColor: PropTypes.string,\n  lineWidth: PropTypes.number,\n  activeLineWidth: PropTypes.number,\n  disabled: PropTypes.bool,\n  disabledLineType: Line.propTypes.type,\n  disabledLineWidth: PropTypes.number,\n  renderAccessory: PropTypes.func,\n  prefix: PropTypes.string,\n  suffix: PropTypes.string,\n  containerStyle: (ViewPropTypes || View.propTypes).style,\n  inputContainerStyle: (ViewPropTypes || View.propTypes).style\n});\nexport { TextField as default };","map":{"version":3,"names":["PropTypes","React","PureComponent","ViewPropTypes","RN","Line","Label","Affix","Helper","Counter","styles","TextField","props","onBlur","bind","onFocus","onPress","focus","onChange","onChangeText","onContentSizeChange","onFocusAnimationEnd","updateRef","value","error","fontSize","mounted","state","text","Animated","Value","focusState","focused","receivedFocus","errored","height","setState","duration","animationDuration","toValue","timing","start","name","ref","disabled","editable","input","blur","clear","defaultValue","isFocused","characterRestriction","length","event","clearTextOnFocus","multiline","Platform","OS","test","version","nativeEvent","contentSize","Math","max","ceil","select","ios","android","renderAccessory","accessory","type","active","affix","baseColor","affixTextStyle","inputStyleOverrides","style","label","title","limit","disabledLineType","disabledLineWidth","titleFontSize","labelFontSize","labelHeight","labelPadding","inputContainerPadding","labelTextStyle","titleTextStyle","tintColor","textColor","errorColor","lineWidth","activeLineWidth","containerStyle","inputContainerStyleOverrides","inputContainerStyle","defaultVisible","placeholder","count","restricted","textAlign","I18nManager","isRTL","borderBottomColor","interpolate","inputRange","outputRange","borderBottomWidth","paddingTop","paddingBottom","overflow","inputStyle","color","top","textAlignVertical","errorStyle","opacity","titleStyle","helperContainerStyle","flexDirection","containerProps","onStartShouldSetResponder","onResponderRelease","pointerEvents","inputContainerProps","inputContainer","lineProps","width","labelProps","baseSize","basePadding","activeFontSize","counterProps","row","renderAffix","flex","defaultProps","underlineColorAndroid","disableFullscreenUI","autoCapitalize","StyleSheet","hairlineWidth","propTypes","TextInput","number","Text","string","isRequired","bool","func","prefix","suffix","View"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-material-textfield/src/components/field/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  Animated,\n  StyleSheet,\n  Platform,\n  ViewPropTypes,\n  I18nManager,\n} from 'react-native';\n\nimport RN from 'react-native/package.json';\n\nimport Line from '../line';\nimport Label from '../label';\nimport Affix from '../affix';\nimport Helper from '../helper';\nimport Counter from '../counter';\n\nimport styles from './styles.js';\n\nexport default class TextField extends PureComponent {\n  static defaultProps = {\n    underlineColorAndroid: 'transparent',\n    disableFullscreenUI: true,\n    autoCapitalize: 'sentences',\n    editable: true,\n\n    animationDuration: 225,\n\n    fontSize: 16,\n    titleFontSize: 12,\n    labelFontSize: 12,\n    labelHeight: 32,\n    labelPadding: 4,\n    inputContainerPadding: 8,\n\n    tintColor: 'rgb(0, 145, 234)',\n    textColor: 'rgba(0, 0, 0, .87)',\n    baseColor: 'rgba(0, 0, 0, .38)',\n\n    errorColor: 'rgb(213, 0, 0)',\n\n    lineWidth: StyleSheet.hairlineWidth,\n    activeLineWidth: 2,\n\n    disabled: false,\n    disabledLineType: 'dotted',\n    disabledLineWidth: 1,\n  };\n\n  static propTypes = {\n    ...TextInput.propTypes,\n\n    animationDuration: PropTypes.number,\n\n    fontSize: PropTypes.number,\n    titleFontSize: PropTypes.number,\n    labelFontSize: PropTypes.number,\n    labelHeight: PropTypes.number,\n    labelPadding: PropTypes.number,\n    inputContainerPadding: PropTypes.number,\n\n    labelTextStyle: Text.propTypes.style,\n    titleTextStyle: Text.propTypes.style,\n    affixTextStyle: Text.propTypes.style,\n\n    tintColor: PropTypes.string,\n    textColor: PropTypes.string,\n    baseColor: PropTypes.string,\n\n    label: PropTypes.string.isRequired,\n    title: PropTypes.string,\n\n    characterRestriction: PropTypes.number,\n\n    error: PropTypes.string,\n    errorColor: PropTypes.string,\n\n    lineWidth: PropTypes.number,\n    activeLineWidth: PropTypes.number,\n\n    disabled: PropTypes.bool,\n    disabledLineType: Line.propTypes.type,\n    disabledLineWidth: PropTypes.number,\n\n    renderAccessory: PropTypes.func,\n\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n\n    containerStyle: (ViewPropTypes || View.propTypes).style,\n    inputContainerStyle: (ViewPropTypes || View.propTypes).style,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onPress = this.focus.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onContentSizeChange = this.onContentSizeChange.bind(this);\n    this.onFocusAnimationEnd = this.onFocusAnimationEnd.bind(this);\n\n    this.updateRef = this.updateRef.bind(this, 'input');\n\n    let { value, error, fontSize } = this.props;\n\n    this.mounted = false;\n    this.state = {\n      text: value,\n\n      focus: new Animated.Value(this.focusState(error, false)),\n      focused: false,\n      receivedFocus: false,\n\n      error: error,\n      errored: !!error,\n\n      height: fontSize * 1.5,\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    let { error } = this.state;\n\n    if (null != props.value) {\n      this.setState({ text: props.value });\n    }\n\n    if (props.error && props.error !== error) {\n      this.setState({ error: props.error });\n    }\n\n    if (props.error !== this.props.error) {\n      this.setState({ errored: !!props.error });\n    }\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  componentWillUpdate(props, state) {\n    let { error, animationDuration: duration } = this.props;\n    let { focus, focused } = this.state;\n\n    if (props.error !== error || focused ^ state.focused) {\n      let toValue = this.focusState(props.error, state.focused);\n\n      Animated\n        .timing(focus, { toValue, duration })\n        .start(this.onFocusAnimationEnd);\n    }\n  }\n\n  updateRef(name, ref) {\n    this[name] = ref;\n  }\n\n  focusState(error, focused) {\n    return error? -1 : (focused? 1 : 0);\n  }\n\n  focus() {\n    let { disabled, editable } = this.props;\n\n    if (!disabled && editable) {\n      this.input.focus();\n    }\n  }\n\n  blur() {\n    this.input.blur();\n  }\n\n  clear() {\n    this.input.clear();\n\n    /* onChangeText is not triggered by .clear() */\n    this.onChangeText('');\n  }\n\n  value() {\n    let { text, receivedFocus } = this.state;\n    let { value, defaultValue } = this.props;\n\n    return (receivedFocus || null != value || null == defaultValue)?\n      text:\n      defaultValue;\n  }\n\n  isFocused() {\n    return this.input.isFocused();\n  }\n\n  isRestricted() {\n    let { characterRestriction } = this.props;\n    let { text = '' } = this.state;\n\n    return characterRestriction < text.length;\n  }\n\n  onFocus(event) {\n    let { onFocus, clearTextOnFocus } = this.props;\n\n    if ('function' === typeof onFocus) {\n      onFocus(event);\n    }\n\n    if (clearTextOnFocus) {\n      this.clear();\n    }\n\n    this.setState({ focused: true, receivedFocus: true });\n  }\n\n  onBlur(event) {\n    let { onBlur } = this.props;\n\n    if ('function' === typeof onBlur) {\n      onBlur(event);\n    }\n\n    this.setState({ focused: false });\n  }\n\n  onChange(event) {\n    let { onChange, multiline } = this.props;\n\n    if ('function' === typeof onChange) {\n      onChange(event);\n    }\n\n    /* XXX: onContentSizeChange is not called on RN 0.44 and 0.45 */\n    if (multiline && 'android' === Platform.OS) {\n      if (/^0\\.4[45]\\./.test(RN.version)) {\n        this.onContentSizeChange(event);\n      }\n    }\n  }\n\n  onChangeText(text) {\n    let { onChangeText } = this.props;\n\n    this.setState({ text });\n\n    if ('function' === typeof onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  onContentSizeChange(event) {\n    let { onContentSizeChange, fontSize } = this.props;\n    let { height } = event.nativeEvent.contentSize;\n\n    if ('function' === typeof onContentSizeChange) {\n      onContentSizeChange(event);\n    }\n\n    this.setState({\n      height: Math.max(\n        fontSize * 1.5,\n        Math.ceil(height) + Platform.select({ ios: 5, android: 1 })\n      ),\n    });\n  }\n\n  onFocusAnimationEnd() {\n    if (this.mounted) {\n      this.setState((state, { error }) => ({ error }));\n    }\n  }\n\n  renderAccessory() {\n    let { renderAccessory } = this.props;\n\n    if ('function' !== typeof renderAccessory) {\n      return null;\n    }\n\n    return (\n      <View style={styles.accessory}>\n        {renderAccessory()}\n      </View>\n    );\n  }\n\n  renderAffix(type, active, focused) {\n    let {\n      [type]: affix,\n      fontSize,\n      baseColor,\n      animationDuration,\n      affixTextStyle,\n    } = this.props;\n\n    if (null == affix) {\n      return null;\n    }\n\n    let props = {\n      type,\n      active,\n      focused,\n      fontSize,\n      baseColor,\n      animationDuration,\n    };\n\n    return (\n      <Affix style={affixTextStyle} {...props}>{affix}</Affix>\n    );\n  }\n\n  render() {\n    let { receivedFocus, focus, focused, error, errored, height, text = '' } = this.state;\n    let {\n      style: inputStyleOverrides,\n      label,\n      title,\n      value,\n      defaultValue,\n      characterRestriction: limit,\n      editable,\n      disabled,\n      disabledLineType,\n      disabledLineWidth,\n      animationDuration,\n      fontSize,\n      titleFontSize,\n      labelFontSize,\n      labelHeight,\n      labelPadding,\n      inputContainerPadding,\n      labelTextStyle,\n      titleTextStyle,\n      tintColor,\n      baseColor,\n      textColor,\n      errorColor,\n      lineWidth,\n      activeLineWidth,\n      containerStyle,\n      inputContainerStyle: inputContainerStyleOverrides,\n      clearTextOnFocus,\n      ...props\n    } = this.props;\n\n    if (props.multiline && props.height) {\n      /* Disable autogrow if height is passed as prop */\n      height = props.height;\n    }\n\n    let defaultVisible = !(receivedFocus || null != value || null == defaultValue);\n\n    value = defaultVisible?\n      defaultValue:\n      text;\n\n    let active = !!(value || props.placeholder);\n    let count = value.length;\n    let restricted = limit < count;\n\n    let textAlign = I18nManager.isRTL?\n      'right':\n      'left';\n\n    let borderBottomColor = restricted?\n      errorColor:\n      focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [errorColor, baseColor, tintColor],\n      });\n\n    let borderBottomWidth = restricted?\n      activeLineWidth:\n      focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [activeLineWidth, lineWidth, activeLineWidth],\n      });\n\n    let inputContainerStyle = {\n      paddingTop: labelHeight,\n      paddingBottom: inputContainerPadding,\n\n      ...(disabled?\n        { overflow: 'hidden' }:\n        { borderBottomColor, borderBottomWidth }),\n\n      ...(props.multiline?\n        { height: 'web' === Platform.OS ? 'auto' : labelHeight + inputContainerPadding + height }:\n        { height: labelHeight + inputContainerPadding + fontSize * 1.5 }),\n    };\n\n    let inputStyle = {\n      fontSize,\n      textAlign,\n\n      color: (disabled || defaultVisible)?\n        baseColor:\n        textColor,\n\n      ...(props.multiline?\n        {\n          height: fontSize * 1.5 + height,\n\n          ...Platform.select({\n            ios: { top: -1 },\n            android: { textAlignVertical: 'top' },\n          }),\n        }:\n        { height: fontSize * 1.5 }),\n    };\n\n    let errorStyle = {\n      color: errorColor,\n\n      opacity: focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [1, 0, 0],\n      }),\n\n      fontSize: title?\n        titleFontSize:\n        focus.interpolate({\n          inputRange:  [-1, 0, 1],\n          outputRange: [titleFontSize, 0, 0],\n        }),\n    };\n\n    let titleStyle = {\n      color: baseColor,\n\n      opacity: focus.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [0, 1, 1],\n      }),\n\n      fontSize: titleFontSize,\n    };\n\n    let helperContainerStyle = {\n      flexDirection: 'row',\n      height: (title || limit)?\n        titleFontSize * 2:\n        focus.interpolate({\n          inputRange:  [-1, 0, 1],\n          outputRange: [titleFontSize * 2, 8, 8],\n        }),\n    };\n\n    let containerProps = {\n      style: containerStyle,\n      onStartShouldSetResponder: () => true,\n      onResponderRelease: this.onPress,\n      pointerEvents: !disabled && editable?\n        'auto':\n        'none',\n    };\n\n    let inputContainerProps = {\n      style: [\n        styles.inputContainer,\n        inputContainerStyle,\n        inputContainerStyleOverrides,\n      ],\n    };\n\n    let lineProps = {\n      type: disabledLineType,\n      width: disabledLineWidth,\n      color: baseColor,\n    };\n\n    let labelProps = {\n      baseSize: labelHeight,\n      basePadding: labelPadding,\n      fontSize,\n      activeFontSize: labelFontSize,\n      tintColor,\n      baseColor,\n      errorColor,\n      animationDuration,\n      active,\n      focused,\n      errored,\n      restricted,\n      style: labelTextStyle,\n    };\n\n    let counterProps = {\n      baseColor,\n      errorColor,\n      count,\n      limit,\n      fontSize: titleFontSize,\n      style: titleTextStyle,\n    };\n\n    return (\n      <View {...containerProps}>\n        <Animated.View {...inputContainerProps}>\n          {disabled && <Line {...lineProps} />}\n\n          <Label {...labelProps}>{label}</Label>\n\n          <View style={styles.row}>\n            {this.renderAffix('prefix', active, focused)}\n\n            <TextInput\n              style={[styles.input, inputStyle, inputStyleOverrides]}\n              selectionColor={tintColor}\n\n              {...props}\n\n              editable={!disabled && editable}\n              onChange={this.onChange}\n              onChangeText={this.onChangeText}\n              onContentSizeChange={this.onContentSizeChange}\n              onFocus={this.onFocus}\n              onBlur={this.onBlur}\n              value={value}\n              ref={this.updateRef}\n            />\n\n            {this.renderAffix('suffix', active, focused)}\n            {this.renderAccessory()}\n          </View>\n        </Animated.View>\n\n        <Animated.View style={helperContainerStyle}>\n          <View style={styles.flex}>\n            <Helper style={[errorStyle, titleTextStyle]}>{error}</Helper>\n            <Helper style={[titleStyle, titleTextStyle]}>{title}</Helper>\n          </View>\n\n          <Counter {...counterProps} />\n        </Animated.View>\n      </View>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}