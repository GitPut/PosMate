{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport DisplayTest from \"../../components/DisplayTest\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MenuScreen = function MenuScreen(_ref) {\n  var navigation = _ref.navigation,\n    section = _ref.section,\n    catalog = _ref.catalog;\n  var InnerBlock = function InnerBlock() {\n    if (catalog.products) {\n      if (catalog.products.length > 0) {\n        if (!section) {\n          return catalog.products.filter(function (e) {\n            return e.catagory === catalog.categories[0];\n          }).map(function (product, index) {\n            return _jsx(DisplayTest, {\n              product: product,\n              productIndex: index,\n              navigation: navigation\n            }, index);\n          });\n        } else {\n          return catalog.products.filter(function (e) {\n            return e.catagory === section;\n          }).map(function (product, index) {\n            return _jsx(DisplayTest, {\n              product: product,\n              productIndex: index,\n              navigation: navigation\n            }, index);\n          });\n        }\n      }\n    }\n  };\n  var SectionSelector = function SectionSelector() {\n    var _catalog$categories;\n    return _jsxs(View, {\n      style: {\n        backgroundColor: \"#E6E6E6\",\n        width: \"90%\",\n        height: 50,\n        flexDirection: \"row\",\n        marginTop: 20,\n        justifyContent: \"space-evenly\",\n        alignItems: \"center\"\n      },\n      children: [(_catalog$categories = catalog.categories) == null ? void 0 : _catalog$categories.map(function (category, index) {\n        if (!section && index === 0) {\n          return _jsx(Button, {\n            titleStyle: {\n              color: \"white\",\n              fontWeight: \"700\"\n            },\n            style: {\n              backgroundColor: \"blue\"\n            },\n            onPress: function onPress() {\n              setsectionState(category);\n            },\n            title: category\n          }, index);\n        }\n        return _jsx(Button, {\n          titleStyle: section === category ? {\n            color: \"white\",\n            fontWeight: \"700\"\n          } : {\n            color: \"black\",\n            fontWeight: \"700\"\n          },\n          style: section === category ? {\n            backgroundColor: \"blue\"\n          } : {\n            backgroundColor: \"white\"\n          },\n          onPress: function onPress() {\n            setsectionState(category);\n            localStorage.setItem(\"localScreen\", category);\n          },\n          title: category\n        }, index);\n      }), _jsx(Text, {\n        children: \"First\"\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(SectionSelector, {}), _jsx(View, {\n      style: styles.wrapper,\n      children: _jsx(InnerBlock, {})\n    })]\n  });\n};\nexport default MenuScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 2,\n    height: \"100%\",\n    alignItems: \"center\"\n  },\n  wrapper: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    height: \"100%\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"names":["React","DisplayTest","MenuScreen","navigation","section","catalog","InnerBlock","products","length","filter","e","catagory","categories","map","product","index","SectionSelector","backgroundColor","width","height","flexDirection","marginTop","justifyContent","alignItems","category","color","fontWeight","setsectionState","localStorage","setItem","styles","container","wrapper","StyleSheet","create","flex","flexWrap","paddingLeft","paddingRight"],"sources":["/Users/peterputros/Desktop/PosMate-1/screens/authed/MenuScreen.tsx"],"sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport DisplayTest from \"components/DisplayTest\";\n\nconst MenuScreen = ({ navigation, section, catalog }) => {\n  const InnerBlock = () => {\n    if (catalog.products) {\n      if (catalog.products.length > 0) {\n        if (!section) {\n          return catalog.products\n            .filter((e) => e.catagory === catalog.categories[0])\n            .map((product, index) => (\n              <DisplayTest\n                product={product}\n                productIndex={index}\n                key={index}\n                navigation={navigation}\n              />\n            ));\n        } else {\n          return catalog.products\n            .filter((e) => e.catagory === section)\n            .map((product, index) => (\n              <DisplayTest\n                product={product}\n                productIndex={index}\n                key={index}\n                navigation={navigation}\n              />\n            ));\n        }\n      }\n    }\n  };\n\n  const SectionSelector = () => {\n    return (\n      <View\n        style={{\n          backgroundColor: \"#E6E6E6\",\n          width: \"90%\",\n          height: 50,\n          flexDirection: \"row\",\n          marginTop: 20,\n          justifyContent: \"space-evenly\",\n          alignItems: \"center\",\n        }}\n      >\n        {catalog.categories?.map((category, index) => {\n          if (!section && index === 0) {\n            return (\n              <Button\n                key={index}\n                titleStyle={{ color: \"white\", fontWeight: \"700\" }}\n                style={{ backgroundColor: \"blue\" }}\n                onPress={() => {\n                  setsectionState(category);\n                }}\n                title={category}\n              />\n            );\n          }\n\n          return (\n            <Button\n              key={index}\n              titleStyle={\n                section === category\n                  ? { color: \"white\", fontWeight: \"700\" }\n                  : { color: \"black\", fontWeight: \"700\" }\n              }\n              style={\n                section === category\n                  ? { backgroundColor: \"blue\" }\n                  : { backgroundColor: \"white\" }\n              }\n              onPress={() => {\n                setsectionState(category);\n                localStorage.setItem(\"localScreen\", category);\n              }}\n              title={category}\n            />\n          );\n        })}\n        <Text>First</Text>\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <SectionSelector />\n      <View style={styles.wrapper}>\n        <InnerBlock />\n      </View>\n    </View>\n  );\n};\n\nexport default MenuScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 2,\n    height: \"100%\",\n    alignItems: \"center\",\n  },\n  wrapper: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    height: \"100%\",\n    width: \"100%\",\n    // alignItems: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}