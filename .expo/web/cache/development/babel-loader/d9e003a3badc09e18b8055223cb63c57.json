{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Entypo, Feather } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GeneralDropdown(_ref) {\n  var styles = _ref.styles;\n  var dropdownRef = useRef();\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    dropdownLayout = _useState2[0],\n    setDropdownLayout = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    openDropdown = _useState4[0],\n    setopenDropdown = _useState4[1];\n  useEffect(function () {\n    if (dropdownRef.current && typeof window !== \"undefined\") {\n      var element = dropdownRef.current;\n\n      var boundingRect = element.getBoundingClientRect();\n      setDropdownLayout({\n        x: boundingRect.left,\n        y: boundingRect.top,\n        width: boundingRect.width,\n        height: boundingRect.height\n      });\n    }\n  }, []);\n\n  return _jsxs(View, {\n    style: {\n      zIndex: 1000\n    },\n    children: [_jsxs(TouchableOpacity, {\n      style: styles.userBtn,\n      activeOpacity: 0.8,\n      onPress: function onPress() {\n        return setopenDropdown(function (prev) {\n          return !prev;\n        });\n      },\n      ref: dropdownRef,\n      children: [_jsxs(View, {\n        style: styles.iconWithNameGroup,\n        children: [_jsx(Image, {\n          source: require(\"./assets/images/image_bTyU..png\"),\n          resizeMode: \"contain\",\n          style: styles.userIcon\n        }), _jsx(Text, {\n          style: styles.username,\n          children: storeDetails.name\n        })]\n      }), _jsx(Entypo, {\n        name: \"chevron-small-down\",\n        style: styles.chevronDownIcon\n      })]\n    }), _jsxs(Modal, {\n      visible: openDropdown,\n      transparent: true,\n      children: [_jsx(TouchableOpacity, {\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        onPress: function onPress() {\n          setopenDropdown(false);\n        }\n      }), dropdownLayout && _jsxs(View, {\n        style: {\n          position: \"absolute\",\n          top: dropdownLayout.y,\n          left: dropdownLayout.x,\n          width: 190\n        },\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.userBtn,\n          activeOpacity: 0.8,\n          onPress: function onPress() {\n            return setopenDropdown(function (prev) {\n              return !prev;\n            });\n          },\n          children: [_jsxs(View, {\n            style: styles.iconWithNameGroup,\n            children: [_jsx(Image, {\n              source: require(\"./assets/images/image_bTyU..png\"),\n              resizeMode: \"contain\",\n              style: styles.userIcon\n            }), _jsx(Text, {\n              style: styles.username,\n              children: storeDetails.name\n            })]\n          }), _jsx(Entypo, {\n            name: \"chevron-small-down\",\n            style: styles.chevronDownIcon\n          })]\n        }), openDropdown && _jsxs(TouchableOpacity, {\n          style: {\n            backgroundColor: \"rgba(255,255,255,1)\",\n            borderRadius: 10,\n            shadowColor: \"rgba(0,0,0,1)\",\n            shadowOffset: {\n              width: 3,\n              height: 3\n            },\n            elevation: 30,\n            shadowOpacity: 0.2,\n            shadowRadius: 10,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n            width: \"100%\",\n            height: 43,\n            position: \"absolute\",\n            bottom: -46,\n            left: 0\n          },\n          children: [_jsx(Text, {\n            style: styles.logoutFromAccount,\n            children: \"Logout From Account\"\n          }), _jsx(Feather, {\n            name: \"log-out\",\n            style: styles.logoutIcon\n          })]\n        })]\n      })]\n    })]\n  });\n}\nexport default GeneralDropdown;","map":{"version":3,"names":["React","useEffect","useRef","useState","Entypo","Feather","GeneralDropdown","styles","dropdownRef","dropdownLayout","setDropdownLayout","openDropdown","setopenDropdown","current","window","element","boundingRect","getBoundingClientRect","x","left","y","top","width","height","zIndex","userBtn","prev","iconWithNameGroup","require","userIcon","username","storeDetails","name","chevronDownIcon","position","backgroundColor","borderRadius","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","flexDirection","alignItems","justifyContent","bottom","logoutFromAccount","logoutIcon"],"sources":["/Users/peterputros/Desktop/PosMate/components/GeneralDropdown.tsx"],"sourcesContent":["import React, { Component, useEffect, useRef, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  Modal,\n  Image,\n} from \"react-native\";\nimport { Entypo, Feather } from \"@expo/vector-icons\";\n\nfunction GeneralDropdown({\n  styles,\n}) {\n  const dropdownRef = useRef(); // Reference to the original button\n  const [dropdownLayout, setDropdownLayout] = useState();\n  const [openDropdown, setopenDropdown] = useState(false);\n\n  useEffect(() => {\n    // Ensure this code runs in a web environment\n    if (dropdownRef.current && typeof window !== \"undefined\") {\n      const element = dropdownRef.current; // Assuming this ref points to a DOM element\n      // You might need to adjust this to get the actual DOM node in React Native Web\n\n      const boundingRect = element.getBoundingClientRect();\n\n      setDropdownLayout({\n        x: boundingRect.left,\n        y: boundingRect.top, // Adjust based on scroll position\n        width: boundingRect.width,\n        height: boundingRect.height,\n      });\n    }\n  }, []); // Recalculate when scroll position changes\n\n  return (\n    <View style={{ zIndex: 1000 }}>\n      <TouchableOpacity\n        style={styles.userBtn}\n        activeOpacity={0.8}\n        onPress={() => setopenDropdown((prev) => !prev)}\n        ref={dropdownRef}\n      >\n        <View style={styles.iconWithNameGroup}>\n          <Image\n            source={require(\"./assets/images/image_bTyU..png\")}\n            resizeMode=\"contain\"\n            style={styles.userIcon}\n          />\n          <Text style={styles.username}>{storeDetails.name}</Text>\n        </View>\n        <Entypo name=\"chevron-small-down\" style={styles.chevronDownIcon} />\n      </TouchableOpacity>\n      <Modal visible={openDropdown} transparent={true}>\n        <TouchableOpacity\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n          }}\n          onPress={() => {\n            setopenDropdown(false);\n          }} // Hide modal when the background is pressed\n        />\n        {dropdownLayout && (\n          <View\n            style={{\n              position: \"absolute\",\n              top: dropdownLayout.y,\n              left: dropdownLayout.x,\n              width: 190,\n            }}\n          >\n            <TouchableOpacity\n              style={styles.userBtn}\n              activeOpacity={0.8}\n              onPress={() => setopenDropdown((prev) => !prev)}\n            >\n              <View style={styles.iconWithNameGroup}>\n                <Image\n                  source={require(\"./assets/images/image_bTyU..png\")}\n                  resizeMode=\"contain\"\n                  style={styles.userIcon}\n                />\n                <Text style={styles.username}>{storeDetails.name}</Text>\n              </View>\n              <Entypo\n                name=\"chevron-small-down\"\n                style={styles.chevronDownIcon}\n              />\n            </TouchableOpacity>\n            {openDropdown && (\n              <TouchableOpacity\n                style={{\n                  backgroundColor: \"rgba(255,255,255,1)\",\n                  borderRadius: 10,\n                  shadowColor: \"rgba(0,0,0,1)\",\n                  shadowOffset: {\n                    width: 3,\n                    height: 3,\n                  },\n                  elevation: 30,\n                  shadowOpacity: 0.2,\n                  shadowRadius: 10,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-around\",\n                  width: \"100%\",\n                  height: 43,\n                  position: \"absolute\",\n                  bottom: -46,\n                  left: 0,\n                }}\n              >\n                <Text style={styles.logoutFromAccount}>\n                  Logout From Account\n                </Text>\n                <Feather name=\"log-out\" style={styles.logoutIcon} />\n              </TouchableOpacity>\n            )}\n          </View>\n        )}\n      </Modal>\n    </View>\n  );\n}\n\nexport default GeneralDropdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}