{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport index from \"../../Router/index\";\nimport Header from \"./Header\";\nimport Sidebar from \"./sidebar\";\nimport { auth, db } from \"../../../../../state/firebaseConfig\";\nimport { setTransListState, setTransListTableOrgState, woocommerceState } from \"../../../../../state/state\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar tz = require(\"moment-timezone\");\nvar DefaultLayout = function DefaultLayout(props) {\n  var match = props.match;\n  var wooCredentials = woocommerceState.use();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    transList = _useState2[0],\n    setTransList = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    transListTableOrg = _useState4[0],\n    setTransListTableOrg = _useState4[1];\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(\"div\", {\n      className: \"main-wrapper\",\n      children: [_jsx(Header, {}), _jsx(\"div\", {\n        children: index && index.map(function (route, key) {\n          return _jsx(Route, {\n            path: match.url + \"/\" + route.path,\n            component: route.component\n          }, key);\n        })\n      }), _jsx(Sidebar, {})]\n    }), _jsx(\"div\", {\n      className: \"sidebar-overlay\"\n    })]\n  });\n};\nexport default withRouter(DefaultLayout);","map":{"version":3,"names":["React","useEffect","useState","Route","withRouter","index","Header","Sidebar","auth","db","setTransListState","setTransListTableOrgState","woocommerceState","tz","require","DefaultLayout","props","match","wooCredentials","use","transList","setTransList","transListTableOrg","setTransListTableOrg","map","route","key","url","path","component"],"sources":["/Users/peterputros/Desktop/PosMate/pages/authed/backendPos/InitialPage/Sidebar/DefaultLayout.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport index from \"../../Router/index\";\n\nimport Header from \"./Header\";\nimport Sidebar from \"./sidebar\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport { setTransListState, setTransListTableOrgState, woocommerceState } from \"state/state\";\n\nconst tz = require(\"moment-timezone\");\n\nconst DefaultLayout = (props) => {\n  const { match } = props;\n\n  const wooCredentials = woocommerceState.use()\n  const [transList, setTransList] = useState([])\n  const [transListTableOrg, setTransListTableOrg] = useState([])\n\n  // const getDate = (receipt) => {\n  //   if (receipt.date_created) {\n  //     const dateString = receipt.date_created;\n\n  //     const newDate = new Date(dateString + \"Z\");\n\n  //     const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  //     const result = tz(newDate)\n  //       .tz(targetTimezone, true)\n  //       .format(\"YYYY-MM-DD HH:mm a\");\n\n  //     return result;\n  //   } else if (receipt.date) {\n  //     const newDate = new Date(receipt.date.seconds * 1000);\n  //     const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  //     const result = tz(newDate)\n  //       .tz(targetTimezone, true)\n  //       .format(\"YYYY-MM-DD HH:mm a\");\n\n  //     return result;\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   try {\n  //     db.collection(\"users\")\n  //       .doc(auth.currentUser?.uid)\n  //       .collection(\"transList\")\n  //       .get()\n  //       .then((querySnapshot) => {\n  //         querySnapshot.forEach((doc) => {\n  //           // doc.data() is never undefined for query doc snapshots\n  //           // console.log(doc.id, \" => \", doc.data());\n  //           let orderType = \"\";\n  //           if (doc.data().method === \"deliveryOrder\") {\n  //             orderType = \"Delivery\";\n  //           }\n  //           if (doc.data().method === \"pickupOrder\") {\n  //             orderType = \"Pickup\";\n  //           }\n  //           if (doc.data().method === \"inStoreOrder\") {\n  //             orderType = \"In Store\";\n  //           }\n\n  //           setTransList((prevState) => [...prevState, { ...doc.data(), docID: doc.id }]);\n  //           setTransListTableOrg((prevState) => [...prevState,\n  //           {\n  //             ...doc.data(),\n  //             id: doc.data().transNum.toUpperCase(),\n  //             number: doc.data().transNum,\n  //             name: doc.data().customer?.name ? doc.data().customer?.name : \"N/A\",\n  //             date: getDate(doc.data()),\n  //             originalData: doc.data(),\n  //             docID: doc.id,\n  //             amount: doc.data().total,\n  //             system: 'POS',\n  //             type: orderType,\n  //           }\n  //           ]);\n  //         });\n  //         //sort by date\n  //         setTransListTableOrg((prevState) => {\n  //           const newList = [...prevState.sort((a, b) => new Date(b.originalData.date_created ? b.originalData.date_created : b.originalData.date.seconds * 1000) - new Date(a.originalData.date_created ? a.originalData.date_created : a.originalData.date.seconds * 1000))]\n  //           setTransList(newList)\n\n  //           return newList\n  //         })\n\n  //       });\n  //   } catch {\n  //     console.log(\"Error occured retrieving tranasctions\");\n  //   }\n\n  //   if (wooCredentials.useWoocommerce === true) {\n  //     try {\n  //       const WooCommerceAPI = require(\"woocommerce-api\");\n\n  //       const WooCommerce = new WooCommerceAPI({\n  //         url: wooCredentials.apiUrl,\n  //         consumerKey: wooCredentials.ck,\n  //         consumerSecret: wooCredentials.cs,\n  //         wpAPI: true,\n  //         version: \"wc/v1\",\n  //       });\n\n  //       let page = 1;\n  //       let orders = [];\n\n  //       const getOrders = async () => {\n  //         const response = await WooCommerce.getAsync(\n  //           `orders?page=${page}&per_page=100`\n  //         );\n  //         const data = JSON.parse(response.body);\n  //         orders = [...orders, ...data];\n  //         if (data.length === 100) {\n  //           page++;\n  //           getOrders();\n  //         } else {\n  //           // console.log(orders);\n  //         }\n  //       };\n\n  //       getOrders()\n  //         .then(() => setTransList((prevState) => [...prevState, ...orders]))\n  //         .catch((e) => console.log(\"error has occured\"));\n  //     } catch {\n  //       console.log(\"Something occured with woo\");\n  //     }\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   setTransListState(transList)\n  //   setTransListTableOrgState(transListTableOrg)\n  // }, [transList, transListTableOrg])\n\n  return (\n    <>\n      <div className=\"main-wrapper\">\n        <Header />\n        <div>\n          {index &&\n            index.map((route, key) => (\n              <Route\n                key={key}\n                path={`${match.url}/${route.path}`}\n                component={route.component}\n              />\n            ))}\n        </div>\n        <Sidebar />\n      </div>\n      <div className=\"sidebar-overlay\"></div>\n    </>\n  );\n}\n\nexport default withRouter(DefaultLayout);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,UAAU,QAAQ,kBAAkB;AACpD,OAAOC,KAAK;AAEZ,OAAOC,MAAM;AACb,OAAOC,OAAO;AACd,SAASC,IAAI,EAAEC,EAAE;AACjB,SAASC,iBAAiB,EAAEC,yBAAyB,EAAEC,gBAAgB;AAAsB;AAAA;AAAA;AAE7F,IAAMC,EAAE,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAErC,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,KAAK,EAAK;EAC/B,IAAQC,KAAK,GAAKD,KAAK,CAAfC,KAAK;EAEb,IAAMC,cAAc,GAAGN,gBAAgB,CAACO,GAAG,EAAE;EAC7C,gBAAkCjB,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvCkB,SAAS;IAAEC,YAAY;EAC9B,iBAAkDnB,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvDoB,iBAAiB;IAAEC,oBAAoB;;EAwH9C,OACE;IAAA,WACE;MAAK,SAAS,EAAC,cAAc;MAAA,WAC3B,KAAC,MAAM,KAAG,EACV;QAAA,UACGlB,KAAK,IACJA,KAAK,CAACmB,GAAG,CAAC,UAACC,KAAK,EAAEC,GAAG;UAAA,OACnB,KAAC,KAAK;YAEJ,IAAI,EAAKT,KAAK,CAACU,GAAG,SAAIF,KAAK,CAACG,IAAO;YACnC,SAAS,EAAEH,KAAK,CAACI;UAAU,GAFtBH,GAAG,CAGR;QAAA,CACH;MAAC,EACA,EACN,KAAC,OAAO,KAAG;IAAA,EACP,EACN;MAAK,SAAS,EAAC;IAAiB,EAAO;EAAA,EACtC;AAEP,CAAC;AAED,eAAetB,UAAU,CAACW,aAAa,CAAC"},"metadata":{},"sourceType":"module"}