{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Component, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Icon from \"@expo/vector-icons/Entypo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction MultipleTimeSelectableOptionGroup(_ref) {\n  var style = _ref.style,\n    setopenDropdown = _ref.setopenDropdown,\n    openDropdown = _ref.openDropdown,\n    id = _ref.id;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    val = _useState2[0],\n    setval = _useState2[1];\n  var _useState3 = useState([{\n      id: 1,\n      name: \"Peporini\",\n      selectedTimes: 0\n    }, {\n      id: 2,\n      name: \"Cheese\",\n      selectedTimes: 0\n    }, {\n      id: 3,\n      name: \"Pineapple\",\n      selectedTimes: 0\n    }, {\n      id: 4,\n      name: \"Ham\",\n      selectedTimes: 0\n    }]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    options = _useState4[0],\n    setoptions = _useState4[1];\n  return _jsxs(View, {\n    style: [styles.container, style, openDropdown === id && {\n      zIndex: 1000\n    }],\n    children: [_jsx(Text, {\n      style: styles.lbl,\n      children: \"Toppings\"\n    }), _jsxs(View, {\n      children: [_jsxs(TouchableOpacity, {\n        style: styles.dropdown,\n        onPress: function onPress() {\n          console.log(\"openDropdown\", openDropdown, id);\n          if (openDropdown === id) {\n            setopenDropdown(null);\n          } else {\n            setopenDropdown(id);\n          }\n        },\n        children: [_jsx(Text, {\n          style: styles.placeholder,\n          children: val ? val : \"Select\"\n        }), _jsx(Icon, {\n          name: openDropdown === id ? \"chevron-small-up\" : \"chevron-small-down\",\n          style: styles.downIcon\n        })]\n      }), openDropdown === id && _jsx(ScrollView, {\n        style: {\n          width: 352,\n          position: \"absolute\",\n          backgroundColor: \"white\",\n          bottom: options.length > 3 ? -44 * 3 : -44 * options.length,\n          height: options.length > 3 ? 44 * 3 : 44 * options.length\n        },\n        children: options.map(function (option, index) {\n          return _jsxs(TouchableOpacity, {\n            id: option.id,\n            onPress: function onPress() {\n              setval(option.name);\n              setopenDropdown(null);\n            },\n            style: {\n              width: \"100%\",\n              height: 44,\n              backgroundColor: \"white\",\n              padding: 10,\n              borderWidth: 1,\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              flexDirection: 'row'\n            },\n            children: [_jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                var newOptions = _toConsumableArray(options);\n                newOptions[index].selectedTimes = -1;\n                setoptions(newOptions);\n              },\n              children: _jsx(Text, {\n                children: \"-\"\n              })\n            }), _jsx(Text, {\n              children: option.name\n            })]\n          }, index);\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  lbl: {\n    fontWeight: \"700\",\n    color: \"#3e3f41\"\n  },\n  dropdown: {\n    width: 352,\n    height: 44,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: \"#6987d3\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\"\n  },\n  placeholder: {\n    fontWeight: \"500\",\n    color: \"#7f838c\",\n    fontSize: 12,\n    margin: 10\n  },\n  downIcon: {\n    color: \"rgba(128,128,128,1)\",\n    fontSize: 30,\n    margin: 0,\n    marginTop: 2,\n    marginRight: 2\n  }\n});\nexport default MultipleTimeSelectableOptionGroup;","map":{"version":3,"names":["React","Component","useState","Icon","MultipleTimeSelectableOptionGroup","style","setopenDropdown","openDropdown","id","val","setval","name","selectedTimes","options","setoptions","styles","container","zIndex","lbl","dropdown","console","log","placeholder","downIcon","width","position","backgroundColor","bottom","length","height","map","option","index","padding","borderWidth","justifyContent","alignItems","flexDirection","newOptions","StyleSheet","create","fontWeight","color","borderRadius","borderColor","fontSize","margin","marginTop","marginRight"],"sources":["/Users/peterputros/Desktop/PosMate/pages/non-authed/OnlineOrderPages/components/ProductBuilderModal/MultipleTimeSelectableOptionGroup.js"],"sourcesContent":["import React, { Component, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/Entypo\";\n\nfunction MultipleTimeSelectableOptionGroup({\n  style,\n  setopenDropdown,\n  openDropdown,\n  id,\n}) {\n  const [val, setval] = useState(null);\n  const [options, setoptions] = useState([\n    { id: 1, name: \"Peporini\", selectedTimes: 0 },\n    { id: 2, name: \"Cheese\", selectedTimes: 0 },\n    { id: 3, name: \"Pineapple\", selectedTimes: 0 },\n    { id: 4, name: \"Ham\", selectedTimes: 0 },\n  ]);\n\n  return (\n    <View\n      style={[styles.container, style, openDropdown === id && { zIndex: 1000 }]}\n    >\n      <Text style={styles.lbl}>Toppings</Text>\n      <View>\n        <TouchableOpacity\n          style={styles.dropdown}\n          onPress={() => {\n            console.log(\"openDropdown\", openDropdown, id);\n            if (openDropdown === id) {\n              setopenDropdown(null);\n            } else {\n              setopenDropdown(id);\n            }\n          }}\n        >\n          <Text style={styles.placeholder}>{val ? val : \"Select\"}</Text>\n          <Icon\n            name={\n              openDropdown === id ? \"chevron-small-up\" : \"chevron-small-down\"\n            }\n            style={styles.downIcon}\n          ></Icon>\n        </TouchableOpacity>\n        {openDropdown === id && (\n          <ScrollView\n            style={{\n              width: 352,\n              position: \"absolute\",\n              backgroundColor: \"white\",\n              bottom: options.length > 3 ? -44 * 3 : -44 * options.length,\n              height: options.length > 3 ? 44 * 3 : 44 * options.length,\n            }}\n          >\n            {options.map((option, index) => (\n              <TouchableOpacity\n                key={index}\n                id={option.id}\n                onPress={() => {\n                  setval(option.name);\n                  setopenDropdown(null);\n                }}\n                style={{\n                  width: \"100%\",\n                  height: 44,\n                  backgroundColor: \"white\",\n                  padding: 10,\n                  borderWidth: 1,\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  flexDirection: 'row'\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => {\n                    let newOptions = [...options];\n                    newOptions[index].selectedTimes =  - 1;\n                    setoptions(newOptions);\n                  }}\n                >\n                  <Text>-</Text>\n                </TouchableOpacity>\n                <Text>{option.name}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  lbl: {\n    fontWeight: \"700\",\n    color: \"#3e3f41\",\n  },\n  dropdown: {\n    width: 352,\n    height: 44,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: \"#6987d3\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  placeholder: {\n    fontWeight: \"500\",\n    color: \"#7f838c\",\n    fontSize: 12,\n    margin: 10,\n  },\n  downIcon: {\n    color: \"rgba(128,128,128,1)\",\n    fontSize: 30,\n    margin: 0,\n    marginTop: 2,\n    marginRight: 2,\n  },\n});\n\nexport default MultipleTimeSelectableOptionGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}