{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useMemo, useState } from \"react\";\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar TutorialStep = function TutorialStep(props) {\n  var children = props.children,\n    step = props.step,\n    helpDescription = props.helpDescription,\n    isLastStep = props.isLastStep,\n    stepDetails = props.stepDetails,\n    setStepDetails = props.setStepDetails,\n    changeNextBtnFunc = props.changeNextBtnFunc,\n    alignInfo = props.alignInfo,\n    changePreviousBtnFunc = props.changePreviousBtnFunc,\n    changeFinishBtnFunc = props.changeFinishBtnFunc;\n\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    x = _useState2[0],\n    setX = _useState2[1];\n\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    y = _useState4[0],\n    setY = _useState4[1];\n\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    childrenWidth = _useState6[0],\n    setChildrenWidth = _useState6[1];\n\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    descriptionViewWidth = _useState8[0],\n    setDescriptionViewWidth = _useState8[1];\n  var modal = useMemo(function () {\n    return _jsxs(Modal, {\n      transparent: true,\n      visible: step === stepDetails.step && stepDetails.complete === false,\n      children: [_jsx(View, {\n        style: {\n          backgroundColor: \"rgba(0,0,0,0.5)\",\n          position: \"absolute\",\n          height: \"100%\",\n          width: \"100%\"\n        }\n      }), _jsx(View, {\n        style: {\n          position: \"absolute\",\n          top: y,\n          left: x\n        },\n        children: children\n      }), _jsxs(View, {\n        onLayout: function onLayout(event) {\n          if (!descriptionViewWidth) {\n            var layout = event.nativeEvent.layout;\n            setDescriptionViewWidth(layout.width);\n          }\n        },\n        style: [{\n          position: \"absolute\",\n          top: y + 100,\n          left: x - descriptionViewWidth / 2 + 20,\n          padding: 20,\n          backgroundColor: \"white\"\n        }, alignInfo === \"left\" && {\n          left: x - descriptionViewWidth + childrenWidth\n        }, alignInfo === \"right\" && {\n          left: x\n        }, alignInfo === \"center\" && {\n          left: x - descriptionViewWidth / 2\n        }],\n        children: [_jsx(View, {\n          style: [{\n            width: 0,\n            height: 0,\n            backgroundColor: \"transparent\",\n            borderStyle: \"solid\",\n            borderLeftWidth: 15,\n            borderRightWidth: 15,\n            borderBottomWidth: 15,\n            borderLeftColor: \"transparent\",\n            borderRightColor: \"transparent\",\n            borderBottomColor: \"white\",\n            position: \"absolute\",\n            top: -15,\n            left: descriptionViewWidth / 2 - 7.5\n          }, alignInfo === \"left\" && {\n            left: descriptionViewWidth - childrenWidth / 2 - 7.5\n          }, alignInfo === \"right\" && {\n            left: descriptionViewWidth / 4 - 7.5\n          }, alignInfo === \"center\" && {\n            left: descriptionViewWidth / 2 - 7.5\n          }]\n        }), _jsx(Text, {\n          style: {\n            marginBottom: 20\n          },\n          children: helpDescription\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\"\n          },\n          children: [step > 1 ? _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              if (changePreviousBtnFunc) {\n                changePreviousBtnFunc();\n              } else {\n                setStepDetails(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    step: prev.step - 1\n                  });\n                });\n                localStorage.setItem(\"tutorialComplete\", JSON.stringify(_objectSpread(_objectSpread({}, prev), {}, {\n                  step: prev.step - 1\n                })));\n              }\n            },\n            children: _jsx(Text, {\n              style: {\n                marginRight: 15\n              },\n              children: \"Previous\"\n            })\n          }) : _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              setStepDetails(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  step: prev.step + 1\n                });\n              });\n              localStorage.setItem(\"tutorialComplete\", JSON.stringify(_objectSpread(_objectSpread({}, prev), {}, {\n                step: prev.step + 1\n              })));\n            },\n            children: _jsx(Text, {\n              style: {\n                marginRight: 15\n              },\n              children: \"Skip\"\n            })\n          }), isLastStep ? _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              if (changeFinishBtnFunc) {\n                changeFinishBtnFunc();\n              } else {\n                setStepDetails({\n                  step: 0,\n                  complete: true\n                });\n                localStorage.setItem(\"tutorialComplete\", JSON.stringify({\n                  step: 0,\n                  complete: true\n                }));\n              }\n            },\n            children: _jsx(Text, {\n              children: \"Finish\"\n            })\n          }) : _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              if (changeNextBtnFunc) {\n                changeNextBtnFunc();\n              } else {\n                setStepDetails(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    step: prev.step + 1\n                  });\n                });\n                localStorage.setItem(\"tutorialComplete\", JSON.stringify(_objectSpread(_objectSpread({}, prev), {}, {\n                  step: prev.step + 1\n                })));\n              }\n            },\n            children: _jsx(Text, {\n              children: \"Next\"\n            })\n          })]\n        })]\n      })]\n    });\n  }, [x, y, childrenWidth]);\n  return _jsxs(_Fragment, {\n    children: [modal, _jsx(View, {\n      onLayout: function onLayout(event) {\n        var layout = event.nativeEvent.layout;\n        setX(layout.left);\n        setY(layout.top);\n        setChildrenWidth(layout.width);\n      },\n      children: children\n    })]\n  });\n};\nexport default React.memo(TutorialStep);","map":{"version":3,"names":["React","useMemo","useState","TutorialStep","props","children","step","helpDescription","isLastStep","stepDetails","setStepDetails","changeNextBtnFunc","alignInfo","changePreviousBtnFunc","changeFinishBtnFunc","x","setX","y","setY","childrenWidth","setChildrenWidth","descriptionViewWidth","setDescriptionViewWidth","modal","complete","backgroundColor","position","height","width","top","left","event","layout","nativeEvent","padding","borderStyle","borderLeftWidth","borderRightWidth","borderBottomWidth","borderLeftColor","borderRightColor","borderBottomColor","marginBottom","flexDirection","alignItems","justifyContent","prev","localStorage","setItem","JSON","stringify","marginRight","memo"],"sources":["/Users/peterputros/Desktop/PosMate/components/tutorial/TutorialStep.tsx"],"sourcesContent":["import { View, Text, Modal, TouchableOpacity } from \"react-native\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\n\n//typscript type for props\ntype Props = {\n  children: React.ReactNode;\n  step: number;\n  helpDescription: string;\n  isLastStep?: boolean | undefined;\n  stepDetails: number;\n  setStepDetails: (prev: { complete: boolean; step: number }) => void;\n  changePreviousBtnFunc?: () => void;\n  changeFinishBtnFunc?: () => void;\n  changeNextBtnFunc?: () => void;\n  alignInfo?: \"left\" | \"right\" | \"center\";\n};\n\nconst TutorialStep = (props: Props) => {\n  const {\n    children,\n    step,\n    helpDescription,\n    isLastStep,\n    stepDetails,\n    setStepDetails,\n    changeNextBtnFunc,\n    alignInfo,\n    changePreviousBtnFunc,\n    changeFinishBtnFunc,\n  } = props;\n\n  // X\n  const [x, setX] = useState();\n\n  // Y\n  const [y, setY] = useState();\n\n  //childrenWidth\n  const [childrenWidth, setChildrenWidth] = useState();\n\n  //DescriptionViewWidth\n  const [descriptionViewWidth, setDescriptionViewWidth] = useState();\n\n  const modal = useMemo(\n    () => (\n      <Modal\n        transparent\n        visible={step === stepDetails.step && stepDetails.complete === false}\n      >\n        <View\n          style={{\n            backgroundColor: \"rgba(0,0,0,0.5)\",\n            position: \"absolute\",\n            height: \"100%\",\n            width: \"100%\",\n          }}\n        />\n        <View style={{ position: \"absolute\", top: y, left: x }}>\n          {children}\n        </View>\n        <View\n          onLayout={(event) => {\n            if (!descriptionViewWidth) {\n              const layout = event.nativeEvent.layout;\n              setDescriptionViewWidth(layout.width);\n            }\n          }}\n          style={[\n            {\n              position: \"absolute\",\n              top: y + 100,\n              left: x - descriptionViewWidth / 2 + 20,\n              padding: 20,\n              backgroundColor: \"white\",\n            },\n            alignInfo === \"left\" && {\n              left: x - descriptionViewWidth + childrenWidth,\n            },\n            alignInfo === \"right\" && {\n              left: x,\n            },\n            alignInfo === \"center\" && {\n              left: x - descriptionViewWidth / 2,\n            },\n          ]}\n        >\n          <View\n            style={[\n              {\n                width: 0,\n                height: 0,\n                backgroundColor: \"transparent\",\n                borderStyle: \"solid\",\n                borderLeftWidth: 15,\n                borderRightWidth: 15,\n                borderBottomWidth: 15,\n                borderLeftColor: \"transparent\",\n                borderRightColor: \"transparent\",\n                borderBottomColor: \"white\",\n                position: \"absolute\",\n                top: -15,\n                left: descriptionViewWidth / 2 - 7.5,\n              },\n              alignInfo === \"left\" && {\n                left: descriptionViewWidth - childrenWidth / 2 - 7.5,\n              },\n              alignInfo === \"right\" && {\n                left: descriptionViewWidth / 4 - 7.5,\n              },\n              alignInfo === \"center\" && {\n                left: descriptionViewWidth / 2 - 7.5,\n              },\n            ]}\n          />\n          <Text style={{ marginBottom: 20 }}>{helpDescription}</Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            {step > 1 ? (\n              <TouchableOpacity\n                onPress={() => {\n                  if (changePreviousBtnFunc) {\n                    changePreviousBtnFunc();\n                  } else {\n                    setStepDetails((prev) => ({\n                      ...prev,\n                      step: prev.step - 1,\n                    }));\n                    localStorage.setItem(\n                      \"tutorialComplete\",\n                      JSON.stringify({\n                        ...prev,\n                        step: prev.step - 1,\n                      })\n                    );\n                  }\n                }}\n              >\n                <Text style={{ marginRight: 15 }}>Previous</Text>\n              </TouchableOpacity>\n            ) : (\n              <TouchableOpacity\n                onPress={() => {\n                  setStepDetails((prev) => ({\n                    ...prev,\n                    step: prev.step + 1,\n                  }));\n                  localStorage.setItem(\n                    \"tutorialComplete\",\n                    JSON.stringify({\n                      ...prev,\n                      step: prev.step + 1,\n                    })\n                  );\n                }}\n              >\n                <Text style={{ marginRight: 15 }}>Skip</Text>\n              </TouchableOpacity>\n            )}\n            {isLastStep ? (\n              <TouchableOpacity\n                onPress={() => {\n                  if (changeFinishBtnFunc) {\n                    changeFinishBtnFunc();\n                  } else {\n                    setStepDetails({\n                      step: 0,\n                      complete: true,\n                    });\n                    localStorage.setItem(\n                      \"tutorialComplete\",\n                      JSON.stringify({\n                        step: 0,\n                        complete: true,\n                      })\n                    );\n                  }\n                }}\n              >\n                <Text>Finish</Text>\n              </TouchableOpacity>\n            ) : (\n              <TouchableOpacity\n                onPress={() => {\n                  if (changeNextBtnFunc) {\n                    changeNextBtnFunc();\n                  } else {\n                    setStepDetails((prev) => ({\n                      ...prev,\n                      step: prev.step + 1,\n                    }));\n                    localStorage.setItem(\n                      \"tutorialComplete\",\n                      JSON.stringify({\n                        ...prev,\n                        step: prev.step + 1,\n                      })\n                    );\n                  }\n                }}\n              >\n                <Text>Next</Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        </View>\n      </Modal>\n    ),\n    [x, y, childrenWidth]\n  );\n\n  return (\n    <>\n      {modal}\n      <View\n        onLayout={(event) => {\n          const layout = event.nativeEvent.layout;\n          setX(layout.left);\n          setY(layout.top);\n          setChildrenWidth(layout.width);\n        }}\n      >\n        {children}\n      </View>\n    </>\n  );\n};\n\nexport default React.memo(TutorialStep);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}