{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"react-select2-wrapper/css/select2.css\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport { deviceIdState, deviceTreeState, myDeviceDetailsState, setDeviceTreeState, setMyDeviceDetailsState, storeDetailState, trialDetailsState, woocommerceState } from \"../../../../../state/state\";\nimport { auth, db } from \"../../../../../state/firebaseConfig\";\nimport ReactSelect from \"react-select\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DeviceSettings = function DeviceSettings() {\n  var deviceTree = deviceTreeState.use();\n  var myDeviceDetails = myDeviceDetailsState.use();\n  var myDeviceID = deviceIdState.use();\n  var AddNewDevice = function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield db.collection(\"users\").doc(auth.currentUser.uid).collection(\"checkout_sessions\").add({\n        price: 'price_1OgX1pCIw3L7DOwIIavoer1P',\n        quantity: 1,\n        success_url: window.location.origin,\n        cancel_url: window.location.origin\n      }).then(function (docRef) {\n        docRef.onSnapshot(function () {\n          var _ref2 = _asyncToGenerator(function* (snap) {\n            var _snap$data = snap.data(),\n              error = _snap$data.error,\n              sessionId = _snap$data.sessionId;\n            if (error) {\n              alert(\"An error occurred: \" + error.message);\n            }\n            if (sessionId) {\n              var stripe = yield loadStripe(\"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\");\n\n              console.log(\"redirecting\");\n              yield stripe.redirectToCheckout({\n                sessionId: sessionId\n              });\n            }\n          });\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    return function AddNewDevice() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(\"div\", {\n    className: \"page-wrapper\",\n    children: _jsx(\"div\", {\n      className: \"content\",\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: styles.headerRowContainer,\n          children: _jsx(Text, {\n            style: styles.headerTxt,\n            children: \"Device Settings\"\n          })\n        }), deviceTree.devices.map(function (device, index) {\n          var otherDeviceOptions = [];\n          deviceTree.devices.map(function (deviceSearch, index) {\n            if (deviceSearch.id !== device.id) {\n              otherDeviceOptions.push({\n                value: deviceSearch.docID,\n                label: deviceSearch.name\n              });\n            }\n          });\n          return _jsxs(View, {\n            style: [styles.detailInputContainer, {\n              marginBottom: 25\n            }],\n            children: [_jsx(TextInput, {\n              placeholder: \"Name: \" + device.name,\n              value: device.name,\n              onChangeText: function onChangeText(val) {\n                var clone = _toConsumableArray(deviceTree);\n                clone.devices[index].name = val;\n                setDeviceTreeState(clone);\n              },\n              style: {\n                marginBottom: 10\n              }\n            }), _jsxs(Text, {\n              style: {\n                marginBottom: 10\n              },\n              children: [\"Id: \", device.id ? device.id : 'No Id set to this device']\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                alignItems: 'center',\n                marginBottom: 10\n              },\n              children: [_jsx(Text, {\n                style: {\n                  marginRight: 10\n                },\n                children: \"Use Different Device To Print: \"\n              }), _jsx(Switch, {\n                value: device.useDifferentDeviceToPrint,\n                onValueChange: function onValueChange(val) {\n                  var clone = _toConsumableArray(deviceTree);\n                  clone.devices[index].useDifferentDeviceToPrint = val;\n                  setDeviceTreeState(clone);\n                }\n              })]\n            }), !device.useDifferentDeviceToPrint ? _jsx(TextInput, {\n              placeholder: \"Print To Printer: \" + device.printToPrinter,\n              value: device.printToPrinter,\n              onChangeText: function onChangeText(val) {\n                var clone = _toConsumableArray(deviceTree);\n                clone.devices[index].printToPrinter = val;\n                setDeviceTreeState(clone);\n              }\n            }) : _jsx(ReactSelect, {\n              options: otherDeviceOptions,\n              value: device.sendPrintToUserID,\n              onChange: function onChange(val) {\n                var clone = _toConsumableArray(deviceTree);\n                clone.devices[index].sendPrintToUserID = val;\n                setDeviceTreeState(clone);\n              },\n              placeholder: \"Choose Device To Send Print To\",\n              menuPortalTarget: document.body,\n              styles: {\n                menuPortal: function menuPortal(base) {\n                  return _objectSpread(_objectSpread({}, base), {}, {\n                    zIndex: 9999\n                  });\n                },\n                control: function control(provided, state) {\n                  return _objectSpread(_objectSpread({}, provided), {}, {\n                    background: \"#fff\",\n                    borderColor: \"#9e9e9e\",\n                    minHeight: \"52px\",\n                    height: \"52px\",\n                    boxShadow: state.isFocused ? null : null\n                  });\n                },\n                valueContainer: function valueContainer(provided, state) {\n                  return _objectSpread(_objectSpread({}, provided), {}, {\n                    height: \"52px\",\n                    padding: \"0 6px\"\n                  });\n                },\n                input: function input(provided, state) {\n                  return _objectSpread(_objectSpread({}, provided), {}, {\n                    margin: \"0px\"\n                  });\n                },\n                indicatorSeparator: function indicatorSeparator(state) {\n                  return {\n                    display: \"none\"\n                  };\n                },\n                indicatorsContainer: function indicatorsContainer(provided, state) {\n                  return _objectSpread(_objectSpread({}, provided), {}, {\n                    height: \"52px\"\n                  });\n                }\n              },\n              menuPlacement: \"auto\",\n              menuPosition: \"fixed\"\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                alignItems: 'center',\n                marginBottom: 10,\n                marginTop: 10\n              },\n              children: [_jsx(Text, {\n                children: \"Would you like online orders to print to this device?\"\n              }), _jsx(Switch, {\n                value: device.printOnlineOrders,\n                onValueChange: function onValueChange(val) {\n                  var clone = _toConsumableArray(deviceTree);\n                  clone.devices[index].printOnlineOrders = val;\n                  setDeviceTreeState(clone);\n                }\n              })]\n            }), _jsx(Button, {\n              title: \"Update Device\",\n              onPress: function onPress() {\n                db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).update(device);\n                var clone = _toConsumableArray(deviceTree);\n                clone.devices[index] = device;\n                setDeviceTreeState(clone);\n                console.log('Updated Device');\n                setMyDeviceDetailsState(device);\n              },\n              style: {\n                marginBottom: 10\n              }\n            }), _jsx(Button, {\n              title: \"Set To My ID\",\n              onPress: function onPress() {\n                if (deviceTree.devices.filter(function (deviceSearch) {\n                  return deviceSearch.id === myDeviceID;\n                }).length > 0) {\n                  db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices.filter(function (deviceSearch) {\n                    return deviceSearch.id === myDeviceID;\n                  })[0].docID).update({\n                    id: null\n                  });\n                  var _clone = _toConsumableArray(deviceTree);\n                  _clone.filter(function (deviceSearch) {\n                    return deviceSearch.id === myDeviceID;\n                  })[0].id = null;\n                  setDeviceTreeState(_clone);\n                }\n                db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).update({\n                  id: myDeviceID\n                });\n                var clone = _toConsumableArray(deviceTree);\n                clone[index].id = myDeviceID;\n                setDeviceTreeState(clone);\n                setMyDeviceDetailsState(device);\n              },\n              style: {\n                marginBottom: 10\n              }\n            }), _jsx(Button, {\n              title: \"Delete Device\",\n              onPress: function onPress() {\n                db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).delete();\n                var clone = _toConsumableArray(deviceTree);\n                clone.filter(function (deviceSearch) {\n                  return deviceSearch.docID !== device.docID;\n                });\n                setDeviceTreeState(clone);\n              },\n              style: {\n                marginBottom: 10\n              }\n            })]\n          }, index);\n        }), _jsx(Button, {\n          title: \"Add Device\",\n          onPress: function onPress() {\n            db.collection('users').doc(auth.currentUser.uid).collection('devices').add({\n              name: \"Device\" + deviceTree.length,\n              id: null,\n              printToPrinter: null\n            });\n            var clone = _toConsumableArray(deviceTree);\n            clone.push({\n              name: \"Device\",\n              id: null,\n              printToPrinter: null,\n              sendPrintToUserID: null\n            });\n            setDeviceTreeState(clone);\n          }\n        }), _jsx(Button, {\n          title: \"Pay For Another Device\",\n          onPress: function onPress() {\n            AddNewDevice();\n          }\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"rgba(255,255,255,1)\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  headerRowContainer: {\n    width: \"90%\",\n    height: 60,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 20\n  },\n  headerTxt: {\n    fontFamily: \"archivo-600\",\n    color: \"rgba(98,96,96,1)\",\n    fontSize: 20\n  },\n  billingBtn: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"#E6E6E6\",\n    borderRadius: 30,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  billingIcon: {\n    color: \"rgba(128,128,128,1)\",\n    fontSize: 30\n  },\n  detailInputContainer: {\n    width: \"90%\",\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: \"rgba(155,152,152,1)\",\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 45,\n    shadowOpacity: 0.2,\n    shadowRadius: 15,\n    padding: 30,\n    minHeight: \"75%\",\n    marginTop: 15\n  },\n  materialStackedLabelTextbox1: {\n    height: 60,\n    width: 483\n  },\n  materialStackedLabelTextbox2: {\n    height: 60,\n    width: 483,\n    marginLeft: 43\n  },\n  materialStackedLabelTextbox1Row: {\n    height: 60,\n    flexDirection: \"row\",\n    marginTop: 23,\n    marginLeft: 36,\n    marginRight: 32\n  },\n  materialStackedLabelTextbox3: {\n    height: 60,\n    width: 483\n  },\n  materialStackedLabelTextbox5: {\n    height: 60,\n    width: 483,\n    marginLeft: 43\n  },\n  materialStackedLabelTextbox3Row: {\n    height: 60,\n    flexDirection: \"row\",\n    marginTop: 30,\n    marginLeft: 36,\n    marginRight: 32\n  },\n  materialStackedLabelTextbox4: {\n    height: 60,\n    width: 483\n  },\n  materialStackedLabelTextbox6: {\n    height: 60,\n    width: 483,\n    marginLeft: 43\n  },\n  materialStackedLabelTextbox4Row: {\n    height: 60,\n    flexDirection: \"row\",\n    marginTop: 29,\n    marginLeft: 36,\n    marginRight: 32\n  },\n  materialStackedLabelTextbox7: {\n    height: 60,\n    width: 483\n  },\n  materialButtonViolet2: {\n    height: 48,\n    width: 483,\n    marginLeft: 43,\n    marginTop: 12\n  },\n  materialStackedLabelTextbox7Row: {\n    height: 60,\n    flexDirection: \"row\",\n    marginTop: 14,\n    marginLeft: 36,\n    marginRight: 32\n  },\n  helperDownloadContainer: {\n    width: \"100%\",\n    height: 79,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 10\n  },\n  helperTxt: {\n    fontFamily: \"archivo-500\",\n    color: \"#121212\",\n    fontSize: 19,\n    width: 483,\n    height: 52\n  },\n  badgeWindows: {\n    width: 200,\n    height: 79\n  },\n  badgeMac: {\n    width: 200,\n    height: 79\n  }\n});\nexport default DeviceSettings;","map":{"version":3,"names":["React","useEffect","useRef","useState","Button","Switch","TextInput","deviceIdState","deviceTreeState","myDeviceDetailsState","setDeviceTreeState","setMyDeviceDetailsState","storeDetailState","trialDetailsState","woocommerceState","auth","db","ReactSelect","loadStripe","DeviceSettings","deviceTree","use","myDeviceDetails","myDeviceID","AddNewDevice","collection","doc","currentUser","uid","add","price","quantity","success_url","window","location","origin","cancel_url","then","docRef","onSnapshot","snap","data","error","sessionId","alert","message","stripe","console","log","redirectToCheckout","styles","container","headerRowContainer","headerTxt","devices","map","device","index","otherDeviceOptions","deviceSearch","id","push","value","docID","label","name","detailInputContainer","marginBottom","val","clone","flexDirection","alignItems","marginRight","useDifferentDeviceToPrint","printToPrinter","sendPrintToUserID","document","body","menuPortal","base","zIndex","control","provided","state","background","borderColor","minHeight","height","boxShadow","isFocused","valueContainer","padding","input","margin","indicatorSeparator","display","indicatorsContainer","marginTop","printOnlineOrders","update","filter","length","delete","StyleSheet","create","backgroundColor","justifyContent","width","fontFamily","color","fontSize","billingBtn","borderRadius","billingIcon","borderWidth","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","materialStackedLabelTextbox1","materialStackedLabelTextbox2","marginLeft","materialStackedLabelTextbox1Row","materialStackedLabelTextbox3","materialStackedLabelTextbox5","materialStackedLabelTextbox3Row","materialStackedLabelTextbox4","materialStackedLabelTextbox6","materialStackedLabelTextbox4Row","materialStackedLabelTextbox7","materialButtonViolet2","materialStackedLabelTextbox7Row","helperDownloadContainer","helperTxt","badgeWindows","badgeMac"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/main/MainPage/settings/DeviceSettings.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"react-select2-wrapper/css/select2.css\";\nimport {\n    View,\n    Text,\n    ScrollView,\n    StyleSheet,\n    Animated,\n} from \"react-native\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport {\n    deviceIdState,\n    deviceTreeState,\n    myDeviceDetailsState,\n    setDeviceTreeState,\n    setMyDeviceDetailsState,\n    storeDetailState,\n    trialDetailsState,\n    woocommerceState,\n} from \"state/state\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport ReactSelect from \"react-select\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nconst DeviceSettings = () => {\n    const deviceTree = deviceTreeState.use()\n    const myDeviceDetails = myDeviceDetailsState.use()\n    const myDeviceID = deviceIdState.use()\n\n    const AddNewDevice = async () => {\n        await db\n            .collection(\"users\")\n            .doc(auth.currentUser.uid)\n            .collection(\"checkout_sessions\")\n            .add({\n                price: 'price_1OgX1pCIw3L7DOwIIavoer1P', // todo price Id from your products price in the Stripe Dashboard\n                quantity: 1,\n                success_url: window.location.origin, // return user to this screen on successful purchase\n                cancel_url: window.location.origin, // return user to this screen on failed purchase\n            })\n            .then((docRef) => {\n                // Wait for the checkoutSession to get attached by the extension\n                docRef.onSnapshot(async (snap) => {\n                    const { error, sessionId } = snap.data();\n                    if (error) {\n                        // Show an error to your customer and inspect\n                        // your Cloud Function logs in the Firebase console.\n                        alert(`An error occurred: ${error.message}`);\n                    }\n\n                    if (sessionId) {\n                        // We have a session, let's redirect to Checkout\n                        // Init Stripe\n                        const stripe = await loadStripe(\n                            \"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\" // todo enter your public stripe key here\n                        );\n                        console.log(`redirecting`);\n                        await stripe.redirectToCheckout({ sessionId });\n                    }\n                });\n            });\n    }\n\n    return (\n        <div className=\"page-wrapper\">\n            <div className=\"content\">\n                <View style={styles.container}>\n                    <View style={styles.headerRowContainer}>\n                        <Text style={styles.headerTxt}>Device Settings</Text>\n                    </View>\n                    {deviceTree.devices.map((device, index) => {\n\n                        const otherDeviceOptions = []\n                        deviceTree.devices.map((deviceSearch, index) => {\n                            if (deviceSearch.id !== device.id) {\n                                otherDeviceOptions.push({ value: deviceSearch.docID, label: deviceSearch.name })\n                            }\n                        })\n\n                        return (\n                            <View key={index} style={[styles.detailInputContainer, { marginBottom: 25 }]}>\n                                <TextInput placeholder={`Name: ${device.name}`} value={device.name} onChangeText={val => {\n                                    const clone = [...deviceTree]\n                                    clone.devices[index].name = val\n\n                                    setDeviceTreeState(clone)\n\n                                }}\n                                    style={{ marginBottom: 10 }}\n                                />\n                                <Text style={{ marginBottom: 10 }} >Id: {device.id ? device.id : 'No Id set to this device'}</Text>\n                                <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10 }}>\n                                    <Text style={{ marginRight: 10 }}>Use Different Device To Print: </Text>\n                                    <Switch value={device.useDifferentDeviceToPrint} onValueChange={val => {\n                                        const clone = [...deviceTree]\n                                        clone.devices[index].useDifferentDeviceToPrint = val\n                                        setDeviceTreeState(clone)\n                                    }} />\n                                </View>\n                                {!device.useDifferentDeviceToPrint ? <TextInput placeholder={`Print To Printer: ${device.printToPrinter}`} value={device.printToPrinter} onChangeText={val => {\n                                    const clone = [...deviceTree]\n                                    clone.devices[index].printToPrinter = val\n                                    setDeviceTreeState(clone)\n                                }}\n                                /> :\n                                    <ReactSelect\n                                        options={otherDeviceOptions}\n                                        value={\n                                            device.sendPrintToUserID\n                                        }\n                                        onChange={(val) => {\n                                            const clone = [...deviceTree]\n                                            clone.devices[index].sendPrintToUserID = val\n                                            setDeviceTreeState(clone)\n                                        }}\n                                        placeholder={\"Choose Device To Send Print To\"}\n                                        menuPortalTarget={document.body}\n                                        styles={{\n                                            menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                                            control: (provided, state) => ({\n                                                ...provided,\n                                                background: \"#fff\",\n                                                borderColor: \"#9e9e9e\",\n                                                minHeight: \"52px\",\n                                                height: \"52px\",\n                                                boxShadow: state.isFocused ? null : null,\n                                            }),\n\n                                            valueContainer: (provided, state) => ({\n                                                ...provided,\n                                                height: \"52px\",\n                                                padding: \"0 6px\",\n                                            }),\n\n                                            input: (provided, state) => ({\n                                                ...provided,\n                                                margin: \"0px\",\n                                            }),\n                                            indicatorSeparator: (state) => ({\n                                                display: \"none\",\n                                            }),\n                                            indicatorsContainer: (provided, state) => ({\n                                                ...provided,\n                                                height: \"52px\",\n                                            }),\n                                        }}\n                                        menuPlacement=\"auto\"\n                                        menuPosition=\"fixed\"\n                                    />\n                                }\n                                <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10, marginTop: 10 }}>\n                                    <Text>Would you like online orders to print to this device?</Text>\n                                    <Switch value={device.printOnlineOrders} onValueChange={val => {\n                                        const clone = [...deviceTree]\n                                        clone.devices[index].printOnlineOrders = val\n                                        setDeviceTreeState(clone)\n                                    }} />\n                                </View>\n                                <Button\n                                    title=\"Update Device\"\n                                    onPress={() => {\n                                        db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).update(device)\n                                        const clone = [...deviceTree]\n                                        clone.devices[index] = device\n                                        setDeviceTreeState(clone\n                                        )\n                                        console.log('Updated Device')\n                                        setMyDeviceDetailsState(device)\n                                    }}\n                                    style={{\n                                        marginBottom: 10\n                                    }}\n                                />\n                                <Button\n                                    title=\"Set To My ID\"\n                                    onPress={() => {\n                                        if (deviceTree.devices.filter(deviceSearch => deviceSearch.id === myDeviceID).length > 0) {\n                                            db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices.filter(deviceSearch => deviceSearch.id === myDeviceID)[0].docID).update({ id: null })\n                                            const clone = [...deviceTree]\n                                            clone.filter(deviceSearch => deviceSearch.id === myDeviceID)[0].id = null\n                                            setDeviceTreeState(clone)\n                                        }\n                                        db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).update({ id: myDeviceID })\n                                        const clone = [...deviceTree]\n                                        clone[index].id = myDeviceID\n                                        setDeviceTreeState(clone)\n                                        setMyDeviceDetailsState(device)\n                                    }}\n                                    style={{\n                                        marginBottom: 10\n                                    }}\n                                />\n                                <Button title=\"Delete Device\" onPress={() => {\n                                    db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(device.docID).delete()\n                                    const clone = [...deviceTree]\n                                    clone.filter(deviceSearch => deviceSearch.docID !== device.docID)\n                                    setDeviceTreeState(clone)\n                                }\n                                }\n                                    style={{\n                                        marginBottom: 10\n                                    }}\n                                />\n                            </View>\n                        )\n                    })}\n                    <Button title=\"Add Device\" onPress={() => {\n\n                        db.collection('users').doc(auth.currentUser.uid).collection('devices').add({ name: `Device${deviceTree.length}`, id: null, printToPrinter: null })\n\n                        const clone = [...deviceTree]\n                        clone.push({ name: \"Device\", id: null, printToPrinter: null, sendPrintToUserID: null })\n                        setDeviceTreeState(clone)\n                    }} />\n                    <Button title=\"Pay For Another Device\" onPress={() => {\n                        AddNewDevice()\n                    }\n                    } />\n                </View>\n            </div>\n        </div >\n    );\n\n\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"rgba(255,255,255,1)\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    headerRowContainer: {\n        width: \"90%\",\n        height: 60,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginBottom: 20,\n    },\n    headerTxt: {\n        fontFamily: \"archivo-600\",\n        color: \"rgba(98,96,96,1)\",\n        fontSize: 20,\n    },\n    billingBtn: {\n        width: 60,\n        height: 60,\n        backgroundColor: \"#E6E6E6\",\n        borderRadius: 30,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    billingIcon: {\n        color: \"rgba(128,128,128,1)\",\n        fontSize: 30,\n    },\n    detailInputContainer: {\n        width: \"90%\",\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor: \"rgba(155,152,152,1)\",\n        shadowColor: \"rgba(0,0,0,1)\",\n        shadowOffset: {\n            width: 3,\n            height: 3,\n        },\n        elevation: 45,\n        shadowOpacity: 0.2,\n        shadowRadius: 15,\n        padding: 30,\n        minHeight: \"75%\",\n        marginTop: 15,\n    },\n    materialStackedLabelTextbox1: {\n        height: 60,\n        width: 483,\n    },\n    materialStackedLabelTextbox2: {\n        height: 60,\n        width: 483,\n        marginLeft: 43,\n    },\n    materialStackedLabelTextbox1Row: {\n        height: 60,\n        flexDirection: \"row\",\n        marginTop: 23,\n        marginLeft: 36,\n        marginRight: 32,\n    },\n    materialStackedLabelTextbox3: {\n        height: 60,\n        width: 483,\n    },\n    materialStackedLabelTextbox5: {\n        height: 60,\n        width: 483,\n        marginLeft: 43,\n    },\n    materialStackedLabelTextbox3Row: {\n        height: 60,\n        flexDirection: \"row\",\n        marginTop: 30,\n        marginLeft: 36,\n        marginRight: 32,\n    },\n    materialStackedLabelTextbox4: {\n        height: 60,\n        width: 483,\n    },\n    materialStackedLabelTextbox6: {\n        height: 60,\n        width: 483,\n        marginLeft: 43,\n    },\n    materialStackedLabelTextbox4Row: {\n        height: 60,\n        flexDirection: \"row\",\n        marginTop: 29,\n        marginLeft: 36,\n        marginRight: 32,\n    },\n    materialStackedLabelTextbox7: {\n        height: 60,\n        width: 483,\n    },\n    materialButtonViolet2: {\n        height: 48,\n        width: 483,\n        marginLeft: 43,\n        marginTop: 12,\n    },\n    materialStackedLabelTextbox7Row: {\n        height: 60,\n        flexDirection: \"row\",\n        marginTop: 14,\n        marginLeft: 36,\n        marginRight: 32,\n    },\n    helperDownloadContainer: {\n        width: \"100%\",\n        height: 79,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        padding: 10,\n    },\n    helperTxt: {\n        fontFamily: \"archivo-500\",\n        color: \"#121212\",\n        fontSize: 19,\n        width: 483,\n        height: 52,\n    },\n    badgeWindows: {\n        width: 200,\n        height: 79,\n    },\n    badgeMac: {\n        width: 200,\n        height: 79,\n    },\n});\n\nexport default DeviceSettings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}