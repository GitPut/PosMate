{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useState } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RouteSliderScreen = function RouteSliderScreen(_ref) {\n  var finalList = _ref.finalList;\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    index = _useState2[0],\n    setindex = _useState2[1];\n  return _jsxs(View, {\n    children: [_jsxs(Text, {\n      children: [\"Route \", index]\n    }), _jsx(Text, {\n      children: finalList[index].formatted_address\n    }), _jsx(Button, {\n      title: \"Go To Google Maps\",\n      onPress: function onPress() {\n        return window.open(finalList[index].url, \"_blank\");\n      }\n    }), _jsx(Button, {\n      title: \"Back\",\n      onPress: function onPress() {\n        return setindex(index - 1);\n      },\n      disabled: index === 1\n    }), _jsx(Button, {\n      title: \"Next\",\n      onPress: function onPress() {\n        return setindex(index + 1);\n      },\n      disabled: index === finalList.length - 1\n    })]\n  });\n};\nexport default RouteSliderScreen;","map":{"version":3,"names":["React","useState","RouteSliderScreen","finalList","index","setindex","formatted_address","window","open","url","length"],"sources":["/Users/peterputros/Desktop/best-route/RouteSliderScreen.tsx"],"sourcesContent":["import { View, Text, Button } from \"react-native\";\nimport React, { useState } from \"react\";\nimport * as Linking from \"expo-linking\";\n\nconst RouteSliderScreen = ({ finalList }) => {\n  const [index, setindex] = useState(1);\n\n  return (\n    <View>\n      <Text>Route {index}</Text>\n      <Text>{finalList[index].formatted_address}</Text>\n      <Button\n        title=\"Go To Google Maps\"\n        onPress={() => window.open(finalList[index].url, \"_blank\")}\n      />\n      <Button\n        title=\"Back\"\n        onPress={() => setindex(index - 1)}\n        disabled={index === 1}\n      />\n      <Button\n        title=\"Next\"\n        onPress={() => setindex(index + 1)}\n        disabled={index === finalList.length - 1}\n      />\n    </View>\n  );\n};\n\nexport default RouteSliderScreen;\n"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAGxC,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,OAAsB;EAAA,IAAhBC,SAAS,QAATA,SAAS;EACpC,gBAA0BF,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA9BG,KAAK;IAAEC,QAAQ;EAEtB,OACE,MAAC,IAAI;IAAA,WACH,MAAC,IAAI;MAAA,qBAAQD,KAAK;IAAA,EAAQ,EAC1B,KAAC,IAAI;MAAA,UAAED,SAAS,CAACC,KAAK,CAAC,CAACE;IAAiB,EAAQ,EACjD,KAAC,MAAM;MACL,KAAK,EAAC,mBAAmB;MACzB,OAAO,EAAE;QAAA,OAAMC,MAAM,CAACC,IAAI,CAACL,SAAS,CAACC,KAAK,CAAC,CAACK,GAAG,EAAE,QAAQ,CAAC;MAAA;IAAC,EAC3D,EACF,KAAC,MAAM;MACL,KAAK,EAAC,MAAM;MACZ,OAAO,EAAE;QAAA,OAAMJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;MAAA,CAAC;MACnC,QAAQ,EAAEA,KAAK,KAAK;IAAE,EACtB,EACF,KAAC,MAAM;MACL,KAAK,EAAC,MAAM;MACZ,OAAO,EAAE;QAAA,OAAMC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;MAAA,CAAC;MACnC,QAAQ,EAAEA,KAAK,KAAKD,SAAS,CAACO,MAAM,GAAG;IAAE,EACzC;EAAA,EACG;AAEX,CAAC;AAED,eAAeR,iBAAiB"},"metadata":{},"sourceType":"module"}