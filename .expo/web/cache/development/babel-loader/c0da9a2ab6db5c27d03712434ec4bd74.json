{"ast":null,"code":"import React, { Component, useEffect } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { isSignedInSettingsState } from \"../../state/state\";\nimport routerService from \"../../screens\";\nimport { useHistory } from \"react-router-dom\";\nimport WebHomeHeader from \"../../components/WebHomeHeader\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar NonAuthRoute = function NonAuthRoute(props) {\n  var isLoginSettings = isSignedInSettingsState.use();\n  var location = props.location;\n  var history = useHistory();\n\n  return _jsx(_Fragment, {\n    children: _jsx(Switch, {\n      children: routerService && routerService.map(function (route, key) {\n        return _jsx(Route, {\n          path: match.url + \"/\" + route.path,\n          component: route.component\n        }, key);\n      })\n    })\n  });\n};\nexport default NonAuthRoute;","map":{"version":3,"names":["React","Component","useEffect","Redirect","Route","Switch","isSignedInSettingsState","routerService","useHistory","WebHomeHeader","NonAuthRoute","props","isLoginSettings","use","location","history","map","route","key","match","url","path","component"],"sources":["/Users/peterputros/Desktop/PosMate/navigation/non-authed/NonAuthRoute.jsx"],"sourcesContent":["import React, { Component, useEffect } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { isSignedInSettingsState } from 'state/state';\r\n\r\nimport routerService from \"screens/\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport WebHomeHeader from 'components/WebHomeHeader';\r\n\r\n\r\nconst NonAuthRoute = (props) => {\r\n    const isLoginSettings = isSignedInSettingsState.use()\r\n    const { location } = props;\r\n      const history = useHistory();\r\n    \r\n    // useEffect(() => {\r\n    //    if (!location.pathname.includes(\"/authed\") || location.pathname.includes(\"/authed\") && isLoginSettings === false) {\r\n    //        history.push(\"/pos\");\r\n    // }\r\n    // }, [])\r\n    \r\n\r\n    return (\r\n            <>\r\n            {/* <WebHomeHeader /> */}\r\n            <Switch>\r\n {routerService &&\r\n              routerService.map((route, key) => (\r\n                <Route\r\n                  key={key}\r\n                  path={`${match.url}/${route.path}`}\r\n                  component={route.component}\r\n                />\r\n              ))}\r\n            </Switch>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default NonAuthRoute"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAC1D,SAASC,uBAAuB;AAEhC,OAAOC,aAAa;AAEpB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,aAAa;AAAiC;AAAA;AAGrD,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAK,EAAK;EAC5B,IAAMC,eAAe,GAAGN,uBAAuB,CAACO,GAAG,EAAE;EACrD,IAAQC,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ;EACd,IAAMC,OAAO,GAAGP,UAAU,EAAE;;EAS9B,OACQ;IAAA,UAEA,KAAC,MAAM;MAAA,UACjBD,aAAa,IACDA,aAAa,CAACS,GAAG,CAAC,UAACC,KAAK,EAAEC,GAAG;QAAA,OAC3B,KAAC,KAAK;UAEJ,IAAI,EAAKC,KAAK,CAACC,GAAG,SAAIH,KAAK,CAACI,IAAO;UACnC,SAAS,EAAEJ,KAAK,CAACK;QAAU,GAFtBJ,GAAG,CAGR;MAAA,CACH;IAAC;EACK,EACN;AAEf,CAAC;AAED,eAAeR,YAAY"},"metadata":{},"sourceType":"module"}