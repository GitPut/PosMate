{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React, { useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport ReactSelect from \"react-select\";\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar InnerOn = function InnerOn(_ref) {\n  var _e$selectedCaseList;\n  var item = _ref.item,\n    newProduct = _ref.newProduct,\n    newProductOptions = _ref.newProductOptions,\n    setnewProductOptions = _ref.setnewProductOptions,\n    index = _ref.index,\n    e = _ref.e,\n    sete = _ref.sete;\n  var _useState = useState(structuredClone(item.optionsList)),\n    _useState2 = _slicedToArray(_useState, 2),\n    testMap = _useState2[0],\n    settestMap = _useState2[1];\n  var optionLbls = newProduct.options.map(function (el) {\n    if (el.label !== e.label && el.label !== null) {\n      return el.label;\n    }\n  });\n  var ifOptionOptions = [];\n  optionLbls.map(function (opLbl) {\n    return ifOptionOptions.push({\n      value: opLbl,\n      label: opLbl\n    });\n  });\n  if (e.selectedCaseKey || e.selectedCaseValue) {\n    setnewProductOptions(function (prev) {\n      var clone = structuredClone(prev);\n      clone[index].selectedCaseList = [{\n        selectedCaseKey: null,\n        selectedCaseValue: null\n      }];\n      clone[index].selectedCaseKey = null;\n      clone[index].selectedCaseValue = null;\n      return clone;\n    });\n    sete(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        selectedCaseList: [{\n          selectedCaseKey: null,\n          selectedCaseValue: null\n        }]\n      });\n    });\n  }\n  var TestMapItem = function TestMapItem(_ref2) {\n    var eInnerListStart = _ref2.eInnerListStart,\n      indexInnerList = _ref2.indexInnerList;\n    var eInnerList = structuredClone(eInnerListStart);\n    var _useState3 = useState(eInnerList.countsAs ? eInnerList.countsAs : \"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      countsAsValueBeforeBlur = _useState4[0],\n      setcountsAsValueBeforeBlur = _useState4[1];\n    var _useState5 = useState(eInnerList.priceIncrease ? eInnerList.priceIncrease : \"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      priceIncreaseBeforeBlur = _useState6[0],\n      setpriceIncreaseBeforeBlur = _useState6[1];\n    var _useState7 = useState(eInnerList.label),\n      _useState8 = _slicedToArray(_useState7, 2),\n      labelBeforeBlur = _useState8[0],\n      setlabelBeforeBlur = _useState8[1];\n    return _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        paddingTop: 20,\n        alignItems: \"center\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n      },\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter option selection\",\n        onBlur: function onBlur() {\n          var cloneOuter = structuredClone(testMap);\n          cloneOuter[indexInnerList].label = labelBeforeBlur;\n          setnewProductOptions(function (prev) {\n            var clone = structuredClone(prev);\n            clone[index].optionsList = cloneOuter;\n            return clone;\n          });\n          settestMap(cloneOuter);\n        },\n        onChangeText: function onChangeText(val) {\n          setlabelBeforeBlur(val);\n        },\n        value: labelBeforeBlur,\n        label: \"Enter option selection\",\n        variant: \"outlined\",\n        color: \"black\",\n        style: {\n          width: \"45%\"\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Enter price increase\",\n        onBlur: function onBlur() {\n          var cloneOuter = structuredClone(testMap);\n          cloneOuter[indexInnerList].priceIncrease = priceIncreaseBeforeBlur;\n          setnewProductOptions(function (prev) {\n            var clone = structuredClone(prev);\n            clone[index].optionsList = cloneOuter;\n            return clone;\n          });\n          settestMap(cloneOuter);\n        },\n        onChangeText: function onChangeText(val) {\n          var re = /^-?\\d*\\.?\\d*$/;\n          if (val === \"\" || re.test(val)) {\n            setpriceIncreaseBeforeBlur(val);\n          }\n        },\n        value: priceIncreaseBeforeBlur,\n        style: newProductOptions[index].numOfSelectable > 0 ? {\n          width: \"18%\"\n        } : {\n          width: \"35%\"\n        },\n        label: \"Price increase\",\n        variant: \"outlined\",\n        color: \"black\"\n      }), newProductOptions[index].numOfSelectable > 0 && _jsx(TextInput, {\n        placeholder: \"How many selections does it count as (leave empty for 1)\",\n        onBlur: function onBlur() {\n          var cloneOuter = structuredClone(testMap);\n          cloneOuter[indexInnerList].countsAs = countsAsValueBeforeBlur;\n          setnewProductOptions(function (prev) {\n            var clone = structuredClone(prev);\n            clone[index].optionsList = cloneOuter;\n            return clone;\n          });\n          settestMap(cloneOuter);\n        },\n        onChangeText: function onChangeText(val) {\n          var re = /^[0-9.]+$/;\n          if (val === \"\" || re.test(val)) {\n            setcountsAsValueBeforeBlur(val);\n          }\n        },\n        value: countsAsValueBeforeBlur,\n        style: {\n          width: \"16%\"\n        },\n        label: \"Counts as\",\n        variant: \"outlined\",\n        color: \"black\"\n      }), _jsx(TouchableOpacity, {\n        style: {\n          height: 40,\n          width: 40,\n          borderRadius: 25,\n          backgroundColor: \"grey\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        onPress: function onPress() {\n          if (testMap.length > 1 && indexInnerList !== testMap.length - 1) {\n            setnewProductOptions(function (prev) {\n              var clone = structuredClone(prev);\n              var f = clone[index].optionsList.splice(indexInnerList, 1)[0];\n              clone[index].optionsList.splice(indexInnerList + 1, 0, f);\n              settestMap(clone[index].optionsList);\n              return clone;\n            });\n          }\n        },\n        children: _jsx(MaterialCommunityIcons, {\n          name: \"chevron-down\",\n          size: 32,\n          color: \"white\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          height: 40,\n          width: 40,\n          borderRadius: 25,\n          backgroundColor: \"grey\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        onPress: function onPress() {\n          if (testMap.length > 1 && indexInnerList !== 0) {\n            setnewProductOptions(function (prev) {\n              var clone = structuredClone(prev);\n              var f = clone[index].optionsList.splice(indexInnerList, 1)[0];\n              clone[index].optionsList.splice(indexInnerList - 1, 0, f);\n              settestMap(clone[index].optionsList);\n              return clone;\n            });\n          }\n        },\n        children: _jsx(MaterialCommunityIcons, {\n          name: \"chevron-up\",\n          size: 32,\n          color: \"white\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          height: 40,\n          width: 40,\n          borderRadius: 20,\n          backgroundColor: \"grey\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        onPress: function onPress() {\n          var cloneOuter = structuredClone(testMap);\n          cloneOuter.splice(indexInnerList, 1);\n          setnewProductOptions(function (prev) {\n            var clone = structuredClone(prev);\n            clone[index].optionsList = cloneOuter;\n            return clone;\n          });\n          settestMap(cloneOuter);\n        },\n        children: _jsx(Feather, {\n          name: \"x\",\n          size: 30,\n          color: \"white\"\n        })\n      })]\n    }, \"D\" + indexInnerList.toString());\n  };\n  var ESelectedCaseListMapItem = function ESelectedCaseListMapItem(_ref3) {\n    var ifStatement = _ref3.ifStatement,\n      indexOfIf = _ref3.indexOfIf;\n    var local = newProduct.options.filter(function (localE) {\n      return localE.label == ifStatement.selectedCaseKey;\n    });\n    var optionLblsValuesLocal = local.length > 0 ? local[0].optionsList.map(function (el) {\n      return el.label;\n    }) : [];\n    var ifOptionVals = [];\n    optionLblsValuesLocal.map(function (opLbl) {\n      return ifOptionVals.push({\n        value: opLbl,\n        label: opLbl\n      });\n    });\n    return _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        marginBottom: 25,\n        alignItems: \"center\"\n      },\n      children: [_jsx(View, {\n        style: {\n          margin: 10,\n          width: \"40%\",\n          height: 52\n        },\n        children: _jsx(ReactSelect, {\n          options: ifOptionOptions,\n          value: ifStatement.selectedCaseKey && {\n            value: ifStatement.selectedCaseKey,\n            label: ifStatement.selectedCaseKey\n          },\n          onChange: function onChange(val) {\n            var clone;\n            setnewProductOptions(function (prev) {\n              clone = structuredClone(prev);\n              clone[index].selectedCaseList[indexOfIf].selectedCaseKey = val.value;\n              return clone;\n            });\n            sete(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                selectedCaseList: clone[index].selectedCaseList\n              });\n            });\n          },\n          placeholder: \"Show if option\",\n          menuPortalTarget: document.body,\n          styles: {\n            menuPortal: function menuPortal(base) {\n              return _objectSpread(_objectSpread({}, base), {}, {\n                zIndex: 9999\n              });\n            },\n            control: function control(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                background: \"#fff\",\n                borderColor: \"#9e9e9e\",\n                minHeight: \"52px\",\n                height: \"52px\",\n                boxShadow: state.isFocused ? null : null\n              });\n            },\n            valueContainer: function valueContainer(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                height: \"52px\",\n                padding: \"0 6px\"\n              });\n            },\n            input: function input(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                margin: \"0px\"\n              });\n            },\n            indicatorSeparator: function indicatorSeparator(state) {\n              return {\n                display: \"none\"\n              };\n            },\n            indicatorsContainer: function indicatorsContainer(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                height: \"52px\"\n              });\n            }\n          },\n          menuPlacement: \"auto\",\n          menuPosition: \"fixed\"\n        })\n      }), _jsx(FontAwesome5, {\n        name: \"equals\",\n        size: 30,\n        color: \"black\"\n      }), _jsx(View, {\n        style: {\n          margin: 10,\n          width: \"40%\",\n          height: 52\n        },\n        children: _jsx(ReactSelect, {\n          options: ifOptionVals,\n          value: ifStatement.selectedCaseValue && {\n            value: ifStatement.selectedCaseValue,\n            label: ifStatement.selectedCaseValue\n          },\n          onChange: function onChange(val) {\n            var clone;\n            setnewProductOptions(function (prev) {\n              clone = structuredClone(prev);\n              clone[index].selectedCaseList[indexOfIf].selectedCaseValue = val.value;\n              return clone;\n            });\n            sete(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                selectedCaseList: clone[index].selectedCaseList\n              });\n            });\n          },\n          placeholder: \"Show if value\",\n          menuPortalTarget: document.body,\n          styles: {\n            menuPortal: function menuPortal(base) {\n              return _objectSpread(_objectSpread({}, base), {}, {\n                zIndex: 9999\n              });\n            },\n            control: function control(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                background: \"#fff\",\n                borderColor: \"#9e9e9e\",\n                minHeight: \"52px\",\n                height: \"52px\",\n                boxShadow: state.isFocused ? null : null\n              });\n            },\n            valueContainer: function valueContainer(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                height: \"52px\",\n                padding: \"0 6px\"\n              });\n            },\n            input: function input(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                margin: \"0px\"\n              });\n            },\n            indicatorSeparator: function indicatorSeparator(state) {\n              return {\n                display: \"none\"\n              };\n            },\n            indicatorsContainer: function indicatorsContainer(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                height: \"52px\"\n              });\n            }\n          },\n          menuPlacement: \"auto\",\n          menuPosition: \"fixed\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          height: 40,\n          width: 40,\n          borderRadius: 20,\n          backgroundColor: \"grey\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        onPress: function onPress() {\n          var clone;\n          setnewProductOptions(function (prev) {\n            clone = structuredClone(prev);\n            clone[index].selectedCaseList.splice(indexOfIf, 1);\n            return clone;\n          });\n          sete(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              selectedCaseList: clone[index].selectedCaseList\n            });\n          });\n        },\n        children: _jsx(Feather, {\n          name: \"x\",\n          size: 30,\n          color: \"white\"\n        })\n      })]\n    }, \"D\" + indexOfIf.toString());\n  };\n  var _useState9 = useState(e.label),\n    _useState10 = _slicedToArray(_useState9, 2),\n    optionLabelBeforeBlur = _useState10[0],\n    setoptionLabelBeforeBlur = _useState10[1];\n  var _useState11 = useState(e.numOfSelectable ? e.numOfSelectable : \"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    numOfSelectableBeforeBlur = _useState12[0],\n    setnumOfSelectableBeforeBlur = _useState12[1];\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n        paddingBottom: 20,\n        borderBottomColor: \"grey\",\n        borderBottomWidth: 1,\n        flexWrap: \"wrap\"\n      },\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter Option Label\",\n        onBlur: function onBlur() {\n          sete(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              label: optionLabelBeforeBlur\n            });\n          });\n          setnewProductOptions(function (prev) {\n            var clone = structuredClone(prev);\n            clone[index].label = optionLabelBeforeBlur;\n            return clone;\n          });\n        },\n        onChangeText: function onChangeText(val) {\n          setoptionLabelBeforeBlur(val);\n        },\n        value: optionLabelBeforeBlur,\n        style: {\n          margin: 10,\n          width: \"97.5%\",\n          height: 52\n        },\n        label: \"Enter Option Label\",\n        variant: \"outlined\",\n        color: \"black\"\n      }), _jsx(View, {\n        style: {\n          margin: 10,\n          width: \"47%\",\n          height: 52\n        },\n        children: _jsx(ReactSelect, {\n          options: [{\n            value: \"Multi Choice\",\n            label: \"Multi Choice\"\n          }, {\n            value: \"Dropdown\",\n            label: \"Dropdown\"\n          }],\n          value: e.optionType && {\n            value: e.optionType,\n            label: e.optionType\n          },\n          onChange: function onChange(val) {\n            if (e.optionType) {\n              setnewProductOptions(function (prev) {\n                var clone = structuredClone(prev);\n                clone[index].optionType = val.value;\n                return clone;\n              });\n            } else {\n              setnewProductOptions(function (prev) {\n                var clone = structuredClone(prev);\n                clone[index] = _objectSpread(_objectSpread({}, e), {}, {\n                  optionType: val.value\n                });\n                return clone;\n              });\n            }\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                optionType: val.value\n              });\n            });\n          },\n          placeholder: \"Choose Option Type\",\n          menuPortalTarget: document.body,\n          styles: {\n            menuPortal: function menuPortal(base) {\n              return _objectSpread(_objectSpread({}, base), {}, {\n                zIndex: 9999\n              });\n            },\n            control: function control(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                background: \"#fff\",\n                borderColor: \"#9e9e9e\",\n                minHeight: \"52px\",\n                height: \"52px\",\n                boxShadow: state.isFocused ? null : null\n              });\n            },\n            valueContainer: function valueContainer(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                height: \"52px\",\n                padding: \"0 6px\"\n              });\n            },\n            input: function input(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                margin: \"0px\"\n              });\n            },\n            indicatorSeparator: function indicatorSeparator(state) {\n              return {\n                display: \"none\"\n              };\n            },\n            indicatorsContainer: function indicatorsContainer(provided, state) {\n              return _objectSpread(_objectSpread({}, provided), {}, {\n                height: \"52px\"\n              });\n            }\n          },\n          menuPlacement: \"auto\",\n          menuPosition: \"fixed\"\n        })\n      }), _jsx(TouchableOpacity, {\n        disabled: e.optionType !== \"Multi Choice\",\n        style: {\n          margin: 10,\n          width: \"47%\",\n          height: 52\n        },\n        children: _jsx(TextInput, {\n          placeholder: \"Enter selection limit or leave empty\",\n          onBlur: function onBlur() {\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                numOfSelectable: numOfSelectableBeforeBlur\n              });\n            });\n            setnewProductOptions(function (prev) {\n              var clone = structuredClone(prev);\n              clone[index].numOfSelectable = numOfSelectableBeforeBlur;\n              return clone;\n            });\n          },\n          onChangeText: function onChangeText(val) {\n            var re = /^[0-9\\b]+$/;\n            if (val === \"\" || re.test(val)) {\n              if (e.optionType === \"Multi Choice\") {\n                setnumOfSelectableBeforeBlur(val);\n              }\n            }\n          },\n          value: numOfSelectableBeforeBlur,\n          label: \"Enter selection limit\",\n          variant: \"outlined\",\n          style: {\n            width: \"100%\",\n            opacity: e.optionType === \"Dropdown\" ? 0.5 : 1\n          },\n          color: \"black\"\n        })\n      }), _jsxs(View, {\n        style: {\n          margin: 10,\n          width: \"47%\",\n          height: 52,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(Text, {\n          style: {\n            marginBottom: 5,\n            fontSize: 14\n          },\n          children: \"Is Option Required?\"\n        }), _jsx(Switch, {\n          value: e.isRequired,\n          onValueChange: function onValueChange(val) {\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                isRequired: val\n              });\n            });\n            setnewProductOptions(function (prev) {\n              var clone = structuredClone(prev);\n              clone[index].isRequired = val;\n              return clone;\n            });\n          }\n        })]\n      })]\n    }), _jsx(FlatList, {\n      data: testMap,\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item,\n          index = _ref4.index;\n        return _jsx(TestMapItem, {\n          eInnerListStart: item,\n          indexInnerList: index\n        }, \"D\" + index.toString());\n      },\n      listKey: function listKey(item, index) {\n        return \"D\" + index.toString();\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return \"D\" + index.toString();\n      }\n    }), _jsx(Button, {\n      title: \"Add Option Choice\",\n      onPress: function onPress() {\n        var cloneOuter = structuredClone(testMap);\n        cloneOuter.push({\n          label: null,\n          priceIncrease: null\n        });\n        setnewProductOptions(function (prev) {\n          var clone = structuredClone(prev);\n          clone[index].optionsList = cloneOuter;\n          return clone;\n        });\n        settestMap(cloneOuter);\n      },\n      disabled: testMap.length > 0 && testMap[testMap.length - 1].label === null,\n      style: {\n        marginBottom: 25,\n        marginTop: 25,\n        backgroundColor: \"#4050B5\"\n      }\n    }), ((_e$selectedCaseList = e.selectedCaseList) == null ? void 0 : _e$selectedCaseList.length) > 0 && _jsx(View, {\n      style: {\n        width: \"100%\",\n        height: 1,\n        backgroundColor: \"grey\",\n        marginTop: 10,\n        marginBottom: 10\n      }\n    }), _jsx(FlatList, {\n      data: e.selectedCaseList,\n      renderItem: function renderItem(_ref5) {\n        var item = _ref5.item,\n          index = _ref5.index;\n        return _jsx(ESelectedCaseListMapItem, {\n          ifStatement: item,\n          indexOfIf: index\n        });\n      },\n      listKey: function listKey(item, index) {\n        return \"D\" + index.toString();\n      }\n    }), optionLbls.length > 1 && _jsx(Button, {\n      title: \"Add If Statement\",\n      onPress: function onPress() {\n        if (!newProductOptions[index].selectedCaseList) {\n          console.log(\"Added new if statement list\");\n          setnewProductOptions(function (prev) {\n            var clone = structuredClone(prev);\n            clone[index].selectedCaseList = [{\n              selectedCaseKey: null,\n              selectedCaseValue: null\n            }];\n            return clone;\n          });\n          sete(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              selectedCaseList: [{\n                selectedCaseKey: null,\n                selectedCaseValue: null\n              }]\n            });\n          });\n        } else {\n          console.log(\"Added new if statement\");\n          var clone;\n          setnewProductOptions(function (prev) {\n            clone = structuredClone(prev);\n            clone[index].selectedCaseList.push({\n              selectedCaseKey: null,\n              selectedCaseValue: null\n            });\n            return clone;\n          });\n          sete(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              selectedCaseList: clone[index].selectedCaseList\n            });\n          });\n        }\n      },\n      style: {\n        backgroundColor: \"#4050B5\",\n        marginBottom: 25\n      }\n    })]\n  });\n};\nvar OptionView = function OptionView(_ref6) {\n  var item = _ref6.item,\n    index = _ref6.index,\n    setnewProduct = _ref6.setnewProduct,\n    newProduct = _ref6.newProduct,\n    newProductOptions = _ref6.newProductOptions,\n    setnewProductOptions = _ref6.setnewProductOptions,\n    indexOn = _ref6.indexOn,\n    setindexOn = _ref6.setindexOn;\n  var _useState13 = useState(structuredClone(item)),\n    _useState14 = _slicedToArray(_useState13, 2),\n    e = _useState14[0],\n    sete = _useState14[1];\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: {\n        margin: 15,\n        backgroundColor: \"lightgrey\",\n        borderRadius: 10\n      },\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return indexOn !== index ? setindexOn(index) : setindexOn(null);\n        },\n        style: [{\n          backgroundColor: \"grey\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          padding: 5,\n          borderTopLeftRadius: 10,\n          borderTopRightRadius: 10\n        }, indexOn !== index && {\n          borderBottomLeftRadius: 10,\n          borderBottomRightRadius: 10\n        }],\n        children: [_jsx(Text, {\n          style: {\n            width: \"50%\",\n            paddingLeft: 5,\n            fontSize: 16,\n            color: \"white\",\n            fontFamily: \"archivo-600\"\n          },\n          children: item.label ? item.label : \"New Option\"\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            if (newProductOptions.length > 1 && index !== newProductOptions.length - 1) {\n              setnewProductOptions(function (prev) {\n                var clone = structuredClone(prev);\n                var f = clone.splice(index, 1)[0];\n                clone.splice(index + 1, 0, f);\n                return clone;\n              });\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newProductOptions\n                });\n              });\n              setindexOn(null);\n            }\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"chevron-down\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            if (newProductOptions.length > 1 && index !== 0) {\n              setnewProductOptions(function (prev) {\n                var clone = structuredClone(prev);\n                var f = clone.splice(index, 1)[0];\n                clone.splice(index - 1, 0, f);\n                return clone;\n              });\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newProductOptions\n                });\n              });\n              setindexOn(null);\n            }\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"chevron-up\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            setnewProductOptions(function (prev) {\n              var clone = structuredClone(prev);\n              clone.push(_objectSpread(_objectSpread({}, item), {}, {\n                label: item.label + \" Copy\",\n                id: Math.random().toString(36).substr(2, 9)\n              }));\n              return clone;\n            });\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions\n              });\n            });\n            setindexOn(newProductOptions.length);\n          },\n          children: _jsx(Feather, {\n            name: \"copy\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            var newProductOptionsUpdated = newProduct.options.filter(function (e, filterIndex) {\n              return filterIndex !== index && e.id !== item.id;\n            });\n            setnewProductOptions(function (prev) {\n              var clone = structuredClone(prev);\n              clone.splice(index, 1);\n              return clone;\n            });\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptionsUpdated\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(Feather, {\n            name: \"x\",\n            size: 32,\n            color: \"white\"\n          })\n        })]\n      }), indexOn === index && _jsx(View, {\n        style: {\n          padding: 20\n        },\n        children: _jsx(InnerOn, {\n          item: item,\n          index: index,\n          newProduct: newProduct,\n          newProductOptions: newProductOptions,\n          setnewProductOptions: setnewProductOptions,\n          e: e,\n          sete: sete\n        }, \"D\" + index.toString())\n      })]\n    }), newProduct.options.length - 1 === index && _jsx(Button, {\n      title: \"Add Option\",\n      onPress: function onPress() {\n        setnewProductOptions(function (prev) {\n          var clone = structuredClone(prev);\n          clone.push({\n            label: null,\n            optionsList: [],\n            selectedCaseKey: null,\n            selectedCaseValue: null,\n            numOfSelectable: null,\n            id: Math.random().toString(36).substr(2, 9),\n            optionType: null\n          });\n          return clone;\n        });\n        setindexOn(newProductOptions.length);\n      },\n      disabled: e.label === null,\n      style: {\n        marginBottom: 25,\n        backgroundColor: \"#4050B5\"\n      }\n    })]\n  });\n};\nexport default OptionView;","map":{"version":3,"names":["React","useState","Button","Switch","TextInput","MaterialCommunityIcons","Feather","ReactSelect","FontAwesome5","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","InnerOn","_ref","_e$selectedCaseList","item","newProduct","newProductOptions","setnewProductOptions","index","e","sete","_useState","structuredClone","optionsList","_useState2","_slicedToArray","testMap","settestMap","optionLbls","options","map","el","label","ifOptionOptions","opLbl","push","value","selectedCaseKey","selectedCaseValue","prev","clone","selectedCaseList","_objectSpread","TestMapItem","_ref2","eInnerListStart","indexInnerList","eInnerList","_useState3","countsAs","_useState4","countsAsValueBeforeBlur","setcountsAsValueBeforeBlur","_useState5","priceIncrease","_useState6","priceIncreaseBeforeBlur","setpriceIncreaseBeforeBlur","_useState7","_useState8","labelBeforeBlur","setlabelBeforeBlur","View","style","flexDirection","paddingTop","alignItems","width","justifyContent","children","placeholder","onBlur","cloneOuter","onChangeText","val","variant","color","re","test","numOfSelectable","TouchableOpacity","height","borderRadius","backgroundColor","onPress","length","f","splice","name","size","toString","ESelectedCaseListMapItem","_ref3","ifStatement","indexOfIf","local","filter","localE","optionLblsValuesLocal","ifOptionVals","marginBottom","margin","onChange","menuPortalTarget","document","body","styles","menuPortal","base","zIndex","control","provided","state","background","borderColor","minHeight","boxShadow","isFocused","valueContainer","padding","input","indicatorSeparator","display","indicatorsContainer","menuPlacement","menuPosition","_useState9","_useState10","optionLabelBeforeBlur","setoptionLabelBeforeBlur","_useState11","_useState12","numOfSelectableBeforeBlur","setnumOfSelectableBeforeBlur","alignSelf","paddingBottom","borderBottomColor","borderBottomWidth","flexWrap","prevState","optionType","disabled","opacity","Text","fontSize","isRequired","onValueChange","FlatList","data","renderItem","_ref4","listKey","keyExtractor","title","marginTop","_ref5","console","log","OptionView","_ref6","setnewProduct","indexOn","setindexOn","_useState13","_useState14","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","paddingLeft","fontFamily","id","Math","random","substr","newProductOptionsUpdated","filterIndex"],"sources":["/Users/peterputros/Desktop/PosMate/components/product/OptionView.tsx"],"sourcesContent":["import { View, Text, TouchableOpacity, FlatList } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Button, Switch, TextInput } from \"@react-native-material/core\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport ReactSelect from \"react-select\";\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\n\nconst InnerOn = ({\n  item,\n  newProduct,\n  newProductOptions,\n  setnewProductOptions,\n  index,\n  e,\n  sete,\n}) => {\n  const [testMap, settestMap] = useState(structuredClone(item.optionsList));\n  const optionLbls = newProduct.options.map(function (el) {\n    if (el.label !== e.label && el.label !== null) {\n      return el.label;\n    }\n  });\n\n  const ifOptionOptions = [];\n  optionLbls.map((opLbl) =>\n    ifOptionOptions.push({ value: opLbl, label: opLbl })\n  );\n\n  if (e.selectedCaseKey || e.selectedCaseValue) {\n    setnewProductOptions((prev) => {\n      const clone = structuredClone(prev);\n      clone[index].selectedCaseList = [\n        {\n          selectedCaseKey: null,\n          selectedCaseValue: null,\n        },\n      ];\n\n      clone[index].selectedCaseKey = null;\n      clone[index].selectedCaseValue = null;\n\n      return clone;\n    });\n\n    sete((prev) => ({\n      ...prev,\n      selectedCaseList: [{ selectedCaseKey: null, selectedCaseValue: null }],\n    }));\n  }\n\n  const TestMapItem = ({ eInnerListStart, indexInnerList }) => {\n    const eInnerList = structuredClone(eInnerListStart);\n\n    const [countsAsValueBeforeBlur, setcountsAsValueBeforeBlur] = useState(\n      eInnerList.countsAs ? eInnerList.countsAs : \"\"\n    );\n\n    const [priceIncreaseBeforeBlur, setpriceIncreaseBeforeBlur] = useState(\n      eInnerList.priceIncrease ? eInnerList.priceIncrease : \"\"\n    );\n\n    const [labelBeforeBlur, setlabelBeforeBlur] = useState(eInnerList.label);\n\n    return (\n      <View\n        key={\"D\" + indexInnerList.toString()}\n        style={{\n          flexDirection: \"row\",\n          paddingTop: 20,\n          alignItems: \"center\",\n          width: \"100%\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <TextInput\n          placeholder=\"Enter option selection\"\n          onBlur={() => {\n            const cloneOuter = structuredClone(testMap);\n            cloneOuter[indexInnerList].label = labelBeforeBlur;\n            // newProductOptions.current[index].optionsList = clone;\n            setnewProductOptions((prev) => {\n              const clone = structuredClone(prev);\n              clone[index].optionsList = cloneOuter;\n              return clone;\n            });\n            settestMap(cloneOuter);\n          }}\n          onChangeText={(val) => {\n            setlabelBeforeBlur(val);\n          }}\n          value={labelBeforeBlur}\n          label=\"Enter option selection\"\n          variant=\"outlined\"\n          color=\"black\"\n          style={{ width: \"45%\" }}\n        />\n        <TextInput\n          placeholder=\"Enter price increase\"\n          onBlur={() => {\n            const cloneOuter = structuredClone(testMap);\n            cloneOuter[indexInnerList].priceIncrease = priceIncreaseBeforeBlur;\n            // newProductOptions.current[index].optionsList = cloneOuter;\n            setnewProductOptions((prev) => {\n              const clone = structuredClone(prev);\n              clone[index].optionsList = cloneOuter;\n              return clone;\n            });\n            settestMap(cloneOuter);\n          }}\n          onChangeText={(val) => {\n            const re = /^-?\\d*\\.?\\d*$/;\n\n            // if value is not blank, then test the regex\n\n            if (val === \"\" || re.test(val)) {\n              setpriceIncreaseBeforeBlur(val);\n            }\n          }}\n          value={priceIncreaseBeforeBlur}\n          style={\n            newProductOptions[index].numOfSelectable > 0\n              ? { width: \"18%\" }\n              : { width: \"35%\" }\n          }\n          label=\"Price increase\"\n          variant=\"outlined\"\n          color=\"black\"\n        />\n        {newProductOptions[index].numOfSelectable > 0 && (\n          <TextInput\n            placeholder=\"How many selections does it count as (leave empty for 1)\"\n            onBlur={() => {\n              const cloneOuter = structuredClone(testMap);\n              cloneOuter[indexInnerList].countsAs = countsAsValueBeforeBlur;\n              // newProductOptions.current[index].optionsList = cloneOuter;\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                clone[index].optionsList = cloneOuter;\n                return clone;\n              });\n              settestMap(cloneOuter);\n            }}\n            onChangeText={(val) => {\n              const re = /^[0-9.]+$/;\n\n              // if value is not blank, then test the regex\n\n              if (val === \"\" || re.test(val)) {\n                setcountsAsValueBeforeBlur(val);\n              }\n            }}\n            value={countsAsValueBeforeBlur}\n            style={{ width: \"16%\" }}\n            label=\"Counts as\"\n            variant=\"outlined\"\n            color=\"black\"\n          />\n        )}\n        <TouchableOpacity\n          style={{\n            height: 40,\n            width: 40,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n          onPress={() => {\n            //  cloneOuter.splice(indexInnerList, 1);\n            //  setnewProductOptions((prev) => {\n            //    const clone = structuredClone(prev);\n            //    clone[index].optionsList = cloneOuter;\n            //    return clone;\n            //  });\n            // settestMap(cloneOuter);\n\n            if (testMap.length > 1 && indexInnerList !== testMap.length - 1) {\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                const f = clone[index].optionsList.splice(indexInnerList, 1)[0];\n                clone[index].optionsList.splice(indexInnerList + 1, 0, f);\n                settestMap(clone[index].optionsList);\n                return clone;\n              });\n            }\n          }}\n        >\n          <MaterialCommunityIcons name=\"chevron-down\" size={32} color=\"white\" />\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{\n            height: 40,\n            width: 40,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n          onPress={() => {\n            if (testMap.length > 1 && indexInnerList !== 0) {\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                const f = clone[index].optionsList.splice(indexInnerList, 1)[0];\n                clone[index].optionsList.splice(indexInnerList - 1, 0, f);\n                settestMap(clone[index].optionsList);\n                return clone;\n              });\n            }\n          }}\n        >\n          <MaterialCommunityIcons name=\"chevron-up\" size={32} color=\"white\" />\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{\n            height: 40,\n            width: 40,\n            borderRadius: 20,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n          onPress={() => {\n            const cloneOuter = structuredClone(testMap);\n            cloneOuter.splice(indexInnerList, 1);\n            // newProductOptions.current[index].optionsList = clone;\n            setnewProductOptions((prev) => {\n              const clone = structuredClone(prev);\n              clone[index].optionsList = cloneOuter;\n              return clone;\n            });\n            settestMap(cloneOuter);\n          }}\n        >\n          <Feather name=\"x\" size={30} color=\"white\" />\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  const ESelectedCaseListMapItem = ({ ifStatement, indexOfIf }) => {\n    const local = newProduct.options.filter(\n      (localE) => localE.label == ifStatement.selectedCaseKey\n    );\n    const optionLblsValuesLocal =\n      local.length > 0\n        ? local[0].optionsList.map(function (el) {\n            return el.label;\n          })\n        : [];\n\n    const ifOptionVals = [];\n    optionLblsValuesLocal.map((opLbl) =>\n      ifOptionVals.push({ value: opLbl, label: opLbl })\n    );\n\n    return (\n      <View\n        key={\"D\" + indexOfIf.toString()}\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          marginBottom: 25,\n          alignItems: \"center\",\n        }}\n      >\n        <View\n          style={{\n            margin: 10,\n            width: \"40%\",\n            height: 52,\n          }}\n        >\n          <ReactSelect\n            options={ifOptionOptions}\n            value={\n              ifStatement.selectedCaseKey && {\n                value: ifStatement.selectedCaseKey,\n                label: ifStatement.selectedCaseKey,\n              }\n            }\n            onChange={(val) => {\n              let clone;\n              setnewProductOptions((prev) => {\n                clone = structuredClone(prev);\n                clone[index].selectedCaseList[indexOfIf].selectedCaseKey =\n                  val.value;\n                return clone;\n              });\n              sete((prev) => ({\n                ...prev,\n                selectedCaseList: clone[index].selectedCaseList,\n              }));\n            }}\n            placeholder={\"Show if option\"}\n            menuPortalTarget={document.body}\n            styles={{\n              menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n              control: (provided, state) => ({\n                ...provided,\n                background: \"#fff\",\n                borderColor: \"#9e9e9e\",\n                minHeight: \"52px\",\n                height: \"52px\",\n                boxShadow: state.isFocused ? null : null,\n              }),\n\n              valueContainer: (provided, state) => ({\n                ...provided,\n                height: \"52px\",\n                padding: \"0 6px\",\n              }),\n\n              input: (provided, state) => ({\n                ...provided,\n                margin: \"0px\",\n              }),\n              indicatorSeparator: (state) => ({\n                display: \"none\",\n              }),\n              indicatorsContainer: (provided, state) => ({\n                ...provided,\n                height: \"52px\",\n              }),\n            }}\n            menuPlacement=\"auto\"\n            menuPosition=\"fixed\"\n          />\n        </View>\n        <FontAwesome5 name=\"equals\" size={30} color=\"black\" />\n        <View\n          style={{\n            margin: 10,\n            width: \"40%\",\n            height: 52,\n          }}\n        >\n          <ReactSelect\n            options={ifOptionVals}\n            value={\n              ifStatement.selectedCaseValue && {\n                value: ifStatement.selectedCaseValue,\n                label: ifStatement.selectedCaseValue,\n              }\n            }\n            onChange={(val) => {\n              let clone;\n              setnewProductOptions((prev) => {\n                clone = structuredClone(prev);\n                clone[index].selectedCaseList[indexOfIf].selectedCaseValue =\n                  val.value;\n                return clone;\n              });\n              sete((prev) => ({\n                ...prev,\n                selectedCaseList: clone[index].selectedCaseList,\n              }));\n            }}\n            placeholder={\"Show if value\"}\n            menuPortalTarget={document.body}\n            styles={{\n              menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n              control: (provided, state) => ({\n                ...provided,\n                background: \"#fff\",\n                borderColor: \"#9e9e9e\",\n                minHeight: \"52px\",\n                height: \"52px\",\n                boxShadow: state.isFocused ? null : null,\n              }),\n\n              valueContainer: (provided, state) => ({\n                ...provided,\n                height: \"52px\",\n                padding: \"0 6px\",\n              }),\n\n              input: (provided, state) => ({\n                ...provided,\n                margin: \"0px\",\n              }),\n              indicatorSeparator: (state) => ({\n                display: \"none\",\n              }),\n              indicatorsContainer: (provided, state) => ({\n                ...provided,\n                height: \"52px\",\n              }),\n            }}\n            menuPlacement=\"auto\"\n            menuPosition=\"fixed\"\n          />\n        </View>\n        <TouchableOpacity\n          style={{\n            height: 40,\n            width: 40,\n            borderRadius: 20,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n          onPress={() => {\n            let clone;\n            setnewProductOptions((prev) => {\n              clone = structuredClone(prev);\n              clone[index].selectedCaseList.splice(indexOfIf, 1);\n              return clone;\n            });\n            sete((prev) => ({\n              ...prev,\n              selectedCaseList: clone[index].selectedCaseList,\n            }));\n          }}\n        >\n          <Feather name=\"x\" size={30} color=\"white\" />\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  const [optionLabelBeforeBlur, setoptionLabelBeforeBlur] = useState(e.label);\n  const [numOfSelectableBeforeBlur, setnumOfSelectableBeforeBlur] = useState(\n    e.numOfSelectable ? e.numOfSelectable : \"\"\n  );\n\n  return (\n    <>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          alignSelf: \"center\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          paddingBottom: 20,\n          borderBottomColor: \"grey\",\n          borderBottomWidth: 1,\n          flexWrap: \"wrap\",\n        }}\n      >\n        <TextInput\n          placeholder=\"Enter Option Label\"\n          onBlur={() => {\n            sete((prevState) => ({\n              ...prevState,\n              label: optionLabelBeforeBlur,\n            }));\n            // newProductOptions.current[index].label = optionLabelBeforeBlur;\n            setnewProductOptions((prev) => {\n              const clone = structuredClone(prev);\n              clone[index].label = optionLabelBeforeBlur;\n              return clone;\n            });\n          }}\n          onChangeText={(val) => {\n            setoptionLabelBeforeBlur(val);\n          }}\n          value={optionLabelBeforeBlur}\n          style={{ margin: 10, width: \"97.5%\", height: 52 }}\n          label=\"Enter Option Label\"\n          variant=\"outlined\"\n          color=\"black\"\n        />\n        <View\n          style={{\n            margin: 10,\n            width: \"47%\",\n            height: 52,\n          }}\n        >\n          <ReactSelect\n            options={[\n              { value: \"Multi Choice\", label: \"Multi Choice\" },\n              { value: \"Dropdown\", label: \"Dropdown\" },\n            ]}\n            value={\n              e.optionType && {\n                value: e.optionType,\n                label: e.optionType,\n              }\n            }\n            onChange={(val) => {\n              if (e.optionType) {\n                // newProductOptions.current[index].optionType = val.value;\n                setnewProductOptions((prev) => {\n                  const clone = structuredClone(prev);\n                  clone[index].optionType = val.value;\n                  return clone;\n                });\n              } else {\n                // newProductOptions.current[index] = {\n                //   ...e,\n                //   optionType: val.value,\n                // };\n                setnewProductOptions((prev) => {\n                  const clone = structuredClone(prev);\n                  clone[index] = {\n                    ...e,\n                    optionType: val.value,\n                  };\n                  return clone;\n                });\n              }\n              sete((prevState) => ({\n                ...prevState,\n                optionType: val.value,\n              }));\n            }}\n            placeholder={\"Choose Option Type\"}\n            menuPortalTarget={document.body}\n            styles={{\n              menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n              control: (provided, state) => ({\n                ...provided,\n                background: \"#fff\",\n                borderColor: \"#9e9e9e\",\n                minHeight: \"52px\",\n                height: \"52px\",\n                boxShadow: state.isFocused ? null : null,\n              }),\n\n              valueContainer: (provided, state) => ({\n                ...provided,\n                height: \"52px\",\n                padding: \"0 6px\",\n              }),\n\n              input: (provided, state) => ({\n                ...provided,\n                margin: \"0px\",\n              }),\n              indicatorSeparator: (state) => ({\n                display: \"none\",\n              }),\n              indicatorsContainer: (provided, state) => ({\n                ...provided,\n                height: \"52px\",\n              }),\n            }}\n            menuPlacement=\"auto\"\n            menuPosition=\"fixed\"\n          />\n        </View>\n        <TouchableOpacity\n          disabled={e.optionType !== \"Multi Choice\"}\n          style={{ margin: 10, width: \"47%\", height: 52 }}\n        >\n          <TextInput\n            placeholder=\"Enter selection limit or leave empty\"\n            onBlur={() => {\n              sete((prevState) => ({\n                ...prevState,\n                numOfSelectable: numOfSelectableBeforeBlur,\n              }));\n              // newProductOptions.current[index].numOfSelectable = numOfSelectableBeforeBlur;\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                clone[index].numOfSelectable = numOfSelectableBeforeBlur;\n                return clone;\n              });\n            }}\n            onChangeText={(val) => {\n              const re = /^[0-9\\b]+$/;\n\n              // if value is not blank, then test the regex\n\n              if (val === \"\" || re.test(val)) {\n                if (e.optionType === \"Multi Choice\") {\n                  setnumOfSelectableBeforeBlur(val);\n                }\n              }\n            }}\n            value={numOfSelectableBeforeBlur}\n            label=\"Enter selection limit\"\n            variant=\"outlined\"\n            style={{\n              width: \"100%\",\n              opacity: e.optionType === \"Dropdown\" ? 0.5 : 1,\n            }}\n            color=\"black\"\n          />\n        </TouchableOpacity>\n        <View\n          style={{\n            margin: 10,\n            width: \"47%\",\n            height: 52,\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Text style={{ marginBottom: 5, fontSize: 14 }}>\n            Is Option Required?\n          </Text>\n          <Switch\n            value={e.isRequired}\n            onValueChange={(val) => {\n              sete((prevState) => ({ ...prevState, isRequired: val }));\n              // newProductOptions.current[index].isRequired = val;\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                clone[index].isRequired = val;\n                return clone;\n              });\n            }}\n          />\n        </View>\n      </View>\n      {/* Convert .map to flatlist */}\n      <FlatList\n        data={testMap}\n        renderItem={({ item, index }) => (\n          <TestMapItem\n            key={\"D\" + index.toString()}\n            eInnerListStart={item}\n            indexInnerList={index}\n          />\n        )}\n        listKey={(item, index) => \"D\" + index.toString()}\n        keyExtractor={(item, index) => \"D\" + index.toString()}\n      />\n      <Button\n        title=\"Add Option Choice\"\n        onPress={() => {\n          const cloneOuter = structuredClone(testMap);\n          cloneOuter.push({\n            label: null,\n            priceIncrease: null,\n          });\n          // newProductOptions.current[index].optionsList = clone;\n          setnewProductOptions((prev) => {\n            const clone = structuredClone(prev);\n            clone[index].optionsList = cloneOuter;\n            return clone;\n          });\n          settestMap(cloneOuter);\n        }}\n        \n        disabled={\n          testMap.length > 0 && testMap[testMap.length - 1].label === null\n        }\n        style={{\n          marginBottom: 25,\n          marginTop: 25,\n          backgroundColor: \"#4050B5\",\n        }}\n      />\n      {e.selectedCaseList?.length > 0 && (\n        <View\n          style={{\n            width: \"100%\",\n            height: 1,\n            backgroundColor: \"grey\",\n            marginTop: 10,\n            marginBottom: 10,\n          }}\n        />\n      )}\n      <FlatList\n        data={e.selectedCaseList}\n        renderItem={({ item, index }) => (\n          <ESelectedCaseListMapItem ifStatement={item} indexOfIf={index} />\n        )}\n        listKey={(item, index) => \"D\" + index.toString()}\n      />\n      {optionLbls.length > 1 && (\n        <Button\n          title=\"Add If Statement\"\n          onPress={() => {\n            if (!newProductOptions[index].selectedCaseList) {\n              console.log(\"Added new if statement list\");\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                clone[index].selectedCaseList = [\n                  {\n                    selectedCaseKey: null,\n                    selectedCaseValue: null,\n                  },\n                ];\n                return clone;\n              });\n              sete((prev) => ({\n                ...prev,\n                selectedCaseList: [\n                  { selectedCaseKey: null, selectedCaseValue: null },\n                ],\n              }));\n            } else {\n              console.log(\"Added new if statement\");\n              let clone;\n              setnewProductOptions((prev) => {\n                clone = structuredClone(prev);\n                clone[index].selectedCaseList.push({\n                  selectedCaseKey: null,\n                  selectedCaseValue: null,\n                });\n                return clone;\n              });\n              sete((prev) => ({\n                ...prev,\n                selectedCaseList: clone[index].selectedCaseList,\n              }));\n            }\n          }}\n          style={{ backgroundColor: \"#4050B5\", marginBottom: 25 }}\n        />\n      )}\n    </>\n  );\n};\n\nconst OptionView = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n  setnewProductOptions,\n  indexOn,\n  setindexOn,\n}) => {\n  const [e, sete] = useState(structuredClone(item));\n\n  return (\n    <View>\n      <View\n        style={{\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n          borderRadius: 10,\n        }}\n      >\n        <TouchableOpacity\n          onPress={() =>\n            indexOn !== index ? setindexOn(index) : setindexOn(null)\n          }\n          style={[\n            {\n              backgroundColor: \"grey\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: 5,\n              borderTopLeftRadius: 10,\n              borderTopRightRadius: 10,\n            },\n            indexOn !== index && {\n              borderBottomLeftRadius: 10,\n              borderBottomRightRadius: 10,\n            },\n          ]}\n        >\n          <Text\n            style={{\n              width: \"50%\",\n              paddingLeft: 5,\n              fontSize: 16,\n              color: \"white\",\n              fontFamily: \"archivo-600\",\n            }}\n          >\n            {item.label ? item.label : \"New Option\"}\n          </Text>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              if (\n                newProductOptions.length > 1 &&\n                index !== newProductOptions.length - 1\n              ) {\n                setnewProductOptions((prev) => {\n                  const clone = structuredClone(prev);\n                  const f = clone.splice(index, 1)[0];\n                  clone.splice(index + 1, 0, f);\n                  return clone;\n                });\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions,\n                }));\n                setindexOn(null);\n              }\n            }}\n          >\n            <MaterialCommunityIcons\n              name=\"chevron-down\"\n              size={32}\n              color=\"white\"\n            />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              if (newProductOptions.length > 1 && index !== 0) {\n                setnewProductOptions((prev) => {\n                  const clone = structuredClone(prev);\n                  const f = clone.splice(index, 1)[0];\n                  clone.splice(index - 1, 0, f);\n                  return clone;\n                });\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions,\n                }));\n                setindexOn(null);\n              }\n            }}\n          >\n            <MaterialCommunityIcons name=\"chevron-up\" size={32} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                clone.push({\n                  ...item,\n                  label: item.label + \" Copy\",\n                  id: Math.random().toString(36).substr(2, 9),\n                });\n                return clone;\n              });\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions,\n              }));\n              setindexOn(newProductOptions.length);\n            }}\n          >\n            <Feather name=\"copy\" size={32} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              const newProductOptionsUpdated = newProduct.options.filter(\n                (e, filterIndex) => filterIndex !== index && e.id !== item.id\n              );\n              // newProductOptions.current.splice(index, 1);\n              setnewProductOptions((prev) => {\n                const clone = structuredClone(prev);\n                clone.splice(index, 1);\n                return clone;\n              });\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptionsUpdated,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <Feather name=\"x\" size={32} color=\"white\" />\n          </TouchableOpacity>\n        </TouchableOpacity>\n        {indexOn === index && (\n          <View style={{ padding: 20 }}>\n            <InnerOn\n              key={\"D\" + index.toString()}\n              item={item}\n              index={index}\n              newProduct={newProduct}\n              newProductOptions={newProductOptions}\n              setnewProductOptions={setnewProductOptions}\n              e={e}\n              sete={sete}\n            />\n          </View>\n        )}\n      </View>\n      {newProduct.options.length - 1 === index && (\n        <Button\n          title=\"Add Option\"\n          onPress={() => {\n            setnewProductOptions((prev) => {\n              const clone = structuredClone(prev);\n              clone.push({\n                label: null,\n                optionsList: [],\n                selectedCaseKey: null,\n                selectedCaseValue: null,\n                numOfSelectable: null,\n                id: Math.random().toString(36).substr(2, 9),\n                optionType: null,\n              });\n              return clone;\n            });\n\n            // setnewProduct((prevState) => ({\n            //   ...prevState,\n            //   options: newProductOptions,\n            // }));\n            setindexOn(newProductOptions.length);\n          }}\n          disabled={e.label === null}\n          style={{ marginBottom: 25, backgroundColor: \"#4050B5\" }}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default OptionView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}