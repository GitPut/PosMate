{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"../state/state\";\nimport { updateData } from \"../state/firebaseFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddProduct = function AddProduct(_ref) {\n  var setProductModal = _ref.setProductModal,\n    setisModalVisible = _ref.setisModalVisible,\n    existingProduct = _ref.existingProduct,\n    existingProductIndex = _ref.existingProductIndex;\n  var catalog = userStoreState.use();\n  var _useState = useState(existingProduct ? existingProduct : {\n      name: null,\n      price: null,\n      catagory: null,\n      options: [],\n      description: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    newProduct = _useState2[0],\n    setnewProduct = _useState2[1];\n  var _useState3 = useState({\n      index: null,\n      inputName: null,\n      innerList: null\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    autoFocusOn = _useState4[0],\n    setautoFocusOn = _useState4[1];\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [copyProductData]));\n    } else if (existingProduct) {\n      var copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n      updateData(_toConsumableArray(catalog.categories), copy);\n    } else {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [newProduct]));\n    }\n    setisModalVisible(true);\n  }\n  useEffect(function () {\n    var scrollPosition = sessionStorage.getItem(\"scrollPosition\");\n    if (scrollPosition) {\n      window.scrollTo(0, parseInt(scrollPosition));\n      sessionStorage.removeItem(\"scrollPosition\");\n    }\n  }, [newProduct]);\n  var OptionsAddingSection = function OptionsAddingSection() {\n    return _jsxs(View, {\n      children: [newProduct.options.map(function (e, index) {\n        var _useState5 = useState([]),\n          _useState6 = _slicedToArray(_useState5, 2),\n          optionLblsValues = _useState6[0],\n          setoptionLblsValues = _useState6[1];\n        var _useState7 = useState([]),\n          _useState8 = _slicedToArray(_useState7, 2),\n          optionLbls = _useState8[0],\n          setoptionLbls = _useState8[1];\n        useEffect(function () {\n          if (newProduct.options.length > 1) {\n            var optionLblsLocal = [];\n            newProduct.options.forEach(function (checkUseE) {\n              if (checkUseE.label !== e.label) optionLblsLocal.push(checkUseE.label);\n            });\n            setoptionLbls(optionLblsLocal);\n          }\n        }, []);\n        useEffect(function () {\n          if (e.selectedCaseKey !== null) {\n            var local = newProduct.options.filter(function (localE) {\n              return localE.label == e.selectedCaseKey;\n            });\n            var optionLblsValuesLocal = [];\n            local[0].optionsList.forEach(function (eVals) {\n              optionLblsValuesLocal.push(eVals.label);\n            });\n            setoptionLblsValues(optionLblsValuesLocal);\n          }\n        }, [optionLbls]);\n        return _jsxs(View, {\n          style: {\n            padding: 25,\n            margin: 15,\n            backgroundColor: \"lightgrey\"\n          },\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              var copy = structuredClone(newProduct);\n              copy.options.push(_objectSpread(_objectSpread({}, e), {}, {\n                label: e.label + \" Copy\"\n              }));\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: copy.options\n                });\n              });\n            },\n            children: _jsx(Text, {\n              style: {\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"Copy\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              var copy = structuredClone(newProduct);\n              copy.options.splice(index, 1);\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: copy.options\n                });\n              });\n            },\n            children: _jsx(Text, {\n              style: {\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"X\"\n            })\n          }), _jsx(TextInput, {\n            placeholder: \"Enter Select List Label\",\n            onChangeText: function onChangeText(val) {\n              var newOptionsList = _toConsumableArray(newProduct.options);\n              newOptionsList[index].label = val;\n              setautoFocusOn({\n                index: index,\n                inputName: \"label\",\n                innerList: false\n              });\n              sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newOptionsList\n                });\n              });\n            },\n            value: e.label,\n            autoFocus: autoFocusOn.index === index && autoFocusOn.innerList === false && autoFocusOn.inputName === \"label\",\n            style: {\n              marginBottom: 25\n            }\n          }), _jsx(TextInput, {\n            placeholder: \"Enter Number Of Selectable; If There Is\",\n            onChangeText: function onChangeText(val) {\n              var newOptionsList = _toConsumableArray(newProduct.options);\n              newOptionsList[index].numOfSelectable = val;\n              setautoFocusOn({\n                index: index,\n                inputName: \"numOfSelectable\",\n                innerList: false\n              });\n              sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newOptionsList\n                });\n              });\n            },\n            value: e.numOfSelectable,\n            autoFocus: autoFocusOn.index === index && autoFocusOn.innerList === false && autoFocusOn.inputName === \"numOfSelectable\",\n            style: {\n              marginBottom: 25\n            }\n          }), e.optionsList.map(function (eInnerList, indexInnerList) {\n            return _jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                marginBottom: 25,\n                alignItems: \"center\"\n              },\n              children: [_jsx(TextInput, {\n                placeholder: \"Enter Option Label\",\n                onChangeText: function onChangeText(val) {\n                  var newOptionsList = structuredClone(newProduct);\n                  newOptionsList.options[index].optionsList[indexInnerList].label = val;\n                  setautoFocusOn({\n                    index: indexInnerList,\n                    inputName: \"label\",\n                    innerList: true\n                  });\n                  sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                  setnewProduct(newOptionsList);\n                },\n                value: eInnerList.label,\n                autoFocus: autoFocusOn.index === indexInnerList && autoFocusOn.innerList === true && autoFocusOn.inputName === \"label\"\n              }), _jsx(TextInput, {\n                placeholder: \"Enter price increase\",\n                onChangeText: function onChangeText(val) {\n                  var newOptionsList = structuredClone(newProduct);\n                  newOptionsList.options[index].optionsList[indexInnerList].priceIncrease = val;\n                  setautoFocusOn({\n                    index: indexInnerList,\n                    inputName: \"priceIncrease\",\n                    innerList: true\n                  });\n                  sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                  setnewProduct(newOptionsList);\n                },\n                value: eInnerList.priceIncrease,\n                autoFocus: autoFocusOn.index === indexInnerList && autoFocusOn.innerList === true && autoFocusOn.inputName === \"priceIncrease\",\n                style: {\n                  marginLeft: 20,\n                  marginRight: 20\n                }\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  var copy = structuredClone(newProduct);\n                  copy.options[index].optionsList.splice(indexInnerList, 1);\n                  setnewProduct(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      options: copy.options\n                    });\n                  });\n                  setnewProduct(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      options: copy.options\n                    });\n                  });\n                },\n                children: _jsx(Text, {\n                  style: {\n                    fontWeight: \"700\",\n                    color: \"red\"\n                  },\n                  children: \"X\"\n                })\n              })]\n            });\n          }), _jsx(Button, {\n            title: \"Add Option Choice\",\n            onPress: function onPress() {\n              var newOptionsList = _toConsumableArray(newProduct.options);\n              newOptionsList[index].optionsList.push({\n                label: null,\n                priceIncrease: null\n              });\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newOptionsList\n                });\n              });\n              setautoFocusOn({\n                index: newOptionsList[index].optionsList.length - 1,\n                inputName: \"label\",\n                innerList: true\n              });\n              sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n            },\n            style: {\n              marginBottom: 25\n            }\n          }), optionLbls.length > 1 && _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              marginBottom: 25\n            },\n            children: [_jsx(DropDown, {\n              label: \"Show if...\",\n              options: optionLbls,\n              setValue: function setValue(val) {\n                var newOptionsList = _toConsumableArray(newProduct.options);\n                newOptionsList[index].selectedCaseKey = val;\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    options: newOptionsList\n                  });\n                });\n                sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                setautoFocusOn({\n                  index: null,\n                  inputName: null,\n                  innerList: null\n                });\n              },\n              value: e.selectedCaseKey,\n              style: {\n                marginBottom: 25\n              }\n            }), _jsx(Text, {\n              children: \"\\\"=\\\"\"\n            }), _jsx(DropDown, {\n              label: \"Show if...\",\n              options: optionLblsValues,\n              setValue: function setValue(val) {\n                var newOptionsList = _toConsumableArray(newProduct.options);\n                newOptionsList[index].selectedCaseValue = val;\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    options: newOptionsList\n                  });\n                });\n                sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                setautoFocusOn({\n                  index: null,\n                  inputName: null,\n                  innerList: null\n                });\n              },\n              value: e.selectedCaseValue,\n              style: {\n                marginBottom: 25\n              }\n            })]\n          })]\n        });\n      }), _jsx(Button, {\n        title: \"Add Product Option\",\n        onPress: function onPress() {\n          sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: [].concat(_toConsumableArray(prevState.options), [{\n                label: null,\n                optionsList: [],\n                selectedCaseKey: null,\n                selectedCaseValue: null,\n                numOfSelectable: null\n              }])\n            });\n          });\n\n          setautoFocusOn({\n            index: newProduct.options.length,\n            inputName: \"label\",\n            innerList: false\n          });\n        },\n        style: {\n          marginBottom: 25\n        }\n      })]\n    });\n  };\n  return _jsxs(ScrollView, {\n    contentContainerStyle: {\n      width: \"93%\",\n      alignSelf: \"center\",\n      marginTop: 25\n    },\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        padding: 20,\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setProductModal(false);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"X\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          var copy = structuredClone(newProduct);\n          copy.name = copy.name + \" Copy\";\n          handleDataUpdate(copy);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"Copy\"\n        })\n      }), _jsx(Text, {\n        style: {\n          marginBottom: 25\n        },\n        children: \"AddProduct\"\n      })]\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Product Name\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            name: val\n          });\n        });\n      },\n      value: newProduct.name,\n      style: {\n        marginBottom: 25\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Enter any other items that come with this\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            description: val\n          });\n        });\n      },\n      style: {\n        marginBottom: 25\n      },\n      value: newProduct.description\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Product Price\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            price: val\n          });\n        });\n      },\n      style: {\n        marginBottom: 25\n      },\n      value: newProduct.price\n    }), _jsx(DropDown, {\n      label: \"Choose catagory\",\n      options: catalog.categories,\n      setValue: function setValue(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            catagory: val\n          });\n        });\n      },\n      value: newProduct.catagory,\n      style: {\n        marginBottom: 25\n      }\n    }), _jsx(OptionsAddingSection, {}), _jsx(Button, {\n      title: \"Add/Save Product\",\n      onPress: function onPress() {\n        return handleDataUpdate();\n      },\n      style: {\n        marginBottom: 25,\n        marginTop: 25,\n        backgroundColor: \"lightgreen\"\n      }\n    })]\n  });\n};\nexport default AddProduct;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useEffect","useState","Button","TextInput","DropDown","userStoreState","updateData","AddProduct","setProductModal","setisModalVisible","existingProduct","existingProductIndex","catalog","use","name","price","catagory","options","description","newProduct","setnewProduct","index","inputName","innerList","autoFocusOn","setautoFocusOn","handleDataUpdate","copyProductData","categories","products","copy","structuredClone","scrollPosition","sessionStorage","getItem","window","scrollTo","parseInt","removeItem","OptionsAddingSection","map","e","optionLblsValues","setoptionLblsValues","optionLbls","setoptionLbls","length","optionLblsLocal","forEach","checkUseE","label","push","selectedCaseKey","local","filter","localE","optionLblsValuesLocal","optionsList","eVals","padding","margin","backgroundColor","prevState","marginBottom","fontWeight","color","splice","val","newOptionsList","setItem","pageYOffset","numOfSelectable","eInnerList","indexInnerList","flexDirection","alignItems","priceIncrease","marginLeft","marginRight","justifyContent","selectedCaseValue","width","alignSelf","marginTop","styles","StyleSheet","create"],"sources":["C:/Users/George With the Big/Documents/PosMate/components/AddProduct.tsx"],"sourcesContent":["import {\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, TextInput } from \"@react-native-material/core\";\r\nimport DropDown from \"./DropDown\";\r\nimport { userStoreState } from \"state/state\";\r\nimport { updateData } from \"state/firebaseFunctions\";\r\n\r\nconst AddProduct = ({\r\n  setProductModal,\r\n  setisModalVisible,\r\n  existingProduct,\r\n  existingProductIndex,\r\n}) => {\r\n  const catalog = userStoreState.use();\r\n  const [newProduct, setnewProduct] = useState(\r\n    existingProduct\r\n      ? existingProduct\r\n      : {\r\n          name: null,\r\n          price: null,\r\n          catagory: null,\r\n          options: [],\r\n          description: null,\r\n        }\r\n  );\r\n  const [autoFocusOn, setautoFocusOn] = useState({\r\n    index: null,\r\n    inputName: null,\r\n    innerList: null,\r\n  });\r\n\r\n  function handleDataUpdate(copyProductData) {\r\n    if (copyProductData) {\r\n      updateData(\r\n        [...catalog.categories],\r\n        [...catalog.products, copyProductData]\r\n      );\r\n    } else if (existingProduct) {\r\n      let copy = structuredClone(catalog.products);\r\n      copy[existingProductIndex] = newProduct;\r\n\r\n      updateData([...catalog.categories], copy);\r\n    } else {\r\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\r\n    }\r\n    setisModalVisible(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const scrollPosition = sessionStorage.getItem(\"scrollPosition\");\r\n    if (scrollPosition) {\r\n      window.scrollTo(0, parseInt(scrollPosition));\r\n      sessionStorage.removeItem(\"scrollPosition\");\r\n    }\r\n  }, [newProduct]);\r\n\r\n  const OptionsAddingSection = () => {\r\n    return (\r\n      <View>\r\n        {newProduct.options.map((e, index) => {\r\n          const [optionLblsValues, setoptionLblsValues] = useState([]);\r\n          const [optionLbls, setoptionLbls] = useState([]);\r\n\r\n          useEffect(() => {\r\n            //setnewProduct(newProductSaved.current);\r\n            if (newProduct.options.length > 1) {\r\n              const optionLblsLocal = [];\r\n              newProduct.options.forEach((checkUseE) => {\r\n                if (checkUseE.label !== e.label)\r\n                  optionLblsLocal.push(checkUseE.label);\r\n              });\r\n              setoptionLbls(optionLblsLocal);\r\n            }\r\n          }, []);\r\n\r\n          useEffect(() => {\r\n            if (e.selectedCaseKey !== null) {\r\n              const local = newProduct.options.filter(\r\n                (localE) => localE.label == e.selectedCaseKey\r\n              );\r\n              const optionLblsValuesLocal = [];\r\n              local[0].optionsList.forEach((eVals) => {\r\n                optionLblsValuesLocal.push(eVals.label);\r\n              });\r\n              setoptionLblsValues(optionLblsValuesLocal);\r\n            }\r\n          }, [optionLbls]);\r\n\r\n          return (\r\n            <View\r\n              style={{\r\n                padding: 25,\r\n                margin: 15,\r\n                backgroundColor: \"lightgrey\",\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  const copy = structuredClone(newProduct);\r\n                  copy.options.push({\r\n                    ...e,\r\n                    label: e.label + \" Copy\",\r\n                  });\r\n\r\n                  setnewProduct((prevState) => ({\r\n                    ...prevState,\r\n                    options: copy.options,\r\n                  }));\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    marginBottom: 25,\r\n                    fontWeight: \"700\",\r\n                    color: \"red\",\r\n                  }}\r\n                >\r\n                  Copy\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  const copy = structuredClone(newProduct);\r\n                  copy.options.splice(index, 1);\r\n\r\n                  setnewProduct((prevState) => ({\r\n                    ...prevState,\r\n                    options: copy.options,\r\n                  }));\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    marginBottom: 25,\r\n                    fontWeight: \"700\",\r\n                    color: \"red\",\r\n                  }}\r\n                >\r\n                  X\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TextInput\r\n                placeholder=\"Enter Select List Label\"\r\n                onChangeText={(val) => {\r\n                  const newOptionsList = [...newProduct.options];\r\n                  newOptionsList[index].label = val;\r\n                  setautoFocusOn({\r\n                    index: index,\r\n                    inputName: \"label\",\r\n                    innerList: false,\r\n                  });\r\n                  sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\r\n                  setnewProduct((prevState) => ({\r\n                    ...prevState,\r\n                    options: newOptionsList,\r\n                  }));\r\n                }}\r\n                value={e.label}\r\n                autoFocus={\r\n                  autoFocusOn.index === index &&\r\n                  autoFocusOn.innerList === false &&\r\n                  autoFocusOn.inputName === \"label\"\r\n                }\r\n                style={{ marginBottom: 25 }}\r\n              />\r\n              <TextInput\r\n                placeholder=\"Enter Number Of Selectable; If There Is\"\r\n                onChangeText={(val) => {\r\n                  const newOptionsList = [...newProduct.options];\r\n                  newOptionsList[index].numOfSelectable = val;\r\n                  setautoFocusOn({\r\n                    index: index,\r\n                    inputName: \"numOfSelectable\",\r\n                    innerList: false,\r\n                  });\r\n                  sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\r\n                  setnewProduct((prevState) => ({\r\n                    ...prevState,\r\n                    options: newOptionsList,\r\n                  }));\r\n                }}\r\n                value={e.numOfSelectable}\r\n                autoFocus={\r\n                  autoFocusOn.index === index &&\r\n                  autoFocusOn.innerList === false &&\r\n                  autoFocusOn.inputName === \"numOfSelectable\"\r\n                }\r\n                style={{ marginBottom: 25 }}\r\n              />\r\n              {e.optionsList.map((eInnerList, indexInnerList) => {\r\n                return (\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      marginBottom: 25,\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <TextInput\r\n                      placeholder=\"Enter Option Label\"\r\n                      onChangeText={(val) => {\r\n                        const newOptionsList = structuredClone(newProduct);\r\n                        newOptionsList.options[index].optionsList[\r\n                          indexInnerList\r\n                        ].label = val;\r\n                        setautoFocusOn({\r\n                          index: indexInnerList,\r\n                          inputName: \"label\",\r\n                          innerList: true,\r\n                        });\r\n                        sessionStorage.setItem(\r\n                          \"scrollPosition\",\r\n                          window.pageYOffset\r\n                        );\r\n                        setnewProduct(newOptionsList);\r\n                      }}\r\n                      value={eInnerList.label}\r\n                      autoFocus={\r\n                        autoFocusOn.index === indexInnerList &&\r\n                        autoFocusOn.innerList === true &&\r\n                        autoFocusOn.inputName === \"label\"\r\n                      }\r\n                    />\r\n                    <TextInput\r\n                      placeholder=\"Enter price increase\"\r\n                      onChangeText={(val) => {\r\n                        const newOptionsList = structuredClone(newProduct);\r\n                        newOptionsList.options[index].optionsList[\r\n                          indexInnerList\r\n                        ].priceIncrease = val;\r\n                        setautoFocusOn({\r\n                          index: indexInnerList,\r\n                          inputName: \"priceIncrease\",\r\n                          innerList: true,\r\n                        });\r\n                        sessionStorage.setItem(\r\n                          \"scrollPosition\",\r\n                          window.pageYOffset\r\n                        );\r\n                        setnewProduct(newOptionsList);\r\n                      }}\r\n                      value={eInnerList.priceIncrease}\r\n                      autoFocus={\r\n                        autoFocusOn.index === indexInnerList &&\r\n                        autoFocusOn.innerList === true &&\r\n                        autoFocusOn.inputName === \"priceIncrease\"\r\n                      }\r\n                      style={{ marginLeft: 20, marginRight: 20 }}\r\n                    />\r\n                    <TouchableOpacity\r\n                      onPress={() => {\r\n                        const copy = structuredClone(newProduct);\r\n                        copy.options[index].optionsList.splice(\r\n                          indexInnerList,\r\n                          1\r\n                        );\r\n\r\n                        setnewProduct((prevState) => ({\r\n                          ...prevState,\r\n                          options: copy.options,\r\n                        }));\r\n\r\n                        setnewProduct((prevState) => ({\r\n                          ...prevState,\r\n                          options: copy.options,\r\n                        }));\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          fontWeight: \"700\",\r\n                          color: \"red\",\r\n                        }}\r\n                      >\r\n                        X\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                );\r\n              })}\r\n              <Button\r\n                title=\"Add Option Choice\"\r\n                onPress={() => {\r\n                  const newOptionsList = [...newProduct.options];\r\n                  newOptionsList[index].optionsList.push({\r\n                    label: null,\r\n                    priceIncrease: null,\r\n                  });\r\n                  setnewProduct((prevState) => ({\r\n                    ...prevState,\r\n                    options: newOptionsList,\r\n                  }));\r\n                  setautoFocusOn({\r\n                    index: newOptionsList[index].optionsList.length - 1,\r\n                    inputName: \"label\",\r\n                    innerList: true,\r\n                  });\r\n                  sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\r\n                }}\r\n                style={{ marginBottom: 25 }}\r\n              />\r\n              {optionLbls.length > 1 && (\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                    marginBottom: 25,\r\n                  }}\r\n                >\r\n                  <DropDown\r\n                    label=\"Show if...\"\r\n                    options={optionLbls}\r\n                    setValue={(val) => {\r\n                      const newOptionsList = [...newProduct.options];\r\n                      newOptionsList[index].selectedCaseKey = val;\r\n                      setnewProduct((prevState) => ({\r\n                        ...prevState,\r\n                        options: newOptionsList,\r\n                      }));\r\n                      sessionStorage.setItem(\r\n                        \"scrollPosition\",\r\n                        window.pageYOffset\r\n                      );\r\n                      setautoFocusOn({\r\n                        index: null,\r\n                        inputName: null,\r\n                        innerList: null,\r\n                      });\r\n                    }}\r\n                    value={e.selectedCaseKey}\r\n                    style={{ marginBottom: 25 }}\r\n                  />\r\n                  <Text>\"=\"</Text>\r\n                  <DropDown\r\n                    label=\"Show if...\"\r\n                    options={optionLblsValues}\r\n                    setValue={(val) => {\r\n                      const newOptionsList = [...newProduct.options];\r\n                      newOptionsList[index].selectedCaseValue = val;\r\n                      setnewProduct((prevState) => ({\r\n                        ...prevState,\r\n                        options: newOptionsList,\r\n                      }));\r\n                      sessionStorage.setItem(\r\n                        \"scrollPosition\",\r\n                        window.pageYOffset\r\n                      );\r\n\r\n                      setautoFocusOn({\r\n                        index: null,\r\n                        inputName: null,\r\n                        innerList: null,\r\n                      });\r\n                    }}\r\n                    value={e.selectedCaseValue}\r\n                    style={{ marginBottom: 25 }}\r\n                  />\r\n                </View>\r\n              )}\r\n            </View>\r\n          );\r\n        })}\r\n        <Button\r\n          title=\"Add Product Option\"\r\n          onPress={() => {\r\n            sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\r\n\r\n            setnewProduct((prevState) => ({\r\n              ...prevState,\r\n              options: [\r\n                ...prevState.options,\r\n                {\r\n                  label: null,\r\n                  optionsList: [],\r\n                  selectedCaseKey: null,\r\n                  selectedCaseValue: null,\r\n                  numOfSelectable: null,\r\n                },\r\n              ],\r\n            }));\r\n\r\n            // Not using -1 on length since this is before the new option is added to list\r\n            setautoFocusOn({\r\n              index: newProduct.options.length,\r\n              inputName: \"label\",\r\n              innerList: false,\r\n            });\r\n          }}\r\n          style={{ marginBottom: 25 }}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      contentContainerStyle={{\r\n        width: \"93%\",\r\n        alignSelf: \"center\",\r\n        marginTop: 25,\r\n      }}\r\n    >\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          padding: 20,\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <TouchableOpacity onPress={() => setProductModal(false)}>\r\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\r\n            X\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            let copy = structuredClone(newProduct);\r\n            copy.name = copy.name + \" Copy\";\r\n            handleDataUpdate(copy);\r\n          }}\r\n        >\r\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\r\n            Copy\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <Text style={{ marginBottom: 25 }}>AddProduct</Text>\r\n      </View>\r\n      <TextInput\r\n        placeholder=\"Enter Product Name\"\r\n        onChangeText={(val) => {\r\n          setnewProduct((prevState) => ({ ...prevState, name: val }));\r\n        }}\r\n        value={newProduct.name}\r\n        style={{ marginBottom: 25 }}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Enter any other items that come with this\"\r\n        onChangeText={(val) => {\r\n          setnewProduct((prevState) => ({ ...prevState, description: val }));\r\n        }}\r\n        style={{ marginBottom: 25 }}\r\n        value={newProduct.description}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Enter Product Price\"\r\n        onChangeText={(val) => {\r\n          setnewProduct((prevState) => ({ ...prevState, price: val }));\r\n        }}\r\n        style={{ marginBottom: 25 }}\r\n        value={newProduct.price}\r\n      />\r\n      <DropDown\r\n        label=\"Choose catagory\"\r\n        options={catalog.categories}\r\n        setValue={(val) => {\r\n          setnewProduct((prevState) => ({ ...prevState, catagory: val }));\r\n        }}\r\n        value={newProduct.catagory}\r\n        style={{ marginBottom: 25 }}\r\n      />\r\n      <OptionsAddingSection />\r\n      <Button\r\n        title=\"Add/Save Product\"\r\n        onPress={() => handleDataUpdate()}\r\n        style={{\r\n          marginBottom: 25,\r\n          marginTop: 25,\r\n          backgroundColor: \"lightgreen\",\r\n        }}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}