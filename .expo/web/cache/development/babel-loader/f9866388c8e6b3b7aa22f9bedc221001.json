{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { deviceIdState, deviceTreeState, setDeviceTreeState, setMyDeviceDetailsState } from \"../../../../../state/state\";\nimport { auth, db } from \"../../../../../state/firebaseConfig\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport GeneralSwitch from \"../../../../../components/GeneralSwitch\";\nimport { Entypo, Ionicons } from \"@expo/vector-icons\";\nimport \"react-select2-wrapper/css/select2.css\";\nimport ReactSelect from \"react-select\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Index(props) {\n  var deviceTree = deviceTreeState.use();\n  var myDeviceID = deviceIdState.use();\n  var fadeAnim = useRef(new Animated.Value(0)).current;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    viewVisible = _useState2[0],\n    setviewVisible = _useState2[1];\n  var _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedDevice = _useState4[0],\n    setselectedDevice = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    otherDeviceOptions = _useState6[0],\n    setOtherDeviceOptions = _useState6[1];\n  var fadeIn = function fadeIn() {\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 500,\n      useNativeDriver: false\n    }).start();\n  };\n  var resetLoader = function resetLoader() {\n    setviewVisible(true);\n    fadeIn();\n  };\n  var AddNewDevice = function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield db.collection(\"users\").doc(auth.currentUser.uid).collection(\"checkout_sessions\").add({\n        price: 'price_1Oj9NZCIw3L7DOwI7DKAhIve',\n        quantity: 1,\n        success_url: window.location.href,\n        cancel_url: window.location.href\n      }).then(function (docRef) {\n        docRef.onSnapshot(function () {\n          var _ref2 = _asyncToGenerator(function* (snap) {\n            var _snap$data = snap.data(),\n              error = _snap$data.error,\n              sessionId = _snap$data.sessionId;\n            if (error) {\n              alert(\"An error occurred: \" + error.message);\n            }\n            if (sessionId) {\n              var stripe = yield loadStripe(\"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\");\n\n              console.log(\"redirecting\");\n              yield stripe.redirectToCheckout({\n                sessionId: sessionId\n              });\n            }\n          });\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    return function AddNewDevice() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (deviceTree.devices.length > 0) {\n      setOtherDeviceOptions([]);\n      deviceTree.devices.map(function (deviceSearch, index) {\n        if (deviceSearch.id !== deviceTree.devices[selectedDevice].id) {\n          setOtherDeviceOptions(function (prev) {\n            return [].concat(_toConsumableArray(prev), [{\n              value: deviceSearch.docID,\n              label: deviceSearch.name\n            }]);\n          });\n        }\n      });\n    }\n  }, [selectedDevice]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.pageLbl,\n      children: \"Device Settings\"\n    }), _jsx(View, {\n      style: styles.group,\n      children: _jsxs(View, {\n        style: styles.deviceScrollContainer,\n        children: [selectedDevice > 0 ? _jsx(TouchableOpacity, {\n          style: styles.nextDeviceBtn,\n          activeOpacity: 0.8,\n          onPress: function onPress() {\n            return setselectedDevice(function (prev) {\n              return prev - 1;\n            });\n          },\n          children: _jsx(Entypo, {\n            name: \"chevron-left\",\n            style: styles.icon\n          })\n        }) : _jsx(View, {\n          style: styles.backBtn\n        }), deviceTree.devices.length > 0 ? _jsxs(View, {\n          style: styles.deviceContainer,\n          children: [_jsxs(View, {\n            style: styles.topGroup,\n            children: [_jsxs(View, {\n              style: styles.deviceNameInputGroup,\n              children: [_jsx(Text, {\n                style: styles.deviceName,\n                children: \"Device Name\"\n              }), _jsx(TextInput, {\n                style: styles.deviceNameInput,\n                placeholder: \"Enter device name\",\n                value: deviceTree.devices[selectedDevice].name,\n                onChangeText: function onChangeText(val) {\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[selectedDevice].name = val;\n                  setDeviceTreeState(clone);\n                }\n              })]\n            }), _jsxs(View, {\n              style: styles.deviceIDRow,\n              children: [_jsxs(View, {\n                style: {\n                  flexDirection: 'row',\n                  alignItems: 'center'\n                },\n                children: [_jsx(Text, {\n                  style: styles.deviceIdLbl,\n                  children: \"Device ID:\"\n                }), _jsx(Text, {\n                  style: styles.deviceId,\n                  children: deviceTree.devices[selectedDevice].id ? deviceTree.devices[selectedDevice].id.toUpperCase() : 'No device ID set'\n                })]\n              }), _jsx(TouchableOpacity, {\n                style: styles.setToMyIDBtn,\n                activeOpacity: 0.8,\n                onPress: function onPress() {\n                  if (deviceTree.devices.filter(function (deviceSearch) {\n                    return deviceSearch.id === myDeviceID;\n                  }).length > 0) {\n                    db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices.filter(function (deviceSearch) {\n                      return deviceSearch.id === myDeviceID;\n                    })[0].docID).update({\n                      id: null\n                    });\n                    var _clone = _objectSpread({}, deviceTree);\n                    _clone.devices.filter(function (deviceSearch) {\n                      return deviceSearch.id === myDeviceID;\n                    })[0].id = null;\n                    setDeviceTreeState(_clone);\n                  }\n                  db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(clone.devices[selectedDevice].docID).update({\n                    id: myDeviceID\n                  });\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[selectedDevice].id = myDeviceID;\n                  setDeviceTreeState(clone);\n                  setMyDeviceDetailsState(clone.devices[selectedDevice]);\n                },\n                children: _jsx(Ionicons, {\n                  name: \"md-key\",\n                  style: styles.setToMyIDIcon\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.printOnlineOrderRow,\n              children: [_jsx(Text, {\n                style: styles.printOnlineOrdersLbl,\n                children: \"Print Online Orders:\"\n              }), _jsx(GeneralSwitch, {\n                isActive: deviceTree.devices[selectedDevice].printOnlineOrders,\n                toggleSwitch: function toggleSwitch() {\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[selectedDevice].printOnlineOrders = !deviceTree.devices[selectedDevice].printOnlineOrders;\n                  setDeviceTreeState(clone);\n                }\n              })]\n            }), _jsxs(View, {\n              style: styles.useDifferentDeviceRow,\n              children: [_jsx(Text, {\n                style: styles.useDifferentDeviceLbl,\n                children: \"Use Different Device To Print:\"\n              }), _jsx(GeneralSwitch, {\n                isActive: deviceTree.devices[selectedDevice].useDifferentDeviceToPrint,\n                toggleSwitch: function toggleSwitch() {\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[selectedDevice].useDifferentDeviceToPrint = !deviceTree.devices[selectedDevice].useDifferentDeviceToPrint;\n                  setDeviceTreeState(clone);\n                }\n              })]\n            }), _jsxs(View, {\n              style: styles.printerToPrinterInputGroup,\n              children: [_jsx(Text, {\n                style: styles.printToPrinterLbl,\n                children: \"Print to Printer\"\n              }), !deviceTree.devices[selectedDevice].useDifferentDeviceToPrint ? _jsx(TextInput, {\n                style: styles.printToPrintInput,\n                placeholder: \"Enter printer name\",\n                value: deviceTree.devices[selectedDevice].printToPrinter ? deviceTree.devices[selectedDevice].printToPrinter : '',\n                onChangeText: function onChangeText(val) {\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[selectedDevice].printToPrinter = val;\n                  setDeviceTreeState(clone);\n                }\n              }) : _jsx(ReactSelect, {\n                options: otherDeviceOptions,\n                value: deviceTree.devices[selectedDevice].sendPrintToUserID,\n                onChange: function onChange(val) {\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[selectedDevice].sendPrintToUserID = val;\n                  setDeviceTreeState(clone);\n                },\n                placeholder: \"Choose Device To Send Print To\",\n                menuPortalTarget: document.body,\n                styles: {\n                  menuPortal: function menuPortal(base) {\n                    return _objectSpread(_objectSpread({}, base), {}, {\n                      zIndex: 9999\n                    });\n                  },\n                  control: function control(provided, state) {\n                    return _objectSpread(_objectSpread({}, provided), {}, {\n                      background: \"#fff\",\n                      borderColor: \"#9e9e9e\",\n                      minHeight: \"52px\",\n                      height: \"52px\",\n                      boxShadow: state.isFocused ? null : null\n                    });\n                  },\n                  valueContainer: function valueContainer(provided, state) {\n                    return _objectSpread(_objectSpread({}, provided), {}, {\n                      height: \"52px\",\n                      padding: \"0 6px\"\n                    });\n                  },\n                  input: function input(provided, state) {\n                    return _objectSpread(_objectSpread({}, provided), {}, {\n                      margin: \"0px\"\n                    });\n                  },\n                  indicatorSeparator: function indicatorSeparator(state) {\n                    return {\n                      display: \"none\"\n                    };\n                  },\n                  indicatorsContainer: function indicatorsContainer(provided, state) {\n                    return _objectSpread(_objectSpread({}, provided), {}, {\n                      height: \"52px\"\n                    });\n                  },\n                  container: function container(provided, state) {\n                    return _objectSpread(_objectSpread({}, provided), {}, {\n                      width: \"100%\"\n                    });\n                  }\n                },\n                menuPlacement: \"auto\",\n                menuPosition: \"fixed\"\n              })]\n            })]\n          }), _jsxs(View, {\n            style: styles.btnsRow,\n            children: [_jsx(TouchableOpacity, {\n              style: styles.updateDeviceBtn,\n              activeOpacity: 0.8,\n              onPress: function onPress() {\n                db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices[selectedDevice].docID).update(deviceTree.devices[selectedDevice]);\n              },\n              children: _jsx(Text, {\n                style: styles.saveDevice,\n                children: \"Save Device\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: styles.deleteDeviceBtn,\n              activeOpacity: 0.8,\n              onPress: function onPress() {\n                db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices[selectedDevice].docID).delete();\n                var clone = _objectSpread({}, deviceTree);\n                clone = _objectSpread(_objectSpread({}, clone), {}, {\n                  devices: clone.devices.filter(function (deviceSearch) {\n                    return deviceSearch.docID !== deviceTree.devices[selectedDevice].docID;\n                  })\n                });\n                setDeviceTreeState(clone);\n                setselectedDevice(function (prev) {\n                  return prev > 0 ? prev - 1 : 0;\n                });\n              },\n              children: _jsx(Text, {\n                style: styles.deleteDevice,\n                children: \"Delete Device\"\n              })\n            })]\n          })]\n        }) : _jsx(View, {\n          children: _jsx(Text, {\n            children: \"No Devices Found\"\n          })\n        }), selectedDevice < deviceTree.devices.length - 1 + deviceTree.extraDevicesPayingFor ? _jsx(TouchableOpacity, {\n          style: styles.nextDeviceBtn,\n          activeOpacity: 0.8,\n          onPress: function onPress() {\n            return setselectedDevice(function (prev) {\n              return prev + 1;\n            });\n          },\n          children: _jsx(Entypo, {\n            name: \"chevron-right\",\n            style: styles.icon\n          })\n        }) : _jsx(TouchableOpacity, {\n          style: styles.nextDeviceBtn,\n          activeOpacity: 0.8,\n          onPress: function onPress() {\n            if (deviceTree.devices.length < 2 + deviceTree.extraDevicesPayingFor) {\n              db.collection('users').doc(auth.currentUser.uid).collection('devices').add({\n                name: \"Device\" + deviceTree.devices.length,\n                id: null,\n                printToPrinter: null\n              }).then(function (docRef) {\n                var clone = _objectSpread({}, deviceTree);\n                clone.devices.push({\n                  name: \"\",\n                  id: null,\n                  printToPrinter: null,\n                  sendPrintToUserID: null,\n                  docID: docRef.id\n                });\n                setDeviceTreeState(clone);\n              });\n            } else {\n              resetLoader();\n              AddNewDevice();\n            }\n          },\n          children: _jsx(Entypo, {\n            name: \"plus\",\n            style: styles.icon\n          })\n        })]\n      })\n    }), viewVisible && _jsx(Modal, {\n      visible: true,\n      children: _jsx(Animated.View, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          backgroundColor: \"white\",\n          position: \"absolute\",\n          opacity: fadeAnim,\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: _jsx(Image, {\n          source: require(\"../../../../../assets/loading.gif\"),\n          style: {\n            width: 450,\n            height: 450,\n            resizeMode: \"contain\"\n          }\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    width: '100%',\n    height: '100%'\n  },\n  pageLbl: {\n    fontWeight: '700',\n    color: \"#121212\",\n    fontSize: 16,\n    margin: 20\n  },\n  group: {\n    alignSelf: \"stretch\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  deviceScrollContainer: {\n    width: 639,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    margin: 20\n  },\n  backBtn: {\n    width: 50,\n    height: 50,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  deviceContainer: {\n    width: 358,\n    height: 468,\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  topGroup: {\n    width: 358,\n    height: 360,\n    justifyContent: \"space-between\"\n  },\n  deviceNameInputGroup: {\n    width: 358,\n    height: 88,\n    justifyContent: \"space-between\"\n  },\n  deviceName: {\n    fontWeight: '700',\n    color: \"#121212\",\n    fontSize: 17\n  },\n  deviceNameInput: {\n    width: 358,\n    height: 51,\n    backgroundColor: \"#ffffff\",\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"#a0a0a0\",\n    padding: 10\n  },\n  deviceIDRow: {\n    width: 354,\n    height: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  deviceIdLbl: {\n    fontWeight: '700',\n    color: \"#121212\",\n    fontSize: 17,\n    marginRight: 10\n  },\n  deviceId: {\n    fontWeight: '300',\n    color: \"#121212\",\n    fontSize: 14\n  },\n  setToMyIDBtn: {\n    width: 30,\n    height: 30,\n    backgroundColor: \"#1c294e\",\n    borderRadius: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  setToMyIDIcon: {\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 25\n  },\n  printOnlineOrderRow: {\n    width: 356,\n    height: 21,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  printOnlineOrdersLbl: {\n    fontWeight: '700',\n    color: \"#121212\",\n    fontSize: 17\n  },\n  printOnlineSwitch: {\n    width: 40,\n    height: 20,\n    backgroundColor: \"#E6E6E6\"\n  },\n  useDifferentDeviceRow: {\n    width: 356,\n    height: 20,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  useDifferentDeviceLbl: {\n    fontWeight: '700',\n    color: \"#111111\",\n    fontSize: 17\n  },\n  useDiffrentDeviceSwitch: {\n    width: 40,\n    height: 20,\n    backgroundColor: \"#E6E6E6\"\n  },\n  printerToPrinterInputGroup: {\n    width: 358,\n    height: 88,\n    justifyContent: \"space-between\"\n  },\n  printToPrinterLbl: {\n    fontWeight: '700',\n    color: \"#111111\",\n    fontSize: 17\n  },\n  printToPrintInput: {\n    width: 358,\n    height: 51,\n    backgroundColor: \"#ffffff\",\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"#a0a0a0\",\n    padding: 10\n  },\n  btnsRow: {\n    width: 356,\n    height: 49,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  updateDeviceBtn: {\n    width: 170,\n    height: 48,\n    backgroundColor: \"rgba(76,175,80,1)\",\n    borderRadius: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  saveDevice: {\n    fontWeight: '700',\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 16\n  },\n  deleteDeviceBtn: {\n    width: 170,\n    height: 48,\n    backgroundColor: \"rgba(244,67,54,1)\",\n    borderRadius: 20,\n    opacity: 0.61,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  deleteDevice: {\n    fontWeight: '700',\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 16\n  },\n  nextDeviceBtn: {\n    width: 50,\n    height: 50,\n    backgroundColor: \"#1c294e\",\n    borderRadius: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon: {\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 40\n  }\n});\nexport default Index;","map":{"version":3,"names":["React","useEffect","useRef","useState","deviceIdState","deviceTreeState","setDeviceTreeState","setMyDeviceDetailsState","auth","db","loadStripe","GeneralSwitch","Entypo","Ionicons","ReactSelect","Index","props","deviceTree","use","myDeviceID","fadeAnim","Animated","Value","current","viewVisible","setviewVisible","Dimensions","get","width","height","selectedDevice","setselectedDevice","otherDeviceOptions","setOtherDeviceOptions","fadeIn","timing","toValue","duration","useNativeDriver","start","resetLoader","AddNewDevice","collection","doc","currentUser","uid","add","price","quantity","success_url","window","location","href","cancel_url","then","docRef","onSnapshot","snap","data","error","sessionId","alert","message","stripe","console","log","redirectToCheckout","devices","length","map","deviceSearch","index","id","prev","value","docID","label","name","styles","container","pageLbl","group","deviceScrollContainer","nextDeviceBtn","icon","backBtn","deviceContainer","topGroup","deviceNameInputGroup","deviceName","deviceNameInput","val","clone","deviceIDRow","flexDirection","alignItems","deviceIdLbl","deviceId","toUpperCase","setToMyIDBtn","filter","update","setToMyIDIcon","printOnlineOrderRow","printOnlineOrdersLbl","printOnlineOrders","useDifferentDeviceRow","useDifferentDeviceLbl","useDifferentDeviceToPrint","printerToPrinterInputGroup","printToPrinterLbl","printToPrintInput","printToPrinter","sendPrintToUserID","document","body","menuPortal","base","zIndex","control","provided","state","background","borderColor","minHeight","boxShadow","isFocused","valueContainer","padding","input","margin","indicatorSeparator","display","indicatorsContainer","btnsRow","updateDeviceBtn","saveDevice","deleteDeviceBtn","delete","deleteDevice","extraDevicesPayingFor","push","justifyContent","backgroundColor","position","opacity","require","resizeMode","StyleSheet","create","fontWeight","color","fontSize","alignSelf","flex","borderRadius","borderWidth","marginRight","printOnlineSwitch","useDiffrentDeviceSwitch"],"sources":["/Users/peterputros/Desktop/PosMate/pages/authed/backendPos/NewMainPage/settings/DeviceSettings.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport {\n    View,\n    Text,\n    ScrollView,\n    StyleSheet,\n    Animated,\n    Modal,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n} from \"react-native\";\nimport {\n    deviceIdState,\n    deviceTreeState,\n    setDeviceTreeState,\n    setMyDeviceDetailsState,\n} from \"state/state\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Image } from \"react-native\";\nimport GeneralSwitch from \"components/GeneralSwitch\";\nimport { Entypo, Ionicons } from \"@expo/vector-icons\";\nimport \"react-select2-wrapper/css/select2.css\";\nimport ReactSelect from \"react-select\";\n\nfunction Index(props) {\n    const deviceTree = deviceTreeState.use()\n    const myDeviceID = deviceIdState.use()\n    const fadeAnim = useRef(new Animated.Value(0)).current;\n    const [viewVisible, setviewVisible] = useState(false);\n    const { width, height } = Dimensions.get('window');\n    const [selectedDevice, setselectedDevice] = useState(0)\n    const [otherDeviceOptions, setOtherDeviceOptions] = useState([])\n\n    const fadeIn = () => {\n        // Will change fadeAnim value to 0 in 3 seconds\n        Animated.timing(fadeAnim, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: false,\n        }).start();\n    };\n\n    const resetLoader = () => {\n        setviewVisible(true);\n        fadeIn();\n    };\n\n    const AddNewDevice = async () => {\n        await db\n            .collection(\"users\")\n            .doc(auth.currentUser.uid)\n            .collection(\"checkout_sessions\")\n            .add({\n                price: 'price_1Oj9NZCIw3L7DOwI7DKAhIve', // todo price Id from your products price in the Stripe Dashboard\n                quantity: 1,\n                success_url: window.location.href, // return user to this screen on successful purchase\n                cancel_url: window.location.href, // return user to this screen on failed purchase\n            })\n            .then((docRef) => {\n                // Wait for the checkoutSession to get attached by the extension\n                docRef.onSnapshot(async (snap) => {\n                    const { error, sessionId } = snap.data();\n                    if (error) {\n                        // Show an error to your customer and inspect\n                        // your Cloud Function logs in the Firebase console.\n                        alert(`An error occurred: ${error.message}`);\n                    }\n\n                    if (sessionId) {\n                        // We have a session, let's redirect to Checkout\n                        // Init Stripe\n                        const stripe = await loadStripe(\n                            \"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\" // todo enter your public stripe key here\n                        );\n                        console.log(`redirecting`);\n                        await stripe.redirectToCheckout({ sessionId });\n                    }\n                });\n            });\n    }\n\n    useEffect(() => {\n        if (deviceTree.devices.length > 0) {\n            setOtherDeviceOptions([])\n            deviceTree.devices.map((deviceSearch, index) => {\n                if (deviceSearch.id !== deviceTree.devices[selectedDevice].id) {\n                    setOtherDeviceOptions(prev => [...prev, { value: deviceSearch.docID, label: deviceSearch.name }])\n                }\n            })\n        }\n    }, [selectedDevice])\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.pageLbl}>Device Settings</Text>\n            <View style={styles.group}>\n                <View style={styles.deviceScrollContainer}>\n                    {selectedDevice > 0 ?\n                        <TouchableOpacity style={styles.nextDeviceBtn} activeOpacity={0.8} onPress={() => setselectedDevice(prev => prev - 1)}>\n                            <Entypo name=\"chevron-left\" style={styles.icon} />\n                        </TouchableOpacity>\n                        :\n                        <View style={styles.backBtn} />\n                    }\n                    {deviceTree.devices.length > 0 ? <View style={styles.deviceContainer}>\n                        <View style={styles.topGroup}>\n                            <View style={styles.deviceNameInputGroup}>\n                                <Text style={styles.deviceName}>Device Name</Text>\n                                <TextInput\n                                    style={styles.deviceNameInput}\n                                    placeholder=\"Enter device name\"\n                                    value={deviceTree.devices[selectedDevice].name}\n                                    onChangeText={val => {\n                                        const clone = { ...deviceTree }\n                                        clone.devices[selectedDevice].name = val\n                                        setDeviceTreeState(clone)\n                                    }}\n                                />\n                            </View>\n                            <View style={styles.deviceIDRow}>\n                                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                                    <Text style={styles.deviceIdLbl}>Device ID:</Text>\n                                    <Text style={styles.deviceId}>\n                                        {\n                                            deviceTree.devices[selectedDevice].id ?\n                                                deviceTree.devices[selectedDevice].id.toUpperCase()\n                                                :\n                                                'No device ID set'\n                                        }\n                                    </Text>\n                                </View>\n                                <TouchableOpacity\n                                    style={styles.setToMyIDBtn}\n                                    activeOpacity={0.8}\n                                    onPress={() => {\n                                        if (deviceTree.devices.filter(deviceSearch => deviceSearch.id === myDeviceID).length > 0) {\n                                            db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices.filter(deviceSearch => deviceSearch.id === myDeviceID)[0].docID).update({ id: null })\n                                            const clone = { ...deviceTree }\n                                            clone.devices.filter(deviceSearch => deviceSearch.id === myDeviceID)[0].id = null\n                                            setDeviceTreeState(clone)\n                                        }\n                                        db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(clone.devices[selectedDevice].docID).update({ id: myDeviceID })\n                                        const clone = { ...deviceTree }\n                                        clone.devices[selectedDevice].id = myDeviceID\n                                        setDeviceTreeState(clone)\n                                        setMyDeviceDetailsState(clone.devices[selectedDevice])\n                                    }}\n                                >\n                                    <Ionicons\n                                        name=\"md-key\"\n                                        style={styles.setToMyIDIcon}\n                                    />\n                                </TouchableOpacity>\n                            </View>\n                            <View style={styles.printOnlineOrderRow}>\n                                <Text style={styles.printOnlineOrdersLbl}>\n                                    Print Online Orders:\n                                </Text>\n                                <GeneralSwitch\n                                    isActive={deviceTree.devices[selectedDevice].printOnlineOrders}\n                                    toggleSwitch={() => {\n                                        const clone = { ...deviceTree }\n                                        clone.devices[selectedDevice].printOnlineOrders = !deviceTree.devices[selectedDevice].printOnlineOrders\n                                        setDeviceTreeState(clone)\n                                    }}\n                                />\n                            </View>\n                            <View style={styles.useDifferentDeviceRow}>\n                                <Text style={styles.useDifferentDeviceLbl}>\n                                    Use Different Device To Print:\n                                </Text>\n                                <GeneralSwitch\n                                    isActive={deviceTree.devices[selectedDevice].useDifferentDeviceToPrint}\n                                    toggleSwitch={() => {\n                                        const clone = { ...deviceTree }\n                                        clone.devices[selectedDevice].useDifferentDeviceToPrint = !deviceTree.devices[selectedDevice].useDifferentDeviceToPrint\n                                        setDeviceTreeState(clone)\n                                    }}\n                                />\n                            </View>\n                            <View style={styles.printerToPrinterInputGroup}>\n                                <Text style={styles.printToPrinterLbl}>Print to Printer</Text>\n                                {!deviceTree.devices[selectedDevice].useDifferentDeviceToPrint ?\n                                    <TextInput\n                                        style={styles.printToPrintInput}\n                                        placeholder=\"Enter printer name\"\n                                        value={deviceTree.devices[selectedDevice].printToPrinter ? deviceTree.devices[selectedDevice].printToPrinter : ''}\n                                        onChangeText={val => {\n                                            const clone = { ...deviceTree }\n                                            clone.devices[selectedDevice].printToPrinter = val\n                                            setDeviceTreeState(clone)\n                                        }}\n                                    />\n                                    :\n                                    <ReactSelect\n                                        options={otherDeviceOptions}\n                                        value={\n                                            deviceTree.devices[selectedDevice].sendPrintToUserID\n                                        }\n                                        onChange={(val) => {\n                                            const clone = { ...deviceTree }\n                                            clone.devices[selectedDevice].sendPrintToUserID = val\n                                            setDeviceTreeState(clone)\n                                        }}\n                                        placeholder={\"Choose Device To Send Print To\"}\n                                        menuPortalTarget={document.body}\n                                        styles={{\n                                            menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                                            control: (provided, state) => ({\n                                                ...provided,\n                                                background: \"#fff\",\n                                                borderColor: \"#9e9e9e\",\n                                                minHeight: \"52px\",\n                                                height: \"52px\",\n                                                boxShadow: state.isFocused ? null : null,\n                                            }),\n\n                                            valueContainer: (provided, state) => ({\n                                                ...provided,\n                                                height: \"52px\",\n                                                padding: \"0 6px\",\n                                            }),\n\n                                            input: (provided, state) => ({\n                                                ...provided,\n                                                margin: \"0px\",\n                                            }),\n                                            indicatorSeparator: (state) => ({\n                                                display: \"none\",\n                                            }),\n                                            indicatorsContainer: (provided, state) => ({\n                                                ...provided,\n                                                height: \"52px\",\n                                            }),\n                                            container: (provided, state) => ({\n                                                ...provided,\n                                                width: \"100%\",\n                                            }),\n                                        }}\n                                        menuPlacement=\"auto\"\n                                        menuPosition=\"fixed\"\n                                    />\n                                }\n                            </View>\n                        </View>\n                        <View style={styles.btnsRow}>\n                            <TouchableOpacity style={styles.updateDeviceBtn} activeOpacity={0.8}\n                                onPress={() => {\n                                    db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices[selectedDevice].docID).update(deviceTree.devices[selectedDevice])\n                                }}\n                            >\n                                <Text style={styles.saveDevice}>Save Device</Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity style={styles.deleteDeviceBtn} activeOpacity={0.8}\n                                onPress={() => {\n                                    db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices[selectedDevice].docID).delete()\n                                    let clone = { ...deviceTree }\n                                    clone = { ...clone, devices: clone.devices.filter(deviceSearch => deviceSearch.docID !== deviceTree.devices[selectedDevice].docID) }\n                                    setDeviceTreeState(clone)\n                                    setselectedDevice(prev => prev > 0 ? prev - 1 : 0)\n                                }}\n                            >\n                                <Text style={styles.deleteDevice}>Delete Device</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                        :\n                        <View>\n                            <Text>No Devices Found</Text>\n                        </View>\n                    }\n                    {selectedDevice < deviceTree.devices.length - 1 + deviceTree.extraDevicesPayingFor ?\n                        <TouchableOpacity style={styles.nextDeviceBtn} activeOpacity={0.8} onPress={() => setselectedDevice(prev => prev + 1)}>\n                            <Entypo name=\"chevron-right\" style={styles.icon} />\n                        </TouchableOpacity>\n                        :\n                        <TouchableOpacity style={styles.nextDeviceBtn} activeOpacity={0.8}\n                            onPress={\n                                () => {\n                                    if (deviceTree.devices.length < 2 + deviceTree.extraDevicesPayingFor) {\n                                        db.collection('users').doc(auth.currentUser.uid).collection('devices').add({ name: `Device${deviceTree.devices.length}`, id: null, printToPrinter: null }).then((docRef) => {\n                                            const clone = { ...deviceTree }\n                                            clone.devices.push({ name: \"\", id: null, printToPrinter: null, sendPrintToUserID: null, docID: docRef.id })\n                                            setDeviceTreeState(clone)\n                                        })\n                                    } else {\n                                        resetLoader()\n                                        AddNewDevice()\n                                    }\n                                }\n                            }\n                        >\n                            <Entypo name=\"plus\" style={styles.icon} />\n                        </TouchableOpacity>\n                    }\n                </View>\n            </View>\n            {viewVisible && (\n                <Modal visible={true}>\n                    <Animated.View\n                        style={{\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            backgroundColor: \"white\",\n                            position: \"absolute\",\n                            opacity: fadeAnim,\n                            height: \"100%\",\n                            width: \"100%\",\n                        }}\n                    >\n                        <Image\n                            source={require(\"assets/loading.gif\")}\n                            style={{ width: 450, height: 450, resizeMode: \"contain\" }}\n                        />\n                    </Animated.View>\n                </Modal>\n            )}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: \"flex-start\",\n        justifyContent: \"flex-start\",\n        width: '100%',\n        height: '100%'\n    },\n    pageLbl: {\n        fontWeight: '700',\n        color: \"#121212\",\n        fontSize: 16,\n        margin: 20\n    },\n    group: {\n        alignSelf: \"stretch\",\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    deviceScrollContainer: {\n        width: 639,\n        // height: 591,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        margin: 20\n    },\n    backBtn: {\n        width: 50,\n        height: 50,\n        borderRadius: 20,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    deviceContainer: {\n        width: 358,\n        height: 468,\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    },\n    topGroup: {\n        width: 358,\n        height: 360,\n        justifyContent: \"space-between\"\n    },\n    deviceNameInputGroup: {\n        width: 358,\n        height: 88,\n        justifyContent: \"space-between\"\n    },\n    deviceName: {\n        fontWeight: '700',\n        color: \"#121212\",\n        fontSize: 17\n    },\n    deviceNameInput: {\n        width: 358,\n        height: 51,\n        backgroundColor: \"#ffffff\",\n        borderRadius: 5,\n        borderWidth: 1,\n        borderColor: \"#a0a0a0\",\n        padding: 10\n    },\n    deviceIDRow: {\n        width: 354,\n        height: 20,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\"\n    },\n    deviceIdLbl: {\n        fontWeight: '700',\n        color: \"#121212\",\n        fontSize: 17,\n        marginRight: 10\n    },\n    deviceId: {\n        fontWeight: '300',\n        color: \"#121212\",\n        fontSize: 14\n    },\n    setToMyIDBtn: {\n        width: 30,\n        height: 30,\n        backgroundColor: \"#1c294e\",\n        borderRadius: 10,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    setToMyIDIcon: {\n        color: \"rgba(255,255,255,1)\",\n        fontSize: 25\n    },\n    printOnlineOrderRow: {\n        width: 356,\n        height: 21,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    },\n    printOnlineOrdersLbl: {\n        fontWeight: '700',\n        color: \"#121212\",\n        fontSize: 17\n    },\n    printOnlineSwitch: {\n        width: 40,\n        height: 20,\n        backgroundColor: \"#E6E6E6\"\n    },\n    useDifferentDeviceRow: {\n        width: 356,\n        height: 20,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    },\n    useDifferentDeviceLbl: {\n        fontWeight: '700',\n        color: \"#111111\",\n        fontSize: 17\n    },\n    useDiffrentDeviceSwitch: {\n        width: 40,\n        height: 20,\n        backgroundColor: \"#E6E6E6\"\n    },\n    printerToPrinterInputGroup: {\n        width: 358,\n        height: 88,\n        justifyContent: \"space-between\"\n    },\n    printToPrinterLbl: {\n        fontWeight: '700',\n        color: \"#111111\",\n        fontSize: 17\n    },\n    printToPrintInput: {\n        width: 358,\n        height: 51,\n        backgroundColor: \"#ffffff\",\n        borderRadius: 5,\n        borderWidth: 1,\n        borderColor: \"#a0a0a0\",\n        padding: 10\n    },\n    btnsRow: {\n        width: 356,\n        height: 49,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    },\n    updateDeviceBtn: {\n        width: 170,\n        height: 48,\n        backgroundColor: \"rgba(76,175,80,1)\",\n        borderRadius: 20,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    saveDevice: {\n        fontWeight: '700',\n        color: \"rgba(255,255,255,1)\",\n        fontSize: 16\n    },\n    deleteDeviceBtn: {\n        width: 170,\n        height: 48,\n        backgroundColor: \"rgba(244,67,54,1)\",\n        borderRadius: 20,\n        opacity: 0.61,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    deleteDevice: {\n        fontWeight: '700',\n        color: \"rgba(255,255,255,1)\",\n        fontSize: 16\n    },\n    nextDeviceBtn: {\n        width: 50,\n        height: 50,\n        backgroundColor: \"#1c294e\",\n        borderRadius: 20,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    icon: {\n        color: \"rgba(255,255,255,1)\",\n        fontSize: 40\n    }\n});\n\nexport default Index;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}