{"ast":null,"code":"import NativeReanimatedModule from \"./NativeReanimated\";\nimport { nativeShouldBeMock, shouldBeUseWeb, isWeb } from \"./PlatformChecker\";\nimport { makeShareableCloneRecursive, makeShareable as makeShareableUnwrapped } from \"./shareables\";\nimport { startMapper as startMapperUnwrapped } from \"./mappers\";\nimport { makeMutable as makeMutableUnwrapped, makeRemote as makeRemoteUnwrapped } from \"./mutables\";\nimport { initializeUIRuntime } from \"./initializers\";\nimport { SensorContainer } from \"./SensorContainer\";\nexport { stopMapper } from \"./mappers\";\nexport { runOnJS, runOnUI } from \"./threads\";\nvar _worklet_16556756009009_init_data = {\n  code: \"function anonymous() {}\",\n  location: \"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/core.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AASoB,kBAEpB\\\",\\\"names\\\":[],\\\"sources\\\":[\\\"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/core.js\\\"]}\"\n};\nvar testWorklet = function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f() {};\n  _f._closure = {};\n  _f.__initData = _worklet_16556756009009_init_data;\n  _f.__workletHash = 16556756009009;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar throwUninitializedReanimatedException = function throwUninitializedReanimatedException() {\n  throw new Error(\"Failed to initialize react-native-reanimated library, make sure you followed installation steps here: https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation/ \\n1) Make sure reanimated's babel plugin is installed in your babel.config.js (you should have 'react-native-reanimated/plugin' listed there - also see the above link for details) \\n2) Make sure you reset build cache after updating the config, run: yarn start --reset-cache\");\n};\nexport var checkPluginState = function checkPluginState() {\n  var throwError = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  if (!testWorklet.__workletHash && !shouldBeUseWeb()) {\n    if (throwError) {\n      throwUninitializedReanimatedException();\n    }\n    return false;\n  }\n  return true;\n};\nexport var isConfigured = function isConfigured() {\n  var throwError = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return checkPluginState(throwError);\n};\nexport var isConfiguredCheck = function isConfiguredCheck() {\n  checkPluginState(true);\n};\nvar configurationCheckWrapper = __DEV__ ? function (fn) {\n  return function () {\n    isConfigured(true);\n    return fn.apply(void 0, arguments);\n  };\n} : function (fn) {\n  return fn;\n};\nexport var startMapper = __DEV__ ? configurationCheckWrapper(startMapperUnwrapped) : startMapperUnwrapped;\nexport var makeShareable = __DEV__ ? configurationCheckWrapper(makeShareableUnwrapped) : makeShareableUnwrapped;\nexport var makeMutable = __DEV__ ? configurationCheckWrapper(makeMutableUnwrapped) : makeMutableUnwrapped;\nexport var makeRemote = __DEV__ ? configurationCheckWrapper(makeRemoteUnwrapped) : makeRemoteUnwrapped;\nglobal._WORKLET = false;\nglobal._log = function (s) {\n  console.log(s);\n};\nexport function getViewProp(viewTag, propName) {\n  if (global._IS_FABRIC) {\n    throw new Error('[react-native-reanimated] `getViewProp` is not supported on Fabric yet');\n  }\n  return new Promise(function (resolve, reject) {\n    return NativeReanimatedModule.getViewProp(viewTag, propName, function (result) {\n      if (typeof result === 'string' && result.substr(0, 6) === 'error:') {\n        reject(result);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\nexport function getSensorContainer() {\n  if (!global.__sensorContainer) {\n    global.__sensorContainer = new SensorContainer();\n  }\n  return global.__sensorContainer;\n}\nvar _worklet_4585136441649_init_data = {\n  code: \"function handleAndFlushAnimationFrame(eventTimestamp, event) {\\n  const {\\n    eventHandler\\n  } = this._closure;\\n  global.__frameTimestamp = eventTimestamp;\\n  eventHandler(event);\\n  global.__flushAnimationFrame(eventTimestamp);\\n  global.__frameTimestamp = undefined;\\n}\",\n  location: \"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/core.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAmEE,qCAASA,CAA6BC,gBAAcC,KAAEA,EAAK;EAAA;IAAA;EAAA;EAGzDC,MAAM,CAACC,gBAAgB,GAAGH,cAAc;EACxCI,YAAY,CAACH,KAAK,CAAC;EACnBC,MAAM,CAACG,qBAAqB,CAACL,cAAc,CAAC;EAC5CE,MAAM,CAACC,gBAAgB,GAAGG,SAAS;AACrC\\\",\\\"names\\\":[\\\"handleAndFlushAnimationFrame\\\",\\\"eventTimestamp\\\",\\\"event\\\",\\\"global\\\",\\\"__frameTimestamp\\\",\\\"eventHandler\\\",\\\"__flushAnimationFrame\\\",\\\"undefined\\\"],\\\"sources\\\":[\\\"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/core.js\\\"]}\"\n};\nexport function registerEventHandler(eventHash, eventHandler) {\n  var handleAndFlushAnimationFrame = function () {\n    var _e = [new global.Error(), -2, -27];\n    var _f = function _f(eventTimestamp, event) {\n      global.__frameTimestamp = eventTimestamp;\n      eventHandler(event);\n      global.__flushAnimationFrame(eventTimestamp);\n      global.__frameTimestamp = undefined;\n    };\n    _f._closure = {\n      eventHandler: eventHandler\n    };\n    _f.__initData = _worklet_4585136441649_init_data;\n    _f.__workletHash = 4585136441649;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }();\n  return NativeReanimatedModule.registerEventHandler(eventHash, makeShareableCloneRecursive(handleAndFlushAnimationFrame));\n}\nexport function unregisterEventHandler(id) {\n  return NativeReanimatedModule.unregisterEventHandler(id);\n}\nvar _worklet_13154374331073_init_data = {\n  code: \"function handleAndFlushAnimationFrame(state, height) {\\n  const {\\n    eventHandler\\n  } = this._closure;\\n  const now = performance.now();\\n  global.__frameTimestamp = now;\\n  eventHandler(state, height);\\n  global.__flushAnimationFrame(now);\\n  global.__frameTimestamp = undefined;\\n}\",\n  location: \"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/core.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAiFE;EAAA;IAAA;EAAA;EAAA;EACAA;EACAC,YAASC;EAGPF,MAAMG,sBAAqB,CAAEA;EAC7BH,MAAM,CAACI,gBAAgB,GAAGD,SAAG\\\",\\\"names\\\":[\\\"global\\\",\\\"eventHandler\\\",\\\"handleAndFlushAnimationFrame\\\",\\\"now\\\",\\\"__frameTimestamp\\\"],\\\"sources\\\":[\\\"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/core.js\\\"]}\"\n};\nexport function subscribeForKeyboardEvents(eventHandler, options) {\n  var _options$isStatusBarT;\n  var handleAndFlushAnimationFrame = function () {\n    var _e = [new global.Error(), -2, -27];\n    var _f = function _f(state, height) {\n      var now = performance.now();\n      global.__frameTimestamp = now;\n      eventHandler(state, height);\n      global.__flushAnimationFrame(now);\n      global.__frameTimestamp = undefined;\n    };\n    _f._closure = {\n      eventHandler: eventHandler\n    };\n    _f.__initData = _worklet_13154374331073_init_data;\n    _f.__workletHash = 13154374331073;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }();\n  return NativeReanimatedModule.subscribeForKeyboardEvents(makeShareableCloneRecursive(handleAndFlushAnimationFrame), (_options$isStatusBarT = options.isStatusBarTranslucentAndroid) != null ? _options$isStatusBarT : false);\n}\nexport function unsubscribeFromKeyboardEvents(listenerId) {\n  return NativeReanimatedModule.unsubscribeFromKeyboardEvents(listenerId);\n}\nexport function registerSensor(sensorType, config, eventHandler) {\n  var sensorContainer = getSensorContainer();\n  return sensorContainer.registerSensor(sensorType, config, makeShareableCloneRecursive(eventHandler));\n}\nexport function initializeSensor(sensorType, config) {\n  var sensorContainer = getSensorContainer();\n  return sensorContainer.initializeSensor(sensorType, config);\n}\nexport function unregisterSensor(sensorId) {\n  var sensorContainer = getSensorContainer();\n  return sensorContainer.unregisterSensor(sensorId);\n}\n\nif (!isWeb() && isConfigured()) {\n  initializeUIRuntime();\n}\nvar featuresConfig = {\n  enableLayoutAnimations: false,\n  setByUser: false\n};\nexport function enableLayoutAnimations(flag) {\n  var isCallByUser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (isCallByUser) {\n    featuresConfig = {\n      enableLayoutAnimations: flag,\n      setByUser: true\n    };\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  } else if (!featuresConfig.setByUser && featuresConfig.enableLayoutAnimations !== flag) {\n    featuresConfig.enableLayoutAnimations = flag;\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  }\n}\nexport function configureLayoutAnimations(viewTag, type, config) {\n  var sharedTransitionTag = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  NativeReanimatedModule.configureLayoutAnimation(viewTag, type, sharedTransitionTag, makeShareableCloneRecursive(config));\n}\nexport function configureProps(uiProps, nativeProps) {\n  if (!nativeShouldBeMock()) {\n    NativeReanimatedModule.configureProps(uiProps, nativeProps);\n  }\n}","map":{"version":3,"mappings":"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","names":["NativeReanimatedModule","nativeShouldBeMock","shouldBeUseWeb","isWeb","makeShareableCloneRecursive","makeShareable","makeShareableUnwrapped","startMapper","startMapperUnwrapped","makeMutable","makeMutableUnwrapped","makeRemote","makeRemoteUnwrapped","initializeUIRuntime","SensorContainer","stopMapper","runOnJS","runOnUI","testWorklet","throwUninitializedReanimatedException","Error","checkPluginState","throwError","__workletHash","isConfigured","isConfiguredCheck","configurationCheckWrapper","__DEV__","fn","arguments","global","_WORKLET","_log","s","console","log","getViewProp","viewTag","propName","_IS_FABRIC","Promise","resolve","reject","result","substr","getSensorContainer","__sensorContainer","registerEventHandler","eventHash","eventHandler","handleAndFlushAnimationFrame","eventTimestamp","event","__frameTimestamp","__flushAnimationFrame","undefined","unregisterEventHandler","id","subscribeForKeyboardEvents","options","state","height","now","performance","isStatusBarTranslucentAndroid","unsubscribeFromKeyboardEvents","listenerId","registerSensor","sensorType","config","sensorContainer","initializeSensor","unregisterSensor","sensorId","featuresConfig","enableLayoutAnimations","setByUser","flag","isCallByUser","configureLayoutAnimations","type","sharedTransitionTag","configureLayoutAnimation","configureProps","uiProps","nativeProps"],"sources":["/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/core.ts"],"sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport { nativeShouldBeMock, shouldBeUseWeb, isWeb } from './PlatformChecker';\nimport {\n  AnimatedKeyboardOptions,\n  BasicWorkletFunction,\n  SensorConfig,\n  SensorType,\n  SharedValue,\n  Value3D,\n  ValueRotation,\n} from './commonTypes';\nimport {\n  makeShareableCloneRecursive,\n  makeShareable as makeShareableUnwrapped,\n} from './shareables';\nimport { startMapper as startMapperUnwrapped } from './mappers';\nimport {\n  makeMutable as makeMutableUnwrapped,\n  makeRemote as makeRemoteUnwrapped,\n} from './mutables';\nimport {\n  LayoutAnimationFunction,\n  LayoutAnimationType,\n} from './layoutReanimation';\nimport { initializeUIRuntime } from './initializers';\nimport { SensorContainer } from './SensorContainer';\n\nexport { stopMapper } from './mappers';\nexport { runOnJS, runOnUI } from './threads';\n\nexport type ReanimatedConsole = Pick<\n  Console,\n  'debug' | 'log' | 'warn' | 'info' | 'error'\n>;\n\nconst testWorklet: BasicWorkletFunction<void> = () => {\n  'worklet';\n};\n\nconst throwUninitializedReanimatedException = () => {\n  throw new Error(\n    \"Failed to initialize react-native-reanimated library, make sure you followed installation steps here: https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/installation/ \\n1) Make sure reanimated's babel plugin is installed in your babel.config.js (you should have 'react-native-reanimated/plugin' listed there - also see the above link for details) \\n2) Make sure you reset build cache after updating the config, run: yarn start --reset-cache\"\n  );\n};\n\nexport const checkPluginState: (throwError: boolean) => boolean = (\n  throwError = true\n) => {\n  if (!testWorklet.__workletHash && !shouldBeUseWeb()) {\n    if (throwError) {\n      throwUninitializedReanimatedException();\n    }\n    return false;\n  }\n  return true;\n};\n\nexport const isConfigured: (throwError?: boolean) => boolean = (\n  throwError = false\n) => {\n  return checkPluginState(throwError);\n};\n\nexport const isConfiguredCheck: () => void = () => {\n  checkPluginState(true);\n};\n\nconst configurationCheckWrapper = __DEV__\n  ? <T extends Array<any>, U>(fn: (...args: T) => U) => {\n      return (...args: T): U => {\n        isConfigured(true);\n        return fn(...args);\n      };\n    }\n  : <T extends Array<any>, U>(fn: (...args: T) => U) => fn;\n\nexport const startMapper = __DEV__\n  ? configurationCheckWrapper(startMapperUnwrapped)\n  : startMapperUnwrapped;\n\nexport const makeShareable = __DEV__\n  ? configurationCheckWrapper(makeShareableUnwrapped)\n  : makeShareableUnwrapped;\n\nexport const makeMutable = __DEV__\n  ? configurationCheckWrapper(makeMutableUnwrapped)\n  : makeMutableUnwrapped;\n\nexport const makeRemote = __DEV__\n  ? configurationCheckWrapper(makeRemoteUnwrapped)\n  : makeRemoteUnwrapped;\n\nglobal._WORKLET = false;\nglobal._log = function (s: string) {\n  console.log(s);\n};\n\nexport function getViewProp<T>(viewTag: string, propName: string): Promise<T> {\n  if (global._IS_FABRIC) {\n    throw new Error(\n      '[react-native-reanimated] `getViewProp` is not supported on Fabric yet'\n    );\n  }\n\n  return new Promise((resolve, reject) => {\n    return NativeReanimatedModule.getViewProp(\n      viewTag,\n      propName,\n      (result: T) => {\n        if (typeof result === 'string' && result.substr(0, 6) === 'error:') {\n          reject(result);\n        } else {\n          resolve(result);\n        }\n      }\n    );\n  });\n}\n\nexport function getSensorContainer(): SensorContainer {\n  if (!global.__sensorContainer) {\n    global.__sensorContainer = new SensorContainer();\n  }\n  return global.__sensorContainer;\n}\n\nexport function registerEventHandler<T>(\n  eventHash: string,\n  eventHandler: (event: T) => void\n): string {\n  function handleAndFlushAnimationFrame(eventTimestamp: number, event: T) {\n    'worklet';\n    global.__frameTimestamp = eventTimestamp;\n    eventHandler(event);\n    global.__flushAnimationFrame(eventTimestamp);\n    global.__frameTimestamp = undefined;\n  }\n  return NativeReanimatedModule.registerEventHandler(\n    eventHash,\n    makeShareableCloneRecursive(handleAndFlushAnimationFrame)\n  );\n}\n\nexport function unregisterEventHandler(id: string): void {\n  return NativeReanimatedModule.unregisterEventHandler(id);\n}\n\nexport function subscribeForKeyboardEvents(\n  eventHandler: (state: number, height: number) => void,\n  options: AnimatedKeyboardOptions\n): number {\n  // TODO: this should really go with the same code path as other events, that is\n  // via registerEventHandler. For now we are copying the code from there.\n  function handleAndFlushAnimationFrame(state: number, height: number) {\n    'worklet';\n    const now = performance.now();\n    global.__frameTimestamp = now;\n    eventHandler(state, height);\n    global.__flushAnimationFrame(now);\n    global.__frameTimestamp = undefined;\n  }\n  return NativeReanimatedModule.subscribeForKeyboardEvents(\n    makeShareableCloneRecursive(handleAndFlushAnimationFrame),\n    options.isStatusBarTranslucentAndroid ?? false\n  );\n}\n\nexport function unsubscribeFromKeyboardEvents(listenerId: number): void {\n  return NativeReanimatedModule.unsubscribeFromKeyboardEvents(listenerId);\n}\n\nexport function registerSensor(\n  sensorType: SensorType,\n  config: SensorConfig,\n  eventHandler: (\n    data: Value3D | ValueRotation,\n    orientationDegrees: number\n  ) => void\n): number {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.registerSensor(\n    sensorType,\n    config,\n    makeShareableCloneRecursive(eventHandler)\n  );\n}\n\nexport function initializeSensor(\n  sensorType: SensorType,\n  config: SensorConfig\n): SharedValue<Value3D | ValueRotation> {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.initializeSensor(sensorType, config);\n}\n\nexport function unregisterSensor(sensorId: number): void {\n  const sensorContainer = getSensorContainer();\n  return sensorContainer.unregisterSensor(sensorId);\n}\n\n// initialize UI runtime if applicable\nif (!isWeb() && isConfigured()) {\n  initializeUIRuntime();\n}\n\ntype FeaturesConfig = {\n  enableLayoutAnimations: boolean;\n  setByUser: boolean;\n};\n\nlet featuresConfig: FeaturesConfig = {\n  enableLayoutAnimations: false,\n  setByUser: false,\n};\n\nexport function enableLayoutAnimations(\n  flag: boolean,\n  isCallByUser = true\n): void {\n  if (isCallByUser) {\n    featuresConfig = {\n      enableLayoutAnimations: flag,\n      setByUser: true,\n    };\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  } else if (\n    !featuresConfig.setByUser &&\n    featuresConfig.enableLayoutAnimations !== flag\n  ) {\n    featuresConfig.enableLayoutAnimations = flag;\n    NativeReanimatedModule.enableLayoutAnimations(flag);\n  }\n}\n\nexport function configureLayoutAnimations(\n  viewTag: number,\n  type: LayoutAnimationType,\n  config: LayoutAnimationFunction | Keyframe,\n  sharedTransitionTag = ''\n): void {\n  NativeReanimatedModule.configureLayoutAnimation(\n    viewTag,\n    type,\n    sharedTransitionTag,\n    makeShareableCloneRecursive(config)\n  );\n}\n\nexport function configureProps(uiProps: string[], nativeProps: string[]): void {\n  if (!nativeShouldBeMock()) {\n    NativeReanimatedModule.configureProps(uiProps, nativeProps);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}