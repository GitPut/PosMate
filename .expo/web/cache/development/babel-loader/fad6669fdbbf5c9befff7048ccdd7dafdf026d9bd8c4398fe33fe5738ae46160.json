{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { deviceIdState, deviceTreeState, setDeviceTreeState, setMyDeviceDetailsState } from \"../../../../../state/state\";\nimport { auth, db } from \"../../../../../state/firebaseConfig\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport GeneralSwitch from \"../../../../../components/GeneralSwitch\";\nimport { Entypo, Ionicons } from \"@expo/vector-icons\";\nimport \"react-select2-wrapper/css/select2.css\";\nimport ReactSelect from \"react-select\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Index(props) {\n  var deviceTree = deviceTreeState.use();\n  var myDeviceID = deviceIdState.use();\n  var fadeAnim = useRef(new Animated.Value(0)).current;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    viewVisible = _useState2[0],\n    setviewVisible = _useState2[1];\n  var _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedDevice = _useState4[0],\n    setselectedDevice = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    otherDeviceOptions = _useState6[0],\n    setOtherDeviceOptions = _useState6[1];\n  var fadeIn = function fadeIn() {\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 500,\n      useNativeDriver: false\n    }).start();\n  };\n  var resetLoader = function resetLoader() {\n    setviewVisible(true);\n    fadeIn();\n  };\n  var AddNewDevice = function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield db.collection(\"users\").doc(auth.currentUser.uid).collection(\"checkout_sessions\").add({\n        price: 'price_1Oj9NZCIw3L7DOwI7DKAhIve',\n        quantity: 1,\n        success_url: window.location.href,\n        cancel_url: window.location.href\n      }).then(function (docRef) {\n        docRef.onSnapshot(function () {\n          var _ref2 = _asyncToGenerator(function* (snap) {\n            var _snap$data = snap.data(),\n              error = _snap$data.error,\n              sessionId = _snap$data.sessionId;\n            if (error) {\n              alert(`An error occurred: ${error.message}`);\n            }\n            if (sessionId) {\n              var stripe = yield loadStripe(\"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\");\n              console.log(`redirecting`);\n              yield stripe.redirectToCheckout({\n                sessionId: sessionId\n              });\n            }\n          });\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      });\n    });\n    return function AddNewDevice() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (deviceTree.devices.length > 0) {\n      setOtherDeviceOptions([]);\n      deviceTree.devices.map(function (deviceSearch, index) {\n        if (deviceSearch.id !== deviceTree.devices[selectedDevice].id) {\n          setOtherDeviceOptions(function (prev) {\n            return [].concat(_toConsumableArray(prev), [{\n              value: deviceSearch.docID,\n              label: deviceSearch.name\n            }]);\n          });\n        }\n      });\n    }\n  }, [selectedDevice]);\n  useEffect(function () {\n    if (deviceTree.devices.length > 1) {\n      var newDeviceTreeDevices = [];\n      for (var index = 0; index < deviceTree.devices.length; index++) {\n        var element = deviceTree.devices[index];\n        if (element.id === myDeviceID) {\n          newDeviceTreeDevices.unshift(element);\n        } else {\n          newDeviceTreeDevices.push(element);\n        }\n      }\n      setDeviceTreeState(_objectSpread(_objectSpread({}, deviceTree), {}, {\n        devices: newDeviceTreeDevices\n      }));\n    }\n  }, [deviceTree, myDeviceID]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.pageLbl,\n      children: \"Device Settings\"\n    }), _jsx(View, {\n      style: styles.group,\n      children: _jsxs(View, {\n        style: styles.deviceScrollContainer,\n        children: [selectedDevice > 0 ? _jsx(TouchableOpacity, {\n          style: styles.nextDeviceBtn,\n          activeOpacity: 0.8,\n          onPress: function onPress() {\n            return setselectedDevice(function (prev) {\n              return prev - 1;\n            });\n          },\n          children: _jsx(Entypo, {\n            name: \"chevron-left\",\n            style: styles.icon\n          })\n        }) : _jsx(View, {\n          style: styles.backBtn\n        }), deviceTree.devices.length > 0 ? _jsxs(View, {\n          style: styles.deviceContainer,\n          children: [_jsxs(View, {\n            style: styles.topGroup,\n            children: [_jsxs(View, {\n              style: styles.deviceNameInputGroup,\n              children: [_jsx(Text, {\n                style: styles.deviceName,\n                children: \"Device Name\"\n              }), _jsx(TextInput, {\n                style: styles.deviceNameInput,\n                placeholder: \"Enter device name\",\n                value: deviceTree.devices[selectedDevice].name,\n                onChangeText: function onChangeText(val) {\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[selectedDevice].name = val;\n                  setDeviceTreeState(clone);\n                }\n              })]\n            }), _jsxs(View, {\n              style: styles.deviceIDRow,\n              children: [_jsxs(View, {\n                style: {\n                  flexDirection: 'row',\n                  alignItems: 'center'\n                },\n                children: [_jsx(Text, {\n                  style: styles.deviceIdLbl,\n                  children: \"Device ID:\"\n                }), _jsx(Text, {\n                  style: styles.deviceId,\n                  children: deviceTree.devices[selectedDevice].id ? deviceTree.devices[selectedDevice].id.toUpperCase() : 'No device ID set'\n                })]\n              }), _jsx(TouchableOpacity, {\n                style: styles.setToMyIDBtn,\n                activeOpacity: 0.8,\n                onPress: function onPress() {\n                  if (deviceTree.devices.filter(function (deviceSearch) {\n                    return deviceSearch.id === myDeviceID;\n                  }).length > 0) {\n                    db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices.filter(function (deviceSearch) {\n                      return deviceSearch.id === myDeviceID;\n                    })[0].docID).update({\n                      id: null\n                    });\n                    var _clone = _objectSpread({}, deviceTree);\n                    _clone.devices.filter(function (deviceSearch) {\n                      return deviceSearch.id === myDeviceID;\n                    })[0].id = null;\n                    setDeviceTreeState(_clone);\n                  }\n                  db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices[selectedDevice].docID).update({\n                    id: myDeviceID\n                  });\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[selectedDevice].id = myDeviceID;\n                  setDeviceTreeState(clone);\n                  setMyDeviceDetailsState(deviceTree.devices[selectedDevice]);\n                },\n                children: _jsx(Ionicons, {\n                  name: \"md-key\",\n                  style: styles.setToMyIDIcon\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.printOnlineOrderRow,\n              children: [_jsx(Text, {\n                style: styles.printOnlineOrdersLbl,\n                children: \"Print Online Orders:\"\n              }), _jsx(GeneralSwitch, {\n                isActive: deviceTree.devices[selectedDevice].printOnlineOrders,\n                toggleSwitch: function toggleSwitch() {\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[selectedDevice].printOnlineOrders = !deviceTree.devices[selectedDevice].printOnlineOrders;\n                  setDeviceTreeState(clone);\n                }\n              })]\n            }), _jsxs(View, {\n              style: styles.useDifferentDeviceRow,\n              children: [_jsx(Text, {\n                style: styles.useDifferentDeviceLbl,\n                children: \"Use Different Device To Print:\"\n              }), _jsx(GeneralSwitch, {\n                isActive: deviceTree.devices[selectedDevice].useDifferentDeviceToPrint,\n                toggleSwitch: function toggleSwitch() {\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[selectedDevice].useDifferentDeviceToPrint = !deviceTree.devices[selectedDevice].useDifferentDeviceToPrint;\n                  setDeviceTreeState(clone);\n                }\n              })]\n            }), _jsxs(View, {\n              style: styles.printerToPrinterInputGroup,\n              children: [_jsx(Text, {\n                style: styles.printToPrinterLbl,\n                children: \"Print to Printer\"\n              }), !deviceTree.devices[selectedDevice].useDifferentDeviceToPrint ? _jsx(TextInput, {\n                style: styles.printToPrintInput,\n                placeholder: \"Enter printer name\",\n                value: deviceTree.devices[selectedDevice].printToPrinter ? deviceTree.devices[selectedDevice].printToPrinter : '',\n                onChangeText: function onChangeText(val) {\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[selectedDevice].printToPrinter = val;\n                  setDeviceTreeState(clone);\n                }\n              }) : _jsx(ReactSelect, {\n                options: otherDeviceOptions,\n                value: deviceTree.devices[selectedDevice].sendPrintToUserID,\n                onChange: function onChange(val) {\n                  var clone = _objectSpread({}, deviceTree);\n                  clone.devices[selectedDevice].sendPrintToUserID = val;\n                  setDeviceTreeState(clone);\n                },\n                placeholder: \"Choose Device To Send Print To\",\n                menuPortalTarget: document.body,\n                styles: {\n                  menuPortal: function menuPortal(base) {\n                    return _objectSpread(_objectSpread({}, base), {}, {\n                      zIndex: 9999\n                    });\n                  },\n                  control: function control(provided, state) {\n                    return _objectSpread(_objectSpread({}, provided), {}, {\n                      background: \"#fff\",\n                      borderColor: \"#9e9e9e\",\n                      minHeight: \"52px\",\n                      height: \"52px\",\n                      boxShadow: state.isFocused ? null : null\n                    });\n                  },\n                  valueContainer: function valueContainer(provided, state) {\n                    return _objectSpread(_objectSpread({}, provided), {}, {\n                      height: \"52px\",\n                      padding: \"0 6px\"\n                    });\n                  },\n                  input: function input(provided, state) {\n                    return _objectSpread(_objectSpread({}, provided), {}, {\n                      margin: \"0px\"\n                    });\n                  },\n                  indicatorSeparator: function indicatorSeparator(state) {\n                    return {\n                      display: \"none\"\n                    };\n                  },\n                  indicatorsContainer: function indicatorsContainer(provided, state) {\n                    return _objectSpread(_objectSpread({}, provided), {}, {\n                      height: \"52px\"\n                    });\n                  },\n                  container: function container(provided, state) {\n                    return _objectSpread(_objectSpread({}, provided), {}, {\n                      width: \"100%\"\n                    });\n                  }\n                },\n                menuPlacement: \"auto\",\n                menuPosition: \"fixed\"\n              })]\n            })]\n          }), _jsxs(View, {\n            style: styles.btnsRow,\n            children: [_jsx(TouchableOpacity, {\n              style: styles.updateDeviceBtn,\n              activeOpacity: 0.8,\n              onPress: function onPress() {\n                db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices[selectedDevice].docID).update(deviceTree.devices[selectedDevice]);\n              },\n              children: _jsx(Text, {\n                style: styles.saveDevice,\n                children: \"Save Device\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: styles.deleteDeviceBtn,\n              activeOpacity: 0.8,\n              onPress: function onPress() {\n                db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices[selectedDevice].docID).delete();\n                var clone = _objectSpread({}, deviceTree);\n                clone = _objectSpread(_objectSpread({}, clone), {}, {\n                  devices: clone.devices.filter(function (deviceSearch) {\n                    return deviceSearch.docID !== deviceTree.devices[selectedDevice].docID;\n                  })\n                });\n                setDeviceTreeState(clone);\n                setselectedDevice(function (prev) {\n                  return prev > 0 ? prev - 1 : 0;\n                });\n              },\n              children: _jsx(Text, {\n                style: styles.deleteDevice,\n                children: \"Delete Device\"\n              })\n            })]\n          })]\n        }) : _jsx(View, {\n          children: _jsx(Text, {\n            children: \"No Devices Found\"\n          })\n        }), selectedDevice < deviceTree.devices.length - 1 + deviceTree.extraDevicesPayingFor ? _jsx(TouchableOpacity, {\n          style: styles.nextDeviceBtn,\n          activeOpacity: 0.8,\n          onPress: function onPress() {\n            return setselectedDevice(function (prev) {\n              return prev + 1;\n            });\n          },\n          children: _jsx(Entypo, {\n            name: \"chevron-right\",\n            style: styles.icon\n          })\n        }) : _jsx(TouchableOpacity, {\n          style: styles.nextDeviceBtn,\n          activeOpacity: 0.8,\n          onPress: function onPress() {\n            if (deviceTree.devices.length < 2 + deviceTree.extraDevicesPayingFor) {\n              db.collection('users').doc(auth.currentUser.uid).collection('devices').add({\n                name: `Device${deviceTree.devices.length}`,\n                id: null,\n                printToPrinter: null\n              }).then(function (docRef) {\n                var clone = _objectSpread({}, deviceTree);\n                clone.devices.push({\n                  name: \"\",\n                  id: null,\n                  printToPrinter: null,\n                  sendPrintToUserID: null,\n                  docID: docRef.id\n                });\n                setDeviceTreeState(clone);\n              });\n            } else {\n              resetLoader();\n              AddNewDevice();\n            }\n          },\n          children: _jsx(Entypo, {\n            name: \"plus\",\n            style: styles.icon\n          })\n        })]\n      })\n    }), viewVisible && _jsx(Modal, {\n      visible: true,\n      children: _jsx(Animated.View, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          backgroundColor: \"white\",\n          position: \"absolute\",\n          opacity: fadeAnim,\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: _jsx(Image, {\n          source: require(\"../../../../../assets/loading.gif\"),\n          style: {\n            width: 450,\n            height: 450,\n            resizeMode: \"contain\"\n          }\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    width: '100%',\n    height: '100%'\n  },\n  pageLbl: {\n    fontWeight: '700',\n    color: \"#121212\",\n    fontSize: 16,\n    margin: 20\n  },\n  group: {\n    alignSelf: \"stretch\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  deviceScrollContainer: {\n    width: 639,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    margin: 20\n  },\n  backBtn: {\n    width: 50,\n    height: 50,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  deviceContainer: {\n    width: 358,\n    height: 468,\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  topGroup: {\n    width: 358,\n    height: 360,\n    justifyContent: \"space-between\"\n  },\n  deviceNameInputGroup: {\n    width: 358,\n    height: 88,\n    justifyContent: \"space-between\"\n  },\n  deviceName: {\n    fontWeight: '700',\n    color: \"#121212\",\n    fontSize: 17\n  },\n  deviceNameInput: {\n    width: 358,\n    height: 51,\n    backgroundColor: \"#ffffff\",\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"#a0a0a0\",\n    padding: 10\n  },\n  deviceIDRow: {\n    width: 354,\n    height: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  deviceIdLbl: {\n    fontWeight: '700',\n    color: \"#121212\",\n    fontSize: 17,\n    marginRight: 10\n  },\n  deviceId: {\n    fontWeight: '300',\n    color: \"#121212\",\n    fontSize: 14\n  },\n  setToMyIDBtn: {\n    width: 30,\n    height: 30,\n    backgroundColor: \"#1c294e\",\n    borderRadius: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  setToMyIDIcon: {\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 25\n  },\n  printOnlineOrderRow: {\n    width: 356,\n    height: 21,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  printOnlineOrdersLbl: {\n    fontWeight: '700',\n    color: \"#121212\",\n    fontSize: 17\n  },\n  printOnlineSwitch: {\n    width: 40,\n    height: 20,\n    backgroundColor: \"#E6E6E6\"\n  },\n  useDifferentDeviceRow: {\n    width: 356,\n    height: 20,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  useDifferentDeviceLbl: {\n    fontWeight: '700',\n    color: \"#111111\",\n    fontSize: 17\n  },\n  useDiffrentDeviceSwitch: {\n    width: 40,\n    height: 20,\n    backgroundColor: \"#E6E6E6\"\n  },\n  printerToPrinterInputGroup: {\n    width: 358,\n    height: 88,\n    justifyContent: \"space-between\"\n  },\n  printToPrinterLbl: {\n    fontWeight: '700',\n    color: \"#111111\",\n    fontSize: 17\n  },\n  printToPrintInput: {\n    width: 358,\n    height: 51,\n    backgroundColor: \"#ffffff\",\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"#a0a0a0\",\n    padding: 10\n  },\n  btnsRow: {\n    width: 356,\n    height: 49,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  updateDeviceBtn: {\n    width: 170,\n    height: 48,\n    backgroundColor: \"rgba(76,175,80,1)\",\n    borderRadius: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  saveDevice: {\n    fontWeight: '700',\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 16\n  },\n  deleteDeviceBtn: {\n    width: 170,\n    height: 48,\n    backgroundColor: \"rgba(244,67,54,1)\",\n    borderRadius: 20,\n    opacity: 0.61,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  deleteDevice: {\n    fontWeight: '700',\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 16\n  },\n  nextDeviceBtn: {\n    width: 50,\n    height: 50,\n    backgroundColor: \"#1c294e\",\n    borderRadius: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon: {\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 40\n  }\n});\nexport default Index;","map":{"version":3,"names":["React","useEffect","useRef","useState","View","Text","ScrollView","StyleSheet","Animated","Modal","TouchableOpacity","Dimensions","TextInput","deviceIdState","deviceTreeState","setDeviceTreeState","setMyDeviceDetailsState","auth","db","loadStripe","Image","GeneralSwitch","Entypo","Ionicons","ReactSelect","jsx","_jsx","jsxs","_jsxs","Index","props","deviceTree","use","myDeviceID","fadeAnim","Value","current","_useState","_useState2","_slicedToArray","viewVisible","setviewVisible","_Dimensions$get","get","width","height","_useState3","_useState4","selectedDevice","setselectedDevice","_useState5","_useState6","otherDeviceOptions","setOtherDeviceOptions","fadeIn","timing","toValue","duration","useNativeDriver","start","resetLoader","AddNewDevice","_ref","_asyncToGenerator","collection","doc","currentUser","uid","add","price","quantity","success_url","window","location","href","cancel_url","then","docRef","onSnapshot","_ref2","snap","_snap$data","data","error","sessionId","alert","message","stripe","console","log","redirectToCheckout","_x","apply","arguments","devices","length","map","deviceSearch","index","id","prev","concat","_toConsumableArray","value","docID","label","name","newDeviceTreeDevices","element","unshift","push","_objectSpread","style","styles","container","children","pageLbl","group","deviceScrollContainer","nextDeviceBtn","activeOpacity","onPress","icon","backBtn","deviceContainer","topGroup","deviceNameInputGroup","deviceName","deviceNameInput","placeholder","onChangeText","val","clone","deviceIDRow","flexDirection","alignItems","deviceIdLbl","deviceId","toUpperCase","setToMyIDBtn","filter","update","setToMyIDIcon","printOnlineOrderRow","printOnlineOrdersLbl","isActive","printOnlineOrders","toggleSwitch","useDifferentDeviceRow","useDifferentDeviceLbl","useDifferentDeviceToPrint","printerToPrinterInputGroup","printToPrinterLbl","printToPrintInput","printToPrinter","options","sendPrintToUserID","onChange","menuPortalTarget","document","body","menuPortal","base","zIndex","control","provided","state","background","borderColor","minHeight","boxShadow","isFocused","valueContainer","padding","input","margin","indicatorSeparator","display","indicatorsContainer","menuPlacement","menuPosition","btnsRow","updateDeviceBtn","saveDevice","deleteDeviceBtn","delete","deleteDevice","extraDevicesPayingFor","visible","justifyContent","backgroundColor","position","opacity","source","require","resizeMode","create","fontWeight","color","fontSize","alignSelf","flex","borderRadius","borderWidth","marginRight","printOnlineSwitch","useDiffrentDeviceSwitch"],"sources":["/Users/peterputros/Desktop/PosMate/pages/authed/backendPos/NewMainPage/settings/DeviceSettings.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport {\n    View,\n    Text,\n    ScrollView,\n    StyleSheet,\n    Animated,\n    Modal,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n} from \"react-native\";\nimport {\n    deviceIdState,\n    deviceTreeState,\n    setDeviceTreeState,\n    setMyDeviceDetailsState,\n} from \"state/state\";\nimport { auth, db } from \"state/firebaseConfig\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Image } from \"react-native\";\nimport GeneralSwitch from \"components/GeneralSwitch\";\nimport { Entypo, Ionicons } from \"@expo/vector-icons\";\nimport \"react-select2-wrapper/css/select2.css\";\nimport ReactSelect from \"react-select\";\n\nfunction Index(props) {\n    const deviceTree = deviceTreeState.use()\n    const myDeviceID = deviceIdState.use()\n    const fadeAnim = useRef(new Animated.Value(0)).current;\n    const [viewVisible, setviewVisible] = useState(false);\n    const { width, height } = Dimensions.get('window');\n    const [selectedDevice, setselectedDevice] = useState(0)\n    const [otherDeviceOptions, setOtherDeviceOptions] = useState([])\n\n    const fadeIn = () => {\n        // Will change fadeAnim value to 0 in 3 seconds\n        Animated.timing(fadeAnim, {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver: false,\n        }).start();\n    };\n\n    const resetLoader = () => {\n        setviewVisible(true);\n        fadeIn();\n    };\n\n    const AddNewDevice = async () => {\n        await db\n            .collection(\"users\")\n            .doc(auth.currentUser.uid)\n            .collection(\"checkout_sessions\")\n            .add({\n                price: 'price_1Oj9NZCIw3L7DOwI7DKAhIve', // todo price Id from your products price in the Stripe Dashboard\n                quantity: 1,\n                success_url: window.location.href, // return user to this screen on successful purchase\n                cancel_url: window.location.href, // return user to this screen on failed purchase\n            })\n            .then((docRef) => {\n                // Wait for the checkoutSession to get attached by the extension\n                docRef.onSnapshot(async (snap) => {\n                    const { error, sessionId } = snap.data();\n                    if (error) {\n                        // Show an error to your customer and inspect\n                        // your Cloud Function logs in the Firebase console.\n                        alert(`An error occurred: ${error.message}`);\n                    }\n\n                    if (sessionId) {\n                        // We have a session, let's redirect to Checkout\n                        // Init Stripe\n                        const stripe = await loadStripe(\n                            \"pk_live_51MHqrvCIw3L7DOwI0ol9CTCSH7mQXTLKpxTWKzmwOY1MdKwaYwhdJq6WTpkWdBeql3sS44JmybynlRnaO2nSa1FK001dHiEOZO\" // todo enter your public stripe key here\n                        );\n                        console.log(`redirecting`);\n                        await stripe.redirectToCheckout({ sessionId });\n                    }\n                });\n            });\n    }\n\n    useEffect(() => {\n        if (deviceTree.devices.length > 0) {\n            setOtherDeviceOptions([])\n            deviceTree.devices.map((deviceSearch, index) => {\n                if (deviceSearch.id !== deviceTree.devices[selectedDevice].id) {\n                    setOtherDeviceOptions(prev => [...prev, { value: deviceSearch.docID, label: deviceSearch.name }])\n                }\n            })\n        }\n    }, [selectedDevice])\n\n    useEffect(() => {\n        if (deviceTree.devices.length > 1) {\n            const newDeviceTreeDevices = [];\n            for (let index = 0; index < deviceTree.devices.length; index++) {\n                const element = deviceTree.devices[index];\n\n                if (element.id === myDeviceID) {\n                    // Put element to the beginning of newDeviceTreeDevices\n                    newDeviceTreeDevices.unshift(element);\n                } else {\n                    newDeviceTreeDevices.push(element);\n                }\n            }\n            setDeviceTreeState({ ...deviceTree, devices: newDeviceTreeDevices });\n        }\n    }, [deviceTree, myDeviceID]);\n\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.pageLbl}>Device Settings</Text>\n            <View style={styles.group}>\n                <View style={styles.deviceScrollContainer}>\n                    {selectedDevice > 0 ?\n                        <TouchableOpacity style={styles.nextDeviceBtn} activeOpacity={0.8} onPress={() => setselectedDevice(prev => prev - 1)}>\n                            <Entypo name=\"chevron-left\" style={styles.icon} />\n                        </TouchableOpacity>\n                        :\n                        <View style={styles.backBtn} />\n                    }\n                    {deviceTree.devices.length > 0 ? <View style={styles.deviceContainer}>\n                        <View style={styles.topGroup}>\n                            <View style={styles.deviceNameInputGroup}>\n                                <Text style={styles.deviceName}>Device Name</Text>\n                                <TextInput\n                                    style={styles.deviceNameInput}\n                                    placeholder=\"Enter device name\"\n                                    value={deviceTree.devices[selectedDevice].name}\n                                    onChangeText={val => {\n                                        const clone = { ...deviceTree }\n                                        clone.devices[selectedDevice].name = val\n                                        setDeviceTreeState(clone)\n                                    }}\n                                />\n                            </View>\n                            <View style={styles.deviceIDRow}>\n                                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                                    <Text style={styles.deviceIdLbl}>Device ID:</Text>\n                                    <Text style={styles.deviceId}>\n                                        {\n                                            deviceTree.devices[selectedDevice].id ?\n                                                deviceTree.devices[selectedDevice].id.toUpperCase()\n                                                :\n                                                'No device ID set'\n                                        }\n                                    </Text>\n                                </View>\n                                <TouchableOpacity\n                                    style={styles.setToMyIDBtn}\n                                    activeOpacity={0.8}\n                                    onPress={() => {\n                                        if (deviceTree.devices.filter(deviceSearch => deviceSearch.id === myDeviceID).length > 0) {\n                                            db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices.filter(deviceSearch => deviceSearch.id === myDeviceID)[0].docID).update({ id: null })\n                                            const clone = { ...deviceTree }\n                                            clone.devices.filter(deviceSearch => deviceSearch.id === myDeviceID)[0].id = null\n                                            setDeviceTreeState(clone)\n                                        }\n                                        db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices[selectedDevice].docID).update({ id: myDeviceID })\n                                        const clone = { ...deviceTree }\n                                        clone.devices[selectedDevice].id = myDeviceID\n                                        setDeviceTreeState(clone)\n                                        setMyDeviceDetailsState(deviceTree.devices[selectedDevice])\n                                    }}\n                                >\n                                    <Ionicons\n                                        name=\"md-key\"\n                                        style={styles.setToMyIDIcon}\n                                    />\n                                </TouchableOpacity>\n                            </View>\n                            <View style={styles.printOnlineOrderRow}>\n                                <Text style={styles.printOnlineOrdersLbl}>\n                                    Print Online Orders:\n                                </Text>\n                                <GeneralSwitch\n                                    isActive={deviceTree.devices[selectedDevice].printOnlineOrders}\n                                    toggleSwitch={() => {\n                                        const clone = { ...deviceTree }\n                                        clone.devices[selectedDevice].printOnlineOrders = !deviceTree.devices[selectedDevice].printOnlineOrders\n                                        setDeviceTreeState(clone)\n                                    }}\n                                />\n                            </View>\n                            <View style={styles.useDifferentDeviceRow}>\n                                <Text style={styles.useDifferentDeviceLbl}>\n                                    Use Different Device To Print:\n                                </Text>\n                                <GeneralSwitch\n                                    isActive={deviceTree.devices[selectedDevice].useDifferentDeviceToPrint}\n                                    toggleSwitch={() => {\n                                        const clone = { ...deviceTree }\n                                        clone.devices[selectedDevice].useDifferentDeviceToPrint = !deviceTree.devices[selectedDevice].useDifferentDeviceToPrint\n                                        setDeviceTreeState(clone)\n                                    }}\n                                />\n                            </View>\n                            <View style={styles.printerToPrinterInputGroup}>\n                                <Text style={styles.printToPrinterLbl}>Print to Printer</Text>\n                                {!deviceTree.devices[selectedDevice].useDifferentDeviceToPrint ?\n                                    <TextInput\n                                        style={styles.printToPrintInput}\n                                        placeholder=\"Enter printer name\"\n                                        value={deviceTree.devices[selectedDevice].printToPrinter ? deviceTree.devices[selectedDevice].printToPrinter : ''}\n                                        onChangeText={val => {\n                                            const clone = { ...deviceTree }\n                                            clone.devices[selectedDevice].printToPrinter = val\n                                            setDeviceTreeState(clone)\n                                        }}\n                                    />\n                                    :\n                                    <ReactSelect\n                                        options={otherDeviceOptions}\n                                        value={\n                                            deviceTree.devices[selectedDevice].sendPrintToUserID\n                                        }\n                                        onChange={(val) => {\n                                            const clone = { ...deviceTree }\n                                            clone.devices[selectedDevice].sendPrintToUserID = val\n                                            setDeviceTreeState(clone)\n                                        }}\n                                        placeholder={\"Choose Device To Send Print To\"}\n                                        menuPortalTarget={document.body}\n                                        styles={{\n                                            menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                                            control: (provided, state) => ({\n                                                ...provided,\n                                                background: \"#fff\",\n                                                borderColor: \"#9e9e9e\",\n                                                minHeight: \"52px\",\n                                                height: \"52px\",\n                                                boxShadow: state.isFocused ? null : null,\n                                            }),\n\n                                            valueContainer: (provided, state) => ({\n                                                ...provided,\n                                                height: \"52px\",\n                                                padding: \"0 6px\",\n                                            }),\n\n                                            input: (provided, state) => ({\n                                                ...provided,\n                                                margin: \"0px\",\n                                            }),\n                                            indicatorSeparator: (state) => ({\n                                                display: \"none\",\n                                            }),\n                                            indicatorsContainer: (provided, state) => ({\n                                                ...provided,\n                                                height: \"52px\",\n                                            }),\n                                            container: (provided, state) => ({\n                                                ...provided,\n                                                width: \"100%\",\n                                            }),\n                                        }}\n                                        menuPlacement=\"auto\"\n                                        menuPosition=\"fixed\"\n                                    />\n                                }\n                            </View>\n                        </View>\n                        <View style={styles.btnsRow}>\n                            <TouchableOpacity style={styles.updateDeviceBtn} activeOpacity={0.8}\n                                onPress={() => {\n                                    db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices[selectedDevice].docID).update(deviceTree.devices[selectedDevice])\n                                }}\n                            >\n                                <Text style={styles.saveDevice}>Save Device</Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity style={styles.deleteDeviceBtn} activeOpacity={0.8}\n                                onPress={() => {\n                                    db.collection('users').doc(auth.currentUser.uid).collection('devices').doc(deviceTree.devices[selectedDevice].docID).delete()\n                                    let clone = { ...deviceTree }\n                                    clone = { ...clone, devices: clone.devices.filter(deviceSearch => deviceSearch.docID !== deviceTree.devices[selectedDevice].docID) }\n                                    setDeviceTreeState(clone)\n                                    setselectedDevice(prev => prev > 0 ? prev - 1 : 0)\n                                }}\n                            >\n                                <Text style={styles.deleteDevice}>Delete Device</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                        :\n                        <View>\n                            <Text>No Devices Found</Text>\n                        </View>\n                    }\n                    {selectedDevice < deviceTree.devices.length - 1 + deviceTree.extraDevicesPayingFor ?\n                        <TouchableOpacity style={styles.nextDeviceBtn} activeOpacity={0.8} onPress={() => setselectedDevice(prev => prev + 1)}>\n                            <Entypo name=\"chevron-right\" style={styles.icon} />\n                        </TouchableOpacity>\n                        :\n                        <TouchableOpacity style={styles.nextDeviceBtn} activeOpacity={0.8}\n                            onPress={\n                                () => {\n                                    if (deviceTree.devices.length < 2 + deviceTree.extraDevicesPayingFor) {\n                                        db.collection('users').doc(auth.currentUser.uid).collection('devices').add({ name: `Device${deviceTree.devices.length}`, id: null, printToPrinter: null }).then((docRef) => {\n                                            const clone = { ...deviceTree }\n                                            clone.devices.push({ name: \"\", id: null, printToPrinter: null, sendPrintToUserID: null, docID: docRef.id })\n                                            setDeviceTreeState(clone)\n                                        })\n                                    } else {\n                                        resetLoader()\n                                        AddNewDevice()\n                                    }\n                                }\n                            }\n                        >\n                            <Entypo name=\"plus\" style={styles.icon} />\n                        </TouchableOpacity>\n                    }\n                </View>\n            </View>\n            {viewVisible && (\n                <Modal visible={true}>\n                    <Animated.View\n                        style={{\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            backgroundColor: \"white\",\n                            position: \"absolute\",\n                            opacity: fadeAnim,\n                            height: \"100%\",\n                            width: \"100%\",\n                        }}\n                    >\n                        <Image\n                            source={require(\"assets/loading.gif\")}\n                            style={{ width: 450, height: 450, resizeMode: \"contain\" }}\n                        />\n                    </Animated.View>\n                </Modal>\n            )}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: \"flex-start\",\n        justifyContent: \"flex-start\",\n        width: '100%',\n        height: '100%'\n    },\n    pageLbl: {\n        fontWeight: '700',\n        color: \"#121212\",\n        fontSize: 16,\n        margin: 20\n    },\n    group: {\n        alignSelf: \"stretch\",\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    deviceScrollContainer: {\n        width: 639,\n        // height: 591,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        margin: 20\n    },\n    backBtn: {\n        width: 50,\n        height: 50,\n        borderRadius: 20,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    deviceContainer: {\n        width: 358,\n        height: 468,\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    },\n    topGroup: {\n        width: 358,\n        height: 360,\n        justifyContent: \"space-between\"\n    },\n    deviceNameInputGroup: {\n        width: 358,\n        height: 88,\n        justifyContent: \"space-between\"\n    },\n    deviceName: {\n        fontWeight: '700',\n        color: \"#121212\",\n        fontSize: 17\n    },\n    deviceNameInput: {\n        width: 358,\n        height: 51,\n        backgroundColor: \"#ffffff\",\n        borderRadius: 5,\n        borderWidth: 1,\n        borderColor: \"#a0a0a0\",\n        padding: 10\n    },\n    deviceIDRow: {\n        width: 354,\n        height: 20,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\"\n    },\n    deviceIdLbl: {\n        fontWeight: '700',\n        color: \"#121212\",\n        fontSize: 17,\n        marginRight: 10\n    },\n    deviceId: {\n        fontWeight: '300',\n        color: \"#121212\",\n        fontSize: 14\n    },\n    setToMyIDBtn: {\n        width: 30,\n        height: 30,\n        backgroundColor: \"#1c294e\",\n        borderRadius: 10,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    setToMyIDIcon: {\n        color: \"rgba(255,255,255,1)\",\n        fontSize: 25\n    },\n    printOnlineOrderRow: {\n        width: 356,\n        height: 21,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    },\n    printOnlineOrdersLbl: {\n        fontWeight: '700',\n        color: \"#121212\",\n        fontSize: 17\n    },\n    printOnlineSwitch: {\n        width: 40,\n        height: 20,\n        backgroundColor: \"#E6E6E6\"\n    },\n    useDifferentDeviceRow: {\n        width: 356,\n        height: 20,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    },\n    useDifferentDeviceLbl: {\n        fontWeight: '700',\n        color: \"#111111\",\n        fontSize: 17\n    },\n    useDiffrentDeviceSwitch: {\n        width: 40,\n        height: 20,\n        backgroundColor: \"#E6E6E6\"\n    },\n    printerToPrinterInputGroup: {\n        width: 358,\n        height: 88,\n        justifyContent: \"space-between\"\n    },\n    printToPrinterLbl: {\n        fontWeight: '700',\n        color: \"#111111\",\n        fontSize: 17\n    },\n    printToPrintInput: {\n        width: 358,\n        height: 51,\n        backgroundColor: \"#ffffff\",\n        borderRadius: 5,\n        borderWidth: 1,\n        borderColor: \"#a0a0a0\",\n        padding: 10\n    },\n    btnsRow: {\n        width: 356,\n        height: 49,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    },\n    updateDeviceBtn: {\n        width: 170,\n        height: 48,\n        backgroundColor: \"rgba(76,175,80,1)\",\n        borderRadius: 20,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    saveDevice: {\n        fontWeight: '700',\n        color: \"rgba(255,255,255,1)\",\n        fontSize: 16\n    },\n    deleteDeviceBtn: {\n        width: 170,\n        height: 48,\n        backgroundColor: \"rgba(244,67,54,1)\",\n        borderRadius: 20,\n        opacity: 0.61,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    deleteDevice: {\n        fontWeight: '700',\n        color: \"rgba(255,255,255,1)\",\n        fontSize: 16\n    },\n    nextDeviceBtn: {\n        width: 50,\n        height: 50,\n        backgroundColor: \"#1c294e\",\n        borderRadius: 20,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    icon: {\n        color: \"rgba(255,255,255,1)\",\n        fontSize: 40\n    }\n});\n\nexport default Index;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}