{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar InnerOn = function InnerOn(_ref) {\n  var _e$selectedCaseList;\n  var item = _ref.item,\n    newProduct = _ref.newProduct,\n    newProductOptions = _ref.newProductOptions,\n    index = _ref.index,\n    e = _ref.e,\n    sete = _ref.sete;\n  var _useState = useState(structuredClone(item.optionsList)),\n    _useState2 = _slicedToArray(_useState, 2),\n    testMap = _useState2[0],\n    settestMap = _useState2[1];\n  var optionLbls = newProduct.options.map(function (el) {\n    if (el.label !== e.label && el.label !== null) {\n      return el.label;\n    }\n  });\n  if (e.selectedCaseKey || e.selectedCaseValue) {\n    newProductOptions.current[index].selectedCaseList = [{\n      selectedCaseKey: e.selectedCaseKey,\n      selectedCaseValue: e.selectedCaseValue\n    }];\n    newProductOptions.current[index].selectedCaseKey = null;\n    newProductOptions.current[index].selectedCaseValue = null;\n    sete(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        selectedCaseList: [{\n          selectedCaseKey: null,\n          selectedCaseValue: null\n        }]\n      });\n    });\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsx(TextInput, {\n      placeholder: \"Enter Option Label\",\n      onChangeText: function onChangeText(val) {\n        sete(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            label: val\n          });\n        });\n        newProductOptions.current[index].label = val;\n      },\n      value: e.label,\n      style: {\n        marginBottom: 25\n      },\n      label: \"Enter Option Label\",\n      variant: \"outlined\",\n      color: \"black\"\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        justifyContent: \"space-between\",\n        width: \"100%\"\n      },\n      children: [_jsx(DropDown, {\n        label: \"Option Type\",\n        options: [\"Standard\", \"Dropdown\"],\n        setValue: function setValue(val) {\n          if (e.optionType) {\n            newProductOptions.current[index].optionType = val;\n          } else {\n            newProductOptions.current[index] = _objectSpread(_objectSpread({}, e), {}, {\n              optionType: val\n            });\n          }\n          sete(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              optionType: val\n            });\n          });\n        },\n        value: e.optionType,\n        style: {\n          width: \"48%\"\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Selection Limit or leave empty\",\n        onChangeText: function onChangeText(val) {\n          sete(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              numOfSelectable: val\n            });\n          });\n          newProductOptions.current[index].numOfSelectable = val;\n        },\n        value: e.numOfSelectable,\n        label: \"Enter Selection Limit\",\n        variant: \"outlined\",\n        style: {\n          width: \"48%\"\n        },\n        color: \"black\"\n      })]\n    }), testMap.map(function (eInnerListStart, indexInnerList) {\n      var eInnerList = structuredClone(eInnerListStart);\n      return _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          marginBottom: 25,\n          alignItems: \"center\"\n        },\n        children: [_jsx(TextInput, {\n          color: \"black\",\n          placeholder: \"Enter Option Label\",\n          onChangeText: function onChangeText(val) {\n            var clone = structuredClone(testMap);\n            clone[indexInnerList].label = val;\n            newProductOptions.current[index].optionsList = clone;\n            settestMap(clone);\n          },\n          value: eInnerList.label\n        }), _jsx(TextInput, {\n          color: \"black\",\n          placeholder: \"Enter price increase\"\n          ,\n          onChangeText: function onChangeText(val) {\n            var clone = structuredClone(testMap);\n            clone[indexInnerList].priceIncrease = val;\n            newProductOptions.current[index].optionsList = clone;\n            settestMap(clone);\n          },\n          value: eInnerList.priceIncrease,\n          style: {\n            marginLeft: 25,\n            marginRight: 20\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            var clone = structuredClone(testMap);\n            clone.splice(indexInnerList, 1);\n            newProductOptions.current[index].optionsList = clone;\n            settestMap(clone);\n          },\n          children: _jsx(Feather, {\n            name: \"x\",\n            size: 32,\n            color: \"white\"\n          })\n        })]\n      });\n    }), _jsx(Button, {\n      title: \"Add Option Choice\",\n      onPress: function onPress() {\n        var clone = structuredClone(testMap);\n        clone.push({\n          label: null,\n          priceIncrease: null\n        });\n        newProductOptions.current[index].optionsList = clone;\n        settestMap(clone);\n      },\n      style: {\n        marginBottom: 25,\n        backgroundColor: \"#4050B5\"\n      },\n      disabled: testMap.length > 0 && testMap[testMap.length - 1].label === null\n    }), (_e$selectedCaseList = e.selectedCaseList) == null ? void 0 : _e$selectedCaseList.map(function (ifStatement, indexOfIf) {\n      var local = newProduct.options.filter(function (localE) {\n        return localE.label == ifStatement.selectedCaseKey;\n      });\n      var optionLblsValuesLocal = local.length > 0 ? local[0].optionsList.map(function (el) {\n        return el.label;\n      }) : [];\n      return _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          marginBottom: 25\n        },\n        children: [_jsx(DropDown, {\n          label: \"Show if...\",\n          options: optionLbls,\n          setValue: function setValue(val) {\n            newProductOptions.current[index].selectedCaseList[indexOfIf].selectedCaseKey = val;\n            sete(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                selectedCaseList: newProductOptions.current[index].selectedCaseList\n              });\n            });\n          },\n          value: ifStatement.selectedCaseKey,\n          style: {\n            marginBottom: 25\n          }\n        }), _jsx(Text, {\n          children: \"\\\"=\\\"\"\n        }), _jsx(DropDown, {\n          label: \"Show if...\",\n          options: optionLblsValuesLocal,\n          setValue: function setValue(val) {\n            newProductOptions.current[index].selectedCaseList[indexOfIf].selectedCaseValue = val;\n            sete(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                selectedCaseList: newProductOptions.current[index].selectedCaseList\n              });\n            });\n          },\n          value: ifStatement.selectedCaseValue,\n          style: {\n            marginBottom: 25\n          }\n        }), _jsx(Button, {\n          title: \"Remove\",\n          onPress: function onPress() {\n            newProductOptions.current[index].selectedCaseList.splice(indexOfIf, 1);\n            sete(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                selectedCaseList: newProductOptions.current[index].selectedCaseList\n              });\n            });\n          },\n          style: {\n            backgroundColor: \"#4050B5\"\n          }\n        })]\n      });\n    }), optionLbls.length > 1 && _jsx(Button, {\n      title: \"Add If Statement\",\n      onPress: function onPress() {\n        if (!newProductOptions.current[index].selectedCaseList) {\n          newProductOptions.current[index].selectedCaseList = [{\n            selectedCaseKey: null,\n            selectedCaseValue: null\n          }];\n          sete(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              selectedCaseList: [{\n                selectedCaseKey: null,\n                selectedCaseValue: null\n              }]\n            });\n          });\n        } else {\n          newProductOptions.current[index].selectedCaseList.push({\n            selectedCaseKey: null,\n            selectedCaseValue: null\n          });\n          sete(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              selectedCaseList: newProductOptions.current[index].selectedCaseList\n            });\n          });\n        }\n      },\n      style: {\n        backgroundColor: \"#4050B5\"\n      }\n    })]\n  });\n};\nvar OptionView = function OptionView(_ref2) {\n  var item = _ref2.item,\n    index = _ref2.index,\n    setnewProduct = _ref2.setnewProduct,\n    newProduct = _ref2.newProduct,\n    newProductOptions = _ref2.newProductOptions,\n    indexOn = _ref2.indexOn,\n    setindexOn = _ref2.setindexOn;\n  var _useState3 = useState(structuredClone(item)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    e = _useState4[0],\n    sete = _useState4[1];\n\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: {\n        margin: 15,\n        backgroundColor: \"#F9F9F9\",\n        borderRadius: 10\n      },\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return indexOn !== index ? setindexOn(index) : setindexOn(null);\n        },\n        style: {\n          backgroundColor: \"grey\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          padding: 5,\n          borderTopLeftRadius: 10,\n          borderTopRightRadius: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            width: \"50%\",\n            paddingLeft: 5\n          },\n          children: item.label ? item.label : \"New Option\"\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            function moveItem(from, to) {\n              var f = newProductOptions.current.splice(from, 1)[0];\n              newProductOptions.current.splice(to, 0, f);\n            }\n            moveItem(index, index + 1);\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"chevron-down\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            function moveItem(from, to) {\n              var f = newProductOptions.current.splice(from, 1)[0];\n              newProductOptions.current.splice(to, 0, f);\n            }\n            moveItem(index, index - 1);\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"chevron-up\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            newProductOptions.current.push(_objectSpread(_objectSpread({}, item), {}, {\n              label: item.label + \" Copy\"\n            }));\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(Feather, {\n            name: \"copy\",\n            size: 32,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            height: 50,\n            width: 50,\n            borderRadius: 25,\n            backgroundColor: \"grey\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          onPress: function onPress() {\n            newProductOptions.current.splice(index, 1);\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n            setindexOn(null);\n          },\n          children: _jsx(Feather, {\n            name: \"x\",\n            size: 32,\n            color: \"white\"\n          })\n        })]\n      }), indexOn === index && _jsx(View, {\n        style: {\n          padding: 10\n        },\n        children: _jsx(InnerOn, {\n          item: item,\n          index: index,\n          newProduct: newProduct,\n          newProductOptions: newProductOptions,\n          e: e,\n          sete: sete\n        })\n      })]\n    })\n  });\n};\nexport default OptionView;","map":{"version":3,"names":["React","useState","Button","TextInput","DropDown","MaterialCommunityIcons","Feather","InnerOn","item","newProduct","newProductOptions","index","e","sete","structuredClone","optionsList","testMap","settestMap","optionLbls","options","map","el","label","selectedCaseKey","selectedCaseValue","current","selectedCaseList","prev","val","prevState","marginBottom","flexDirection","alignItems","alignSelf","justifyContent","width","optionType","numOfSelectable","eInnerListStart","indexInnerList","eInnerList","clone","priceIncrease","marginLeft","marginRight","splice","push","backgroundColor","length","ifStatement","indexOfIf","local","filter","localE","optionLblsValuesLocal","OptionView","setnewProduct","indexOn","setindexOn","margin","borderRadius","padding","borderTopLeftRadius","borderTopRightRadius","paddingLeft","height","moveItem","from","to","f"],"sources":["/Users/peterputros/Desktop/PosMate/components/OptionView.tsx"],"sourcesContent":["import { View, Text, TouchableOpacity } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Feather from \"@expo/vector-icons/Feather\";\n\nconst InnerOn = ({ item, newProduct, newProductOptions, index, e, sete }) => {\n  const [testMap, settestMap] = useState(structuredClone(item.optionsList));\n  var optionLbls = newProduct.options.map(function (el) {\n    if (el.label !== e.label && el.label !== null) {\n      return el.label;\n    }\n  });\n\n  if (e.selectedCaseKey || e.selectedCaseValue) {\n    newProductOptions.current[index].selectedCaseList = [\n      {\n        selectedCaseKey: e.selectedCaseKey,\n        selectedCaseValue: e.selectedCaseValue,\n      },\n    ];\n    newProductOptions.current[index].selectedCaseKey = null;\n    newProductOptions.current[index].selectedCaseValue = null;\n    sete((prev) => ({\n      ...prev,\n      selectedCaseList: [{ selectedCaseKey: null, selectedCaseValue: null }],\n    }));\n  }\n\n  return (\n    <>\n      <TextInput\n        placeholder=\"Enter Option Label\"\n        onChangeText={(val) => {\n          sete((prevState) => ({ ...prevState, label: val }));\n          newProductOptions.current[index].label = val;\n        }}\n        value={e.label}\n        style={{ marginBottom: 25 }}\n        label=\"Enter Option Label\"\n        variant=\"outlined\"\n        color=\"black\"\n      />\n      {/* optionType */}\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          alignSelf: \"center\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n        }}\n      >\n        <DropDown\n          label=\"Option Type\"\n          options={[\"Standard\", \"Dropdown\"]}\n          setValue={(val) => {\n            if (e.optionType) {\n              newProductOptions.current[index].optionType = val;\n            } else {\n              newProductOptions.current[index] = { ...e, optionType: val };\n            }\n            sete((prevState) => ({\n              ...prevState,\n              optionType: val,\n            }));\n          }}\n          value={e.optionType}\n          style={{ width: \"48%\" }}\n        />\n        <TextInput\n          placeholder=\"Enter Selection Limit or leave empty\"\n          onChangeText={(val) => {\n            sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n            newProductOptions.current[index].numOfSelectable = val;\n          }}\n          value={e.numOfSelectable}\n          label=\"Enter Selection Limit\"\n          variant=\"outlined\"\n          style={{ width: \"48%\" }}\n          color=\"black\"\n        />\n      </View>\n      {testMap.map((eInnerListStart, indexInnerList) => {\n        const eInnerList = structuredClone(eInnerListStart);\n        return (\n          <View\n            style={{\n              flexDirection: \"row\",\n              marginBottom: 25,\n              alignItems: \"center\",\n            }}\n          >\n            <TextInput\n              color=\"black\"\n              placeholder=\"Enter Option Label\"\n              onChangeText={(val) => {\n                const clone = structuredClone(testMap);\n                clone[indexInnerList].label = val;\n                newProductOptions.current[index].optionsList = clone;\n                settestMap(clone);\n              }}\n              value={eInnerList.label}\n            />\n            <TextInput\n              color=\"black\"\n              placeholder=\"Enter price increase\"\n              //   onChangeText={(val) => {\n              //     newProductOptions.current[index].optionsList[\n              //       indexInnerList\n              //     ].priceIncrease = val;\n              //     seteInnerList((prevState) => ({\n              //       ...prevState,\n              //       priceIncrease: val,\n              //     }));\n              //   }}\n              onChangeText={(val) => {\n                const clone = structuredClone(testMap);\n                clone[indexInnerList].priceIncrease = val;\n                newProductOptions.current[index].optionsList = clone;\n                settestMap(clone);\n              }}\n              value={eInnerList.priceIncrease}\n              style={{ marginLeft: 25, marginRight: 20 }}\n            />\n            <TouchableOpacity\n              onPress={() => {\n                const clone = structuredClone(testMap);\n                clone.splice(indexInnerList, 1);\n                newProductOptions.current[index].optionsList = clone;\n                settestMap(clone);\n              }}\n            >\n              <Feather name=\"x\" size={32} color=\"white\" />\n            </TouchableOpacity>\n          </View>\n        );\n      })}\n      <Button\n        title=\"Add Option Choice\"\n        onPress={() => {\n          const clone = structuredClone(testMap);\n          clone.push({\n            label: null,\n            priceIncrease: null,\n          });\n          newProductOptions.current[index].optionsList = clone;\n          settestMap(clone);\n        }}\n        style={{ marginBottom: 25, backgroundColor: \"#4050B5\" }}\n        disabled={\n          testMap.length > 0 && testMap[testMap.length - 1].label === null\n        }\n      />\n      {e.selectedCaseList?.map((ifStatement, indexOfIf) => {\n        const local = newProduct.options.filter(\n          (localE) => localE.label == ifStatement.selectedCaseKey\n        );\n        const optionLblsValuesLocal =\n          local.length > 0\n            ? local[0].optionsList.map(function (el) {\n                return el.label;\n              })\n            : [];\n\n        return (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              marginBottom: 25,\n            }}\n          >\n            <DropDown\n              label=\"Show if...\"\n              options={optionLbls}\n              setValue={(val) => {\n                // sete((prevState) => ({\n                //   ...prevState,\n                //   selectedCaseKey: val,\n                // }));\n                // newProductOptions.current[index].selectedCaseKey = val;\n                newProductOptions.current[index].selectedCaseList[\n                  indexOfIf\n                ].selectedCaseKey = val;\n                sete((prev) => ({\n                  ...prev,\n                  selectedCaseList:\n                    newProductOptions.current[index].selectedCaseList,\n                }));\n              }}\n              value={ifStatement.selectedCaseKey}\n              style={{ marginBottom: 25 }}\n            />\n            <Text>\"=\"</Text>\n            <DropDown\n              label=\"Show if...\"\n              options={optionLblsValuesLocal}\n              setValue={(val) => {\n                // sete((prevState) => ({\n                //   ...prevState,\n                //   selectedCaseValue: val,\n                // }));\n                // newProductOptions.current[index].selectedCaseValue = val;\n                newProductOptions.current[index].selectedCaseList[\n                  indexOfIf\n                ].selectedCaseValue = val;\n                sete((prev) => ({\n                  ...prev,\n                  selectedCaseList:\n                    newProductOptions.current[index].selectedCaseList,\n                }));\n              }}\n              value={ifStatement.selectedCaseValue}\n              style={{ marginBottom: 25 }}\n            />\n            <Button\n              title=\"Remove\"\n              onPress={() => {\n                newProductOptions.current[index].selectedCaseList.splice(\n                  indexOfIf,\n                  1\n                );\n                sete((prev) => ({\n                  ...prev,\n                  selectedCaseList:\n                    newProductOptions.current[index].selectedCaseList,\n                }));\n              }}\n              style={{ backgroundColor: \"#4050B5\" }}\n            />\n          </View>\n        );\n      })}\n      {optionLbls.length > 1 && (\n        <Button\n          title=\"Add If Statement\"\n          onPress={() => {\n            if (!newProductOptions.current[index].selectedCaseList) {\n              newProductOptions.current[index].selectedCaseList = [\n                {\n                  selectedCaseKey: null,\n                  selectedCaseValue: null,\n                },\n              ];\n              sete((prev) => ({\n                ...prev,\n                selectedCaseList: [\n                  { selectedCaseKey: null, selectedCaseValue: null },\n                ],\n              }));\n            } else {\n              newProductOptions.current[index].selectedCaseList.push({\n                selectedCaseKey: null,\n                selectedCaseValue: null,\n              });\n              sete((prev) => ({\n                ...prev,\n                selectedCaseList:\n                  newProductOptions.current[index].selectedCaseList,\n              }));\n            }\n          }}\n          style={{ backgroundColor: \"#4050B5\" }}\n        />\n      )}\n    </>\n  );\n};\n\nconst OptionView = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n  indexOn,\n  setindexOn,\n}) => {\n  const [e, sete] = useState(structuredClone(item));\n  // const [testMap, settestMap] = useState(structuredClone(item.optionsList));\n  // var optionLbls = newProduct.options.map(function (el) {\n  //   if (el.label !== e.label && el.label !== null) {\n  //     return el.label;\n  //   }\n  // });\n\n  // if (e.selectedCaseKey || e.selectedCaseValue) {\n  //   newProductOptions.current[index].selectedCaseList = [\n  //     {\n  //       selectedCaseKey: e.selectedCaseKey,\n  //       selectedCaseValue: e.selectedCaseValue,\n  //     },\n  //   ];\n  //   newProductOptions.current[index].selectedCaseKey = null;\n  //   newProductOptions.current[index].selectedCaseValue = null;\n  //   sete((prev) => ({\n  //     ...prev,\n  //     selectedCaseList: [{ selectedCaseKey: null, selectedCaseValue: null }],\n  //   }));\n  // }\n\n  return (\n    <View>\n      <View\n        style={{\n          margin: 15,\n          backgroundColor: \"#F9F9F9\",\n          borderRadius: 10,\n        }}\n      >\n        <TouchableOpacity\n          onPress={() =>\n            indexOn !== index ? setindexOn(index) : setindexOn(null)\n          }\n          style={{\n            backgroundColor: \"grey\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            padding: 5,\n            borderTopLeftRadius: 10,\n            borderTopRightRadius: 10,\n          }}\n        >\n          <Text style={{ width: \"50%\", paddingLeft: 5 }}>\n            {item.label ? item.label : \"New Option\"}\n          </Text>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              function moveItem(from, to) {\n                // remove `from` item and store it\n                var f = newProductOptions.current.splice(from, 1)[0];\n                // insert stored item into position `to`\n                newProductOptions.current.splice(to, 0, f);\n              }\n\n              moveItem(index, index + 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <MaterialCommunityIcons\n              name=\"chevron-down\"\n              size={32}\n              color=\"white\"\n            />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              function moveItem(from, to) {\n                // remove `from` item and store it\n                var f = newProductOptions.current.splice(from, 1)[0];\n                // insert stored item into position `to`\n                newProductOptions.current.splice(to, 0, f);\n              }\n\n              moveItem(index, index - 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <MaterialCommunityIcons name=\"chevron-up\" size={32} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              newProductOptions.current.push({\n                ...item,\n                label: item.label + \" Copy\",\n              });\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <Feather name=\"copy\" size={32} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              height: 50,\n              width: 50,\n              borderRadius: 25,\n              backgroundColor: \"grey\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onPress={() => {\n              newProductOptions.current.splice(index, 1);\n\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n              setindexOn(null);\n            }}\n          >\n            <Feather name=\"x\" size={32} color=\"white\" />\n          </TouchableOpacity>\n        </TouchableOpacity>\n        {indexOn === index && (\n          <View style={{ padding: 10 }}>\n            <InnerOn\n              item={item}\n              index={index}\n              newProduct={newProduct}\n              newProductOptions={newProductOptions}\n              e={e}\n              sete={sete}\n            />\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default OptionView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}