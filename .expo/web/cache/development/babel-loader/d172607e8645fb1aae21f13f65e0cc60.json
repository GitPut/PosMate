{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { setCartState } from \"../../state/state\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { addCustomerDetailsToDb } from \"../../state/firebaseFunctions\";\nimport { auth, db } from \"../../state/firebaseConfig\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\nvar SaveCustomer = function SaveCustomer(_ref) {\n  var setSaveCustomerModal = _ref.setSaveCustomerModal,\n    setOngoingDelivery = _ref.setOngoingDelivery,\n    setNameForDelivery = _ref.setNameForDelivery,\n    setPhoneForDelivery = _ref.setPhoneForDelivery,\n    setAddressForDelivery = _ref.setAddressForDelivery,\n    setDeliveryChecked = _ref.setDeliveryChecked,\n    setsavedCustomerDetails = _ref.setsavedCustomerDetails;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setname = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    phone = _useState4[0],\n    setphone = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setemail = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    localAddress = _useState8[0],\n    setlocalAddress = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    viewCustomers = _useState10[0],\n    setviewCustomers = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    customers = _useState12[0],\n    setcustomers = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    customerSelected = _useState14[0],\n    setcustomerSelected = _useState14[1];\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height,\n    width = _useWindowDimensions.width;\n  var addCustomerDetails = function addCustomerDetails() {\n    if (name && phone) {\n      addCustomerDetailsToDb({\n        name: name,\n        phone: phone,\n        address: localAddress == null ? void 0 : localAddress.label,\n        email: email\n      });\n      setSaveCustomerModal(false);\n    }\n  };\n  useEffect(function () {\n    var _auth$currentUser;\n    db.collection(\"users\").doc((_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid).collection(\"customers\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        setcustomers(function (prevState) {\n          return [].concat(_toConsumableArray(prevState), [_objectSpread(_objectSpread({}, doc.data()), {}, {\n            id: doc.id\n          })]);\n        });\n      });\n    });\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setSaveCustomerModal(false);\n      },\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: height,\n        width: width\n      }\n    }), _jsx(View, {\n      style: {\n        position: \"absolute\",\n        backgroundColor: \"rgba(255,255,255,1)\",\n        borderRadius: 30,\n        shadowColor: \"rgba(0,0,0,1)\",\n        shadowOffset: {\n          width: 3,\n          height: 3\n        },\n        elevation: 30,\n        shadowOpacity: 0.57,\n        shadowRadius: 10,\n        width: \"35%\",\n        height: '80%',\n        padding: 20,\n        alignSelf: 'center',\n        top: ''\n      },\n      children: viewCustomers ? _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            textAlign: \"center\",\n            fontSize: 22,\n            fontWeight: \"600\",\n            color: \"rgba(74,74,74,1)\",\n            marginBottom: 20\n          },\n          children: \"Saved Customers\"\n        }), customerSelected ? _jsxs(View, {\n          children: [customerSelected.orders && JSON.parse(customerSelected.orders).map(function (prevOrder, prevOrderIndex) {\n            return _jsxs(View, {\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  setCartState(prevOrder);\n                  setOngoingDelivery(true);\n                  setNameForDelivery(customerSelected.name);\n                  setPhoneForDelivery(customerSelected.phone);\n                  setAddressForDelivery(customerSelected.address);\n                  setDeliveryChecked(false);\n                },\n                children: _jsx(Text, {\n                  children: \"Select Prev Order\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  setCartState(prevOrder);\n                  setOngoingDelivery(true);\n                  setNameForDelivery(customerSelected.name);\n                  setPhoneForDelivery(customerSelected.phone);\n                  setAddressForDelivery(customerSelected.address);\n                  setDeliveryChecked(true);\n                },\n                children: _jsx(Text, {\n                  children: \"Select Prev Order For Delivery\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  var _auth$currentUser2;\n                  var localOrders = JSON.parse(customerSelected.orders);\n                  localOrders.splice(prevOrderIndex, 1);\n                  db.collection(\"users\").doc((_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.uid).collection(\"customers\").doc(customerSelected.id).update({\n                    orders: JSON.stringify(localOrders)\n                  });\n                  setcustomerSelected(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      orders: JSON.stringify(localOrders)\n                    });\n                  });\n                },\n                children: _jsx(Text, {\n                  children: \"Delete Prev Order\"\n                })\n              })]\n            });\n          }), _jsx(Button, {\n            title: \"or Make new order\",\n            onPress: function onPress() {\n              setsavedCustomerDetails(customerSelected);\n              setOngoingDelivery(true);\n              setNameForDelivery(customerSelected.name);\n              setPhoneForDelivery(customerSelected.phone);\n              setAddressForDelivery(customerSelected.address);\n              setDeliveryChecked(true);\n              setSaveCustomerModal(false);\n            }\n          })]\n        }) : customers.map(function (customer) {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setcustomerSelected(customer);\n            },\n            children: _jsxs(Text, {\n              children: [\"name: \", customer.name]\n            })\n          });\n        }), _jsx(Button, {\n          title: \"Back\",\n          onPress: function onPress() {\n            return setviewCustomers(false);\n          },\n          contentContainerStyle: styles.btn,\n          style: {\n            margin: 25\n          }\n        })]\n      }) : _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            textAlign: \"center\",\n            fontSize: 22,\n            fontWeight: \"600\",\n            color: \"rgba(74,74,74,1)\",\n            marginBottom: 20\n          },\n          children: \"Create Phone Order\"\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            backgroundColor: \"rgba(243,243,243,1)\",\n            borderRadius: 30,\n            height: 60,\n            marginBottom: 25\n          },\n          children: [_jsx(View, {\n            style: {\n              width: 60,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              backgroundColor: \"rgba(218,216,216,1)\",\n              borderRadius: 30,\n              height: 60\n            },\n            children: _jsx(MaterialCommunityIcons, {\n              name: \"account\",\n              size: 32,\n              color: \"rgba(71,106,229,1)\"\n            })\n          }), _jsx(TextInput, {\n            placeholder: \"Enter name\",\n            style: {\n              width: \"80%\"\n            },\n            inputStyle: {\n              backgroundColor: \"rgba(243,243,243,1)\"\n            },\n            value: name,\n            onChangeText: function onChangeText(val) {\n              return setname(val);\n            },\n            autoCorrect: false,\n            textContentType: \"name\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            backgroundColor: \"rgba(243,243,243,1)\",\n            borderRadius: 30,\n            height: 60,\n            marginBottom: 25\n          },\n          children: [_jsx(View, {\n            style: {\n              width: 60,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              backgroundColor: \"rgba(218,216,216,1)\",\n              borderRadius: 30,\n              height: 60\n            },\n            children: _jsx(MaterialCommunityIcons, {\n              name: \"phone\",\n              size: 32,\n              color: \"rgba(74,74,74,1)\"\n            })\n          }), _jsx(TextInput, {\n            placeholder: \"Enter Phone #\",\n            style: {\n              width: \"80%\"\n            },\n            inputStyle: {\n              backgroundColor: \"rgba(243,243,243,1)\"\n            },\n            value: phone,\n            onChangeText: function onChangeText(val) {\n              return setphone(val);\n            }\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            backgroundColor: \"rgba(243,243,243,1)\",\n            borderRadius: 30,\n            height: 60,\n            marginBottom: 25\n          },\n          children: [_jsx(View, {\n            style: {\n              width: 60,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              backgroundColor: \"rgba(218,216,216,1)\",\n              borderRadius: 30,\n              height: 60\n            },\n            children: _jsx(MaterialCommunityIcons, {\n              name: \"email\",\n              size: 32,\n              color: \"rgba(74,74,74,1)\"\n            })\n          }), _jsx(TextInput, {\n            placeholder: \"Enter Email Address\",\n            style: {\n              width: \"80%\"\n            },\n            inputStyle: {\n              backgroundColor: \"rgba(243,243,243,1)\"\n            },\n            value: email,\n            onChangeText: function onChangeText(val) {\n              return setemail(val);\n            }\n          })]\n        }), _jsx(GooglePlacesAutocomplete, {\n          apiOptions: {\n            region: \"CA\"\n          },\n          debounce: 800,\n          apiKey: GOOGLE_API_KEY\n          ,\n          selectProps: {\n            localAddress: localAddress,\n            onChange: setlocalAddress\n          },\n          renderSuggestions: function renderSuggestions(active, suggestions, onSelectSuggestion) {\n            return _jsx(\"div\", {\n              style: {\n                width: \"80%\"\n              },\n              children: suggestions.map(function (suggestion) {\n                return _jsx(\"div\", {\n                  className: \"suggestion\",\n                  onClick: function onClick(event) {\n                    onSelectSuggestion(suggestion, event);\n                  },\n                  children: suggestion.description\n                });\n              })\n            });\n          }\n        }), _jsx(Button, {\n          title: \"Save Customer\",\n          onPress: addCustomerDetails,\n          contentContainerStyle: styles.btn,\n          style: {\n            margin: 25\n          }\n        }), _jsx(Button, {\n          title: \"Cancel\"\n          ,\n          contentContainerStyle: styles.btn,\n          style: {\n            margin: 25\n          }\n        }), _jsx(Button, {\n          title: \"View Customers\",\n          onPress: function onPress() {\n            return setviewCustomers(true);\n          },\n          contentContainerStyle: styles.btn,\n          style: {\n            margin: 25\n          }\n        })]\n      })\n    })]\n  });\n};\nexport default SaveCustomer;\nvar styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 25\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\"\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25\n  },\n  touchable: {\n    margin: 25,\n    width: 300\n  },\n  modalContainer: {\n    padding: 50,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 30,\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 0.57,\n    shadowRadius: 10,\n    width: \"35%\"\n  },\n  btn: {\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  input: {\n    marginTop: 25,\n    marginBottom: 25\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Button","TextInput","setCartState","MaterialCommunityIcons","GooglePlacesAutocomplete","addCustomerDetailsToDb","auth","db","GOOGLE_API_KEY","SaveCustomer","setSaveCustomerModal","setOngoingDelivery","setNameForDelivery","setPhoneForDelivery","setAddressForDelivery","setDeliveryChecked","setsavedCustomerDetails","name","setname","phone","setphone","email","setemail","localAddress","setlocalAddress","viewCustomers","setviewCustomers","customers","setcustomers","customerSelected","setcustomerSelected","useWindowDimensions","height","width","addCustomerDetails","address","label","collection","doc","currentUser","uid","get","then","querySnapshot","forEach","prevState","data","id","backgroundColor","justifyContent","alignItems","position","borderRadius","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","padding","alignSelf","top","textAlign","fontSize","fontWeight","color","marginBottom","orders","JSON","parse","map","prevOrder","prevOrderIndex","localOrders","splice","update","stringify","prev","customer","styles","btn","margin","flexDirection","val","region","onChange","active","suggestions","onSelectSuggestion","suggestion","event","description","StyleSheet","create","sizeRow","halfRow","toppingsContainer","flex","flexWrap","marginTop","touchable","modalContainer","input"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/SaveCustomer.tsx"],"sourcesContent":["import {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  useWindowDimensions,\n  View,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { cartState, setCartState } from \"state/state\";\nimport { Switch } from \"react-native-gesture-handler\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { addCustomerDetailsToDb } from \"state/firebaseFunctions\";\nimport { auth, db } from \"state/firebaseConfig\";\n\nconst GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\n\nconst SaveCustomer = ({\n  setSaveCustomerModal,\n  setOngoingDelivery,\n  setNameForDelivery,\n  setPhoneForDelivery,\n  setAddressForDelivery,\n  setDeliveryChecked,\n  setsavedCustomerDetails,\n}) => {\n  const [name, setname] = useState(null);\n  const [phone, setphone] = useState(null);\n  const [email, setemail] = useState(null);\n  const [localAddress, setlocalAddress] = useState(null);\n  const [viewCustomers, setviewCustomers] = useState(false);\n  const [customers, setcustomers] = useState([]);\n  const [customerSelected, setcustomerSelected] = useState(null);\n  const { height, width } = useWindowDimensions();\n\n  const addCustomerDetails = () => {\n    if (name && phone) {\n      addCustomerDetailsToDb({\n        name: name,\n        phone: phone,\n        address: localAddress?.label,\n        email: email,\n      });\n      setSaveCustomerModal(false);\n    }\n  };\n\n  useEffect(() => {\n    db.collection(\"users\")\n      .doc(auth.currentUser?.uid)\n      .collection(\"customers\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          //   console.log(doc.id, \" => \", doc.data());\n          setcustomers((prevState) => [\n            ...prevState,\n            { ...doc.data(), id: doc.id },\n          ]);\n        });\n      });\n  }, []);\n\n  return (\n    <>\n      <TouchableOpacity\n        onPress={() => setSaveCustomerModal(false)}\n        style={{\n          backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: height,\n          width: width,\n        }}\n      />\n      <View\n        style={{\n          position: \"absolute\",\n          backgroundColor: \"rgba(255,255,255,1)\",\n          borderRadius: 30,\n          shadowColor: \"rgba(0,0,0,1)\",\n          shadowOffset: {\n            width: 3,\n            height: 3,\n          },\n          elevation: 30,\n          shadowOpacity: 0.57,\n          shadowRadius: 10,\n          width: \"35%\",\n          height: '80%',\n          padding: 20,\n          alignSelf: 'center',\n          top: ''\n        }}\n      >\n        {viewCustomers ? (\n          <View>\n            <Text\n              style={{\n                textAlign: \"center\",\n                fontSize: 22,\n                fontWeight: \"600\",\n                color: \"rgba(74,74,74,1)\",\n                marginBottom: 20,\n              }}\n            >\n              Saved Customers\n            </Text>\n            {customerSelected ? (\n              <View>\n                {customerSelected.orders &&\n                  JSON.parse(customerSelected.orders).map(\n                    (prevOrder, prevOrderIndex) => (\n                      <View>\n                        <TouchableOpacity\n                          onPress={() => {\n                            setCartState(prevOrder);\n                            setOngoingDelivery(true);\n                            setNameForDelivery(customerSelected.name);\n                            setPhoneForDelivery(customerSelected.phone);\n                            setAddressForDelivery(customerSelected.address);\n                            setDeliveryChecked(false);\n                          }}\n                        >\n                          <Text>Select Prev Order</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity\n                          onPress={() => {\n                            setCartState(prevOrder);\n                            setOngoingDelivery(true);\n                            setNameForDelivery(customerSelected.name);\n                            setPhoneForDelivery(customerSelected.phone);\n                            setAddressForDelivery(customerSelected.address);\n                            setDeliveryChecked(true);\n                          }}\n                        >\n                          <Text>Select Prev Order For Delivery</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity\n                          onPress={() => {\n                            const localOrders = JSON.parse(\n                              customerSelected.orders\n                            );\n                            localOrders.splice(prevOrderIndex, 1);\n                            db.collection(\"users\")\n                              .doc(auth.currentUser?.uid)\n                              .collection(\"customers\")\n                              .doc(customerSelected.id)\n                              .update({\n                                orders: JSON.stringify(localOrders),\n                              });\n                            setcustomerSelected((prev) => ({\n                              ...prev,\n                              orders: JSON.stringify(localOrders),\n                            }));\n                          }}\n                        >\n                          <Text>Delete Prev Order</Text>\n                        </TouchableOpacity>\n                      </View>\n                    )\n                  )}\n                <Button\n                  title=\"or Make new order\"\n                  onPress={() => {\n                    setsavedCustomerDetails(customerSelected);\n                    setOngoingDelivery(true);\n                    setNameForDelivery(customerSelected.name);\n                    setPhoneForDelivery(customerSelected.phone);\n                    setAddressForDelivery(customerSelected.address);\n                    setDeliveryChecked(true);\n                    setSaveCustomerModal(false);\n                  }}\n                />\n              </View>\n            ) : (\n              customers.map((customer) => {\n                return (\n                  <TouchableOpacity\n                    onPress={() => setcustomerSelected(customer)}\n                  >\n                    <Text>name: {customer.name}</Text>\n                  </TouchableOpacity>\n                );\n              })\n            )}\n            <Button\n              title=\"Back\"\n              onPress={() => setviewCustomers(false)}\n              contentContainerStyle={styles.btn}\n              style={{ margin: 25 }}\n            />\n          </View>\n        ) : (\n          <View>\n            <Text\n              style={{\n                textAlign: \"center\",\n                fontSize: 22,\n                fontWeight: \"600\",\n                color: \"rgba(74,74,74,1)\",\n                marginBottom: 20,\n              }}\n            >\n              Create Phone Order\n            </Text>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                backgroundColor: \"rgba(243,243,243,1)\",\n                borderRadius: 30,\n                height: 60,\n                marginBottom: 25,\n              }}\n            >\n              <View\n                style={{\n                  width: 60,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  backgroundColor: \"rgba(218,216,216,1)\",\n                  borderRadius: 30,\n                  height: 60,\n                }}\n              >\n                <MaterialCommunityIcons\n                  name=\"account\"\n                  size={32}\n                  color=\"rgba(71,106,229,1)\"\n                />\n              </View>\n              <TextInput\n                placeholder=\"Enter name\"\n                style={{ width: \"80%\" }}\n                inputStyle={{ backgroundColor: \"rgba(243,243,243,1)\" }}\n                value={name}\n                onChangeText={(val) => setname(val)}\n                autoCorrect={false}\n                textContentType={\"name\"}\n              />\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                backgroundColor: \"rgba(243,243,243,1)\",\n                borderRadius: 30,\n                height: 60,\n                marginBottom: 25,\n              }}\n            >\n              <View\n                style={{\n                  width: 60,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  backgroundColor: \"rgba(218,216,216,1)\",\n                  borderRadius: 30,\n                  height: 60,\n                }}\n              >\n                <MaterialCommunityIcons\n                  name=\"phone\"\n                  size={32}\n                  color=\"rgba(74,74,74,1)\"\n                />\n              </View>\n              <TextInput\n                placeholder=\"Enter Phone #\"\n                style={{ width: \"80%\" }}\n                inputStyle={{ backgroundColor: \"rgba(243,243,243,1)\" }}\n                value={phone}\n                onChangeText={(val) => setphone(val)}\n              />\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                backgroundColor: \"rgba(243,243,243,1)\",\n                borderRadius: 30,\n                height: 60,\n                marginBottom: 25,\n              }}\n            >\n              <View\n                style={{\n                  width: 60,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  backgroundColor: \"rgba(218,216,216,1)\",\n                  borderRadius: 30,\n                  height: 60,\n                }}\n              >\n                <MaterialCommunityIcons\n                  name=\"email\"\n                  size={32}\n                  color=\"rgba(74,74,74,1)\"\n                />\n              </View>\n              <TextInput\n                placeholder=\"Enter Email Address\"\n                style={{ width: \"80%\" }}\n                inputStyle={{ backgroundColor: \"rgba(243,243,243,1)\" }}\n                value={email}\n                onChangeText={(val) => setemail(val)}\n              />\n            </View>\n            <GooglePlacesAutocomplete\n              apiOptions={{\n                region: \"CA\",\n              }}\n              debounce={800}\n              apiKey={GOOGLE_API_KEY}\n              // onSelect={handleAddress}\n              selectProps={{\n                localAddress,\n                onChange: setlocalAddress,\n              }}\n              renderSuggestions={(active, suggestions, onSelectSuggestion) => (\n                <div style={{ width: \"80%\" }}>\n                  {suggestions.map((suggestion) => (\n                    <div\n                      className=\"suggestion\"\n                      onClick={(event) => {\n                        onSelectSuggestion(suggestion, event);\n                      }}\n                    >\n                      {suggestion.description}\n                    </div>\n                  ))}\n                </div>\n              )}\n            />\n            <Button\n              title=\"Save Customer\"\n              onPress={addCustomerDetails}\n              contentContainerStyle={styles.btn}\n              style={{ margin: 25 }}\n            />\n            <Button\n              title=\"Cancel\"\n              //   onPress={() => {}}\n              contentContainerStyle={styles.btn}\n              style={{ margin: 25 }}\n            />\n            <Button\n              title=\"View Customers\"\n              onPress={() => setviewCustomers(true)}\n              contentContainerStyle={styles.btn}\n              style={{ margin: 25 }}\n            />\n          </View>\n        )}\n      </View>\n    </>\n  );\n};\n\nexport default SaveCustomer;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 30,\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3,\n    },\n    elevation: 30,\n    shadowOpacity: 0.57,\n    shadowRadius: 10,\n    width: \"35%\",\n  },\n  btn: {\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  input: {\n    marginTop: 25,\n    marginBottom: 25,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}