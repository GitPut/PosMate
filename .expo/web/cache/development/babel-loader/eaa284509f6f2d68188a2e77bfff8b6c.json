{"ast":null,"code":"import React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CustomHeader = function CustomHeader(_ref) {\n  var navigation = _ref.navigation;\n\n  return _jsx(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      backgroundColor: \"#000\"\n    },\n    children: state.routes.map(function (route, index) {\n      var options = descriptors[route.key].options;\n      var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n      var isFocused = state.index === index;\n      var onPress = function onPress() {\n        var event = navigation.emit({\n          type: \"tabPress\",\n          target: route.key,\n          canPreventDefault: true\n        });\n        if (!isFocused && !event.defaultPrevented) {\n          navigation.navigate({\n            name: route.name,\n            merge: true\n          });\n        }\n      };\n      var onLongPress = function onLongPress() {\n        navigation.emit({\n          type: \"tabLongPress\",\n          target: route.key\n        });\n      };\n      return _jsx(TouchableOpacity, {\n        accessibilityRole: \"button\",\n        accessibilityState: isFocused ? {\n          selected: true\n        } : {},\n        accessibilityLabel: options.tabBarAccessibilityLabel,\n        testID: options.tabBarTestID,\n        onPress: onPress,\n        onLongPress: onLongPress,\n        style: {\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: _jsx(Text, {\n          style: {\n            color: isFocused ? \"#3F51B5\" : \"#222\",\n            fontSize: 12\n          },\n          children: label\n        })\n      });\n    })\n  });\n};\nexport default CustomHeader;","map":{"version":3,"names":["React","CustomHeader","navigation","flexDirection","alignItems","justifyContent","backgroundColor","state","routes","map","route","index","options","descriptors","key","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","navigate","merge","onLongPress","selected","tabBarAccessibilityLabel","tabBarTestID","flex","color","fontSize"],"sources":["/Users/peterputros/Desktop/PosMate-1/components/CustomHeader.tsx"],"sourcesContent":["import React from \"react\";\nimport { TouchableOpacity, View, Text } from \"react-native\";\n// import { useNavigation } from \"react-navigation-hooks\";\n\nconst CustomHeader = ({ navigation }) => {\n  //   const navigation = useNavigation();\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#000\",\n      }}\n    >\n      {state.routes.map((route, index) => {\n        const { options } = descriptors[route.key];\n        const label =\n          options.tabBarLabel !== undefined\n            ? options.tabBarLabel\n            : options.title !== undefined\n            ? options.title\n            : route.name;\n\n        const isFocused = state.index === index;\n\n        const onPress = () => {\n          const event = navigation.emit({\n            type: \"tabPress\",\n            target: route.key,\n            canPreventDefault: true,\n          });\n\n          if (!isFocused && !event.defaultPrevented) {\n            // The `merge: true` option makes sure that the params inside the tab screen are preserved\n            navigation.navigate({ name: route.name, merge: true });\n          }\n        };\n\n        const onLongPress = () => {\n          navigation.emit({\n            type: \"tabLongPress\",\n            target: route.key,\n          });\n        };\n\n        return (\n          <TouchableOpacity\n            accessibilityRole=\"button\"\n            accessibilityState={isFocused ? { selected: true } : {}}\n            accessibilityLabel={options.tabBarAccessibilityLabel}\n            testID={options.tabBarTestID}\n            onPress={onPress}\n            onLongPress={onLongPress}\n            style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\n          >\n            <Text\n              style={{ color: isFocused ? \"#3F51B5\" : \"#222\", fontSize: 12 }}\n            >\n              {label}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default CustomHeader;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;;AAI1B,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;;EAGhC,OACE,KAAC,IAAI;IACH,KAAK,EAAE;MACLC,aAAa,EAAE,KAAK;MACpBC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,eAAe;MAC/BC,eAAe,EAAE;IACnB,CAAE;IAAA,UAEDC,KAAK,CAACC,MAAM,CAACC,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK,EAAK;MAClC,IAAQC,OAAO,GAAKC,WAAW,CAACH,KAAK,CAACI,GAAG,CAAC,CAAlCF,OAAO;MACf,IAAMG,KAAK,GACTH,OAAO,CAACI,WAAW,KAAKC,SAAS,GAC7BL,OAAO,CAACI,WAAW,GACnBJ,OAAO,CAACM,KAAK,KAAKD,SAAS,GAC3BL,OAAO,CAACM,KAAK,GACbR,KAAK,CAACS,IAAI;MAEhB,IAAMC,SAAS,GAAGb,KAAK,CAACI,KAAK,KAAKA,KAAK;MAEvC,IAAMU,OAAO,GAAG,SAAVA,OAAO,GAAS;QACpB,IAAMC,KAAK,GAAGpB,UAAU,CAACqB,IAAI,CAAC;UAC5BC,IAAI,EAAE,UAAU;UAChBC,MAAM,EAAEf,KAAK,CAACI,GAAG;UACjBY,iBAAiB,EAAE;QACrB,CAAC,CAAC;QAEF,IAAI,CAACN,SAAS,IAAI,CAACE,KAAK,CAACK,gBAAgB,EAAE;UAEzCzB,UAAU,CAAC0B,QAAQ,CAAC;YAAET,IAAI,EAAET,KAAK,CAACS,IAAI;YAAEU,KAAK,EAAE;UAAK,CAAC,CAAC;QACxD;MACF,CAAC;MAED,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;QACxB5B,UAAU,CAACqB,IAAI,CAAC;UACdC,IAAI,EAAE,cAAc;UACpBC,MAAM,EAAEf,KAAK,CAACI;QAChB,CAAC,CAAC;MACJ,CAAC;MAED,OACE,KAAC,gBAAgB;QACf,iBAAiB,EAAC,QAAQ;QAC1B,kBAAkB,EAAEM,SAAS,GAAG;UAAEW,QAAQ,EAAE;QAAK,CAAC,GAAG,CAAC,CAAE;QACxD,kBAAkB,EAAEnB,OAAO,CAACoB,wBAAyB;QACrD,MAAM,EAAEpB,OAAO,CAACqB,YAAa;QAC7B,OAAO,EAAEZ,OAAQ;QACjB,WAAW,EAAES,WAAY;QACzB,KAAK,EAAE;UAAEI,IAAI,EAAE,CAAC;UAAE7B,cAAc,EAAE,QAAQ;UAAED,UAAU,EAAE;QAAS,CAAE;QAAA,UAEnE,KAAC,IAAI;UACH,KAAK,EAAE;YAAE+B,KAAK,EAAEf,SAAS,GAAG,SAAS,GAAG,MAAM;YAAEgB,QAAQ,EAAE;UAAG,CAAE;UAAA,UAE9DrB;QAAK;MACD,EACU;IAEvB,CAAC;EAAC,EACG;AAEX,CAAC;AAED,eAAed,YAAY"},"metadata":{},"sourceType":"module"}