{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FieldInputWithLabel from \"./FieldInputWithLabel\";\nimport { CardCvcElement, CardExpiryElement, CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction CheckOutDetails(_ref) {\n  var storeDetails = _ref.storeDetails,\n    setOrderDetails = _ref.setOrderDetails,\n    orderDetails = _ref.orderDetails,\n    setPage = _ref.setPage;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    emailAddress = _useState2[0],\n    setEmailAddress = _useState2[1];\n  var stripe = useStripe();\n  var elements = useElements();\n  var cardNumberRef = useRef();\n  var cardExpiryRef = useRef();\n  var cardCvcRef = useRef();\n  var handleSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* (event) {\n      event.preventDefault();\n      if (!stripe || !elements) {\n        console.log(\"Stripe.js has not yet loaded.\");\n        return;\n      }\n      var cardNumberElement = elements.getElement(CardNumberElement);\n      var _yield$stripe$createT = yield stripe.createToken(cardNumberElement),\n        token = _yield$stripe$createT.token,\n        error = _yield$stripe$createT.error;\n      if (error) {\n        console.error(\"Error creating token:\", error);\n      } else {\n        console.log(\"Token:\", token);\n\n        var response = yield fetch(\"https://us-central1-posmate-5fc0a.cloudfunctions.net/processPayment\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            token: token.id,\n            amount: orderDetails.total,\n            currency: currency,\n            storeUID: storeDetails.docID,\n            orderDetails: orderDetails\n          })\n        });\n        try {\n          var responseData = yield response.json();\n          if (response.ok && responseData.success) {\n            console.log(\"Payment processed successfully!\");\n            setpage(4);\n          } else {\n            console.error(\"Payment processing failed. Server message:\", responseData.message);\n          }\n        } catch (jsonError) {\n          console.error(\"Error parsing JSON response:\", jsonError);\n        }\n      }\n    });\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.fieldsGroup,\n      children: [_jsx(FieldInputWithLabel, {\n        txtInput: \"Email Address\",\n        label: \"Email Address*\",\n        style: styles.nameField,\n        value: emailAddress,\n        onChangeText: function onChangeText(text) {\n          return setemailAddress(text);\n        }\n      }), _jsx(FieldInputWithLabel\n      , {\n        label: \"Card Number*\",\n        style: styles.nameField\n        ,\n        customInput: _jsx(CardNumberElement, {})\n      }), _jsxs(View, {\n        style: styles.buzzCodeAndPhoneRow,\n        children: [_jsx(FieldInputWithLabel\n        , {\n          label: \"Expiry*\",\n          style: styles.buzzCodeField\n          ,\n          customInput: _jsx(CardExpiryElement, {\n            options: {\n              style: {\n                base: {\n                  fontSize: \"16px\",\n                  color: \"#424770\",\n                  \"::placeholder\": {\n                    color: \"#aab7c4\"\n                  }\n                },\n                invalid: {\n                  color: \"#9e2146\"\n                }\n              }\n            }\n          })\n        }), _jsx(FieldInputWithLabel\n        , {\n          label: \"CVV*\",\n          style: styles.phoneNumberField\n          ,\n          customInput: _jsx(CardCvcElement, {\n            options: {\n              style: {\n                base: {\n                  fontSize: \"16px\",\n                  color: \"#424770\",\n                  \"::placeholder\": {\n                    color: \"#aab7c4\"\n                  }\n                },\n                invalid: {\n                  color: \"#9e2146\"\n                }\n              }\n            }\n          })\n        })]\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.continueBtn,\n      onPress: handleSubmit,\n      disabled: !stripe,\n      children: _jsx(Text, {\n        style: styles.continueBtnTxt,\n        children: \"CHECKOUT\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: 380,\n    height: 390\n  },\n  fieldsGroup: {\n    width: 380,\n    height: 325,\n    justifyContent: \"space-between\"\n  },\n  nameField: {\n    height: 70,\n    width: 380\n  },\n  addressField: {\n    height: 70,\n    width: 380\n  },\n  buzzCodeAndPhoneRow: {\n    width: 380,\n    height: 70,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  buzzCodeField: {\n    height: 70,\n    width: 175\n  },\n  phoneNumberField: {\n    height: 70,\n    width: 175\n  },\n  continueBtn: {\n    width: 219,\n    height: 60,\n    backgroundColor: \"rgba(238,125,67,1)\",\n    borderRadius: 60,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 0.2,\n    shadowRadius: 10\n  },\n  continueBtnTxt: {\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 18,\n    fontWeight: \"700\"\n  }\n});\nexport default CheckOutDetails;","map":{"version":3,"names":["React","useState","useRef","FieldInputWithLabel","CardCvcElement","CardExpiryElement","CardNumberElement","useElements","useStripe","CheckOutDetails","storeDetails","setOrderDetails","orderDetails","setPage","emailAddress","setEmailAddress","stripe","elements","cardNumberRef","cardExpiryRef","cardCvcRef","handleSubmit","event","preventDefault","console","log","cardNumberElement","getElement","createToken","token","error","response","fetch","method","headers","body","JSON","stringify","id","amount","total","currency","storeUID","docID","responseData","json","ok","success","setpage","message","jsonError","styles","fieldsGroup","nameField","text","setemailAddress","buzzCodeAndPhoneRow","buzzCodeField","style","base","fontSize","color","invalid","phoneNumberField","continueBtn","continueBtnTxt","StyleSheet","create","container","width","height","justifyContent","addressField","flexDirection","backgroundColor","borderRadius","alignItems","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","fontWeight"],"sources":["/Users/peterputros/Desktop/PosMate/pages/non-authed/OnlineOrderPages/components/home/CheckOutDetails.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { StyleSheet, View, TouchableOpacity, Text } from \"react-native\";\nimport FieldInputWithLabel from \"./FieldInputWithLabel\";\nimport {\n  CardCvcElement,\n  CardExpiryElement,\n  CardNumberElement,\n  useElements,\n  useStripe,\n} from \"@stripe/react-stripe-js\";\n\nfunction CheckOutDetails({\n  storeDetails,\n  setOrderDetails,\n  orderDetails,\n  setPage,\n}) {\n  const [emailAddress, setEmailAddress] = useState(\"\");\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const cardNumberRef = useRef();\n  const cardExpiryRef = useRef();\n  const cardCvcRef = useRef();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      console.log(\"Stripe.js has not yet loaded.\");\n      return;\n    }\n\n    const cardNumberElement = elements.getElement(CardNumberElement);\n\n    const { token, error } = await stripe.createToken(cardNumberElement);\n\n    if (error) {\n      console.error(\"Error creating token:\", error);\n    } else {\n      console.log(\"Token:\", token);\n\n      // Send the token, amount, and currency to your Firebase Function to process the payment\n      const response = await fetch(\n        \"https://us-central1-posmate-5fc0a.cloudfunctions.net/processPayment\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            token: token.id,\n            amount: orderDetails.total,\n            currency,\n            storeUID: storeDetails.docID,\n            orderDetails: orderDetails,\n          }),\n        }\n      );\n\n      try {\n        const responseData = await response.json();\n\n        if (response.ok && responseData.success) {\n          console.log(\"Payment processed successfully!\");\n          setpage(4);\n        } else {\n          console.error(\n            \"Payment processing failed. Server message:\",\n            responseData.message\n          );\n        }\n      } catch (jsonError) {\n        console.error(\"Error parsing JSON response:\", jsonError);\n      }\n    }\n  };\n\n  return (\n    <>\n      <View style={styles.fieldsGroup}>\n        <FieldInputWithLabel\n          txtInput=\"Email Address\"\n          label=\"Email Address*\"\n          style={styles.nameField}\n          value={emailAddress}\n          onChangeText={(text) => setemailAddress(text)}\n        />\n        <FieldInputWithLabel\n          // txtInput=\"1234 1234 1234 1234\"\n          label=\"Card Number*\"\n          style={styles.nameField}\n          // value={cardNumber}\n          // onChangeText={(text) => setcardNumber(text)}\n          customInput={<CardNumberElement />}\n        />\n        <View style={styles.buzzCodeAndPhoneRow}>\n          <FieldInputWithLabel\n            // txtInput=\"MM/YY\"\n            label=\"Expiry*\"\n            style={styles.buzzCodeField}\n            // value={expiry}\n            // onChangeText={(text) => setexpiry(text)}\n            customInput={\n              <CardExpiryElement\n                options={{\n                  style: {\n                    base: {\n                      fontSize: \"16px\",\n                      color: \"#424770\",\n                      \"::placeholder\": {\n                        color: \"#aab7c4\",\n                      },\n                    },\n                    invalid: {\n                      color: \"#9e2146\",\n                    },\n                  },\n                }}\n              />\n            }\n          />\n          <FieldInputWithLabel\n            // txtInput=\"123\"\n            label=\"CVV*\"\n            style={styles.phoneNumberField}\n            // value={cvv}\n            // onChangeText={(text) => setcvv(text)}\n            customInput={\n              <CardCvcElement\n                options={{\n                  style: {\n                    base: {\n                      fontSize: \"16px\",\n                      color: \"#424770\",\n                      \"::placeholder\": {\n                        color: \"#aab7c4\",\n                      },\n                    },\n                    invalid: {\n                      color: \"#9e2146\",\n                    },\n                  },\n                }}\n              />\n            }\n          />\n        </View>\n      </View>\n      <TouchableOpacity\n        style={styles.continueBtn}\n        onPress={handleSubmit}\n        disabled={!stripe}\n      >\n        <Text style={styles.continueBtnTxt}>CHECKOUT</Text>\n      </TouchableOpacity>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 380,\n    height: 390,\n  },\n  fieldsGroup: {\n    width: 380,\n    height: 325,\n    justifyContent: \"space-between\",\n  },\n  nameField: {\n    height: 70,\n    width: 380,\n  },\n  addressField: {\n    height: 70,\n    width: 380,\n  },\n  buzzCodeAndPhoneRow: {\n    width: 380,\n    height: 70,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  buzzCodeField: {\n    height: 70,\n    width: 175,\n  },\n  phoneNumberField: {\n    height: 70,\n    width: 175,\n  },\n  continueBtn: {\n    width: 219,\n    height: 60,\n    backgroundColor: \"rgba(238,125,67,1)\",\n    borderRadius: 60,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3,\n    },\n    elevation: 30,\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  continueBtnTxt: {\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 18,\n    fontWeight: \"700\",\n  },\n});\n\nexport default CheckOutDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}