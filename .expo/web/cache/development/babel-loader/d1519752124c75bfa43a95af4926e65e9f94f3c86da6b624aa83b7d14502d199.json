{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { processColor } from \"./Colors\";\nimport { makeShareable, isConfigured } from \"./core\";\nimport { _updatePropsJS } from \"./js-reanimated\";\nimport { shouldBeUseWeb } from \"./PlatformChecker\";\nexport var colorProps = ['backgroundColor', 'borderBottomColor', 'borderColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor', 'borderStartColor', 'borderEndColor', 'color', 'shadowColor', 'textDecorationColor', 'tintColor', 'textShadowColor', 'overlayColor'];\nexport var ColorProperties = !isConfigured() ? [] : makeShareable(colorProps);\nvar updatePropsByPlatform;\nvar _worklet_11557893219017_init_data = {\n  code: \"function anonymous(_, updates, maybeViewRef) {\\n  const {\\n    _updatePropsJS\\n  } = this._closure;\\n  if (maybeViewRef) {\\n    maybeViewRef.items.forEach(function (item, _) {\\n      _updatePropsJS(updates, item);\\n    });\\n  }\\n}\",\n  location: \"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAW0B,SAACA,SAAGC,IAAOA,OAAEC,cAAiB;EAAA;IAAA;EAAA;EAGpD,IAAIA,YAAY,EAAE;IAChBA,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,UAACC,IAAI,EAAEL,CAAC,EAAK;MACtCM,cAAc,CAACL,OAAO,EAAEI,IAAI,CAAC;IAC/B,CAAC,CAAC;EACJ;AACF\\\",\\\"names\\\":[\\\"_\\\",\\\"updates\\\",\\\"maybeViewRef\\\",\\\"items\\\",\\\"forEach\\\",\\\"item\\\",\\\"_updatePropsJS\\\"],\\\"sources\\\":[\\\"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\\\"]}\"\n};\nvar _worklet_6695634921709_init_data = {\n  code: \"function anonymous(viewDescriptors, updates, _) {\\n  const {\\n    ColorProperties,\\n    processColor\\n  } = this._closure;\\n  for (const key in updates) {\\n    if (ColorProperties.indexOf(key) !== -1) {\\n      updates[key] = processColor(updates[key]);\\n    }\\n  }\\n  viewDescriptors.value.forEach(function (viewDescriptor) {\\n    _updatePropsFabric(viewDescriptor.shadowNodeWrapper, updates);\\n  });\\n}\",\n  location: \"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAsB4B,SAACA,yBAAiBC,EAAOA,OAAQ;EAAA;IAAA;IAAA;EAAA;EAGvD,KAAK,MAAMC,GAAG,IAAID,OAAO,EAAE;IACzB,IAAIE,eAAe,CAACC,OAAO,CAACF,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MACvCD,OAAO,CAACC,GAAG,CAAC,GAAGG,YAAY,CAACJ,OAAO,CAACC,GAAG,CAAC,CAAC;IAC3C;EACF;EACAF,eAAe,CAACM,KAAK,CAACC,OAAO,CAACC,wBAAc,EAAI;IAC9CC,kBAAkB,CAACD,cAAc,CAACE,iBAAiB,EAAET,OAAO,CAAC;EAC/D,CAAC,CAAC;AACJ\\\",\\\"names\\\":[\\\"viewDescriptors\\\",\\\"updates\\\",\\\"key\\\",\\\"ColorProperties\\\",\\\"indexOf\\\",\\\"processColor\\\",\\\"value\\\",\\\"forEach\\\",\\\"viewDescriptor\\\",\\\"_updatePropsFabric\\\",\\\"shadowNodeWrapper\\\"],\\\"sources\\\":[\\\"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\\\"]}\"\n};\nvar _worklet_10133092834546_init_data = {\n  code: \"function anonymous(viewDescriptors, updates, _) {\\n  const {\\n    ColorProperties,\\n    processColor\\n  } = this._closure;\\n  for (const key in updates) {\\n    if (ColorProperties.indexOf(key) !== -1) {\\n      updates[key] = processColor(updates[key]);\\n    }\\n  }\\n  viewDescriptors.value.forEach(function (viewDescriptor) {\\n    _updatePropsPaper(viewDescriptor.tag, viewDescriptor.name || 'RCTView', updates);\\n  });\\n}\",\n  location: \"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAmC4B,SAACA,yBAAiBC,EAAOA,OAAQ;EAAA;IAAA;IAAA;EAAA;EAGvD,KAAK,MAAMC,GAAG,IAAID,OAAO,EAAE;IACzB,IAAIE,eAAe,CAACC,OAAO,CAACF,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MACvCD,OAAO,CAACC,GAAG,CAAC,GAAGG,YAAY,CAACJ,OAAO,CAACC,GAAG,CAAC,CAAC;IAC3C;EACF;EACAF,eAAe,CAACM,KAAK,CAACC,OAAO,CAACC,wBAAc,EAAI;IAC9CC,iBAAiB,CAACD,cAAc,CAACE,GAAG,EAAEF,cAAc,CAACG,IAAI,IAAI,SAAS,EAAEV,OAAO,CAAC;EAClF,CAAC,CAAC;AACJ\\\",\\\"names\\\":[\\\"viewDescriptors\\\",\\\"updates\\\",\\\"key\\\",\\\"ColorProperties\\\",\\\"indexOf\\\",\\\"processColor\\\",\\\"value\\\",\\\"forEach\\\",\\\"viewDescriptor\\\",\\\"_updatePropsPaper\\\",\\\"tag\\\",\\\"name\\\"],\\\"sources\\\":[\\\"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.js\\\"]}\"\n};\nif (shouldBeUseWeb()) {\n  updatePropsByPlatform = function () {\n    var _e = [new global.Error(), -2, -27];\n    var _f = function _f(_, updates, maybeViewRef) {\n      if (maybeViewRef) {\n        maybeViewRef.items.forEach(function (item, _) {\n          _updatePropsJS(updates, item);\n        });\n      }\n    };\n    _f._closure = {\n      _updatePropsJS: _updatePropsJS\n    };\n    _f.__initData = _worklet_11557893219017_init_data;\n    _f.__workletHash = 11557893219017;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }();\n} else {\n  if (global._IS_FABRIC) {\n    updatePropsByPlatform = function () {\n      var _e = [new global.Error(), -3, -27];\n      var _f = function _f(viewDescriptors, updates, _) {\n        for (var key in updates) {\n          if (ColorProperties.indexOf(key) !== -1) {\n            updates[key] = processColor(updates[key]);\n          }\n        }\n        viewDescriptors.value.forEach(function (viewDescriptor) {\n          _updatePropsFabric(viewDescriptor.shadowNodeWrapper, updates);\n        });\n      };\n      _f._closure = {\n        ColorProperties: ColorProperties,\n        processColor: processColor\n      };\n      _f.__initData = _worklet_6695634921709_init_data;\n      _f.__workletHash = 6695634921709;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }();\n  } else {\n    updatePropsByPlatform = function () {\n      var _e = [new global.Error(), -3, -27];\n      var _f = function _f(viewDescriptors, updates, _) {\n        for (var key in updates) {\n          if (ColorProperties.indexOf(key) !== -1) {\n            updates[key] = processColor(updates[key]);\n          }\n        }\n        viewDescriptors.value.forEach(function (viewDescriptor) {\n          _updatePropsPaper(viewDescriptor.tag, viewDescriptor.name || 'RCTView', updates);\n        });\n      };\n      _f._closure = {\n        ColorProperties: ColorProperties,\n        processColor: processColor\n      };\n      _f.__initData = _worklet_10133092834546_init_data;\n      _f.__workletHash = 10133092834546;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }();\n  }\n}\nexport var updateProps = updatePropsByPlatform;\nexport var updatePropsJestWrapper = function updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters) {\n  adapters.forEach(function (adapter) {\n    adapter(updates);\n  });\n  animatedStyle.current.value = _objectSpread(_objectSpread({}, animatedStyle.current.value), updates);\n  updateProps(viewDescriptors, updates, maybeViewRef);\n};\nexport default updateProps;","map":{"version":3,"mappings":"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","names":["processColor","makeShareable","isConfigured","_updatePropsJS","shouldBeUseWeb","colorProps","ColorProperties","updatePropsByPlatform","_","updates","maybeViewRef","items","forEach","item","global","_IS_FABRIC","viewDescriptors","key","indexOf","value","viewDescriptor","_updatePropsFabric","shadowNodeWrapper","_updatePropsPaper","tag","name","updateProps","updatePropsJestWrapper","animatedStyle","adapters","adapter","current"],"sources":["/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/UpdateProps.ts"],"sourcesContent":["/* global _updatePropsPaper _updatePropsFabric */\nimport { MutableRefObject } from 'react';\nimport { processColor } from './Colors';\nimport { AnimatedStyle, SharedValue, StyleProps } from './commonTypes';\nimport { makeShareable, isConfigured } from './core';\nimport { Descriptor } from './hook/commonTypes';\nimport { _updatePropsJS } from './js-reanimated';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport { ViewRefSet } from './ViewDescriptorsSet';\n\n// copied from react-native/Libraries/Components/View/ReactNativeStyleAttributes\nexport const colorProps = [\n  'backgroundColor',\n  'borderBottomColor',\n  'borderColor',\n  'borderLeftColor',\n  'borderRightColor',\n  'borderTopColor',\n  'borderStartColor',\n  'borderEndColor',\n  'color',\n  'shadowColor',\n  'textDecorationColor',\n  'tintColor',\n  'textShadowColor',\n  'overlayColor',\n];\n\nexport const ColorProperties = !isConfigured() ? [] : makeShareable(colorProps);\n\nlet updatePropsByPlatform;\nif (shouldBeUseWeb()) {\n  updatePropsByPlatform = (\n    _: SharedValue<Descriptor[]>,\n    updates: StyleProps | AnimatedStyle,\n    maybeViewRef: ViewRefSet<any> | undefined\n  ): void => {\n    'worklet';\n    if (maybeViewRef) {\n      maybeViewRef.items.forEach((item, _) => {\n        _updatePropsJS(updates, item);\n      });\n    }\n  };\n} else {\n  if (global._IS_FABRIC) {\n    updatePropsByPlatform = (\n      viewDescriptors: SharedValue<Descriptor[]>,\n      updates: StyleProps | AnimatedStyle,\n      _: ViewRefSet<any> | undefined\n    ): void => {\n      'worklet';\n\n      for (const key in updates) {\n        if (ColorProperties.indexOf(key) !== -1) {\n          updates[key] = processColor(updates[key]);\n        }\n      }\n\n      viewDescriptors.value.forEach((viewDescriptor) => {\n        _updatePropsFabric!(viewDescriptor.shadowNodeWrapper, updates);\n      });\n    };\n  } else {\n    updatePropsByPlatform = (\n      viewDescriptors: SharedValue<Descriptor[]>,\n      updates: StyleProps | AnimatedStyle,\n      _: ViewRefSet<any> | undefined\n    ): void => {\n      'worklet';\n\n      for (const key in updates) {\n        if (ColorProperties.indexOf(key) !== -1) {\n          updates[key] = processColor(updates[key]);\n        }\n      }\n      viewDescriptors.value.forEach((viewDescriptor) => {\n        _updatePropsPaper!(\n          viewDescriptor.tag,\n          viewDescriptor.name || 'RCTView',\n          updates\n        );\n      });\n    };\n  }\n}\n\nexport const updateProps: (\n  viewDescriptor: SharedValue<Descriptor[]>,\n  updates: StyleProps | AnimatedStyle,\n  maybeViewRef: ViewRefSet<any> | undefined\n) => void = updatePropsByPlatform;\n\nexport const updatePropsJestWrapper = (\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updates: AnimatedStyle,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animatedStyle: MutableRefObject<AnimatedStyle>,\n  adapters: ((updates: AnimatedStyle) => void)[]\n): void => {\n  adapters.forEach((adapter) => {\n    adapter(updates);\n  });\n  animatedStyle.current.value = {\n    ...animatedStyle.current.value,\n    ...updates,\n  };\n\n  updateProps(viewDescriptors, updates, maybeViewRef);\n};\n\nexport default updateProps;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}