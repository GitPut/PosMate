{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport { userStoreState } from \"../state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport Spinner from \"./Spinner\";\nimport { updateData } from \"../state/firebaseFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddCategory = function AddCategory() {\n  var catalog = userStoreState.use();\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    categoryName = _useState2[0],\n    setcategoryName = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isModalVisible = _useState4[0],\n    setisModalVisible = _useState4[1];\n  function handleDataUpdate() {\n    updateData([].concat(_toConsumableArray(catalog.categories), [categoryName]), catalog.products);\n    setisModalVisible(true);\n  }\n  function handleRemoveCategory(index) {\n    var localCatalog = structuredClone(catalog);\n    localCatalog.categories.splice(index, 1);\n    updateData(localCatalog.categories, localCatalog.products);\n    setisModalVisible(true);\n  }\n  return _jsxs(ScrollView, {\n    style: {\n      padding: 25\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 17,\n        fontWeight: \"600\"\n      },\n      children: \"Current categories\"\n    }), catalog.categories.map(function (e, index) {\n      return _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          padding: 15,\n          margin: 10,\n          backgroundColor: \"lightgrey\"\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 17\n          },\n          children: e\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleRemoveCategory(index);\n          },\n          style: {\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"red\",\n              fontWeight: \"600\"\n            },\n            children: \"Remove X\"\n          })\n        })]\n      });\n    }), _jsx(TextInput, {\n      placeholder: \"Enter New Category\",\n      onChangeText: function onChangeText(val) {\n        return setcategoryName(val);\n      },\n      style: {\n        margin: 10\n      }\n    }), _jsx(Button, {\n      title: \"Add New Category\",\n      onPress: handleDataUpdate,\n      style: {\n        margin: 10\n      }\n    }), _jsx(Spinner, {\n      isModalVisible: isModalVisible\n    })]\n  });\n};\nexport default AddCategory;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","userStoreState","Button","TextInput","Spinner","updateData","AddCategory","catalog","use","categoryName","setcategoryName","isModalVisible","setisModalVisible","handleDataUpdate","categories","products","handleRemoveCategory","index","localCatalog","structuredClone","splice","padding","fontSize","fontWeight","map","e","flexDirection","justifyContent","margin","backgroundColor","alignItems","color","val","styles","StyleSheet","create"],"sources":["/Users/peterputros/Desktop/PosMate-1/components/AddCategory.tsx"],"sourcesContent":["import {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { userStoreState } from \"state/state\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport Spinner from \"./Spinner\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst AddCategory = () => {\n  const catalog = userStoreState.use();\n  const [categoryName, setcategoryName] = useState();\n  const [isModalVisible, setisModalVisible] = useState(false);\n\n  function handleDataUpdate() {\n    updateData([...catalog.categories, categoryName], catalog.products);\n    setisModalVisible(true);\n  }\n\n  function handleRemoveCategory(index) {\n    const localCatalog = structuredClone(catalog);\n    localCatalog.categories.splice(index, 1);\n\n    updateData(localCatalog.categories, localCatalog.products);\n    setisModalVisible(true);\n  }\n\n  return (\n    <ScrollView style={{ padding: 25 }}>\n      <Text style={{ fontSize: 17, fontWeight: \"600\" }}>\n        Current categories\n      </Text>\n      {catalog.categories.map((e, index) => {\n        return (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              padding: 15,\n              margin: 10,\n              backgroundColor: \"lightgrey\",\n            }}\n          >\n            <Text style={{ fontSize: 17 }}>{e}</Text>\n            <TouchableOpacity\n              onPress={() => handleRemoveCategory(index)}\n              style={{\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Text style={{ color: \"red\", fontWeight: \"600\" }}>Remove X</Text>\n            </TouchableOpacity>\n          </View>\n        );\n      })}\n      <TextInput\n        placeholder=\"Enter New Category\"\n        onChangeText={(val) => setcategoryName(val)}\n        style={{ margin: 10 }}\n      />\n      <Button\n        title=\"Add New Category\"\n        onPress={handleDataUpdate}\n        style={{ margin: 10 }}\n      />\n      <Spinner isModalVisible={isModalVisible} />\n    </ScrollView>\n  );\n};\n\nexport default AddCategory;\n\nconst styles = StyleSheet.create({});\n"],"mappings":";;;;;;;AAOA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc;AACvB,SAASC,MAAM,EAAEC,SAAS,QAAQ,6BAA6B;AAC/D,OAAOC,OAAO;AACd,SAASC,UAAU;AAAkC;AAAA;AAErD,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;EACxB,IAAMC,OAAO,GAAGN,cAAc,CAACO,GAAG,EAAE;EACpC,gBAAwCR,QAAQ,EAAE;IAAA;IAA3CS,YAAY;IAAEC,eAAe;EACpC,iBAA4CV,QAAQ,CAAC,KAAK,CAAC;IAAA;IAApDW,cAAc;IAAEC,iBAAiB;EAExC,SAASC,gBAAgB,GAAG;IAC1BR,UAAU,8BAAKE,OAAO,CAACO,UAAU,IAAEL,YAAY,IAAGF,OAAO,CAACQ,QAAQ,CAAC;IACnEH,iBAAiB,CAAC,IAAI,CAAC;EACzB;EAEA,SAASI,oBAAoB,CAACC,KAAK,EAAE;IACnC,IAAMC,YAAY,GAAGC,eAAe,CAACZ,OAAO,CAAC;IAC7CW,YAAY,CAACJ,UAAU,CAACM,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;IAExCZ,UAAU,CAACa,YAAY,CAACJ,UAAU,EAAEI,YAAY,CAACH,QAAQ,CAAC;IAC1DH,iBAAiB,CAAC,IAAI,CAAC;EACzB;EAEA,OACE,MAAC,UAAU;IAAC,KAAK,EAAE;MAAES,OAAO,EAAE;IAAG,CAAE;IAAA,WACjC,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAM,CAAE;MAAA;IAAA,EAE1C,EACNhB,OAAO,CAACO,UAAU,CAACU,GAAG,CAAC,UAACC,CAAC,EAAER,KAAK,EAAK;MACpC,OACE,MAAC,IAAI;QACH,KAAK,EAAE;UACLS,aAAa,EAAE,KAAK;UACpBC,cAAc,EAAE,eAAe;UAC/BN,OAAO,EAAE,EAAE;UACXO,MAAM,EAAE,EAAE;UACVC,eAAe,EAAE;QACnB,CAAE;QAAA,WAEF,KAAC,IAAI;UAAC,KAAK,EAAE;YAAEP,QAAQ,EAAE;UAAG,CAAE;UAAA,UAAEG;QAAC,EAAQ,EACzC,KAAC,gBAAgB;UACf,OAAO,EAAE;YAAA,OAAMT,oBAAoB,CAACC,KAAK,CAAC;UAAA,CAAC;UAC3C,KAAK,EAAE;YACLU,cAAc,EAAE,QAAQ;YACxBG,UAAU,EAAE;UACd,CAAE;UAAA,UAEF,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEC,KAAK,EAAE,KAAK;cAAER,UAAU,EAAE;YAAM,CAAE;YAAA;UAAA;QAAgB,EAChD;MAAA,EACd;IAEX,CAAC,CAAC,EACF,KAAC,SAAS;MACR,WAAW,EAAC,oBAAoB;MAChC,YAAY,EAAE,sBAACS,GAAG;QAAA,OAAKtB,eAAe,CAACsB,GAAG,CAAC;MAAA,CAAC;MAC5C,KAAK,EAAE;QAAEJ,MAAM,EAAE;MAAG;IAAE,EACtB,EACF,KAAC,MAAM;MACL,KAAK,EAAC,kBAAkB;MACxB,OAAO,EAAEf,gBAAiB;MAC1B,KAAK,EAAE;QAAEe,MAAM,EAAE;MAAG;IAAE,EACtB,EACF,KAAC,OAAO;MAAC,cAAc,EAAEjB;IAAe,EAAG;EAAA,EAChC;AAEjB,CAAC;AAED,eAAeL,WAAW;AAE1B,IAAM2B,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}