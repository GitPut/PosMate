{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { storeDetailState, woocommerceState } from \"../../state/state\";\nvar tz = require(\"moment-timezone\");\nimport { ReactGrid } from \"@silevis/reactgrid\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport \"@silevis/reactgrid/styles.css\";\nimport ReceiptPrint from \"../../components/ReceiptPrint\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar getDate = function getDate(receipt) {\n  if (receipt.date_created) {\n    var dateString = receipt.date_created;\n    var newDate = new Date(dateString + \"Z\");\n    var targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    var result = tz(newDate).tz(targetTimezone, true).format(\"dddd, MMMM Do YYYY, h:mm:ss a z\");\n    return result;\n  } else if (receipt.date) {\n    var _newDate = new Date(receipt.date.seconds * 1000);\n    var _targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    var _result = tz(_newDate).tz(_targetTimezone, true).format(\"dddd, MMMM Do YYYY, h:mm:ss a z\");\n    return _result;\n  }\n};\nvar ViewTransactions = function ViewTransactions(_ref) {\n  var transList = _ref.transList,\n    todaysDetails = _ref.todaysDetails;\n  var today = new Date();\n  var storeDetails = storeDetailState.use();\n  var wooCredentials = woocommerceState.use();\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width,\n    height = _useWindowDimensions.height;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    search = _useState2[0],\n    setsearch = _useState2[1];\n  var getColumns = function getColumns() {\n    return [{\n      columnId: \"name\",\n      width: 150\n    }, {\n      columnId: \"phone\",\n      width: 150\n    }, {\n      columnId: \"address\",\n      width: 300\n    }, {\n      columnId: \"orderFrom\",\n      width: 150\n    }, {\n      columnId: \"method\",\n      width: 150\n    }, {\n      columnId: \"cart\",\n      width: 150\n    }, {\n      columnId: \"total\",\n      width: 150\n    }, {\n      columnId: \"date\",\n      width: 300\n    }];\n  };\n  var headerRow = {\n    rowId: \"header\",\n    cells: [{\n      type: \"header\",\n      text: \"Name\",\n      nonEditable: true\n    }, {\n      type: \"header\",\n      text: \"Phone #\",\n      nonEditable: true\n    }, {\n      type: \"header\",\n      text: \"Address\",\n      nonEditable: true\n    }, {\n      type: \"header\",\n      text: \"Order From\",\n      nonEditable: true\n    }, {\n      type: \"header\",\n      text: \"Method\",\n      nonEditable: true\n    }, {\n      type: \"header\",\n      text: \"ID\",\n      nonEditable: true\n    }, {\n      type: \"header\",\n      text: \"Total\",\n      nonEditable: true\n    }, {\n      type: \"header\",\n      text: \"Date\",\n      nonEditable: true\n    }]\n  };\n  var getRows = function getRows() {\n    return [headerRow].concat(_toConsumableArray(transList.filter(function (fReceipt) {\n      var _fReceipt$customer$na, _fReceipt$customer$ph, _fReceipt$customer$ad, _fReceipt$customer$ad2, _fReceipt$cart_hash, _fReceipt$method, _fReceipt$transNum;\n      return !((search == null ? void 0 : search.length) > 0 && !((_fReceipt$customer$na = fReceipt.customer.name) != null && _fReceipt$customer$na.includes(search)) && !((_fReceipt$customer$ph = fReceipt.customer.phone) != null && _fReceipt$customer$ph.includes(search)) && !((_fReceipt$customer$ad = fReceipt.customer.address) != null && (_fReceipt$customer$ad2 = _fReceipt$customer$ad.label) != null && _fReceipt$customer$ad2.includes(search)) && !((_fReceipt$cart_hash = fReceipt.cart_hash) != null && _fReceipt$cart_hash.includes(search)) && !((_fReceipt$method = fReceipt.method) != null && _fReceipt$method.includes(search)) && !((_fReceipt$transNum = fReceipt.transNum) != null && _fReceipt$transNum.includes(search)) && !getDate(fReceipt.date.seconds).includes(search));\n    }).map(function (receipt, idx) {\n      if (receipt.cart_hash) {\n        return {\n          rowId: idx,\n          cells: [{\n            type: \"text\",\n            text: receipt.shipping.first_name + \" \" + receipt.shipping.last_name,\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.billing.phone,\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.shipping.address_1 + receipt.shipping.city + receipt.shipping.postcode + receipt.shipping.state,\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: \"Online\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.shipping_lines[0].line.method_title,\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.transNum ? receipt.transNum : \"\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.total,\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: getDate(receipt),\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }]\n        };\n      } else {\n        var _receipt$customer, _receipt$customer$add, _receipt$customer2, _receipt$customer2$ad, _receipt$customer3, _receipt$customer4;\n        return {\n          rowId: idx,\n          cells: [{\n            type: \"text\",\n            text: receipt.customer.name,\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.customer.phone ? receipt.customer.phone : \"\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: (_receipt$customer = receipt.customer) != null && (_receipt$customer$add = _receipt$customer.address) != null && _receipt$customer$add.label ? (_receipt$customer2 = receipt.customer) == null ? void 0 : (_receipt$customer2$ad = _receipt$customer2.address) == null ? void 0 : _receipt$customer2$ad.label : (_receipt$customer3 = receipt.customer) != null && _receipt$customer3.address ? (_receipt$customer4 = receipt.customer) == null ? void 0 : _receipt$customer4.address : \"\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.cart_hash ? \"Online\" : \"POS\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.method === \"deliveryOrder\" ? \"Delivery\" : \"Pickup\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.transNum ? receipt.transNum : \"\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.total ? \"$\" + receipt.total : \"\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: getDate(receipt),\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }]\n        };\n      }\n    })));\n  };\n\n  var _useState3 = useState(getRows()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    rows = _useState4[0],\n    setrows = _useState4[1];\n  useEffect(function () {\n    setrows(getRows());\n  }, [search, transList]);\n  var columns = getColumns();\n  var testRef = useRef(null);\n\n  var PrintTodaysTotal = function PrintTodaysTotal() {\n    var _storeDetails$address;\n    var data = [\"\\x1B\" + \"\\x40\",\n    \"\\x1B\" + \"\\x61\" + \"\\x31\",\n    storeDetails.name, \"\\x0A\", ((_storeDetails$address = storeDetails.address) == null ? void 0 : _storeDetails$address.label) + \"\\x0A\", storeDetails.website + \"\\x0A\",\n    storeDetails.phoneNumber + \"\\x0A\",\n    today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\", \"\\x0A\", \"\\x0A\", \"\\x0A\", \"\\x0A\", \"\\x1B\" + \"\\x61\" + \"\\x30\",\n    \"\\x0A\" + \"\\x0A\", \"Number Of Receipts: \" + todaysDetails.todaysReceipts + \"\\x0A\" + \"\\x0A\", \"Sub-Total: \" + \"$\" + (todaysDetails.todaysReceiptValue / 1.13).toFixed(2) + \"\\x0A\" + \"\\x0A\", \"Tax: \" + \"$\" + (todaysDetails.todaysReceiptValue / 1.13 * 0.13).toFixed(2) + \"\\x0A\" + \"\\x0A\", \"Total Including (13% Tax): \" + \"$\" + todaysDetails.todaysReceiptValue + \"\\x0A\" + \"\\x0A\", \"------------------------------------------\" + \"\\x0A\", \"\\x0A\",\n    \"\\x0A\",\n    \"\\x0A\",\n    \"\\x0A\",\n    \"\\x0A\",\n    \"\\x0A\",\n    \"\\x1D\" + \"\\x56\" + \"\\x30\"];\n    var qz = require(\"qz-tray\");\n    qz.websocket.connect().then(function () {\n      var config = qz.configs.create(storeDetails.comSelected);\n      return qz.print(config, data);\n    }).then(qz.websocket.disconnect).catch(function (err) {\n      console.error(err);\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        width: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\"\n      },\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter term to search by (name, phone, address, method, id, date)\",\n        onChangeText: function onChangeText(val) {\n          return setsearch(val);\n        },\n        value: search,\n        style: {\n          width: \"80%\",\n          height: 60,\n          padding: 10\n        }\n      }), _jsx(TouchableOpacity, {\n        style: {\n          backgroundColor: \"lightgrey\",\n          width: \"20%\",\n          height: 60,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        onPress: function onPress() {\n          if (testRef.current.state.selectedIds.length > 0) {\n            var data = [];\n            testRef.current.state.selectedIds.forEach(function (idx) {\n              var element = transList[idx];\n              var formatedData = ReceiptPrint(element, storeDetails);\n              data = data.concat(formatedData);\n            });\n            var qz = require(\"qz-tray\");\n            qz.websocket.connect().then(function () {\n              var config = qz.configs.create(storeDetails.comSelected);\n              return qz.print(config, data);\n            }).then(qz.websocket.disconnect).catch(function (err) {\n              console.error(err);\n            });\n          } else if (testRef.current.state.selectedRanges[0].rows[0]) {\n            var _data = [];\n            var element = transList[testRef.current.state.selectedRanges[0].rows[0].rowId];\n            var formatedData = ReceiptPrint(element, storeDetails);\n            _data = _data.concat(formatedData);\n            var _qz = require(\"qz-tray\");\n            _qz.websocket.connect().then(function () {\n              var config = _qz.configs.create(storeDetails.comSelected);\n              return _qz.print(config, _data);\n            }).then(_qz.websocket.disconnect).catch(function (err) {\n              console.error(err);\n            });\n          } else {\n            alert(\"Higlight one or multiple receipt then click to print them\");\n          }\n        },\n        children: _jsx(MaterialCommunityIcons, {\n          name: \"printer\",\n          size: 32,\n          color: \"white\"\n        })\n      })]\n    }), _jsx(ScrollView, {\n      contentContainerStyle: styles.contentContainer,\n      children: _jsx(ScrollView, {\n        contentContainerStyle: styles.contentContainer,\n        horizontal: true,\n        children: _jsx(ReactGrid, {\n          ref: testRef,\n          rows: rows,\n          columns: columns,\n          enableRowSelection: true\n        })\n      })\n    })]\n  });\n};\nexport default ViewTransactions;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\"\n  },\n  contentContainer: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useRef","useState","storeDetailState","woocommerceState","tz","require","ReactGrid","MaterialCommunityIcons","ReceiptPrint","getDate","receipt","date_created","dateString","newDate","Date","targetTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","result","format","date","seconds","ViewTransactions","transList","todaysDetails","today","storeDetails","use","wooCredentials","useWindowDimensions","width","height","search","setsearch","getColumns","columnId","headerRow","rowId","cells","type","text","nonEditable","getRows","filter","fReceipt","length","customer","name","includes","phone","address","label","cart_hash","method","transNum","map","idx","shipping","first_name","last_name","style","flex","billing","address_1","city","postcode","state","shipping_lines","line","method_title","total","rows","setrows","columns","testRef","PrintTodaysTotal","data","website","phoneNumber","toLocaleDateString","toLocaleTimeString","todaysReceipts","todaysReceiptValue","toFixed","qz","websocket","connect","then","config","configs","create","comSelected","print","disconnect","catch","err","console","error","styles","container","flexDirection","alignItems","justifyContent","val","padding","backgroundColor","current","selectedIds","forEach","element","formatedData","concat","selectedRanges","alert","contentContainer","StyleSheet"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/ViewTransactions.tsx"],"sourcesContent":["import {\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  TouchableOpacity,\n  useWindowDimensions,\n  View,\n  TextInput,\n} from \"react-native\";\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport {\n  storeDetailState,\n  transListState,\n  woocommerceState,\n} from \"state/state\";\nimport { auth, db } from \"state/firebaseConfig\";\nconst tz = require(\"moment-timezone\");\nimport {\n  ReactGrid,\n  CellChange,\n  Row,\n  Column,\n  Id,\n  MenuOption,\n  SelectionMode,\n} from \"@silevis/reactgrid\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nimport \"@silevis/reactgrid/styles.css\";\nimport ReceiptPrint from \"components/ReceiptPrint\";\n\nconst getDate = (receipt) => {\n  if (receipt.date_created) {\n    const dateString = receipt.date_created;\n\n    const newDate = new Date(dateString + \"Z\");\n\n    const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    const result = tz(newDate)\n      .tz(targetTimezone, true)\n      .format(\"dddd, MMMM Do YYYY, h:mm:ss a z\");\n\n    return result;\n  } else if (receipt.date) {\n    const newDate = new Date(receipt.date.seconds * 1000);\n    const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    const result = tz(newDate)\n      .tz(targetTimezone, true)\n      .format(\"dddd, MMMM Do YYYY, h:mm:ss a z\");\n\n    return result;\n  }\n};\n\nconst ViewTransactions = ({ transList, todaysDetails }) => {\n  const today = new Date();\n  const storeDetails = storeDetailState.use();\n  const wooCredentials = woocommerceState.use();\n  // const [transList, settransList] = useState([]);\n  // const [todaysDetails, setTodaysDetails] = useState({\n  //   todaysReceiptValue: 0,\n  //   todaysReceipts: 0,\n  // });\n  const { width, height } = useWindowDimensions();\n  const [search, setsearch] = useState(null);\n\n  const getColumns = (): Column[] => [\n    { columnId: \"name\", width: 150 },\n    { columnId: \"phone\", width: 150 },\n    { columnId: \"address\", width: 300 },\n    { columnId: \"orderFrom\", width: 150 },\n    { columnId: \"method\", width: 150 },\n    { columnId: \"cart\", width: 150 },\n    { columnId: \"total\", width: 150 },\n    { columnId: \"date\", width: 300 },\n  ];\n\n  const headerRow: Row = {\n    rowId: \"header\",\n    cells: [\n      { type: \"header\", text: \"Name\", nonEditable: true },\n      { type: \"header\", text: \"Phone #\", nonEditable: true },\n      { type: \"header\", text: \"Address\", nonEditable: true },\n      { type: \"header\", text: \"Order From\", nonEditable: true },\n      { type: \"header\", text: \"Method\", nonEditable: true },\n      { type: \"header\", text: \"ID\", nonEditable: true },\n      { type: \"header\", text: \"Total\", nonEditable: true },\n      { type: \"header\", text: \"Date\", nonEditable: true },\n    ],\n  };\n\n  const getRows = () => [\n    headerRow,\n    ...transList\n      .filter(\n        (fReceipt) =>\n          !(\n            search?.length > 0 &&\n            !fReceipt.customer.name?.includes(search) &&\n            !fReceipt.customer.phone?.includes(search) &&\n            !fReceipt.customer.address?.label?.includes(search) &&\n            !fReceipt.cart_hash?.includes(search) &&\n            !fReceipt.method?.includes(search) &&\n            !fReceipt.transNum?.includes(search) &&\n            !getDate(fReceipt.date.seconds).includes(search)\n          )\n      )\n      .map((receipt, idx) => {\n        if (receipt.cart_hash) {\n          return {\n            rowId: idx,\n            cells: [\n              {\n                type: \"text\",\n                text:\n                  receipt.shipping.first_name +\n                  \" \" +\n                  receipt.shipping.last_name,\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.billing.phone,\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text:\n                  receipt.shipping.address_1 +\n                  receipt.shipping.city +\n                  receipt.shipping.postcode +\n                  receipt.shipping.state,\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: \"Online\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.shipping_lines[0].line.method_title,\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.transNum ? receipt.transNum : \"\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.total,\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: getDate(receipt),\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n            ],\n          };\n        } else {\n          return {\n            rowId: idx,\n            cells: [\n              {\n                type: \"text\",\n                text: receipt.customer.name,\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.customer.phone ? receipt.customer.phone : \"\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.customer?.address?.label\n                  ? receipt.customer?.address?.label\n                  : receipt.customer?.address\n                  ? receipt.customer?.address\n                  : \"\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.cart_hash ? \"Online\" : \"POS\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text:\n                  receipt.method === \"deliveryOrder\" ? \"Delivery\" : \"Pickup\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.transNum ? receipt.transNum : \"\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.total ? \"$\" + receipt.total : \"\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: getDate(receipt),\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n            ],\n          };\n        }\n      }),\n  ];\n\n  ///\n\n  const [rows, setrows] = useState(getRows());\n\n  useEffect(() => {\n    setrows(getRows());\n  }, [search, transList]);\n\n  const columns = getColumns();\n\n  const testRef = useRef(null);\n\n  ///\n\n  // useEffect(() => {\n  //   try {\n  //     db.collection(\"users\")\n  //       .doc(auth.currentUser?.uid)\n  //       .collection(\"transList\")\n  //       .get()\n  //       .then((querySnapshot) => {\n  //         querySnapshot.forEach((doc) => {\n  //           // doc.data() is never undefined for query doc snapshots\n  //           // console.log(doc.id, \" => \", doc.data());\n  //           settransList((prevState) => [...prevState, doc.data()]);\n  //           console.log(doc.data());\n  //         });\n  //       });\n  //   } catch {\n  //     console.log(\"Error occured retrieving tranasctions\");\n  //   }\n\n  //   if (wooCredentials.useWoocommerce === true) {\n  //     try {\n  //       const WooCommerceAPI = require(\"woocommerce-api\");\n\n  //       const WooCommerce = new WooCommerceAPI({\n  //         url: wooCredentials.apiUrl,\n  //         consumerKey: wooCredentials.ck,\n  //         consumerSecret: wooCredentials.cs,\n  //         wpAPI: true,\n  //         version: \"wc/v1\",\n  //       });\n\n  //       let page = 1;\n  //       let orders = [];\n\n  //       const getOrders = async () => {\n  //         const response = await WooCommerce.getAsync(\n  //           `orders?page=${page}&per_page=100`\n  //         );\n  //         const data = JSON.parse(response.body);\n  //         orders = [...orders, ...data];\n  //         if (data.length === 100) {\n  //           page++;\n  //           getOrders();\n  //         } else {\n  //           // console.log(orders);\n  //         }\n  //       };\n\n  //       getOrders()\n  //         .then(() => settransList((prevState) => [...prevState, ...orders]))\n  //         .catch((e) => console.log(\"error has occured\"));\n  //     } catch {\n  //       console.log(\"Something occured with woo\");\n  //     }\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   try {\n  //     if (transList.length > 0) {\n  //       settransList((prev) =>\n  //         prev\n  //           .sort(function (a, b) {\n  //             if (a.date && b.date) {\n  //               return a.date.seconds - b.date.seconds;\n  //             } else if (a.date && b.date_created) {\n  //               const targetTimezone =\n  //                 Intl.DateTimeFormat().resolvedOptions().timeZone;\n  //               const newDateA = new Date(a.date.seconds * 1000);\n  //               const newDateB = new Date(b.date_created + \"Z\");\n  //               const resultA = tz(newDateA).tz(targetTimezone, true);\n  //               const resultB = tz(newDateB).tz(targetTimezone, true);\n\n  //               return resultA.valueOf() - resultB.valueOf();\n  //             } else if (a.date_created && b.date) {\n  //               const targetTimezone =\n  //                 Intl.DateTimeFormat().resolvedOptions().timeZone;\n  //               const newDateA = new Date(a.date_created + \"Z\");\n  //               const newDateB = new Date(b.date.seconds * 1000);\n  //               const resultA = tz(newDateA).tz(targetTimezone, true);\n  //               const resultB = tz(newDateB).tz(targetTimezone, true);\n\n  //               return resultA.valueOf() - resultB.valueOf();\n  //             } else {\n  //               const targetTimezone =\n  //                 Intl.DateTimeFormat().resolvedOptions().timeZone;\n  //               const newDateA = new Date(a.date_created + \"Z\");\n  //               const newDateB = new Date(b.date_created + \"Z\");\n  //               const resultA = tz(newDateA).tz(targetTimezone, true);\n  //               const resultB = tz(newDateB).tz(targetTimezone, true);\n\n  //               return resultA.valueOf() - resultB.valueOf();\n  //             }\n  //           })\n  //           .reverse()\n  //       );\n  //       // settransList(sortedTransList);\n  //       const todaysReceiptValue = transList.reduce((accumulator, current) => {\n  //         let date;\n  //         const targetTimezone =\n  //           Intl.DateTimeFormat().resolvedOptions().timeZone;\n  //         if (current.date) {\n  //           const localDatePreConv = new Date(current.date.seconds * 1000);\n  //           date = tz(localDatePreConv).tz(targetTimezone, true);\n  //         } else {\n  //           const localDatePreConv = new Date(current.date_created + \"Z\");\n  //           date = tz(localDatePreConv).tz(targetTimezone, true);\n  //         }\n  //         // Get the current date in the desired time zone\n  //         let today = tz().tz(targetTimezone);\n\n  //         if (\n  //           today.year() === date.year() &&\n  //           today.month() === date.month() &&\n  //           today.dayOfYear() === date.dayOfYear()\n  //         ) {\n  //           return (\n  //             accumulator +\n  //             parseFloat(current.date ? current.total : current.total / 1.13)\n  //           );\n  //         } else {\n  //           return accumulator;\n  //         }\n  //       }, 0);\n  //       const todaysReceipts = transList.reduce((accumulator, current) => {\n  //         let date;\n  //         const targetTimezone =\n  //           Intl.DateTimeFormat().resolvedOptions().timeZone;\n  //         if (current.date) {\n  //           const localDatePreConv = new Date(current.date.seconds * 1000);\n  //           date = tz(localDatePreConv).tz(targetTimezone, true);\n  //         } else {\n  //           const localDatePreConv = new Date(current.date_created + \"Z\");\n  //           date = tz(localDatePreConv).tz(targetTimezone, true);\n  //         }\n  //         // Get the current date in the desired time zone\n  //         let today = tz().tz(targetTimezone);\n\n  //         if (\n  //           today.year() === date.year() &&\n  //           today.month() === date.month() &&\n  //           today.dayOfYear() === date.dayOfYear()\n  //         ) {\n  //           return accumulator + 1;\n  //         } else {\n  //           return accumulator;\n  //         }\n  //       }, 0);\n  //       setTodaysDetails({\n  //         todaysReceiptValue: todaysReceiptValue.toFixed(2),\n  //         todaysReceipts: todaysReceipts,\n  //       });\n  //     }\n  //   } catch {\n  //     console.log(\"Error Occured when sorting dates\");\n  //   }\n  // }, [transList]);\n\n  const PrintTodaysTotal = () => {\n    let data = [\n      \"\\x1B\" + \"\\x40\", // init\n      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\n      storeDetails.name,\n      \"\\x0A\",\n      storeDetails.address?.label + \"\\x0A\",\n      storeDetails.website + \"\\x0A\", // text and line break\n      storeDetails.phoneNumber + \"\\x0A\", // text and line break\n      today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x0A\",\n      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\n      \"\\x0A\" + \"\\x0A\",\n      \"Number Of Receipts: \" + todaysDetails.todaysReceipts + \"\\x0A\" + \"\\x0A\",\n      \"Sub-Total: \" +\n        \"$\" +\n        (todaysDetails.todaysReceiptValue / 1.13).toFixed(2) +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"Tax: \" +\n        \"$\" +\n        ((todaysDetails.todaysReceiptValue / 1.13) * 0.13).toFixed(2) +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"Total Including (13% Tax): \" +\n        \"$\" +\n        todaysDetails.todaysReceiptValue +\n        \"\\x0A\" +\n        \"\\x0A\",\n      \"------------------------------------------\" + \"\\x0A\",\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x0A\", // line break\n      \"\\x1D\" + \"\\x56\" + \"\\x30\",\n    ];\n\n    const qz = require(\"qz-tray\");\n    qz.websocket\n      .connect()\n      .then(function () {\n        let config = qz.configs.create(storeDetails.comSelected);\n        return qz.print(config, data);\n      })\n      .then(qz.websocket.disconnect)\n      .catch(function (err) {\n        console.error(err);\n      });\n  };\n\n  // useEffect(() => {\n  //   if(transList.length > )\n  // }, [search])\n\n  return (\n    <View style={styles.container}>\n      {/* <Text style={{ textAlign: \"center\", margin: 25 }}>\n        List Of Transactions\n      </Text>\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Price: {todaysDetails.todaysReceiptValue}\n        </Text>\n        <Button\n          style={{ height: 40, alignItems: \"center\", justifyContent: \"center\" }}\n          title=\"Print Todays Receipts\"\n          onPress={PrintTodaysTotal}\n        />\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Receipts: {todaysDetails.todaysReceipts}\n        </Text>\n      </View> */}\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <TextInput\n          placeholder=\"Enter term to search by (name, phone, address, method, id, date)\"\n          onChangeText={(val) => setsearch(val)}\n          value={search}\n          style={{ width: \"80%\", height: 60, padding: 10 }}\n        />\n        <TouchableOpacity\n          style={{\n            backgroundColor: \"lightgrey\",\n            width: \"20%\",\n            height: 60,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n          onPress={() => {\n            if (testRef.current.state.selectedIds.length > 0) {\n              let data = [];\n              testRef.current.state.selectedIds.forEach((idx) => {\n                const element = transList[idx];\n                const formatedData = ReceiptPrint(element, storeDetails);\n                data = data.concat(formatedData);\n              });\n              const qz = require(\"qz-tray\");\n              qz.websocket\n                .connect()\n                .then(function () {\n                  let config = qz.configs.create(storeDetails.comSelected);\n                  return qz.print(config, data);\n                })\n                .then(qz.websocket.disconnect)\n                .catch(function (err) {\n                  console.error(err);\n                });\n            } else if (testRef.current.state.selectedRanges[0].rows[0]) {\n              let data = [];\n              const element =\n                transList[\n                  testRef.current.state.selectedRanges[0].rows[0].rowId\n                ];\n\n              const formatedData = ReceiptPrint(element, storeDetails);\n              data = data.concat(formatedData);\n\n              const qz = require(\"qz-tray\");\n              qz.websocket\n                .connect()\n                .then(function () {\n                  let config = qz.configs.create(storeDetails.comSelected);\n                  return qz.print(config, data);\n                })\n                .then(qz.websocket.disconnect)\n                .catch(function (err) {\n                  console.error(err);\n                });\n            } else {\n              alert(\n                \"Higlight one or multiple receipt then click to print them\"\n              );\n            }\n          }}\n        >\n          <MaterialCommunityIcons name=\"printer\" size={32} color=\"white\" />\n        </TouchableOpacity>\n      </View>\n      <ScrollView contentContainerStyle={styles.contentContainer}>\n        <ScrollView contentContainerStyle={styles.contentContainer} horizontal>\n          <ReactGrid\n            ref={testRef}\n            rows={rows}\n            columns={columns}\n            enableRowSelection={true}\n          />\n        </ScrollView>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default ViewTransactions;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n  },\n  contentContainer: {\n    flex: 1,\n    // justifyContent: \"space-between\",\n    // paddingLeft: 50,\n    // paddingRight: 50,\n    // paddingBottom: 50,\n    // padding: 50,\n    height: \"100%\",\n    width: \"100%\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}