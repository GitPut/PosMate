{"ast":null,"code":"import React from \"react\";\nimport \"react-native-gesture-handler\";\nimport RouteManager from \"./navigation/RouteManager\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar App = function App() {\n  var originalWarn = console.warn.bind(console);\n  console.warn = function (msg) {\n    if (/selectable prop is deprecated/.test(msg)) {\n      return;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    originalWarn.apply(void 0, [msg].concat(args));\n  };\n  return _jsx(RouteManager, {});\n};\nexport default App;","map":{"version":3,"names":["React","RouteManager","App","originalWarn","console","warn","bind","msg","test","args"],"sources":["/Users/peterputros/Desktop/PosMate/App.tsx"],"sourcesContent":["import React from \"react\";\nimport \"react-native-gesture-handler\";\nimport RouteManager from \"navigation/RouteManager\";\n\nconst App = () => {\n  // Backup the original console.warn function\n  const originalWarn = console.warn.bind(console);\n\n  console.warn = (msg, ...args) => {\n    // Check if the message is the specific warning you want to ignore\n    if (/selectable prop is deprecated/.test(msg)) {\n      return; // Ignore this specific warning\n    }\n    // Otherwise, pass all other warnings to the original console.warn function\n    originalWarn(msg, ...args);\n  };\n\n  return <RouteManager />;\n};\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,8BAA8B;AACrC,OAAOC,YAAY;AAAgC;AAEnD,IAAMC,GAAG,GAAG,SAANA,GAAG,GAAS;EAEhB,IAAMC,YAAY,GAAGC,OAAO,CAACC,IAAI,CAACC,IAAI,CAACF,OAAO,CAAC;EAE/CA,OAAO,CAACC,IAAI,GAAG,UAACE,GAAG,EAAc;IAE/B,IAAI,+BAA+B,CAACC,IAAI,CAACD,GAAG,CAAC,EAAE;MAC7C;IACF;IAAC,kCAJqBE,IAAI;MAAJA,IAAI;IAAA;IAM1BN,YAAY,gBAACI,GAAG,SAAKE,IAAI,EAAC;EAC5B,CAAC;EAED,OAAO,KAAC,YAAY,KAAG;AACzB,CAAC;AAED,eAAeP,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}