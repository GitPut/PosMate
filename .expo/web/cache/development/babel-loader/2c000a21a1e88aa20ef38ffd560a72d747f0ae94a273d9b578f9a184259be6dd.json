{"ast":null,"code":"import NativeReanimatedModule from \"./NativeReanimated\";\nimport { makeShareableCloneOnUIRecursive, makeShareableCloneRecursive, registerShareableMapping } from \"./shareables\";\nimport { runOnUI } from \"./threads\";\nimport { valueSetter } from \"./valueSetter\";\nexport { stopMapper } from \"./mappers\";\nvar _worklet_4824026427666_init_data = {\n  code: \"function makeUIMutable(initial, syncDataHolder) {\\n  const {\\n    valueSetter,\\n    makeShareableCloneOnUIRecursive\\n  } = this._closure;\\n  const listeners = new Map();\\n  let value = initial;\\n  const self = {\\n    set value(newValue) {\\n      valueSetter(self, newValue);\\n    },\\n    get value() {\\n      return value;\\n    },\\n    set _value(newValue) {\\n      value = newValue;\\n      if (syncDataHolder) {\\n        _updateDataSynchronously(syncDataHolder, makeShareableCloneOnUIRecursive(newValue));\\n      }\\n      listeners.forEach(function (listener) {\\n        listener(newValue);\\n      });\\n    },\\n    get _value() {\\n      return value;\\n    },\\n    addListener: function (id, listener) {\\n      listeners.set(id, listener);\\n    },\\n    removeListener: function (id) {\\n      listeners.delete(id);\\n    },\\n    _animation: null,\\n    _isReanimatedSharedValue: true\\n  };\\n  return self;\\n}\",\n  location: \"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAKO,sBAASA,CAAcC,SAAOC,cAAEA,EAAc;EAAA;IAAA;IAAA;EAAA;EAGnD,MAAMC,SAAS,GAAG,IAAIC,GAAG,EAAE;EAC3B,IAAIC,KAAK,GAAGJ,OAAO;EACnB,MAAMK,IAAI,GAAG;IACX,IAAID,KAAK,CAACE,QAAQ,EAAE;MAClBC,WAAW,CAACF,IAAI,EAAEC,QAAQ,CAAC;IAC7B,CAAC;IACD,IAAIF,KAAK,GAAG;MACV,OAAOA,KAAK;IACd,CAAC;IAOD,IAAII,MAAM,CAACF,QAAQ,EAAE;MACnBF,KAAK,GAAGE,QAAQ;MAChB,IAAIL,cAAc,EAAE;QAClBQ,wBAAwB,CAACR,cAAc,EAAES,+BAA+B,CAACJ,QAAQ,CAAC,CAAC;MACrF;MACAJ,SAAS,CAACS,OAAO,CAACC,kBAAQ,EAAI;QAC5BA,QAAQ,CAACN,QAAQ,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC;IACD,IAAIE,MAAM,GAAG;MACX,OAAOJ,KAAK;IACd,CAAC;IACDS,WAAW,EAAE,UAACC,EAAE,EAAEF,QAAQ,EAAK;MAC7BV,SAAS,CAACa,GAAG,CAACD,EAAE,EAAEF,QAAQ,CAAC;IAC7B,CAAC;IACDI,cAAc,EAAEF,YAAE,EAAI;MACpBZ,SAAS,CAACe,MAAM,CAACH,EAAE,CAAC;IACtB,CAAC;IACDI,UAAU,EAAE,IAAI;IAChBC,wBAAwB,EAAE;EAC5B,CAAC;EACD,OAAOd,IAAI;AACb\\\",\\\"names\\\":[\\\"makeUIMutable\\\",\\\"initial\\\",\\\"syncDataHolder\\\",\\\"listeners\\\",\\\"Map\\\",\\\"value\\\",\\\"self\\\",\\\"newValue\\\",\\\"valueSetter\\\",\\\"_value\\\",\\\"_updateDataSynchronously\\\",\\\"makeShareableCloneOnUIRecursive\\\",\\\"forEach\\\",\\\"listener\\\",\\\"addListener\\\",\\\"id\\\",\\\"set\\\",\\\"removeListener\\\",\\\"delete\\\",\\\"_animation\\\",\\\"_isReanimatedSharedValue\\\"],\\\"sources\\\":[\\\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"]}\"\n};\nexport var makeUIMutable = function () {\n  var _e = [new global.Error(), -3, -27];\n  var _f = function _f(initial, syncDataHolder) {\n    var listeners = new Map();\n    var value = initial;\n    var self = {\n      set value(newValue) {\n        valueSetter(self, newValue);\n      },\n      get value() {\n        return value;\n      },\n      set _value(newValue) {\n        value = newValue;\n        if (syncDataHolder) {\n          _updateDataSynchronously(syncDataHolder, makeShareableCloneOnUIRecursive(newValue));\n        }\n        listeners.forEach(function (listener) {\n          listener(newValue);\n        });\n      },\n      get _value() {\n        return value;\n      },\n      addListener: function addListener(id, listener) {\n        listeners.set(id, listener);\n      },\n      removeListener: function removeListener(id) {\n        listeners.delete(id);\n      },\n      _animation: null,\n      _isReanimatedSharedValue: true\n    };\n    return self;\n  };\n  _f._closure = {\n    valueSetter: valueSetter,\n    makeShareableCloneOnUIRecursive: makeShareableCloneOnUIRecursive\n  };\n  _f.__initData = _worklet_4824026427666_init_data;\n  _f.__workletHash = 4824026427666;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_10449958264388_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    makeUIMutable,\\n    initial,\\n    syncDataHolder\\n  } = this._closure;\\n  return makeUIMutable(initial, syncDataHolder);\\n}\",\n  location: \"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAwDY,kBAAM;EAAA;IAAA;IAAA;IAAA;EAAA;EAGZ,OAAOA,aAAa,CAACC,OAAO,EAAEC,cAAc,CAAC;AAC/C\\\",\\\"names\\\":[\\\"makeUIMutable\\\",\\\"initial\\\",\\\"syncDataHolder\\\"],\\\"sources\\\":[\\\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"]}\"\n};\nvar _worklet_15438208032637_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    mutable,\\n    newValue\\n  } = this._closure;\\n  mutable.value = newValue;\\n}\",\n  location: \"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAmEgB,kBAAM;EAAA;IAAA;IAAA;EAAA;EACZA,OAAO,CAACC,KAAK,GAAGC,QAAQ;AAC1B\\\",\\\"names\\\":[\\\"mutable\\\",\\\"value\\\",\\\"newValue\\\"],\\\"sources\\\":[\\\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"]}\"\n};\nvar _worklet_12569920825823_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    mutable,\\n    modifier\\n  } = this._closure;\\n  mutable.value = modifier(mutable.value);\\n}\",\n  location: \"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAgGc,kBAAM;EAAA;IAAA;IAAA;EAAA;EACZA,OAAO,CAACC,KAAK,GAAGC,QAAQ,CAACF,OAAO,CAACC,KAAK,CAAC;AACzC\\\",\\\"names\\\":[\\\"mutable\\\",\\\"value\\\",\\\"modifier\\\"],\\\"sources\\\":[\\\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"]}\"\n};\nexport function makeMutable(initial) {\n  var oneWayReadsOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var value = initial;\n  var syncDataHolder;\n  if (!oneWayReadsOnly && NativeReanimatedModule.native) {\n    syncDataHolder = NativeReanimatedModule.makeSynchronizedDataHolder(makeShareableCloneRecursive(value));\n    registerShareableMapping(syncDataHolder);\n  }\n  var handle = makeShareableCloneRecursive({\n    __init: function () {\n      var _e = [new global.Error(), -4, -27];\n      var _f = function _f() {\n        return makeUIMutable(initial, syncDataHolder);\n      };\n      _f._closure = {\n        makeUIMutable: makeUIMutable,\n        initial: initial,\n        syncDataHolder: syncDataHolder\n      };\n      _f.__initData = _worklet_10449958264388_init_data;\n      _f.__workletHash = 10449958264388;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }()\n  });\n  var listeners = NativeReanimatedModule.native ? undefined : new Map();\n  var mutable = {\n    set value(newValue) {\n      if (NativeReanimatedModule.native) {\n        runOnUI(function () {\n          var _e = [new global.Error(), -3, -27];\n          var _f = function _f() {\n            mutable.value = newValue;\n          };\n          _f._closure = {\n            mutable: mutable,\n            newValue: newValue\n          };\n          _f.__initData = _worklet_15438208032637_init_data;\n          _f.__workletHash = 15438208032637;\n          _f.__stackDetails = _e;\n          _f.__version = \"3.3.0\";\n          return _f;\n        }())();\n      } else {\n        valueSetter(mutable, newValue);\n      }\n    },\n    get value() {\n      if (syncDataHolder) {\n        return NativeReanimatedModule.getDataSynchronously(syncDataHolder);\n      }\n      return value;\n    },\n    set _value(newValue) {\n      if (NativeReanimatedModule.native) {\n        throw new Error('Setting `_value` directly is only possible on the UI runtime');\n      }\n      value = newValue;\n      listeners.forEach(function (listener) {\n        listener(newValue);\n      });\n    },\n    get _value() {\n      if (NativeReanimatedModule.native) {\n        throw new Error('Reading from `_value` directly is only possible on the UI runtime');\n      }\n      return value;\n    },\n    modify: function modify(modifier) {\n      runOnUI(function () {\n        var _e = [new global.Error(), -3, -27];\n        var _f = function _f() {\n          mutable.value = modifier(mutable.value);\n        };\n        _f._closure = {\n          mutable: mutable,\n          modifier: modifier\n        };\n        _f.__initData = _worklet_12569920825823_init_data;\n        _f.__workletHash = 12569920825823;\n        _f.__stackDetails = _e;\n        _f.__version = \"3.3.0\";\n        return _f;\n      }())();\n    },\n    addListener: function addListener(id, listener) {\n      if (NativeReanimatedModule.native) {\n        throw new Error('adding listeners is only possible on the UI runtime');\n      }\n      listeners.set(id, listener);\n    },\n    removeListener: function removeListener(id) {\n      if (NativeReanimatedModule.native) {\n        throw new Error('removing listeners is only possible on the UI runtime');\n      }\n      listeners.delete(id);\n    },\n    _isReanimatedSharedValue: true\n  };\n  registerShareableMapping(mutable, handle);\n  return mutable;\n}\nvar _worklet_17100414353033_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    initial\\n  } = this._closure;\\n  return initial;\\n}\",\n  location: \"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAwHY,kBAAM;EAAA;IAAA;EAAA;EAGZ,OAAOA,OAAO;AAChB\\\",\\\"names\\\":[\\\"initial\\\"],\\\"sources\\\":[\\\"/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\\\"]}\"\n};\nexport function makeRemote() {\n  var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var handle = makeShareableCloneRecursive({\n    __init: function () {\n      var _e = [new global.Error(), -2, -27];\n      var _f = function _f() {\n        return initial;\n      };\n      _f._closure = {\n        initial: initial\n      };\n      _f.__initData = _worklet_17100414353033_init_data;\n      _f.__workletHash = 17100414353033;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }()\n  });\n  registerShareableMapping(initial, handle);\n  return initial;\n}","map":{"version":3,"mappings":"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","names":["NativeReanimatedModule","makeShareableCloneOnUIRecursive","makeShareableCloneRecursive","registerShareableMapping","runOnUI","valueSetter","stopMapper","makeUIMutable","initial","syncDataHolder","listeners","Map","value","self","newValue","_value","_updateDataSynchronously","forEach","listener","addListener","id","set","removeListener","delete","_animation","_isReanimatedSharedValue","makeMutable","oneWayReadsOnly","native","makeSynchronizedDataHolder","handle","__init","undefined","mutable","getDataSynchronously","Error","modify","modifier","makeRemote"],"sources":["/Users/peterputros/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.ts"],"sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport { SharedValue, ShareableSyncDataHolderRef } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n  registerShareableMapping,\n} from './shareables';\nimport { runOnUI } from './threads';\nimport { valueSetter } from './valueSetter';\nexport { stopMapper } from './mappers';\n\nexport function makeUIMutable<T>(\n  initial: T,\n  syncDataHolder?: ShareableSyncDataHolderRef<T>\n) {\n  'worklet';\n\n  const listeners = new Map();\n  let value = initial;\n\n  const self = {\n    set value(newValue) {\n      valueSetter(self, newValue);\n    },\n    get value() {\n      return value;\n    },\n    /**\n     * _value prop should only be accessed by the valueSetter implementation\n     * which may make the decision about updating the mutable value depending\n     * on the provided new value. All other places should only attempt to modify\n     * the mutable by assigning to value prop directly.\n     */\n    set _value(newValue: T) {\n      value = newValue;\n      if (syncDataHolder) {\n        _updateDataSynchronously(\n          syncDataHolder,\n          makeShareableCloneOnUIRecursive(newValue)\n        );\n      }\n      listeners.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): T {\n      return value;\n    },\n    addListener: (id: number, listener: (newValue: T) => void) => {\n      listeners.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      listeners.delete(id);\n    },\n    _animation: null,\n    _isReanimatedSharedValue: true,\n  };\n  return self;\n}\n\nexport function makeMutable<T>(\n  initial: T,\n  oneWayReadsOnly = false\n): SharedValue<T> {\n  let value: T = initial;\n  let syncDataHolder: ShareableSyncDataHolderRef<T> | undefined;\n  if (!oneWayReadsOnly && NativeReanimatedModule.native) {\n    // updates are always synchronous when running on web or in Jest environment\n    syncDataHolder = NativeReanimatedModule.makeSynchronizedDataHolder(\n      makeShareableCloneRecursive(value)\n    );\n    registerShareableMapping(syncDataHolder);\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return makeUIMutable(initial, syncDataHolder);\n    },\n  });\n  // listeners can only work on JS thread on Web and jest environments\n  const listeners = NativeReanimatedModule.native ? undefined : new Map();\n  const mutable = {\n    set value(newValue) {\n      if (NativeReanimatedModule.native) {\n        runOnUI(() => {\n          mutable.value = newValue;\n        })();\n      } else {\n        valueSetter(mutable, newValue);\n      }\n    },\n    get value() {\n      if (syncDataHolder) {\n        return NativeReanimatedModule.getDataSynchronously(syncDataHolder);\n      }\n      return value;\n    },\n    set _value(newValue: T) {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'Setting `_value` directly is only possible on the UI runtime'\n        );\n      }\n      value = newValue;\n      listeners!.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): T {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'Reading from `_value` directly is only possible on the UI runtime'\n        );\n      }\n      return value;\n    },\n    modify: (modifier: (value: T) => T) => {\n      runOnUI(() => {\n        mutable.value = modifier(mutable.value);\n      })();\n    },\n    addListener: (id: number, listener: (value: T) => void) => {\n      if (NativeReanimatedModule.native) {\n        throw new Error('adding listeners is only possible on the UI runtime');\n      }\n      listeners!.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'removing listeners is only possible on the UI runtime'\n        );\n      }\n      listeners!.delete(id);\n    },\n    _isReanimatedSharedValue: true,\n  };\n  registerShareableMapping(mutable, handle);\n  return mutable;\n}\n\nexport function makeRemote<T extends object>(initial: T = {} as T): T {\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return initial;\n    },\n  });\n  registerShareableMapping(initial, handle);\n  return initial;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}