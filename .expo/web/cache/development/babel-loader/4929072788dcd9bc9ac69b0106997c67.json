{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar CashScreen = function CashScreen(_ref) {\n  var setCashModal = _ref.setCashModal,\n    GetTrans = _ref.GetTrans,\n    total = _ref.total,\n    setChangeDue = _ref.setChangeDue;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    cash = _useState2[0],\n    setCash = _useState2[1];\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        CancelPayment();\n        setongoingOrderListModal(false);\n      },\n      style: {\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: height,\n        width: width\n      }\n    }), _jsxs(View, {\n      style: {\n        position: \"absolute\",\n        backgroundColor: \"rgba(255,255,255,1)\",\n        borderRadius: 30,\n        shadowColor: \"rgba(0,0,0,1)\",\n        shadowOffset: {\n          width: 3,\n          height: 3\n        },\n        elevation: 30,\n        shadowOpacity: 0.57,\n        shadowRadius: 10,\n        height: height * 0.7,\n        width: height * 0.7,\n        padding: 40,\n        alignSelf: \"center\",\n        top: \"15%\"\n      },\n      children: [_jsx(View, {\n        style: styles.sizeRow,\n        children: _jsx(Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: \"600\",\n            textAlign: \"center\"\n          },\n          children: \"Payment Details\"\n        })\n      }), _jsxs(Text, {\n        children: [\"Total: $\", total]\n      }), _jsx(TextInput, {\n        color: \"black\",\n        label: \"Enter Cash Given\",\n        variant: \"outlined\",\n        style: styles.input,\n        onChangeText: function onChangeText(val) {\n          setCash(val);\n          setChangeDue((parseFloat(val) - total).toFixed(2));\n        },\n        autoCorrect: false,\n        value: cash\n      }), _jsxs(Text, {\n        children: [\"Change Due:\", \" \", (parseFloat(cash.length > 0 ? cash : 0) - total).toFixed(2)]\n      }), _jsx(Button, {\n        title: \"Finsh Payment\",\n        onPress: function onPress() {\n          GetTrans(\"Cash\");\n          setCashModal(false);\n        },\n        contentContainerStyle: styles.btn,\n        style: {\n          margin: 25,\n          backgroundColor: \"#4050B5\"\n        }\n      }), _jsx(Button, {\n        title: \"Cancel\",\n        onPress: function onPress() {\n          setCashModal(false);\n        },\n        contentContainerStyle: styles.btn,\n        style: {\n          margin: 25,\n          backgroundColor: \"#4050B5\"\n        }\n      })]\n    })]\n  });\n};\nexport default CashScreen;\nvar styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 25\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\"\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25\n  },\n  touchable: {\n    margin: 25,\n    width: 300\n  },\n  modalContainer: {\n    padding: 50\n  },\n  btn: {\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  input: {\n    marginTop: 25,\n    marginBottom: 25\n  }\n});","map":{"version":3,"names":["React","useState","Button","TextInput","CashScreen","setCashModal","GetTrans","total","setChangeDue","cash","setCash","CancelPayment","setongoingOrderListModal","backgroundColor","justifyContent","alignItems","height","width","position","borderRadius","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","padding","alignSelf","top","styles","sizeRow","fontSize","fontWeight","textAlign","input","val","parseFloat","toFixed","length","btn","margin","StyleSheet","create","flexDirection","marginBottom","halfRow","toppingsContainer","flex","flexWrap","marginTop","touchable","modalContainer"],"sources":["/Users/peterputros/Desktop/PosMate/components/CashScreen.tsx"],"sourcesContent":["import { ScrollView, StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, TextInput } from \"@react-native-material/core\";\r\nimport { cartState, setCartState } from \"state/state\";\r\nimport { Switch } from \"react-native-gesture-handler\";\r\n\r\nconst CashScreen = ({ setCashModal, GetTrans, total, setChangeDue }) => {\r\n  const [cash, setCash] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          CancelPayment();\r\n          setongoingOrderListModal(false);\r\n        }}\r\n        style={{\r\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: height,\r\n          width: width,\r\n        }}\r\n      />\r\n      <View\r\n        style={{\r\n          position: \"absolute\",\r\n          backgroundColor: \"rgba(255,255,255,1)\",\r\n          borderRadius: 30,\r\n          shadowColor: \"rgba(0,0,0,1)\",\r\n          shadowOffset: {\r\n            width: 3,\r\n            height: 3,\r\n          },\r\n          elevation: 30,\r\n          shadowOpacity: 0.57,\r\n          shadowRadius: 10,\r\n          height: height * 0.7,\r\n          width: height * 0.7,\r\n          padding: 40,\r\n          alignSelf: \"center\",\r\n          top: \"15%\",\r\n        }}\r\n      >\r\n        <View style={styles.sizeRow}>\r\n          <Text\r\n            style={{\r\n              fontSize: 20,\r\n              fontWeight: \"600\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            Payment Details\r\n          </Text>\r\n        </View>\r\n        <Text>Total: ${total}</Text>\r\n        <TextInput\r\n          color=\"black\"\r\n          label=\"Enter Cash Given\"\r\n          variant=\"outlined\"\r\n          style={styles.input}\r\n          onChangeText={(val) => {\r\n          setCash(val);\r\n          setChangeDue((parseFloat(val) - total).toFixed(2));\r\n        }}\r\n        autoCorrect={false}\r\n        value={cash}\r\n        />\r\n        <Text>\r\n          Change Due:{\" \"}\r\n          {(parseFloat(cash.length > 0 ? cash : 0) - total).toFixed(2)}\r\n        </Text>\r\n        <Button\r\n          title=\"Finsh Payment\"\r\n          onPress={() => {\r\n             GetTrans(\"Cash\");\r\n          setCashModal(false);\r\n          }}\r\n          contentContainerStyle={styles.btn}\r\n          style={{ margin: 25, backgroundColor: \"#4050B5\" }}\r\n        />\r\n        <Button\r\n          title=\"Cancel\"\r\n          onPress={() => {\r\n          setCashModal(false);\r\n          }}\r\n          contentContainerStyle={styles.btn}\r\n          style={{ margin: 25, backgroundColor: \"#4050B5\" }}\r\n        />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CashScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  sizeRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n  },\r\n  halfRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"50%\",\r\n  },\r\n  toppingsContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n  },\r\n  touchable: {\r\n    margin: 25,\r\n    width: 300,\r\n  },\r\n  modalContainer: {\r\n    padding: 50,\r\n  },\r\n  btn: {\r\n    height: 40,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}