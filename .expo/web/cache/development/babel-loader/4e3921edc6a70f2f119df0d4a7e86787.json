{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { storeDetailState } from \"../../state/state\";\nvar tz = require(\"moment-timezone\");\nimport { ReactGrid } from \"@silevis/reactgrid\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport \"@silevis/reactgrid/styles.css\";\nimport ReceiptPrint from \"../../components/ReceiptPrint\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar getDate = function getDate(receipt) {\n  if (receipt.date_created) {\n    var dateString = receipt.date_created;\n    var newDate = new Date(dateString + \"Z\");\n    var targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    var result = tz(newDate).tz(targetTimezone, true).format(\"YYYY-MM-DD HH:mm a\");\n    return result;\n  } else if (receipt.date) {\n    var _newDate = new Date(receipt.date.seconds * 1000);\n    var _targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    var _result = tz(_newDate).tz(_targetTimezone, true).format(\"YYYY-MM-DD HH:mm a\");\n    return _result;\n  }\n};\nvar ViewTransactions = function ViewTransactions(_ref) {\n  var transList = _ref.transList,\n    todaysDetails = _ref.todaysDetails;\n  var storeDetails = storeDetailState.use();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    search = _useState2[0],\n    setsearch = _useState2[1];\n  var getColumns = function getColumns() {\n    return [{\n      columnId: \"name\",\n      width: 150\n    }, {\n      columnId: \"phone\",\n      width: 150\n    }, {\n      columnId: \"address\",\n      width: 300\n    }, {\n      columnId: \"orderFrom\",\n      width: 150\n    }, {\n      columnId: \"method\",\n      width: 150\n    }, {\n      columnId: \"cart\",\n      width: 150\n    }, {\n      columnId: \"total\",\n      width: 150\n    }, {\n      columnId: \"date\",\n      width: 300\n    }];\n  };\n  var headerRow = {\n    rowId: \"header\",\n    cells: [{\n      type: \"header\",\n      text: \"Name\",\n      nonEditable: true\n    }, {\n      type: \"header\",\n      text: \"Phone #\",\n      nonEditable: true\n    }, {\n      type: \"header\",\n      text: \"Address\",\n      nonEditable: true\n    }, {\n      type: \"header\",\n      text: \"Order From\",\n      nonEditable: true\n    }, {\n      type: \"header\",\n      text: \"Method\",\n      nonEditable: true\n    }, {\n      type: \"header\",\n      text: \"ID\",\n      nonEditable: true\n    }, {\n      type: \"header\",\n      text: \"Total\",\n      nonEditable: true\n    }, {\n      type: \"header\",\n      text: \"Date\",\n      nonEditable: true\n    }]\n  };\n  var getRows = function getRows() {\n    return [headerRow].concat(_toConsumableArray(transList.filter(function (fReceipt) {\n      var _fReceipt$customer, _fReceipt$customer$na, _fReceipt$customer2, _fReceipt$customer2$p, _fReceipt$customer3, _fReceipt$customer3$a, _fReceipt$customer3$a2, _fReceipt$cart_hash, _fReceipt$method, _fReceipt$transNum, _getDate, _fReceipt$shipping, _fReceipt$shipping$fi, _fReceipt$shipping2, _fReceipt$shipping2$l, _fReceipt$billing, _fReceipt$billing$pho, _fReceipt$shipping3, _fReceipt$shipping3$a, _fReceipt$shipping4, _fReceipt$shipping4$c, _fReceipt$shipping5, _fReceipt$shipping5$p, _fReceipt$shipping6, _fReceipt$shipping6$s;\n      return !((search == null ? void 0 : search.length) > 0 && !((_fReceipt$customer = fReceipt.customer) != null && (_fReceipt$customer$na = _fReceipt$customer.name) != null && _fReceipt$customer$na.includes(search)) && !((_fReceipt$customer2 = fReceipt.customer) != null && (_fReceipt$customer2$p = _fReceipt$customer2.phone) != null && _fReceipt$customer2$p.includes(search)) && !((_fReceipt$customer3 = fReceipt.customer) != null && (_fReceipt$customer3$a = _fReceipt$customer3.address) != null && (_fReceipt$customer3$a2 = _fReceipt$customer3$a.label) != null && _fReceipt$customer3$a2.includes(search)) && !((_fReceipt$cart_hash = fReceipt.cart_hash) != null && _fReceipt$cart_hash.includes(search)) && !((_fReceipt$method = fReceipt.method) != null && _fReceipt$method.includes(search)) && !((_fReceipt$transNum = fReceipt.transNum) != null && _fReceipt$transNum.includes(search)) && !((_getDate = getDate(fReceipt)) != null && _getDate.includes(search)) && !((_fReceipt$shipping = fReceipt.shipping) != null && (_fReceipt$shipping$fi = _fReceipt$shipping.first_name) != null && _fReceipt$shipping$fi.includes(search)) && !((_fReceipt$shipping2 = fReceipt.shipping) != null && (_fReceipt$shipping2$l = _fReceipt$shipping2.last_name) != null && _fReceipt$shipping2$l.includes(search)) && !((_fReceipt$billing = fReceipt.billing) != null && (_fReceipt$billing$pho = _fReceipt$billing.phone) != null && _fReceipt$billing$pho.includes(search)) && !((_fReceipt$shipping3 = fReceipt.shipping) != null && (_fReceipt$shipping3$a = _fReceipt$shipping3.address_1) != null && _fReceipt$shipping3$a.includes(search)) && !((_fReceipt$shipping4 = fReceipt.shipping) != null && (_fReceipt$shipping4$c = _fReceipt$shipping4.city) != null && _fReceipt$shipping4$c.includes(search)) && !((_fReceipt$shipping5 = fReceipt.shipping) != null && (_fReceipt$shipping5$p = _fReceipt$shipping5.postcode) != null && _fReceipt$shipping5$p.includes(search)) && !((_fReceipt$shipping6 = fReceipt.shipping) != null && (_fReceipt$shipping6$s = _fReceipt$shipping6.state) != null && _fReceipt$shipping6$s.includes(search)));\n    }).map(function (receipt, idx) {\n      if (receipt.cart_hash) {\n        return {\n          rowId: idx,\n          cells: [{\n            type: \"text\",\n            text: receipt.shipping.first_name + \" \" + receipt.shipping.last_name,\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.billing.phone,\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.shipping.address_1 + receipt.shipping.city + receipt.shipping.postcode + receipt.shipping.state,\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: \"Online\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.shipping_lines[0].line.method_title,\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.transNum ? receipt.transNum : \"\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.total,\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: getDate(receipt),\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }]\n        };\n      } else {\n        var _receipt$customer, _receipt$customer2, _receipt$customer3, _receipt$customer4, _receipt$customer5, _receipt$customer5$ad, _receipt$customer6, _receipt$customer6$ad, _receipt$customer7, _receipt$customer8;\n        return {\n          rowId: idx,\n          cells: [{\n            type: \"text\",\n            text: (_receipt$customer = receipt.customer) != null && _receipt$customer.name ? (_receipt$customer2 = receipt.customer) == null ? void 0 : _receipt$customer2.name : \"\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: (_receipt$customer3 = receipt.customer) != null && _receipt$customer3.phone ? (_receipt$customer4 = receipt.customer) == null ? void 0 : _receipt$customer4.phone : \"\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: (_receipt$customer5 = receipt.customer) != null && (_receipt$customer5$ad = _receipt$customer5.address) != null && _receipt$customer5$ad.label ? (_receipt$customer6 = receipt.customer) == null ? void 0 : (_receipt$customer6$ad = _receipt$customer6.address) == null ? void 0 : _receipt$customer6$ad.label : (_receipt$customer7 = receipt.customer) != null && _receipt$customer7.address ? (_receipt$customer8 = receipt.customer) == null ? void 0 : _receipt$customer8.address : \"\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.cart_hash ? \"Online\" : \"POS\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.method === \"deliveryOrder\" ? \"Delivery\" : \"Pickup\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.transNum ? receipt.transNum : \"\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: receipt.total ? \"$\" + receipt.total : \"\",\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }, {\n            type: \"text\",\n            text: getDate(receipt),\n            nonEditable: true,\n            style: {\n              flex: 1\n            }\n          }]\n        };\n      }\n    })));\n  };\n\n  var _useState3 = useState(getRows()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    rows = _useState4[0],\n    setrows = _useState4[1];\n  useEffect(function () {\n    setrows(getRows());\n  }, [search, transList]);\n  var columns = getColumns();\n  var testRef = useRef(null);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        width: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\"\n      },\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter term to search by (name, phone, address, method, id, date)\",\n        onChangeText: function onChangeText(val) {\n          return setsearch(val);\n        },\n        value: search,\n        style: {\n          width: \"80%\",\n          height: 60,\n          padding: 10\n        }\n      }), _jsx(TouchableOpacity, {\n        style: {\n          backgroundColor: \"lightgrey\",\n          width: \"20%\",\n          height: 60,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        onPress: function onPress() {\n          if (testRef.current.state.selectedIds.length > 0) {\n            var data = [];\n            testRef.current.state.selectedIds.forEach(function (idx) {\n              var element = transList[idx];\n              var formatedData = ReceiptPrint(element, storeDetails);\n              data = data.concat(formatedData);\n            });\n            var qz = require(\"qz-tray\");\n            qz.websocket.connect().then(function () {\n              var config = qz.configs.create(storeDetails.comSelected);\n              return qz.print(config, data);\n            }).then(qz.websocket.disconnect).catch(function (err) {\n              console.error(err);\n            });\n          } else if (testRef.current.state.selectedRanges[0].rows[0]) {\n            var _data = [];\n            var element = transList[testRef.current.state.selectedRanges[0].rows[0].rowId];\n            var formatedData = ReceiptPrint(element, storeDetails);\n            _data = _data.concat(formatedData);\n            var _qz = require(\"qz-tray\");\n            _qz.websocket.connect().then(function () {\n              var config = _qz.configs.create(storeDetails.comSelected);\n              return _qz.print(config, _data);\n            }).then(_qz.websocket.disconnect).catch(function (err) {\n              console.error(err);\n            });\n          } else {\n            alert(\"Higlight one or multiple receipt then click to print them\");\n          }\n        },\n        children: _jsx(MaterialCommunityIcons, {\n          name: \"printer\",\n          size: 32,\n          color: \"white\"\n        })\n      })]\n    }), _jsx(ScrollView, {\n      contentContainerStyle: styles.contentContainer,\n      children: _jsx(ScrollView, {\n        contentContainerStyle: styles.contentContainer,\n        horizontal: true,\n        children: _jsx(ReactGrid, {\n          ref: testRef,\n          rows: rows,\n          columns: columns,\n          enableRowSelection: true\n        })\n      })\n    })]\n  });\n};\nexport default ViewTransactions;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\"\n  },\n  contentContainer: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useRef","useState","storeDetailState","tz","require","ReactGrid","MaterialCommunityIcons","ReceiptPrint","getDate","receipt","date_created","dateString","newDate","Date","targetTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","result","format","date","seconds","ViewTransactions","transList","todaysDetails","storeDetails","use","search","setsearch","getColumns","columnId","width","headerRow","rowId","cells","type","text","nonEditable","getRows","filter","fReceipt","length","customer","name","includes","phone","address","label","cart_hash","method","transNum","shipping","first_name","last_name","billing","address_1","city","postcode","state","map","idx","style","flex","shipping_lines","line","method_title","total","rows","setrows","columns","testRef","styles","container","flexDirection","alignItems","justifyContent","val","height","padding","backgroundColor","current","selectedIds","data","forEach","element","formatedData","concat","qz","websocket","connect","then","config","configs","create","comSelected","print","disconnect","catch","err","console","error","selectedRanges","alert","contentContainer","StyleSheet"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/ViewTransactions.tsx"],"sourcesContent":["import {\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  TouchableOpacity,\n  useWindowDimensions,\n  View,\n  TextInput,\n} from \"react-native\";\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport {\n  storeDetailState,\n  transListState,\n  woocommerceState,\n} from \"state/state\";\nimport { auth, db } from \"state/firebaseConfig\";\nconst tz = require(\"moment-timezone\");\nimport {\n  ReactGrid,\n  CellChange,\n  Row,\n  Column,\n  Id,\n  MenuOption,\n  SelectionMode,\n} from \"@silevis/reactgrid\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nimport \"@silevis/reactgrid/styles.css\";\nimport ReceiptPrint from \"components/ReceiptPrint\";\n\nconst getDate = (receipt) => {\n  if (receipt.date_created) {\n    const dateString = receipt.date_created;\n\n    const newDate = new Date(dateString + \"Z\");\n\n    const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    const result = tz(newDate)\n      .tz(targetTimezone, true)\n      .format(\"YYYY-MM-DD HH:mm a\");\n\n    return result;\n  } else if (receipt.date) {\n    const newDate = new Date(receipt.date.seconds * 1000);\n    const targetTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    const result = tz(newDate)\n      .tz(targetTimezone, true)\n      .format(\"YYYY-MM-DD HH:mm a\");\n\n    return result;\n  }\n};\n\nconst ViewTransactions = ({ transList, todaysDetails }) => {\n  const storeDetails = storeDetailState.use();\n  const [search, setsearch] = useState(null);\n\n  const getColumns = (): Column[] => [\n    { columnId: \"name\", width: 150 },\n    { columnId: \"phone\", width: 150 },\n    { columnId: \"address\", width: 300 },\n    { columnId: \"orderFrom\", width: 150 },\n    { columnId: \"method\", width: 150 },\n    { columnId: \"cart\", width: 150 },\n    { columnId: \"total\", width: 150 },\n    { columnId: \"date\", width: 300 },\n  ];\n\n  const headerRow: Row = {\n    rowId: \"header\",\n    cells: [\n      { type: \"header\", text: \"Name\", nonEditable: true },\n      { type: \"header\", text: \"Phone #\", nonEditable: true },\n      { type: \"header\", text: \"Address\", nonEditable: true },\n      { type: \"header\", text: \"Order From\", nonEditable: true },\n      { type: \"header\", text: \"Method\", nonEditable: true },\n      { type: \"header\", text: \"ID\", nonEditable: true },\n      { type: \"header\", text: \"Total\", nonEditable: true },\n      { type: \"header\", text: \"Date\", nonEditable: true },\n    ],\n  };\n\n  const getRows = () => [\n    headerRow,\n    ...transList\n      .filter(\n        (fReceipt) =>\n          !(\n            search?.length > 0 &&\n            !fReceipt.customer?.name?.includes(search) &&\n            !fReceipt.customer?.phone?.includes(search) &&\n            !fReceipt.customer?.address?.label?.includes(search) &&\n            !fReceipt.cart_hash?.includes(search) &&\n            !fReceipt.method?.includes(search) &&\n            !fReceipt.transNum?.includes(search) &&\n            !getDate(fReceipt)?.includes(search) &&\n            !fReceipt.shipping?.first_name?.includes(search) &&\n            !fReceipt.shipping?.last_name?.includes(search) &&\n            !fReceipt.billing?.phone?.includes(search) &&\n            !fReceipt.shipping?.address_1?.includes(search) &&\n            !fReceipt.shipping?.city?.includes(search) &&\n            !fReceipt.shipping?.postcode?.includes(search) &&\n            !fReceipt.shipping?.state?.includes(search)\n          )\n      )\n      .map((receipt, idx) => {\n        if (receipt.cart_hash) {\n          return {\n            rowId: idx,\n            cells: [\n              {\n                type: \"text\",\n                text:\n                  receipt.shipping.first_name +\n                  \" \" +\n                  receipt.shipping.last_name,\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.billing.phone,\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text:\n                  receipt.shipping.address_1 +\n                  receipt.shipping.city +\n                  receipt.shipping.postcode +\n                  receipt.shipping.state,\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: \"Online\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.shipping_lines[0].line.method_title,\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.transNum ? receipt.transNum : \"\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.total,\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: getDate(receipt),\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n            ],\n          };\n        } else {\n          return {\n            rowId: idx,\n            cells: [\n              {\n                type: \"text\",\n                text: receipt.customer?.name ? receipt.customer?.name : \"\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.customer?.phone ? receipt.customer?.phone : \"\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.customer?.address?.label\n                  ? receipt.customer?.address?.label\n                  : receipt.customer?.address\n                  ? receipt.customer?.address\n                  : \"\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.cart_hash ? \"Online\" : \"POS\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text:\n                  receipt.method === \"deliveryOrder\" ? \"Delivery\" : \"Pickup\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.transNum ? receipt.transNum : \"\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: receipt.total ? \"$\" + receipt.total : \"\",\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n              {\n                type: \"text\",\n                text: getDate(receipt),\n                nonEditable: true,\n                style: { flex: 1 },\n              },\n            ],\n          };\n        }\n      }),\n  ];\n\n  ///\n\n  const [rows, setrows] = useState(getRows());\n\n  useEffect(() => {\n    setrows(getRows());\n  }, [search, transList]);\n\n  const columns = getColumns();\n\n  const testRef = useRef(null);\n\n  return (\n    <View style={styles.container}>\n      {/* <Text style={{ textAlign: \"center\", margin: 25 }}>\n        List Of Transactions\n      </Text>\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Price: {todaysDetails.todaysReceiptValue}\n        </Text>\n        <Button\n          style={{ height: 40, alignItems: \"center\", justifyContent: \"center\" }}\n          title=\"Print Todays Receipts\"\n          onPress={PrintTodaysTotal}\n        />\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\n          Todays Total Receipts: {todaysDetails.todaysReceipts}\n        </Text>\n      </View> */}\n      <View\n        style={{\n          flexDirection: \"row\",\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <TextInput\n          placeholder=\"Enter term to search by (name, phone, address, method, id, date)\"\n          onChangeText={(val) => setsearch(val)}\n          value={search}\n          style={{ width: \"80%\", height: 60, padding: 10 }}\n        />\n        <TouchableOpacity\n          style={{\n            backgroundColor: \"lightgrey\",\n            width: \"20%\",\n            height: 60,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n          onPress={() => {\n            if (testRef.current.state.selectedIds.length > 0) {\n              let data = [];\n              testRef.current.state.selectedIds.forEach((idx) => {\n                const element = transList[idx];\n                const formatedData = ReceiptPrint(element, storeDetails);\n                data = data.concat(formatedData);\n              });\n              const qz = require(\"qz-tray\");\n              qz.websocket\n                .connect()\n                .then(function () {\n                  let config = qz.configs.create(storeDetails.comSelected);\n                  return qz.print(config, data);\n                })\n                .then(qz.websocket.disconnect)\n                .catch(function (err) {\n                  console.error(err);\n                });\n            } else if (testRef.current.state.selectedRanges[0].rows[0]) {\n              let data = [];\n              const element =\n                transList[\n                  testRef.current.state.selectedRanges[0].rows[0].rowId\n                ];\n\n              const formatedData = ReceiptPrint(element, storeDetails);\n              data = data.concat(formatedData);\n\n              const qz = require(\"qz-tray\");\n              qz.websocket\n                .connect()\n                .then(function () {\n                  let config = qz.configs.create(storeDetails.comSelected);\n                  return qz.print(config, data);\n                })\n                .then(qz.websocket.disconnect)\n                .catch(function (err) {\n                  console.error(err);\n                });\n            } else {\n              alert(\n                \"Higlight one or multiple receipt then click to print them\"\n              );\n            }\n          }}\n        >\n          <MaterialCommunityIcons name=\"printer\" size={32} color=\"white\" />\n        </TouchableOpacity>\n      </View>\n      <ScrollView contentContainerStyle={styles.contentContainer}>\n        <ScrollView contentContainerStyle={styles.contentContainer} horizontal>\n          <ReactGrid\n            ref={testRef}\n            rows={rows}\n            columns={columns}\n            enableRowSelection={true}\n          />\n        </ScrollView>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default ViewTransactions;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n  },\n  contentContainer: {\n    flex: 1,\n    // justifyContent: \"space-between\",\n    // paddingLeft: 50,\n    // paddingRight: 50,\n    // paddingBottom: 50,\n    // padding: 50,\n    height: \"100%\",\n    width: \"100%\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}