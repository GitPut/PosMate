{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React, { Component, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/Entypo\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction MultipleTimeSelectableOptionGroup(_ref) {\n  var style = _ref.style,\n    setopenDropdown = _ref.setopenDropdown,\n    openDropdown = _ref.openDropdown,\n    id = _ref.id,\n    label = _ref.label,\n    isRequired = _ref.isRequired,\n    options = _ref.options,\n    myObjProfile = _ref.myObjProfile,\n    setmyObjProfile = _ref.setmyObjProfile,\n    index = _ref.index,\n    e = _ref.e;\n  return _jsxs(View, {\n    style: [styles.container, style, openDropdown === id && {\n      zIndex: 1000\n    }],\n    children: [_jsxs(Text, {\n      style: styles.lbl,\n      children: [label, \" \", isRequired ? \"*\" : \"\"]\n    }), _jsxs(View, {\n      children: [_jsxs(TouchableOpacity, {\n        style: styles.dropdown,\n        onPress: function onPress() {\n          console.log(\"openDropdown\", openDropdown, id);\n          if (openDropdown === id) {\n            setopenDropdown(null);\n          } else {\n            setopenDropdown(id);\n          }\n        },\n        children: [_jsxs(Text, {\n          style: styles.placeholder,\n          children: [\"Select \", label]\n        }), _jsx(Icon, {\n          name: openDropdown === id ? \"chevron-small-up\" : \"chevron-small-down\",\n          style: styles.downIcon\n        })]\n      }), openDropdown === id && _jsx(ScrollView, {\n        style: {\n          width: 352,\n          position: \"absolute\",\n          backgroundColor: \"white\",\n          bottom: options.length > 3 ? -44 * 3 : -44 * options.length,\n          height: options.length > 3 ? 44 * 3 : 44 * options.length\n        },\n        children: options.map(function (option, index) {\n          return _jsxs(View, {\n            id: option.id,\n            style: {\n              width: \"100%\",\n              height: 44,\n              backgroundColor: \"white\",\n              padding: 10,\n              borderWidth: 1,\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              flexDirection: \"row\"\n            },\n            children: [_jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                var newOptions = _toConsumableArray(options);\n                newOptions[index].selectedTimes = newOptions[index].selectedTimes - 1;\n                setoptions(newOptions);\n              },\n              children: _jsx(Text, {\n                children: \"-\"\n              })\n            }), _jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                width: \"80%\"\n              },\n              children: [_jsx(Text, {\n                children: option.name\n              }), _jsx(TextInput, {\n                style: {\n                  width: 40,\n                  height: 30,\n                  borderWidth: 1,\n                  borderColor: \"black\",\n                  margin: 10\n                },\n                value: option.selectedTimes.toString(),\n                keyboardType: \"numeric\",\n                onChangeText: function onChangeText(text) {\n                  var newOptions = _toConsumableArray(options);\n                  newOptions[index].selectedTimes = text;\n                  setoptions(newOptions);\n                }\n              })]\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                var newOptions = _toConsumableArray(options);\n                newOptions[index].selectedTimes++;\n                setoptions(newOptions);\n              },\n              children: _jsx(Text, {\n                children: \"+\"\n              })\n            })]\n          }, index);\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  lbl: {\n    fontWeight: \"700\",\n    color: \"#3e3f41\"\n  },\n  dropdown: {\n    width: 352,\n    height: 44,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: \"#6987d3\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\"\n  },\n  placeholder: {\n    fontWeight: \"500\",\n    color: \"#7f838c\",\n    fontSize: 12,\n    margin: 10\n  },\n  downIcon: {\n    color: \"rgba(128,128,128,1)\",\n    fontSize: 30,\n    margin: 0,\n    marginTop: 2,\n    marginRight: 2\n  }\n});\nexport default MultipleTimeSelectableOptionGroup;","map":{"version":3,"names":["React","Component","useState","Icon","MultipleTimeSelectableOptionGroup","style","setopenDropdown","openDropdown","id","label","isRequired","options","myObjProfile","setmyObjProfile","index","e","styles","container","zIndex","lbl","dropdown","console","log","placeholder","downIcon","width","position","backgroundColor","bottom","length","height","map","option","padding","borderWidth","justifyContent","alignItems","flexDirection","newOptions","selectedTimes","setoptions","name","borderColor","margin","toString","text","StyleSheet","create","fontWeight","color","borderRadius","fontSize","marginTop","marginRight"],"sources":["/Users/peterputros/Desktop/PosMate/pages/non-authed/OnlineOrderPages/components/ProductBuilderModal/MultipleTimeSelectableOptionGroup.js"],"sourcesContent":["import React, { Component, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  TextInput,\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/Entypo\";\n\nfunction MultipleTimeSelectableOptionGroup({\n  style,\n  setopenDropdown,\n  openDropdown,\n  id,\n  label,\n  isRequired,\n  options,\n  myObjProfile,\n  setmyObjProfile,\n  index,\n  e,\n}) {\n  return (\n    <View\n      style={[styles.container, style, openDropdown === id && { zIndex: 1000 }]}\n    >\n      <Text style={styles.lbl}>\n        {label} {isRequired ? \"*\" : \"\"}\n      </Text>\n      <View>\n        <TouchableOpacity\n          style={styles.dropdown}\n          onPress={() => {\n            console.log(\"openDropdown\", openDropdown, id);\n            if (openDropdown === id) {\n              setopenDropdown(null);\n            } else {\n              setopenDropdown(id);\n            }\n          }}\n        >\n          <Text style={styles.placeholder}>Select {label}</Text>\n          <Icon\n            name={\n              openDropdown === id ? \"chevron-small-up\" : \"chevron-small-down\"\n            }\n            style={styles.downIcon}\n          ></Icon>\n        </TouchableOpacity>\n        {openDropdown === id && (\n          <ScrollView\n            style={{\n              width: 352,\n              position: \"absolute\",\n              backgroundColor: \"white\",\n              bottom: options.length > 3 ? -44 * 3 : -44 * options.length,\n              height: options.length > 3 ? 44 * 3 : 44 * options.length,\n            }}\n          >\n            {options.map((option, index) => (\n              <View\n                key={index}\n                id={option.id}\n                style={{\n                  width: \"100%\",\n                  height: 44,\n                  backgroundColor: \"white\",\n                  padding: 10,\n                  borderWidth: 1,\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => {\n                    let newOptions = [...options];\n                    newOptions[index].selectedTimes =\n                      newOptions[index].selectedTimes - 1;\n                    setoptions(newOptions);\n                  }}\n                >\n                  <Text>-</Text>\n                </TouchableOpacity>\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    width: \"80%\",\n                  }}\n                >\n                  <Text>{option.name}</Text>\n                  <TextInput\n                    style={{\n                      width: 40,\n                      height: 30,\n                      borderWidth: 1,\n                      borderColor: \"black\",\n                      margin: 10,\n                    }}\n                    value={option.selectedTimes.toString()}\n                    keyboardType=\"numeric\"\n                    onChangeText={(text) => {\n                      let newOptions = [...options];\n                      newOptions[index].selectedTimes = text;\n                      setoptions(newOptions);\n                    }}\n                  />\n                </View>\n                <TouchableOpacity\n                  onPress={() => {\n                    let newOptions = [...options];\n                    newOptions[index].selectedTimes++;\n                    setoptions(newOptions);\n                  }}\n                >\n                  <Text>+</Text>\n                </TouchableOpacity>\n              </View>\n            ))}\n          </ScrollView>\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  lbl: {\n    fontWeight: \"700\",\n    color: \"#3e3f41\",\n  },\n  dropdown: {\n    width: 352,\n    height: 44,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: \"#6987d3\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  placeholder: {\n    fontWeight: \"500\",\n    color: \"#7f838c\",\n    fontSize: 12,\n    margin: 10,\n  },\n  downIcon: {\n    color: \"rgba(128,128,128,1)\",\n    fontSize: 30,\n    margin: 0,\n    marginTop: 2,\n    marginRight: 2,\n  },\n});\n\nexport default MultipleTimeSelectableOptionGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}