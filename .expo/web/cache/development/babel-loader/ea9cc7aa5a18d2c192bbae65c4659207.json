{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { setCartState } from \"../../state/state\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { addCustomerDetailsToDb } from \"../../state/firebaseFunctions\";\nimport { auth, db } from \"../../state/firebaseConfig\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\nvar SaveCustomer = function SaveCustomer(_ref) {\n  var setSaveCustomerModal = _ref.setSaveCustomerModal,\n    setOngoingDelivery = _ref.setOngoingDelivery,\n    setNameForDelivery = _ref.setNameForDelivery,\n    setPhoneForDelivery = _ref.setPhoneForDelivery,\n    setAddressForDelivery = _ref.setAddressForDelivery,\n    setDeliveryChecked = _ref.setDeliveryChecked,\n    setsavedCustomerDetails = _ref.setsavedCustomerDetails;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setname = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    phone = _useState4[0],\n    setphone = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setemail = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    localAddress = _useState8[0],\n    setlocalAddress = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    viewCustomers = _useState10[0],\n    setviewCustomers = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    customers = _useState12[0],\n    setcustomers = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    customerSelected = _useState14[0],\n    setcustomerSelected = _useState14[1];\n  var addCustomerDetails = function addCustomerDetails() {\n    if (name && phone) {\n      addCustomerDetailsToDb({\n        name: name,\n        phone: phone,\n        address: localAddress == null ? void 0 : localAddress.label,\n        email: email\n      });\n      setSaveCustomerModal(false);\n    }\n  };\n  useEffect(function () {\n    var _auth$currentUser;\n    db.collection(\"users\").doc((_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid).collection(\"customers\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        setcustomers(function (prevState) {\n          return [].concat(_toConsumableArray(prevState), [_objectSpread(_objectSpread({}, doc.data()), {}, {\n            id: doc.id\n          })]);\n        });\n      });\n    });\n  }, []);\n  return _jsx(View, {\n    style: {\n      backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      width: \"100%\"\n    },\n    children: viewCustomers ? _jsxs(View, {\n      style: styles.modalContainer,\n      children: [_jsx(Text, {\n        style: {\n          textAlign: \"center\",\n          fontSize: 22,\n          fontWeight: \"600\",\n          color: \"rgba(74,74,74,1)\",\n          marginBottom: 20\n        },\n        children: \"Saved Customers\"\n      }), customerSelected ? _jsxs(View, {\n        children: [customerSelected.orders && JSON.parse(customerSelected.orders).map(function (prevOrder, prevOrderIndex) {\n          return _jsxs(View, {\n            children: [_jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                setCartState(prevOrder);\n                setOngoingDelivery(true);\n                setNameForDelivery(customerSelected.name);\n                setPhoneForDelivery(customerSelected.phone);\n                setAddressForDelivery(customerSelected.address);\n                setDeliveryChecked(false);\n              },\n              children: _jsx(Text, {\n                children: \"Select Prev Order\"\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                setCartState(prevOrder);\n                setOngoingDelivery(true);\n                setNameForDelivery(customerSelected.name);\n                setPhoneForDelivery(customerSelected.phone);\n                setAddressForDelivery(customerSelected.address);\n                setDeliveryChecked(true);\n              },\n              children: _jsx(Text, {\n                children: \"Select Prev Order For Delivery\"\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                var _auth$currentUser2;\n                var localOrders = JSON.parse(customerSelected.orders);\n                localOrders.splice(prevOrderIndex, 1);\n                db.collection(\"users\").doc((_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.uid).collection(\"customers\").doc(customerSelected.id).update({\n                  orders: JSON.stringify(localOrders)\n                });\n                setcustomerSelected(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    orders: JSON.stringify(localOrders)\n                  });\n                });\n              },\n              children: _jsx(Text, {\n                children: \"Delete Prev Order\"\n              })\n            })]\n          });\n        }), _jsx(Button, {\n          title: \"or Make new order\",\n          onPress: function onPress() {\n            setsavedCustomerDetails(customerSelected);\n            setOngoingDelivery(true);\n            setNameForDelivery(customerSelected.name);\n            setPhoneForDelivery(customerSelected.phone);\n            setAddressForDelivery(customerSelected.address);\n            setDeliveryChecked(true);\n            setSaveCustomerModal(false);\n          }\n        })]\n      }) : customers.map(function (customer) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setcustomerSelected(customer);\n          },\n          children: _jsxs(Text, {\n            children: [\"name: \", customer.name]\n          })\n        });\n      }), _jsx(Button, {\n        title: \"Back\",\n        onPress: function onPress() {\n          return setviewCustomers(false);\n        },\n        contentContainerStyle: styles.btn,\n        style: {\n          margin: 25\n        }\n      })]\n    }) : _jsxs(View, {\n      style: styles.modalContainer,\n      children: [_jsx(Text, {\n        style: {\n          textAlign: \"center\",\n          fontSize: 22,\n          fontWeight: \"600\",\n          color: \"rgba(74,74,74,1)\",\n          marginBottom: 20\n        },\n        children: \"Create Phone Order\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          backgroundColor: \"rgba(243,243,243,1)\",\n          borderRadius: 30,\n          height: 60,\n          marginBottom: 25\n        },\n        children: [_jsx(View, {\n          style: {\n            width: 60,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"rgba(218,216,216,1)\",\n            borderRadius: 30,\n            height: 60\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"account\",\n            size: 32,\n            color: \"rgba(71,106,229,1)\"\n          })\n        }), _jsx(TextInput, {\n          placeholder: \"Enter name\",\n          style: {\n            width: \"80%\"\n          },\n          inputStyle: {\n            backgroundColor: \"rgba(243,243,243,1)\"\n          },\n          value: name,\n          onChangeText: function onChangeText(val) {\n            return setname(val);\n          },\n          autoCorrect: false,\n          textContentType: \"name\"\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          backgroundColor: \"rgba(243,243,243,1)\",\n          borderRadius: 30,\n          height: 60,\n          marginBottom: 25\n        },\n        children: [_jsx(View, {\n          style: {\n            width: 60,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"rgba(218,216,216,1)\",\n            borderRadius: 30,\n            height: 60\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"phone\",\n            size: 32,\n            color: \"rgba(74,74,74,1)\"\n          })\n        }), _jsx(TextInput, {\n          placeholder: \"Enter Phone #\",\n          style: {\n            width: \"80%\"\n          },\n          inputStyle: {\n            backgroundColor: \"rgba(243,243,243,1)\"\n          },\n          value: phone,\n          onChangeText: function onChangeText(val) {\n            return setphone(val);\n          }\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          backgroundColor: \"rgba(243,243,243,1)\",\n          borderRadius: 30,\n          height: 60,\n          marginBottom: 25\n        },\n        children: [_jsx(View, {\n          style: {\n            width: 60,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"rgba(218,216,216,1)\",\n            borderRadius: 30,\n            height: 60\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"email\",\n            size: 32,\n            color: \"rgba(74,74,74,1)\"\n          })\n        }), _jsx(TextInput, {\n          placeholder: \"Enter Email Address\",\n          style: {\n            width: \"80%\"\n          },\n          inputStyle: {\n            backgroundColor: \"rgba(243,243,243,1)\"\n          },\n          value: email,\n          onChangeText: function onChangeText(val) {\n            return setemail(val);\n          }\n        })]\n      }), _jsx(GooglePlacesAutocomplete, {\n        apiOptions: {\n          region: \"CA\"\n        },\n        debounce: 800,\n        apiKey: GOOGLE_API_KEY\n        ,\n        selectProps: {\n          localAddress: localAddress,\n          onChange: setlocalAddress\n        },\n        renderSuggestions: function renderSuggestions(active, suggestions, onSelectSuggestion) {\n          return _jsx(\"div\", {\n            style: {\n              width: \"80%\"\n            },\n            children: suggestions.map(function (suggestion) {\n              return _jsx(\"div\", {\n                className: \"suggestion\",\n                onClick: function onClick(event) {\n                  onSelectSuggestion(suggestion, event);\n                },\n                children: suggestion.description\n              });\n            })\n          });\n        }\n      }), _jsx(Button, {\n        title: \"Save Customer\",\n        onPress: addCustomerDetails,\n        contentContainerStyle: styles.btn,\n        style: {\n          margin: 25\n        }\n      }), _jsx(Button, {\n        title: \"Cancel\"\n        ,\n        contentContainerStyle: styles.btn,\n        style: {\n          margin: 25\n        }\n      }), _jsx(Button, {\n        title: \"View Customers\",\n        onPress: function onPress() {\n          return setviewCustomers(true);\n        },\n        contentContainerStyle: styles.btn,\n        style: {\n          margin: 25\n        }\n      })]\n    })\n  });\n};\nexport default SaveCustomer;\nvar styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 25\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\"\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25\n  },\n  touchable: {\n    margin: 25,\n    width: 300\n  },\n  modalContainer: {\n    padding: 50,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 30,\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 0.57,\n    shadowRadius: 10,\n    width: \"35%\"\n  },\n  btn: {\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  input: {\n    marginTop: 25,\n    marginBottom: 25\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Button","TextInput","setCartState","MaterialCommunityIcons","GooglePlacesAutocomplete","addCustomerDetailsToDb","auth","db","GOOGLE_API_KEY","SaveCustomer","setSaveCustomerModal","setOngoingDelivery","setNameForDelivery","setPhoneForDelivery","setAddressForDelivery","setDeliveryChecked","setsavedCustomerDetails","name","setname","phone","setphone","email","setemail","localAddress","setlocalAddress","viewCustomers","setviewCustomers","customers","setcustomers","customerSelected","setcustomerSelected","addCustomerDetails","address","label","collection","doc","currentUser","uid","get","then","querySnapshot","forEach","prevState","data","id","backgroundColor","justifyContent","alignItems","height","width","styles","modalContainer","textAlign","fontSize","fontWeight","color","marginBottom","orders","JSON","parse","map","prevOrder","prevOrderIndex","localOrders","splice","update","stringify","prev","customer","btn","margin","flexDirection","borderRadius","val","region","onChange","active","suggestions","onSelectSuggestion","suggestion","event","description","StyleSheet","create","sizeRow","halfRow","toppingsContainer","flex","flexWrap","marginTop","touchable","padding","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","input"],"sources":["/Users/peterputros/Desktop/PosMate/screens/authed/SaveCustomer.tsx"],"sourcesContent":["import {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport { cartState, setCartState } from \"state/state\";\nimport { Switch } from \"react-native-gesture-handler\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { addCustomerDetailsToDb } from \"state/firebaseFunctions\";\nimport { auth, db } from \"state/firebaseConfig\";\n\nconst GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\n\nconst SaveCustomer = ({\n  setSaveCustomerModal,\n  setOngoingDelivery,\n  setNameForDelivery,\n  setPhoneForDelivery,\n  setAddressForDelivery,\n  setDeliveryChecked,\n  setsavedCustomerDetails,\n}) => {\n  const [name, setname] = useState(null);\n  const [phone, setphone] = useState(null);\n  const [email, setemail] = useState(null);\n  const [localAddress, setlocalAddress] = useState(null);\n  const [viewCustomers, setviewCustomers] = useState(false);\n  const [customers, setcustomers] = useState([]);\n  const [customerSelected, setcustomerSelected] = useState(null);\n\n  const addCustomerDetails = () => {\n    if (name && phone) {\n      addCustomerDetailsToDb({\n        name: name,\n        phone: phone,\n        address: localAddress?.label,\n        email: email,\n      });\n      setSaveCustomerModal(false);\n    }\n  };\n\n  useEffect(() => {\n    db.collection(\"users\")\n      .doc(auth.currentUser?.uid)\n      .collection(\"customers\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          //   console.log(doc.id, \" => \", doc.data());\n          setcustomers((prevState) => [\n            ...prevState,\n            { ...doc.data(), id: doc.id },\n          ]);\n        });\n      });\n  }, []);\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100%\",\n        width: \"100%\",\n      }}\n    >\n      {viewCustomers ? (\n        <View style={styles.modalContainer}>\n          <Text\n            style={{\n              textAlign: \"center\",\n              fontSize: 22,\n              fontWeight: \"600\",\n              color: \"rgba(74,74,74,1)\",\n              marginBottom: 20,\n            }}\n          >\n            Saved Customers\n          </Text>\n          {customerSelected ? (\n            <View>\n              {customerSelected.orders &&\n                JSON.parse(customerSelected.orders).map(\n                  (prevOrder, prevOrderIndex) => (\n                    <View>\n                      <TouchableOpacity\n                        onPress={() => {\n                          setCartState(prevOrder);\n                          setOngoingDelivery(true);\n                          setNameForDelivery(customerSelected.name);\n                          setPhoneForDelivery(customerSelected.phone);\n                          setAddressForDelivery(customerSelected.address);\n                          setDeliveryChecked(false);\n                        }}\n                      >\n                        <Text>Select Prev Order</Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        onPress={() => {\n                          setCartState(prevOrder);\n                          setOngoingDelivery(true);\n                          setNameForDelivery(customerSelected.name);\n                          setPhoneForDelivery(customerSelected.phone);\n                          setAddressForDelivery(customerSelected.address);\n                          setDeliveryChecked(true);\n                        }}\n                      >\n                        <Text>Select Prev Order For Delivery</Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        onPress={() => {\n                          const localOrders = JSON.parse(\n                            customerSelected.orders\n                          );\n                          localOrders.splice(prevOrderIndex, 1);\n                          db.collection(\"users\")\n                            .doc(auth.currentUser?.uid)\n                            .collection(\"customers\")\n                            .doc(customerSelected.id)\n                            .update({\n                              orders: JSON.stringify(localOrders),\n                            });\n                          setcustomerSelected((prev) => ({\n                            ...prev,\n                            orders: JSON.stringify(localOrders),\n                          }));\n                        }}\n                      >\n                        <Text>Delete Prev Order</Text>\n                      </TouchableOpacity>\n                    </View>\n                  )\n                )}\n              <Button\n                title=\"or Make new order\"\n                onPress={() => {\n                  setsavedCustomerDetails(customerSelected);\n                  setOngoingDelivery(true);\n                  setNameForDelivery(customerSelected.name);\n                  setPhoneForDelivery(customerSelected.phone);\n                  setAddressForDelivery(customerSelected.address);\n                  setDeliveryChecked(true);\n                  setSaveCustomerModal(false);\n                }}\n              />\n            </View>\n          ) : (\n            customers.map((customer) => {\n              return (\n                <TouchableOpacity onPress={() => setcustomerSelected(customer)}>\n                  <Text>name: {customer.name}</Text>\n                </TouchableOpacity>\n              );\n            })\n          )}\n          <Button\n            title=\"Back\"\n            onPress={() => setviewCustomers(false)}\n            contentContainerStyle={styles.btn}\n            style={{ margin: 25 }}\n          />\n        </View>\n      ) : (\n        <View style={styles.modalContainer}>\n          <Text\n            style={{\n              textAlign: \"center\",\n              fontSize: 22,\n              fontWeight: \"600\",\n              color: \"rgba(74,74,74,1)\",\n              marginBottom: 20,\n            }}\n          >\n            Create Phone Order\n          </Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              backgroundColor: \"rgba(243,243,243,1)\",\n              borderRadius: 30,\n              height: 60,\n              marginBottom: 25,\n            }}\n          >\n            <View\n              style={{\n                width: 60,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgba(218,216,216,1)\",\n                borderRadius: 30,\n                height: 60,\n              }}\n            >\n              <MaterialCommunityIcons\n                name=\"account\"\n                size={32}\n                color=\"rgba(71,106,229,1)\"\n              />\n            </View>\n            <TextInput\n              placeholder=\"Enter name\"\n              style={{ width: \"80%\" }}\n              inputStyle={{ backgroundColor: \"rgba(243,243,243,1)\" }}\n              value={name}\n              onChangeText={(val) => setname(val)}\n              autoCorrect={false}\n              textContentType={\"name\"}\n            />\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              backgroundColor: \"rgba(243,243,243,1)\",\n              borderRadius: 30,\n              height: 60,\n              marginBottom: 25,\n            }}\n          >\n            <View\n              style={{\n                width: 60,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgba(218,216,216,1)\",\n                borderRadius: 30,\n                height: 60,\n              }}\n            >\n              <MaterialCommunityIcons\n                name=\"phone\"\n                size={32}\n                color=\"rgba(74,74,74,1)\"\n              />\n            </View>\n            <TextInput\n              placeholder=\"Enter Phone #\"\n              style={{ width: \"80%\" }}\n              inputStyle={{ backgroundColor: \"rgba(243,243,243,1)\" }}\n              value={phone}\n              onChangeText={(val) => setphone(val)}\n            />\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              backgroundColor: \"rgba(243,243,243,1)\",\n              borderRadius: 30,\n              height: 60,\n              marginBottom: 25,\n            }}\n          >\n            <View\n              style={{\n                width: 60,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgba(218,216,216,1)\",\n                borderRadius: 30,\n                height: 60,\n              }}\n            >\n              <MaterialCommunityIcons\n                name=\"email\"\n                size={32}\n                color=\"rgba(74,74,74,1)\"\n              />\n            </View>\n            <TextInput\n              placeholder=\"Enter Email Address\"\n              style={{ width: \"80%\" }}\n              inputStyle={{ backgroundColor: \"rgba(243,243,243,1)\" }}\n              value={email}\n              onChangeText={(val) => setemail(val)}\n            />\n          </View>\n          <GooglePlacesAutocomplete\n            apiOptions={{\n              region: \"CA\",\n            }}\n            debounce={800}\n            apiKey={GOOGLE_API_KEY}\n            // onSelect={handleAddress}\n            selectProps={{\n              localAddress,\n              onChange: setlocalAddress,\n            }}\n            renderSuggestions={(active, suggestions, onSelectSuggestion) => (\n              <div style={{ width: \"80%\" }}>\n                {suggestions.map((suggestion) => (\n                  <div\n                    className=\"suggestion\"\n                    onClick={(event) => {\n                      onSelectSuggestion(suggestion, event);\n                    }}\n                  >\n                    {suggestion.description}\n                  </div>\n                ))}\n              </div>\n            )}\n          />\n          <Button\n            title=\"Save Customer\"\n            onPress={addCustomerDetails}\n            contentContainerStyle={styles.btn}\n            style={{ margin: 25 }}\n          />\n          <Button\n            title=\"Cancel\"\n            //   onPress={() => {}}\n            contentContainerStyle={styles.btn}\n            style={{ margin: 25 }}\n          />\n          <Button\n            title=\"View Customers\"\n            onPress={() => setviewCustomers(true)}\n            contentContainerStyle={styles.btn}\n            style={{ margin: 25 }}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default SaveCustomer;\n\nconst styles = StyleSheet.create({\n  sizeRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n  },\n  halfRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"50%\",\n  },\n  toppingsContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    marginBottom: 25,\n    marginTop: 25,\n  },\n  touchable: {\n    margin: 25,\n    width: 300,\n  },\n  modalContainer: {\n    padding: 50,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 30,\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3,\n    },\n    elevation: 30,\n    shadowOpacity: 0.57,\n    shadowRadius: 10,\n    width: \"35%\",\n  },\n  btn: {\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  input: {\n    marginTop: 25,\n    marginBottom: 25,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}