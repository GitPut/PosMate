{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Icon from \"@expo/vector-icons/Entypo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar windowDimensions = Dimensions.get(\"window\");\nfunction MultipleTimeSelectableOptionGroup(_ref) {\n  var style = _ref.style,\n    setopenDropdown = _ref.setopenDropdown,\n    openDropdown = _ref.openDropdown,\n    id = _ref.id,\n    label = _ref.label,\n    isRequired = _ref.isRequired,\n    myObjProfile = _ref.myObjProfile,\n    setmyObjProfile = _ref.setmyObjProfile,\n    index = _ref.index,\n    e = _ref.e;\n  var _useState = useState(myObjProfile),\n    _useState2 = _slicedToArray(_useState, 2),\n    localMyObjProfile = _useState2[0],\n    setlocalMyObjProfile = _useState2[1];\n  var options = e.optionsList;\n\n  useEffect(function () {\n    setlocalMyObjProfile(myObjProfile);\n  }, [myObjProfile]);\n  var onOptionChange = function onOptionChange(listIndex, selectedTimes) {\n    var newMyObjProfile = _objectSpread({}, localMyObjProfile);\n    newMyObjProfile.options[index].optionsList[listIndex].selectedTimes = selectedTimes;\n    setlocalMyObjProfile(newMyObjProfile);\n  };\n\n  var closeDropdownAndUpdate = function closeDropdownAndUpdate() {\n    setopenDropdown(null);\n    setmyObjProfile(localMyObjProfile);\n  };\n  return _jsxs(_Fragment, {\n    children: [openDropdown === id && _jsx(TouchableWithoutFeedback, {\n      onPress: closeDropdownAndUpdate,\n      children: _jsx(View, {\n        style: styles.fullScreenCover\n      })\n    }), _jsxs(View, {\n      style: [styles.container, style],\n      children: [_jsxs(Text, {\n        style: styles.label,\n        children: [label, \" \", isRequired ? \"*\" : \"\"]\n      }), _jsxs(TouchableOpacity, {\n        style: styles.dropdown,\n        onPress: function onPress() {\n          setopenDropdown(openDropdown === id ? null : id);\n        },\n        children: [_jsxs(Text, {\n          style: styles.placeholder,\n          children: [\"Select \", label]\n        }), _jsx(Icon, {\n          name: openDropdown === id ? \"chevron-small-up\" : \"chevron-small-down\",\n          style: styles.icon\n        })]\n      }), openDropdown === id && _jsx(ScrollView, {\n        style: styles.dropdownList,\n        children: options.map(function (option, listIndex) {\n          return _jsxs(View, {\n            style: styles.option,\n            children: [_jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return onOptionChange(listIndex, Math.max(option.selectedTimes - 1, 0));\n              },\n              children: _jsx(Icon, {\n                name: \"minus\",\n                size: 20,\n                color: \"#000\"\n              })\n            }), _jsx(Text, {\n              style: styles.optionText,\n              children: option.label\n            }), _jsx(TextInput, {\n              style: styles.input,\n              onChangeText: function onChangeText(value) {\n                return onOptionChange(listIndex, parseInt(value, 10) || 0);\n              },\n              value: String(option.selectedTimes),\n              keyboardType: \"numeric\"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return onOptionChange(listIndex, option.selectedTimes + 1);\n              },\n              children: _jsx(Icon, {\n                name: \"plus\",\n                size: 20,\n                color: \"#000\"\n              })\n            })]\n          }, option.id);\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  fullScreenCover: {\n    position: \"absolute\",\n    width: windowDimensions.width,\n    height: windowDimensions.height,\n    top: 0,\n    left: 0,\n    backgroundColor: \"transparent\"\n  },\n  container: {\n    marginBottom: 10\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  dropdown: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#dcdcdc\",\n    paddingHorizontal: 10,\n    paddingVertical: 5\n  },\n  placeholder: {\n    fontSize: 16\n  },\n  icon: {\n    fontSize: 24\n  },\n  dropdownList: {\n    position: \"absolute\",\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n    zIndex: 1000\n  },\n  option: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderBottomWidth: 1,\n    borderColor: \"#ccc\",\n    padding: 10\n  },\n  optionText: {\n    flex: 1,\n    marginHorizontal: 10\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    padding: 5,\n    width: 50,\n    textAlign: \"center\"\n  }\n});\n\nexport default MultipleTimeSelectableOptionGroup;","map":{"version":3,"names":["React","useState","useEffect","Icon","windowDimensions","Dimensions","get","MultipleTimeSelectableOptionGroup","style","setopenDropdown","openDropdown","id","label","isRequired","myObjProfile","setmyObjProfile","index","e","localMyObjProfile","setlocalMyObjProfile","options","optionsList","onOptionChange","listIndex","selectedTimes","newMyObjProfile","closeDropdownAndUpdate","styles","fullScreenCover","container","dropdown","placeholder","icon","dropdownList","map","option","Math","max","optionText","input","value","parseInt","String","StyleSheet","create","position","width","height","top","left","backgroundColor","marginBottom","fontSize","fontWeight","flexDirection","justifyContent","alignItems","borderWidth","borderColor","paddingHorizontal","paddingVertical","zIndex","borderBottomWidth","padding","flex","marginHorizontal","textAlign"],"sources":["/Users/peterputros/Desktop/PosMate/pages/non-authed/OnlineOrderPages/components/ProductBuilderModal/MultipleTimeSelectableOptionGroup.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  TextInput,\n  Dimensions,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/Entypo\";\n\nconst windowDimensions = Dimensions.get(\"window\");\n\nfunction MultipleTimeSelectableOptionGroup({\n  style,\n  setopenDropdown,\n  openDropdown,\n  id,\n  label,\n  isRequired,\n  myObjProfile,\n  setmyObjProfile,\n  index,\n  e,\n}) {\n  const [localMyObjProfile, setlocalMyObjProfile] = useState(myObjProfile);\n  const options = e.optionsList;\n\n  // Update local state when myObjProfile changes\n  useEffect(() => {\n    setlocalMyObjProfile(myObjProfile);\n  }, [myObjProfile]);\n\n  const onOptionChange = (listIndex, selectedTimes) => {\n    const newMyObjProfile = { ...localMyObjProfile };\n    newMyObjProfile.options[index].optionsList[listIndex].selectedTimes =\n      selectedTimes;\n    setlocalMyObjProfile(newMyObjProfile);\n  };\n\n  // Close dropdown and save the changes\n  const closeDropdownAndUpdate = () => {\n    setopenDropdown(null);\n    setmyObjProfile(localMyObjProfile);\n  };\n\n  return (\n    <>\n      {openDropdown === id && (\n        <TouchableWithoutFeedback onPress={closeDropdownAndUpdate}>\n          <View style={styles.fullScreenCover} />\n        </TouchableWithoutFeedback>\n      )}\n      <View style={[styles.container, style]}>\n        <Text style={styles.label}>\n          {label} {isRequired ? \"*\" : \"\"}\n        </Text>\n        <TouchableOpacity\n          style={styles.dropdown}\n          onPress={() => {\n            setopenDropdown(openDropdown === id ? null : id);\n          }}\n        >\n          <Text style={styles.placeholder}>Select {label}</Text>\n          <Icon\n            name={\n              openDropdown === id ? \"chevron-small-up\" : \"chevron-small-down\"\n            }\n            style={styles.icon}\n          />\n        </TouchableOpacity>\n        {openDropdown === id && (\n          <ScrollView style={styles.dropdownList}>\n            {options.map((option, listIndex) => (\n              <View key={option.id} style={styles.option}>\n                <TouchableOpacity\n                  onPress={() =>\n                    onOptionChange(\n                      listIndex,\n                      Math.max(option.selectedTimes - 1, 0)\n                    )\n                  }\n                >\n                  <Icon name=\"minus\" size={20} color=\"#000\" />\n                </TouchableOpacity>\n                <Text style={styles.optionText}>{option.label}</Text>\n                <TextInput\n                  style={styles.input}\n                  onChangeText={(value) =>\n                    onOptionChange(listIndex, parseInt(value, 10) || 0)\n                  }\n                  value={String(option.selectedTimes)}\n                  keyboardType=\"numeric\"\n                />\n                <TouchableOpacity\n                  onPress={() =>\n                    onOptionChange(listIndex, option.selectedTimes + 1)\n                  }\n                >\n                  <Icon name=\"plus\" size={20} color=\"#000\" />\n                </TouchableOpacity>\n              </View>\n            ))}\n          </ScrollView>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fullScreenCover: {\n    position: \"absolute\",\n    width: windowDimensions.width,\n    height: windowDimensions.height,\n    top: 0,\n    left: 0,\n    backgroundColor: \"transparent\",\n  },\n  container: {\n    marginBottom: 10,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n  },\n  dropdown: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#dcdcdc\",\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n  },\n  placeholder: {\n    fontSize: 16,\n  },\n  icon: {\n    fontSize: 24,\n  },\n  dropdownList: {\n    position: \"absolute\",\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n    zIndex: 1000,\n  },\n  option: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n\n    borderBottomWidth: 1,\n    borderColor: \"#ccc\",\n    padding: 10,\n  },\n  optionText: {\n    flex: 1,\n    marginHorizontal: 10,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    padding: 5,\n    width: 50,\n    textAlign: \"center\",\n  },\n  // Add other styles you may need here\n});\n\nexport default MultipleTimeSelectableOptionGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}