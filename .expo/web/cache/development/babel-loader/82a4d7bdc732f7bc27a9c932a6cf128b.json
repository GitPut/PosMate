{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport { Button, Text } from \"@react-native-material/core\";\nimport { transListState } from \"../../state/state\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ViewTransactions = function ViewTransactions() {\n  var res = {\n    transList: transListState.use()\n  };\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    transList = _useState2[0],\n    setTransList = _useState2[1];\n  var today = new Date();\n  var _useState3 = useState({\n      todaysReceiptValue: 0,\n      todaysReceipts: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    todaysDetails = _useState4[0],\n    setTodaysDetails = _useState4[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        textAlign: \"center\",\n        margin: 25\n      },\n      children: \"List Of Transactions\"\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        width: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [_jsxs(Text, {\n        style: {\n          textAlign: \"center\",\n          margin: 25\n        },\n        children: [\"Todays Total Price: \", todaysDetails.todaysReceiptValue]\n      }), _jsx(Button, {\n        style: {\n          height: 40,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        title: \"Print Todays Receipts\"\n      }), _jsxs(Text, {\n        style: {\n          textAlign: \"center\",\n          margin: 25\n        },\n        children: [\"Todays Total Receipts: \", todaysDetails.todaysReceipts]\n      })]\n    }), _jsx(View, {\n      style: styles.contentContainer\n    })]\n  });\n};\nexport default ViewTransactions;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    height: \"100%\"\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    paddingBottom: 50,\n    height: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","Button","Text","transListState","ViewTransactions","res","transList","use","setTransList","today","Date","todaysReceiptValue","todaysReceipts","todaysDetails","setTodaysDetails","styles","container","textAlign","margin","flexDirection","width","alignItems","justifyContent","height","contentContainer","StyleSheet","create","backgroundColor","flex","flexWrap","paddingLeft","paddingRight","paddingBottom"],"sources":["C:/Users/admin/OneDrive - George Brown College/Desktop/PosMate/screens/authed/ViewTransactions.tsx"],"sourcesContent":["import { ScrollView, StyleSheet, View } from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Text } from \"@react-native-material/core\";\r\nimport { transListState } from \"state/state\";\r\n\r\nconst ViewTransactions = () => {\r\n  const res = { transList: transListState.use() };\r\n  const [transList, setTransList] = useState([]);\r\n  const today = new Date();\r\n  const [todaysDetails, setTodaysDetails] = useState({\r\n    todaysReceiptValue: 0,\r\n    todaysReceipts: 0,\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   // GetTrans();\r\n  //   const reversed = res.transList.reverse();\r\n  //   setTransList(reversed);\r\n  //   const todaysReceiptValue = res.transList.reduce((accumulator, current) => {\r\n  //     const date = new Date(current.date);\r\n  //     if (date.toLocaleDateString() === today.toLocaleDateString()) {\r\n  //       return accumulator + parseFloat(current.total);\r\n  //     } else {\r\n  //       return accumulator;\r\n  //     }\r\n  //   }, 0);\r\n  //   const todaysReceipts = res.transList.reduce((accumulator, current) => {\r\n  //     const date = new Date(current.date);\r\n  //     if (date.toLocaleDateString() === today.toLocaleDateString()) {\r\n  //       return accumulator + 1;\r\n  //     } else {\r\n  //       return accumulator;\r\n  //     }\r\n  //   }, 0);\r\n  //   setTodaysDetails({\r\n  //     todaysReceiptValue: todaysReceiptValue.toFixed(2),\r\n  //     todaysReceipts: todaysReceipts,\r\n  //   });\r\n  // }, []);\r\n\r\n  // const PrintTodaysTotal = () => {\r\n  //   const qz = require(\"qz-tray\");\r\n\r\n  //   let data = [\r\n  //     \"\\x1B\" + \"\\x40\", // init\r\n  //     \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\r\n  //     \"Tomas Pizza\",\r\n  //     \"\\x0A\",\r\n  //     \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\r\n  //     \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\r\n  //     \"(519) 650-0409\" + \"\\x0A\", // text and line break\r\n  //     today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\r\n  //     \"\\x0A\",\r\n  //     \"\\x0A\",\r\n  //     \"\\x0A\",\r\n  //     \"\\x0A\",\r\n  //     \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\r\n  //     \"\\x0A\" + \"\\x0A\",\r\n  //     \"Number Of Receipts: \" + todaysDetails.todaysReceipts + \"\\x0A\" + \"\\x0A\",\r\n  //     \"Sub-Total: \" +\r\n  //       \"$\" +\r\n  //       (todaysDetails.todaysReceiptValue / 1.13).toFixed(2) +\r\n  //       \"\\x0A\" +\r\n  //       \"\\x0A\",\r\n  //     \"Tax: \" +\r\n  //       \"$\" +\r\n  //       ((todaysDetails.todaysReceiptValue / 1.13) * 0.13).toFixed(2) +\r\n  //       \"\\x0A\" +\r\n  //       \"\\x0A\",\r\n  //     \"Total Including (13% Tax): \" +\r\n  //       \"$\" +\r\n  //       todaysDetails.todaysReceiptValue +\r\n  //       \"\\x0A\" +\r\n  //       \"\\x0A\",\r\n  //     \"------------------------------------------\" + \"\\x0A\",\r\n  //     \"\\x0A\", // line break\r\n  //     \"\\x0A\", // line break\r\n  //     \"\\x0A\", // line break\r\n  //     \"\\x0A\", // line break\r\n  //     \"\\x0A\", // line break\r\n  //     \"\\x0A\", // line break\r\n  //     \"\\x1D\" + \"\\x56\" + \"\\x00\",\r\n  //     \"\\x1D\" + \"\\x56\" + \"\\x30\",\r\n  //   ];\r\n\r\n  //   qz.websocket\r\n  //     .connect()\r\n  //     .then(function () {\r\n  //       let config = qz.configs.create(\"jZebra\");\r\n  //       return qz.print(config, data);\r\n  //     })\r\n  //     .then(qz.websocket.disconnect)\r\n  //     .catch(function (err) {\r\n  //       console.error(err);\r\n  //     });\r\n  // };\r\n\r\n  // const Print = () => {\r\n  //   const qz = require(\"qz-tray\");\r\n\r\n  //   const todaysReceiptsList = transList.filter(\r\n  //     (i) =>\r\n  //       new Date(i.date).toLocaleDateString() === today.toLocaleDateString()\r\n  //   );\r\n\r\n  //   let data = [];\r\n\r\n  //   todaysReceiptsList.forEach((element) => {\r\n  //     let total = 0;\r\n  //     data.push(\r\n  //       \"\\x1B\" + \"\\x40\", // init\r\n  //       \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\r\n  //       \"Tomas Pizza\",\r\n  //       \"\\x0A\",\r\n  //       \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\r\n  //       \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\r\n  //       \"(519) 650-0409\" + \"\\x0A\", // text and line break\r\n  //       today.toLocaleDateString() + \" \" + today.toLocaleTimeString() + \"\\x0A\",\r\n  //       \"\\x0A\",\r\n  //       `Transaction # ${element.transNum}` + \"\\x0A\",\r\n  //       \"\\x0A\",\r\n  //       \"\\x0A\",\r\n  //       \"\\x0A\",\r\n  //       \"\\x1B\" + \"\\x61\" + \"\\x30\" // left align\r\n  //     );\r\n\r\n  //     element.cart?.map((cartItem) => {\r\n  //       total += cartItem.price;\r\n  //       data.push(`Name: ${cartItem.name}`);\r\n  //       data.push(\"\\x0A\");\r\n  //       data.push(`Quantity: ${cartItem.quantity}`);\r\n  //       data.push(\"\\x0A\");\r\n  //       data.push(`Price: $${cartItem.price}`);\r\n\r\n  //       if (cartItem.options) {\r\n  //         cartItem.options?.map((option) => {\r\n  //           data.push(option);\r\n  //           data.push(\"\\x0A\");\r\n  //         });\r\n  //       } else {\r\n  //         data.push(\"\\x0A\" + \"\\x0A\");\r\n  //       }\r\n  //     });\r\n\r\n  //     data.push(\r\n  //       \"\\x0A\",\r\n  //       \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\r\n  //       \"\\x0A\" + \"\\x0A\",\r\n  //       \"Payment Method: \" + element.method + \"\\x0A\" + \"\\x0A\",\r\n  //       \"Total Including (13% Tax): \" + \"$\" + element.total + \"\\x0A\" + \"\\x0A\",\r\n  //       \"------------------------------------------\" + \"\\x0A\",\r\n  //       \"\\x0A\", // line break\r\n  //       \"\\x0A\", // line break\r\n  //       \"\\x0A\", // line break\r\n  //       \"\\x0A\", // line break\r\n  //       \"\\x0A\", // line break\r\n  //       \"\\x0A\" // line break\r\n  //     );\r\n  //   });\r\n\r\n  //   data.push(\"\\x1D\" + \"\\x56\" + \"\\x00\", \"\\x1D\" + \"\\x56\" + \"\\x30\");\r\n\r\n  //   qz.websocket\r\n  //     .connect()\r\n  //     .then(function () {\r\n  //       let config = qz.configs.create(\"jZebra\");\r\n  //       return qz.print(config, data);\r\n  //     })\r\n  //     .then(qz.websocket.disconnect)\r\n  //     .catch(function (err) {\r\n  //       console.error(err);\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={{ textAlign: \"center\", margin: 25 }}>\r\n        List Of Transactions\r\n      </Text>\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          width: \"100%\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\r\n          Todays Total Price: {todaysDetails.todaysReceiptValue}\r\n        </Text>\r\n        <Button\r\n          style={{ height: 40, alignItems: \"center\", justifyContent: \"center\" }}\r\n          title=\"Print Todays Receipts\"\r\n          // onPress={PrintTodaysTotal}\r\n        />\r\n        <Text style={{ textAlign: \"center\", margin: 25 }}>\r\n          Todays Total Receipts: {todaysDetails.todaysReceipts}\r\n        </Text>\r\n      </View>\r\n      <View style={styles.contentContainer}>\r\n        {/* {transList &&\r\n          transList?.map((element, index) => {\r\n            const date = new Date(element.date);\r\n            // if (date.toLocaleDateString() === today.toLocaleDateString()) {\r\n            //   setTodaysDetails((prevState) => prevState + 1);\r\n            // }\r\n            return (\r\n              <View\r\n                style={{ backgroundColor: \"grey\", padding: 30, margin: 10 }}\r\n                key={index}\r\n              >\r\n                {element.cart?.map((cartItem, index) => (\r\n                  <View style={{ marginBottom: 20 }} key={index}>\r\n                    <Text>Name: {cartItem.name}</Text>\r\n                    <Text>Quantity: {cartItem.quantity}</Text>\r\n                    <Text>Price: {cartItem.price}</Text>\r\n                    <Text>Date: {date.toLocaleDateString()}</Text>\r\n                    {cartItem.options &&\r\n                      cartItem.options?.map((option) => <Text>{option}</Text>)}\r\n                  </View>\r\n                ))}\r\n                <Button\r\n                  title=\"Print\"\r\n                  onPress={() => {\r\n                    let total = 0;\r\n                    const qz = require(\"qz-tray\");\r\n                    const today = new Date();\r\n\r\n                    let data = [\r\n                      \"\\x1B\" + \"\\x40\", // init\r\n                      \"\\x1B\" + \"\\x61\" + \"\\x31\", // center align\r\n                      \"Tomas Pizza\",\r\n                      \"\\x0A\",\r\n                      \"#B4-200 Preston Pkwy, Cambridge\" + \"\\x0A\",\r\n                      \"www.dreamcitypizza.com\" + \"\\x0A\", // text and line break\r\n                      \"(519) 650-0409\" + \"\\x0A\", // text and line break\r\n                      today.toLocaleDateString() +\r\n                        \" \" +\r\n                        today.toLocaleTimeString() +\r\n                        \"\\x0A\",\r\n                      \"\\x0A\",\r\n                      `Transaction # ${element.transNum}` + \"\\x0A\",\r\n                      \"\\x0A\",\r\n                      \"\\x0A\",\r\n                      \"\\x0A\",\r\n                      \"\\x1B\" + \"\\x61\" + \"\\x30\", // left align\r\n                    ];\r\n\r\n                    element.cart?.map((cartItem) => {\r\n                      total += parseFloat(cartItem.price);\r\n                      data.push(`Name: ${cartItem.name}`);\r\n                      data.push(\"\\x0A\");\r\n                      data.push(`Quantity: ${cartItem.quantity}`);\r\n                      data.push(\"\\x0A\");\r\n                      data.push(`Price: $${cartItem.price}`);\r\n\r\n                      if (cartItem.options) {\r\n                        data.push(\"\\x0A\");\r\n                        cartItem.options?.map((option) => {\r\n                          data.push(option);\r\n                          data.push(\"\\x0A\");\r\n                        });\r\n                      }\r\n                      data.push(\"\\x0A\" + \"\\x0A\");\r\n                    });\r\n\r\n                    total = total * 1.13;\r\n                    total = total.toFixed(2);\r\n\r\n                    //push ending\r\n                    data.push(\r\n                      \"\\x0A\",\r\n                      \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\" + \"\\x0A\",\r\n                      \"\\x0A\" + \"\\x0A\",\r\n                      \"Total Including (13% Tax): \" +\r\n                        \"$\" +\r\n                        total +\r\n                        \"\\x0A\" +\r\n                        \"\\x0A\",\r\n                      \"------------------------------------------\" + \"\\x0A\",\r\n                      \"\\x0A\", // line break\r\n                      \"\\x0A\", // line break\r\n                      \"\\x0A\", // line break\r\n                      \"\\x0A\", // line break\r\n                      \"\\x0A\", // line break\r\n                      \"\\x0A\", // line break\r\n                      //\"\\x1D\" + \"\\x56\" + \"\\x00\",\r\n                      \"\\x1D\" + \"\\x56\" + \"\\x30\"\r\n                    );\r\n\r\n                    qz.websocket\r\n                      .connect()\r\n                      .then(function () {\r\n                        let config = qz.configs.create(\"jZebra\");\r\n                        return qz.print(config, data);\r\n                      })\r\n                      .then(qz.websocket.disconnect)\r\n                      .catch(function (err) {\r\n                        console.error(err);\r\n                      });\r\n                  }}\r\n                />\r\n              </View>\r\n            );\r\n          })} */}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ViewTransactions;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"white\",\r\n    flex: 1,\r\n    height: \"100%\",\r\n  },\r\n  contentContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    paddingLeft: 50,\r\n    paddingRight: 50,\r\n    paddingBottom: 50,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"],"mappings":";;;AACA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,QAAQ,6BAA6B;AAC1D,SAASC,cAAc;AAAsB;AAAA;AAE7C,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;EAC7B,IAAMC,GAAG,GAAG;IAAEC,SAAS,EAAEH,cAAc,CAACI,GAAG;EAAG,CAAC;EAC/C,gBAAkCP,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvCM,SAAS;IAAEE,YAAY;EAC9B,IAAMC,KAAK,GAAG,IAAIC,IAAI,EAAE;EACxB,iBAA0CV,QAAQ,CAAC;MACjDW,kBAAkB,EAAE,CAAC;MACrBC,cAAc,EAAE;IAClB,CAAC,CAAC;IAAA;IAHKC,aAAa;IAAEC,gBAAgB;;EAqKtC,OACE,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAG,CAAE;MAAA;IAAA,EAE1C,EACP,MAAC,IAAI;MACH,KAAK,EAAE;QACLC,aAAa,EAAE,KAAK;QACpBC,KAAK,EAAE,MAAM;QACbC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE;MAClB,CAAE;MAAA,WAEF,MAAC,IAAI;QAAC,KAAK,EAAE;UAAEL,SAAS,EAAE,QAAQ;UAAEC,MAAM,EAAE;QAAG,CAAE;QAAA,mCAC1BL,aAAa,CAACF,kBAAkB;MAAA,EAChD,EACP,KAAC,MAAM;QACL,KAAK,EAAE;UAAEY,MAAM,EAAE,EAAE;UAAEF,UAAU,EAAE,QAAQ;UAAEC,cAAc,EAAE;QAAS,CAAE;QACtE,KAAK,EAAC;MAAuB,EAE7B,EACF,MAAC,IAAI;QAAC,KAAK,EAAE;UAAEL,SAAS,EAAE,QAAQ;UAAEC,MAAM,EAAE;QAAG,CAAE;QAAA,sCACvBL,aAAa,CAACD,cAAc;MAAA,EAC/C;IAAA,EACF,EACP,KAAC,IAAI;MAAC,KAAK,EAAEG,MAAM,CAACS;IAAiB,EA0G9B;EAAA,EACF;AAEX,CAAC;AAED,eAAepB,gBAAgB;AAE/B,IAAMW,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,eAAe,EAAE,OAAO;IACxBC,IAAI,EAAE,CAAC;IACPL,MAAM,EAAE;EACV,CAAC;EACDC,gBAAgB,EAAE;IAChBI,IAAI,EAAE,CAAC;IACPT,aAAa,EAAE,KAAK;IACpBU,QAAQ,EAAE,MAAM;IAChBP,cAAc,EAAE,eAAe;IAC/BQ,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE,EAAE;IACjBT,MAAM,EAAE,MAAM;IACdH,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}