{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FieldInputWithLabel from \"./FieldInputWithLabel\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { GooglePlacesStyles } from \"../../../../../components/functional/GooglePlacesStyles\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\nfunction DeliveryDetails(_ref) {\n  var storeDetails = _ref.storeDetails,\n    setorderDetails = _ref.setorderDetails,\n    orderDetails = _ref.orderDetails,\n    setpage = _ref.setpage,\n    width = _ref.width;\n  var _useState = useState(orderDetails.customer.name),\n    _useState2 = _slicedToArray(_useState, 2),\n    localName = _useState2[0],\n    setlocalName = _useState2[1];\n  var _useState3 = useState(orderDetails.customer.phoneNumber),\n    _useState4 = _slicedToArray(_useState3, 2),\n    localPhoneNumber = _useState4[0],\n    setlocalPhoneNumber = _useState4[1];\n  var _useState5 = useState(orderDetails.address),\n    _useState6 = _slicedToArray(_useState5, 2),\n    localAddress = _useState6[0],\n    setlocalAddress = _useState6[1];\n  var _useState7 = useState(orderDetails.customer.buzzCode),\n    _useState8 = _slicedToArray(_useState7, 2),\n    localBuzzCode = _useState8[0],\n    setlocalBuzzCode = _useState8[1];\n  var _useState9 = useState(orderDetails.customer.unitNumber),\n    _useState10 = _slicedToArray(_useState9, 2),\n    localUnitNumber = _useState10[0],\n    setlocalUnitNumber = _useState10[1];\n  function calculateDistance(lat1, lon1, lat2, lon2) {\n    var R = 6371;\n    var dLat = (lat2 - lat1) * (Math.PI / 180);\n    var dLon = (lon2 - lon1) * (Math.PI / 180);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * (Math.PI / 180)) * Math.cos(lat2 * (Math.PI / 180)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var distance = R * c;\n    return distance;\n  }\n  function getLatLng(_x) {\n    return _getLatLng.apply(this, arguments);\n  }\n  function _getLatLng() {\n    _getLatLng = _asyncToGenerator(function* (placeId) {\n      var response = yield fetch(\"https://us-central1-posmate-5fc0a.cloudfunctions.net/getLatLng\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          placeId: placeId\n        })\n      });\n      try {\n        var responseData = yield response.json();\n        if (response.ok && responseData.success) {\n          console.log(\"Success!\");\n          return responseData.data;\n        } else {\n          console.error(responseData.message);\n        }\n      } catch (jsonError) {\n        console.error(\"Error parsing JSON response:\", jsonError);\n      }\n    });\n    return _getLatLng.apply(this, arguments);\n  }\n  function calculateDistanceBetweenAddresses(_x2, _x3) {\n    return _calculateDistanceBetweenAddresses.apply(this, arguments);\n  }\n  function _calculateDistanceBetweenAddresses() {\n    _calculateDistanceBetweenAddresses = _asyncToGenerator(function* (address1, address2) {\n      try {\n        var _yield$getLatLng = yield getLatLng(address1),\n          lat1 = _yield$getLatLng.lat,\n          lon1 = _yield$getLatLng.lng;\n        var _yield$getLatLng2 = yield getLatLng(address2),\n          lat2 = _yield$getLatLng2.lat,\n          lon2 = _yield$getLatLng2.lng;\n        var distance = calculateDistance(lat1, lon1, lat2, lon2);\n        return distance;\n      } catch (error) {\n        console.error(\"Error calculating distance:\", error);\n        return null;\n      }\n    });\n    return _calculateDistanceBetweenAddresses.apply(this, arguments);\n  }\n  var styles = StyleSheet.create({\n    container: {\n      width: width,\n      height: 390\n    },\n    fieldsGroup: {\n      width: width,\n      height: 325,\n      justifyContent: \"space-between\"\n    },\n    nameField: {\n      height: 70,\n      width: width\n    },\n    addressField: {\n      height: 70,\n      width: width\n    },\n    buzzCodeAndPhoneRow: {\n      width: width,\n      height: 70,\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n    buzzCodeField: {\n      height: 70,\n      width: width === 380 ? 175 : \"48%\"\n    },\n    phoneNumberField: {\n      height: 70,\n      width: width === 380 ? 175 : \"48%\"\n    },\n    continueBtn: {\n      width: 219,\n      height: 60,\n      backgroundColor: \"rgba(238,125,67,1)\",\n      borderRadius: 60,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      shadowColor: \"rgba(0,0,0,1)\",\n      shadowOffset: {\n        width: 3,\n        height: 3\n      },\n      elevation: 30,\n      shadowOpacity: 0.2,\n      shadowRadius: 10,\n      marginTop: 10\n    },\n    continueBtnTxt: {\n      color: \"rgba(255,255,255,1)\",\n      fontSize: 18,\n      fontWeight: \"700\"\n    }\n  });\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.fieldsGroup,\n      children: [_jsx(FieldInputWithLabel, {\n        txtInput: \"Name\",\n        label: \"Name*\",\n        style: styles.nameField,\n        value: localName,\n        onChangeText: function onChangeText(text) {\n          return setlocalName(text);\n        },\n        textContentType: \"name\"\n      }), _jsx(FieldInputWithLabel, {\n        txtInput: \"(123) 456-7890\",\n        label: \"Phone Number*\",\n        style: styles.nameField,\n        value: localPhoneNumber,\n        onChangeText: function onChangeText(text) {\n          return setlocalPhoneNumber(text);\n        },\n        textContentType: \"telephoneNumber\"\n      }), _jsx(FieldInputWithLabel, {\n        txtInput: \"Delivery Address\",\n        label: \"Delivery Address*\",\n        style: styles.addressField,\n        customInput: function customInput() {\n          return _jsx(GooglePlacesAutocomplete, {\n            apiOptions: {\n              region: \"CA\"\n            },\n            debounce: 800,\n            apiKey: GOOGLE_API_KEY,\n            selectProps: {\n              address: localAddress,\n              onChange: function onChange(address) {\n                return setlocalAddress(address);\n              },\n              defaultValue: localAddress,\n              menuPortalTarget: document.body,\n              styles: GooglePlacesStyles\n            },\n            renderSuggestions: function renderSuggestions(active, suggestions, onSelectSuggestion) {\n              return _jsx(\"div\", {\n                children: suggestions.map(function (suggestion) {\n                  return _jsx(\"div\", {\n                    className: \"suggestion\",\n                    onClick: function onClick(event) {\n                      onSelectSuggestion(suggestion, event);\n                    },\n                    children: suggestion.description\n                  });\n                })\n              });\n            }\n          });\n        }\n      }), _jsxs(View, {\n        style: styles.buzzCodeAndPhoneRow,\n        children: [_jsx(FieldInputWithLabel, {\n          txtInput: \"#\",\n          label: \"Buzz Code\",\n          style: styles.buzzCodeField,\n          value: localBuzzCode,\n          onChangeText: function onChangeText(text) {\n            return setlocalBuzzCode(text);\n          },\n          textContentType: \"none\"\n        }), _jsx(FieldInputWithLabel, {\n          txtInput: \"#\",\n          label: \"Unit Number\",\n          style: styles.phoneNumberField,\n          value: localUnitNumber,\n          onChangeText: function onChangeText(text) {\n            return setlocalUnitNumber(text);\n          },\n          textContentType: \"none\"\n        })]\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.continueBtn,\n      onPress: function onPress() {\n        if (localName === \"\" || localPhoneNumber === \"\" || localAddress === \"\") return alert(\"Please fill in all fields\");\n        calculateDistanceBetweenAddresses(storeDetails.address.value.reference, localAddress.value.reference).then(function (distance) {\n          if (distance !== null) {\n            console.log(\"Distance between addresses: \" + distance.toFixed(2) + \" km\");\n            if (storeDetails.deliveryRange) {\n              if (distance > parseFloat(storeDetails.deliveryRange)) {\n                alert(\"The delivery address is out of range\");\n              } else {\n                setorderDetails(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    address: localAddress,\n                    customer: _objectSpread(_objectSpread({}, prev.customer), {}, {\n                      name: localName,\n                      phoneNumber: localPhoneNumber,\n                      buzzCode: localBuzzCode,\n                      unitNumber: localUnitNumber\n                    })\n                  });\n                });\n                setpage(4);\n              }\n            } else {\n              setorderDetails(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  address: localAddress,\n                  customer: _objectSpread(_objectSpread({}, prev.customer), {}, {\n                    name: localName,\n                    phoneNumber: localPhoneNumber,\n                    buzzCode: localBuzzCode,\n                    unitNumber: localUnitNumber\n                  })\n                });\n              });\n              setpage(4);\n            }\n          } else {\n            alert(\"Distance calculation between the store and your location failed. Please refresh page.\");\n          }\n        });\n      },\n      children: _jsx(Text, {\n        style: styles.continueBtnTxt,\n        children: \"CONTINUE\"\n      })\n    })]\n  });\n}\nexport default DeliveryDetails;","map":{"version":3,"names":["React","useState","StyleSheet","View","TouchableOpacity","Text","FieldInputWithLabel","GooglePlacesAutocomplete","GooglePlacesStyles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GOOGLE_API_KEY","DeliveryDetails","_ref","storeDetails","setorderDetails","orderDetails","setpage","width","_useState","customer","name","_useState2","_slicedToArray","localName","setlocalName","_useState3","phoneNumber","_useState4","localPhoneNumber","setlocalPhoneNumber","_useState5","address","_useState6","localAddress","setlocalAddress","_useState7","buzzCode","_useState8","localBuzzCode","setlocalBuzzCode","_useState9","unitNumber","_useState10","localUnitNumber","setlocalUnitNumber","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","distance","getLatLng","_x","_getLatLng","apply","arguments","_asyncToGenerator","placeId","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","success","console","log","data","error","message","jsonError","calculateDistanceBetweenAddresses","_x2","_x3","_calculateDistanceBetweenAddresses","address1","address2","_yield$getLatLng","lat","lng","_yield$getLatLng2","styles","create","container","height","fieldsGroup","justifyContent","nameField","addressField","buzzCodeAndPhoneRow","flexDirection","buzzCodeField","phoneNumberField","continueBtn","backgroundColor","borderRadius","alignItems","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","marginTop","continueBtnTxt","color","fontSize","fontWeight","children","style","txtInput","label","value","onChangeText","text","textContentType","customInput","apiOptions","region","debounce","apiKey","selectProps","onChange","defaultValue","menuPortalTarget","document","renderSuggestions","active","suggestions","onSelectSuggestion","map","suggestion","className","onClick","event","description","onPress","alert","reference","then","toFixed","deliveryRange","parseFloat","prev","_objectSpread"],"sources":["/Users/peterputros/Desktop/PosMate/pages/non-authed/OnlineOrderPages/components/home/DeliveryDetails.tsx"],"sourcesContent":["import React, { Component, useState } from \"react\";\nimport { StyleSheet, View, TouchableOpacity, Text } from \"react-native\";\nimport FieldInputWithLabel from \"./FieldInputWithLabel\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { GooglePlacesStyles } from \"components/functional/GooglePlacesStyles\";\nconst GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\n\nfunction DeliveryDetails({\n  storeDetails,\n  setorderDetails,\n  orderDetails,\n  setpage,\n  width,\n}) {\n  const [localName, setlocalName] = useState(orderDetails.customer.name);\n  const [localPhoneNumber, setlocalPhoneNumber] = useState(\n    orderDetails.customer.phoneNumber\n  );\n  const [localAddress, setlocalAddress] = useState(orderDetails.address);\n  const [localBuzzCode, setlocalBuzzCode] = useState(\n    orderDetails.customer.buzzCode\n  );\n  const [localUnitNumber, setlocalUnitNumber] = useState(\n    orderDetails.customer.unitNumber\n  );\n\n  // Function to calculate distance between two points using Haversine formula\n  function calculateDistance(lat1, lon1, lat2, lon2) {\n    const R = 6371; // Radius of the Earth in km\n    const dLat = (lat2 - lat1) * (Math.PI / 180); // Convert degrees to radians\n    const dLon = (lon2 - lon1) * (Math.PI / 180);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(lat1 * (Math.PI / 180)) *\n        Math.cos(lat2 * (Math.PI / 180)) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in km\n    return distance;\n  }\n\n  // Function to get the latitude and longitude of an address using the Google Maps Geocoding API\n  async function getLatLng(placeId) {\n    const response = await fetch(\n      \"https://us-central1-posmate-5fc0a.cloudfunctions.net/getLatLng\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          placeId: placeId,\n        }),\n      }\n    );\n\n    try {\n      const responseData = await response.json();\n\n      if (response.ok && responseData.success) {\n        console.log(\"Success!\");\n        return responseData.data;\n      } else {\n        console.error(responseData.message);\n      }\n    } catch (jsonError) {\n      console.error(\"Error parsing JSON response:\", jsonError);\n    }\n  }\n\n  // Function to calculate distance between two addresses using Google Places API\n  async function calculateDistanceBetweenAddresses(address1, address2) {\n    try {\n      const { lat: lat1, lng: lon1 } = await getLatLng(address1);\n      const { lat: lat2, lng: lon2 } = await getLatLng(address2);\n      const distance = calculateDistance(lat1, lon1, lat2, lon2);\n      return distance;\n    } catch (error) {\n      console.error(\"Error calculating distance:\", error);\n      return null;\n    }\n  }\n\n  //////////////////////////\n\n  const styles = StyleSheet.create({\n    container: {\n      width: width,\n      height: 390,\n    },\n    fieldsGroup: {\n      width: width,\n      height: 325,\n      justifyContent: \"space-between\",\n    },\n    nameField: {\n      height: 70,\n      width: width,\n    },\n    addressField: {\n      height: 70,\n      width: width,\n    },\n    buzzCodeAndPhoneRow: {\n      width: width,\n      height: 70,\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n    },\n    buzzCodeField: {\n      height: 70,\n      width: width === 380 ? 175 : \"48%\",\n    },\n    phoneNumberField: {\n      height: 70,\n      width: width === 380 ? 175 : \"48%\",\n    },\n    continueBtn: {\n      width: 219,\n      height: 60,\n      backgroundColor: \"rgba(238,125,67,1)\",\n      borderRadius: 60,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      shadowColor: \"rgba(0,0,0,1)\",\n      shadowOffset: {\n        width: 3,\n        height: 3,\n      },\n      elevation: 30,\n      shadowOpacity: 0.2,\n      shadowRadius: 10,\n      marginTop: 10,\n    },\n    continueBtnTxt: {\n      color: \"rgba(255,255,255,1)\",\n      fontSize: 18,\n      fontWeight: \"700\",\n    },\n  });\n\n  return (\n    <>\n      <View style={styles.fieldsGroup}>\n        <FieldInputWithLabel\n          txtInput=\"Name\"\n          label=\"Name*\"\n          style={styles.nameField}\n          value={localName}\n          onChangeText={(text) => setlocalName(text)}\n          textContentType=\"name\"\n        />\n        <FieldInputWithLabel\n          txtInput=\"(123) 456-7890\"\n          label=\"Phone Number*\"\n          style={styles.nameField}\n          value={localPhoneNumber}\n          onChangeText={(text) => setlocalPhoneNumber(text)}\n          textContentType=\"telephoneNumber\"\n        />\n        <FieldInputWithLabel\n          txtInput=\"Delivery Address\"\n          label=\"Delivery Address*\"\n          style={styles.addressField}\n          customInput={() => (\n            <GooglePlacesAutocomplete\n              apiOptions={{\n                region: \"CA\",\n              }}\n              debounce={800}\n              apiKey={GOOGLE_API_KEY}\n              // onSelect={handleAddress}\n              selectProps={{\n                address: localAddress,\n                onChange: (address) => setlocalAddress(address),\n                defaultValue: localAddress,\n                menuPortalTarget: document.body,\n                styles: GooglePlacesStyles,\n              }}\n              renderSuggestions={(active, suggestions, onSelectSuggestion) => (\n                <div>\n                  {suggestions.map((suggestion) => (\n                    <div\n                      className=\"suggestion\"\n                      onClick={(event) => {\n                        onSelectSuggestion(suggestion, event);\n                      }}\n                    >\n                      {suggestion.description}\n                    </div>\n                  ))}\n                </div>\n              )}\n            />\n          )}\n        />\n        <View style={styles.buzzCodeAndPhoneRow}>\n          <FieldInputWithLabel\n            txtInput=\"#\"\n            label=\"Buzz Code\"\n            style={styles.buzzCodeField}\n            value={localBuzzCode}\n            onChangeText={(text) => setlocalBuzzCode(text)}\n            textContentType=\"none\"\n          />\n          <FieldInputWithLabel\n            txtInput=\"#\"\n            label=\"Unit Number\"\n            style={styles.phoneNumberField}\n            value={localUnitNumber}\n            onChangeText={(text) => setlocalUnitNumber(text)}\n            textContentType=\"none\"\n          />\n        </View>\n      </View>\n      <TouchableOpacity\n        style={styles.continueBtn}\n        onPress={() => {\n          if (\n            localName === \"\" ||\n            localPhoneNumber === \"\" ||\n            localAddress === \"\"\n          )\n            return alert(\"Please fill in all fields\");\n          calculateDistanceBetweenAddresses(\n            storeDetails.address.value.reference,\n            localAddress.value.reference\n          ).then((distance) => {\n            if (distance !== null) {\n              console.log(\n                `Distance between addresses: ${distance.toFixed(2)} km`\n              );\n              if (storeDetails.deliveryRange) {\n                if (distance > parseFloat(storeDetails.deliveryRange)) {\n                  alert(\"The delivery address is out of range\");\n                } else {\n                  setorderDetails((prev) => ({\n                    ...prev,\n                    address: localAddress,\n                    customer: {\n                      ...prev.customer,\n                      name: localName,\n                      phoneNumber: localPhoneNumber,\n                      buzzCode: localBuzzCode,\n                      unitNumber: localUnitNumber,\n                    },\n                  }));\n                  setpage(4);\n                }\n              } else {\n                setorderDetails((prev) => ({\n                  ...prev,\n                  address: localAddress,\n                  customer: {\n                    ...prev.customer,\n                    name: localName,\n                    phoneNumber: localPhoneNumber,\n                    buzzCode: localBuzzCode,\n                    unitNumber: localUnitNumber,\n                  },\n                }));\n                setpage(4);\n              }\n            } else {\n              alert(\n                \"Distance calculation between the store and your location failed. Please refresh page.\"\n              );\n            }\n          });\n        }}\n      >\n        <Text style={styles.continueBtnTxt}>CONTINUE</Text>\n      </TouchableOpacity>\n    </>\n  );\n}\n\nexport default DeliveryDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}