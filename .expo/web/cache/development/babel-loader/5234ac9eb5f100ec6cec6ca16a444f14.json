{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"../state/state\";\nimport { updateData } from \"../state/firebaseFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddProduct = function AddProduct(_ref) {\n  var setProductModal = _ref.setProductModal,\n    setisModalVisible = _ref.setisModalVisible,\n    existingProduct = _ref.existingProduct,\n    existingProductIndex = _ref.existingProductIndex;\n  var catalog = userStoreState.use();\n  var _useState = useState(existingProduct ? existingProduct : {\n      name: null,\n      price: null,\n      catagory: null,\n      options: [],\n      description: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    newProduct = _useState2[0],\n    setnewProduct = _useState2[1];\n  var _useState3 = useState({\n      index: null,\n      inputName: null,\n      innerList: null,\n      cursor: null,\n      cursorEnd: null\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    autoFocusOn = _useState4[0],\n    setautoFocusOn = _useState4[1];\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [copyProductData]));\n    } else if (existingProduct) {\n      var copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n      updateData(_toConsumableArray(catalog.categories), copy);\n    } else {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [newProduct]));\n    }\n    setisModalVisible(true);\n  }\n\n  var OptionsAddingSection = function OptionsAddingSection() {\n    return _jsxs(View, {\n      children: [_jsx(FlatList, {\n        data: newProduct.options,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n            index = _ref2.index;\n          var e = item;\n          var _useState5 = useState([]),\n            _useState6 = _slicedToArray(_useState5, 2),\n            optionLblsValues = _useState6[0],\n            setoptionLblsValues = _useState6[1];\n          var _useState7 = useState([]),\n            _useState8 = _slicedToArray(_useState7, 2),\n            optionLbls = _useState8[0],\n            setoptionLbls = _useState8[1];\n          useEffect(function () {\n            if (newProduct.options.length > 1) {\n              var optionLblsLocal = [];\n              newProduct.options.forEach(function (checkUseE) {\n                if (checkUseE.label !== e.label) optionLblsLocal.push(checkUseE.label);\n              });\n              setoptionLbls(optionLblsLocal);\n            }\n          }, []);\n          useEffect(function () {\n            if (e.selectedCaseKey !== null) {\n              var local = newProduct.options.filter(function (localE) {\n                return localE.label == e.selectedCaseKey;\n              });\n              var optionLblsValuesLocal = [];\n              local[0].optionsList.forEach(function (eVals) {\n                optionLblsValuesLocal.push(eVals.label);\n              });\n              setoptionLblsValues(optionLblsValuesLocal);\n            }\n          }, [optionLbls]);\n          return _jsxs(View, {\n            style: {\n              padding: 25,\n              margin: 15,\n              backgroundColor: \"lightgrey\"\n            },\n            children: [_jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                var copy = structuredClone(newProduct);\n                copy.options.push(_objectSpread(_objectSpread({}, e), {}, {\n                  label: e.label + \" Copy\"\n                }));\n                setautoFocusOn({\n                  index: null,\n                  inputName: null,\n                  innerList: null,\n                  cursor: null,\n                  cursorEnd: null\n                });\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    options: copy.options\n                  });\n                });\n              },\n              children: _jsx(Text, {\n                style: {\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\"\n                },\n                children: \"Copy\"\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                var copy = structuredClone(newProduct);\n                copy.options.splice(index, 1);\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    options: copy.options\n                  });\n                });\n              },\n              children: _jsx(Text, {\n                style: {\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\"\n                },\n                children: \"X\"\n              })\n            }), _jsx(TextInput, {\n              placeholder: \"Enter Select List Label\",\n              onChange: function onChange(e) {\n                var val = e.nativeEvent.text;\n                var newOptionsList = _toConsumableArray(newProduct.options);\n                newOptionsList[index].label = val;\n                setautoFocusOn({\n                  index: index,\n                  inputName: \"label\",\n                  innerList: false,\n                  cursor: e.target.selectionStart,\n                  cursorEnd: e.target.selectionEnd\n                });\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    options: newOptionsList\n                  });\n                });\n              },\n              onFocus: function onFocus(e) {\n                e.target.selectionStart = autoFocusOn.cursor;\n                e.target.selectionEnd = autoFocusOn.cursorEnd;\n              },\n              value: e.label,\n              autoFocus: autoFocusOn.index === index && autoFocusOn.innerList === false && autoFocusOn.inputName === \"label\",\n              style: {\n                marginBottom: 25\n              }\n            }), _jsx(TextInput, {\n              placeholder: \"Enter Number Of Selectable; If There Is\",\n              onChange: function onChange(e) {\n                var val = e.nativeEvent.text;\n                var newOptionsList = _toConsumableArray(newProduct.options);\n                newOptionsList[index].numOfSelectable = val;\n                setautoFocusOn({\n                  index: index,\n                  inputName: \"numOfSelectable\",\n                  innerList: false,\n                  cursor: e.target.selectionStart,\n                  cursorEnd: e.target.selectionEnd\n                });\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    options: newOptionsList\n                  });\n                });\n              },\n              onFocus: function onFocus(e) {\n                e.target.selectionStart = autoFocusOn.cursor;\n                e.target.selectionEnd = autoFocusOn.cursorEnd;\n              },\n              value: e.numOfSelectable,\n              autoFocus: autoFocusOn.index === index && autoFocusOn.innerList === false && autoFocusOn.inputName === \"numOfSelectable\",\n              style: {\n                marginBottom: 25\n              }\n            }), e.optionsList.map(function (eInnerList, indexInnerList) {\n              return _jsxs(View, {\n                style: {\n                  flexDirection: \"row\",\n                  marginBottom: 25,\n                  alignItems: \"center\"\n                },\n                children: [_jsx(TextInput, {\n                  placeholder: \"Enter Option Label\",\n                  onChange: function onChange(e) {\n                    var val = e.nativeEvent.text;\n                    var newOptionsList = structuredClone(newProduct);\n                    newOptionsList.options[index].optionsList[indexInnerList].label = val;\n                    setautoFocusOn({\n                      index: index,\n                      inputName: \"label\",\n                      innerList: true,\n                      indexInnerList: indexInnerList,\n                      cursor: e.target.selectionStart,\n                      cursorEnd: e.target.selectionEnd\n                    });\n                    setnewProduct(newOptionsList);\n                  },\n                  onFocus: function onFocus(e) {\n                    e.target.selectionStart = autoFocusOn.cursor;\n                    e.target.selectionEnd = autoFocusOn.cursorEnd;\n                  },\n                  value: eInnerList.label,\n                  autoFocus: autoFocusOn.index === index && autoFocusOn.innerList === true && autoFocusOn.inputName === \"label\" && autoFocusOn.indexInnerList === indexInnerList\n                }), _jsx(TextInput, {\n                  placeholder: \"Enter price increase\",\n                  onChange: function onChange(e) {\n                    var val = e.nativeEvent.text;\n                    var newOptionsList = structuredClone(newProduct);\n                    newOptionsList.options[index].optionsList[indexInnerList].priceIncrease = val;\n                    setautoFocusOn({\n                      index: index,\n                      inputName: \"priceIncrease\",\n                      innerList: true,\n                      indexInnerList: indexInnerList,\n                      cursor: e.target.selectionStart,\n                      cursorEnd: e.target.selectionEnd\n                    });\n                    setnewProduct(newOptionsList);\n                  },\n                  onFocus: function onFocus(e) {\n                    e.target.selectionStart = autoFocusOn.cursor;\n                    e.target.selectionEnd = autoFocusOn.cursorEnd;\n                  },\n                  value: eInnerList.priceIncrease,\n                  autoFocus: autoFocusOn.index === index && autoFocusOn.innerList === true && autoFocusOn.inputName === \"priceIncrease\" && autoFocusOn.indexInnerList === indexInnerList,\n                  style: {\n                    marginLeft: 20,\n                    marginRight: 20\n                  }\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    var copy = structuredClone(newProduct);\n                    copy.options[index].optionsList.splice(indexInnerList, 1);\n                    setnewProduct(function (prevState) {\n                      return _objectSpread(_objectSpread({}, prevState), {}, {\n                        options: copy.options\n                      });\n                    });\n                    setnewProduct(function (prevState) {\n                      return _objectSpread(_objectSpread({}, prevState), {}, {\n                        options: copy.options\n                      });\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: {\n                      fontWeight: \"700\",\n                      color: \"red\"\n                    },\n                    children: \"X\"\n                  })\n                })]\n              });\n            }), _jsx(Button, {\n              title: \"Add Option Choice\",\n              onPress: function onPress() {\n                var newOptionsList = _toConsumableArray(newProduct.options);\n                newOptionsList[index].optionsList.push({\n                  label: null,\n                  priceIncrease: null\n                });\n                setnewProduct(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    options: newOptionsList\n                  });\n                });\n                setautoFocusOn({\n                  index: index,\n                  inputName: \"label\",\n                  innerList: true,\n                  indexInnerList: newOptionsList[index].optionsList.length - 1\n                });\n              },\n\n              style: {\n                marginBottom: 25\n              }\n            }), optionLbls.length > 1 && _jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginBottom: 25\n              },\n              children: [_jsx(DropDown, {\n                label: \"Show if...\",\n                options: optionLbls,\n                setValue: function setValue(val) {\n                  var newOptionsList = _toConsumableArray(newProduct.options);\n                  newOptionsList[index].selectedCaseKey = val;\n                  setnewProduct(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      options: newOptionsList\n                    });\n                  });\n                  setautoFocusOn({\n                    index: null,\n                    inputName: null,\n                    innerList: null,\n                    indexInnerList: null\n                  });\n                },\n                value: e.selectedCaseKey,\n                style: {\n                  marginBottom: 25\n                }\n              }), _jsx(Text, {\n                children: \"\\\"=\\\"\"\n              }), _jsx(DropDown, {\n                label: \"Show if...\",\n                options: optionLblsValues,\n                setValue: function setValue(val) {\n                  var newOptionsList = _toConsumableArray(newProduct.options);\n                  newOptionsList[index].selectedCaseValue = val;\n                  setnewProduct(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      options: newOptionsList\n                    });\n                  });\n\n                  setautoFocusOn({\n                    index: null,\n                    inputName: null,\n                    innerList: null,\n                    indexInnerList: null\n                  });\n                },\n                value: e.selectedCaseValue,\n                style: {\n                  marginBottom: 25\n                }\n              })]\n            })]\n          });\n        }\n      }), _jsx(Button, {\n        title: \"Add Product Option\",\n        onPress: function onPress() {\n\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: [].concat(_toConsumableArray(prevState.options), [{\n                label: null,\n                optionsList: [],\n                selectedCaseKey: null,\n                selectedCaseValue: null,\n                numOfSelectable: null\n              }])\n            });\n          });\n\n          setautoFocusOn({\n            index: newProduct.options.length,\n            inputName: \"label\",\n            innerList: false,\n            indexInnerList: null\n          });\n        },\n        style: {\n          marginBottom: 25\n        }\n      })]\n    });\n  };\n  return _jsxs(ScrollView, {\n    contentContainerStyle: {\n      width: \"93%\",\n      alignSelf: \"center\",\n      marginTop: 25\n    },\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        padding: 20,\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setProductModal(false);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"X\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          var copy = structuredClone(newProduct);\n          copy.name = copy.name + \" Copy\";\n          handleDataUpdate(copy);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"Copy\"\n        })\n      }), _jsx(Text, {\n        style: {\n          marginBottom: 25\n        },\n        children: \"AddProduct\"\n      })]\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Product Name\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            name: val\n          });\n        });\n      },\n      value: newProduct.name,\n      style: {\n        marginBottom: 25\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Enter any other items that come with this\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            description: val\n          });\n        });\n      },\n      style: {\n        marginBottom: 25\n      },\n      value: newProduct.description\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Product Price\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            price: val\n          });\n        });\n      },\n      style: {\n        marginBottom: 25\n      },\n      value: newProduct.price\n    }), _jsx(DropDown, {\n      label: \"Choose catagory\",\n      options: catalog.categories,\n      setValue: function setValue(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            catagory: val\n          });\n        });\n      },\n      value: newProduct.catagory,\n      style: {\n        marginBottom: 25\n      }\n    }), _jsx(OptionsAddingSection, {}), _jsx(Button, {\n      title: \"Add/Save Product\",\n      onPress: function onPress() {\n        return handleDataUpdate();\n      },\n      style: {\n        marginBottom: 25,\n        marginTop: 25,\n        backgroundColor: \"lightgreen\"\n      }\n    })]\n  });\n};\nexport default AddProduct;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useEffect","useState","Button","TextInput","DropDown","userStoreState","updateData","AddProduct","setProductModal","setisModalVisible","existingProduct","existingProductIndex","catalog","use","name","price","catagory","options","description","newProduct","setnewProduct","index","inputName","innerList","cursor","cursorEnd","autoFocusOn","setautoFocusOn","handleDataUpdate","copyProductData","categories","products","copy","structuredClone","OptionsAddingSection","item","e","optionLblsValues","setoptionLblsValues","optionLbls","setoptionLbls","length","optionLblsLocal","forEach","checkUseE","label","push","selectedCaseKey","local","filter","localE","optionLblsValuesLocal","optionsList","eVals","padding","margin","backgroundColor","prevState","marginBottom","fontWeight","color","splice","val","nativeEvent","text","newOptionsList","target","selectionStart","selectionEnd","numOfSelectable","map","eInnerList","indexInnerList","flexDirection","alignItems","priceIncrease","marginLeft","marginRight","justifyContent","selectedCaseValue","width","alignSelf","marginTop","styles","StyleSheet","create"],"sources":["/Users/peterputros/Desktop/PosMate-1/components/AddProduct.tsx"],"sourcesContent":["import {\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"state/state\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst AddProduct = ({\n  setProductModal,\n  setisModalVisible,\n  existingProduct,\n  existingProductIndex,\n}) => {\n  const catalog = userStoreState.use();\n  const [newProduct, setnewProduct] = useState(\n    existingProduct\n      ? existingProduct\n      : {\n          name: null,\n          price: null,\n          catagory: null,\n          options: [],\n          description: null,\n        }\n  );\n  const [autoFocusOn, setautoFocusOn] = useState({\n    index: null,\n    inputName: null,\n    innerList: null,\n    cursor: null,\n    cursorEnd: null,\n  });\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(\n        [...catalog.categories],\n        [...catalog.products, copyProductData]\n      );\n    } else if (existingProduct) {\n      let copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n\n      updateData([...catalog.categories], copy);\n    } else {\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\n    }\n    setisModalVisible(true);\n  }\n\n  // useEffect(() => {\n  //   const scrollPosition = sessionStorage.getItem(\"scrollPosition\");\n  //   if (scrollPosition) {\n  //     window.scrollTo(0, parseInt(scrollPosition));\n  //     sessionStorage.removeItem(\"scrollPosition\");\n  //   }\n  // }, [newProduct]);\n\n  const OptionsAddingSection = () => {\n    return (\n      <View>\n        <FlatList\n          data={newProduct.options}\n          renderItem={({ item, index }) => {\n            const e = item;\n            const [optionLblsValues, setoptionLblsValues] = useState([]);\n            const [optionLbls, setoptionLbls] = useState([]);\n\n            useEffect(() => {\n              //setnewProduct(newProductSaved.current);\n              if (newProduct.options.length > 1) {\n                const optionLblsLocal = [];\n                newProduct.options.forEach((checkUseE) => {\n                  if (checkUseE.label !== e.label)\n                    optionLblsLocal.push(checkUseE.label);\n                });\n                setoptionLbls(optionLblsLocal);\n              }\n            }, []);\n\n            useEffect(() => {\n              if (e.selectedCaseKey !== null) {\n                const local = newProduct.options.filter(\n                  (localE) => localE.label == e.selectedCaseKey\n                );\n                const optionLblsValuesLocal = [];\n                local[0].optionsList.forEach((eVals) => {\n                  optionLblsValuesLocal.push(eVals.label);\n                });\n                setoptionLblsValues(optionLblsValuesLocal);\n              }\n            }, [optionLbls]);\n\n            return (\n              <View\n                style={{\n                  padding: 25,\n                  margin: 15,\n                  backgroundColor: \"lightgrey\",\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => {\n                    const copy = structuredClone(newProduct);\n                    copy.options.push({\n                      ...e,\n                      label: e.label + \" Copy\",\n                    });\n                    setautoFocusOn({\n                      index: null,\n                      inputName: null,\n                      innerList: null,\n                      cursor: null,\n                      cursorEnd: null,\n                    });\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: copy.options,\n                    }));\n                  }}\n                >\n                  <Text\n                    style={{\n                      marginBottom: 25,\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    Copy\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={() => {\n                    const copy = structuredClone(newProduct);\n                    copy.options.splice(index, 1);\n\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: copy.options,\n                    }));\n                  }}\n                >\n                  <Text\n                    style={{\n                      marginBottom: 25,\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n                <TextInput\n                  placeholder=\"Enter Select List Label\"\n                  onChange={(e) => {\n                    const val = e.nativeEvent.text;\n                    const newOptionsList = [...newProduct.options];\n                    newOptionsList[index].label = val;\n                    setautoFocusOn({\n                      index: index,\n                      inputName: \"label\",\n                      innerList: false,\n                      cursor: e.target.selectionStart,\n                      cursorEnd: e.target.selectionEnd,\n                    });\n                    // sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: newOptionsList,\n                    }));\n                  }}\n                  onFocus={(e) => {\n                    e.target.selectionStart = autoFocusOn.cursor;\n                    e.target.selectionEnd = autoFocusOn.cursorEnd;\n                  }}\n                  value={e.label}\n                  autoFocus={\n                    autoFocusOn.index === index &&\n                    autoFocusOn.innerList === false &&\n                    autoFocusOn.inputName === \"label\"\n                  }\n                  style={{ marginBottom: 25 }}\n                />\n                <TextInput\n                  placeholder=\"Enter Number Of Selectable; If There Is\"\n                  onChange={(e) => {\n                    const val = e.nativeEvent.text;\n                    const newOptionsList = [...newProduct.options];\n                    newOptionsList[index].numOfSelectable = val;\n                    setautoFocusOn({\n                      index: index,\n                      inputName: \"numOfSelectable\",\n                      innerList: false,\n                      cursor: e.target.selectionStart,\n                      cursorEnd: e.target.selectionEnd,\n                    });\n                    // sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: newOptionsList,\n                    }));\n                  }}\n                  onFocus={(e) => {\n                    e.target.selectionStart = autoFocusOn.cursor;\n                    e.target.selectionEnd = autoFocusOn.cursorEnd;\n                  }}\n                  value={e.numOfSelectable}\n                  autoFocus={\n                    autoFocusOn.index === index &&\n                    autoFocusOn.innerList === false &&\n                    autoFocusOn.inputName === \"numOfSelectable\"\n                  }\n                  style={{ marginBottom: 25 }}\n                />\n                {e.optionsList.map((eInnerList, indexInnerList) => {\n                  return (\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        marginBottom: 25,\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <TextInput\n                        placeholder=\"Enter Option Label\"\n                        onChange={(e) => {\n                          const val = e.nativeEvent.text;\n                          const newOptionsList = structuredClone(newProduct);\n                          newOptionsList.options[index].optionsList[\n                            indexInnerList\n                          ].label = val;\n                          setautoFocusOn({\n                            index: index,\n                            inputName: \"label\",\n                            innerList: true,\n                            indexInnerList: indexInnerList,\n                            cursor: e.target.selectionStart,\n                            cursorEnd: e.target.selectionEnd,\n                          });\n                          // sessionStorage.setItem(\n                          //   \"scrollPosition\",\n                          //   window.pageYOffset\n                          // );\n                          setnewProduct(newOptionsList);\n                        }}\n                        onFocus={(e) => {\n                          e.target.selectionStart = autoFocusOn.cursor;\n                          e.target.selectionEnd = autoFocusOn.cursorEnd;\n                        }}\n                        value={eInnerList.label}\n                        autoFocus={\n                          autoFocusOn.index === index &&\n                          autoFocusOn.innerList === true &&\n                          autoFocusOn.inputName === \"label\" &&\n                          autoFocusOn.indexInnerList === indexInnerList\n                        }\n                      />\n                      <TextInput\n                        placeholder=\"Enter price increase\"\n                        onChange={(e) => {\n                          const val = e.nativeEvent.text;\n                          const newOptionsList = structuredClone(newProduct);\n                          newOptionsList.options[index].optionsList[\n                            indexInnerList\n                          ].priceIncrease = val;\n                          setautoFocusOn({\n                            index: index,\n                            inputName: \"priceIncrease\",\n                            innerList: true,\n                            indexInnerList: indexInnerList,\n                            cursor: e.target.selectionStart,\n                            cursorEnd: e.target.selectionEnd,\n                          });\n                          // sessionStorage.setItem(\n                          //   \"scrollPosition\",\n                          //   window.pageYOffset\n                          // );\n                          setnewProduct(newOptionsList);\n                        }}\n                        onFocus={(e) => {\n                          e.target.selectionStart = autoFocusOn.cursor;\n                          e.target.selectionEnd = autoFocusOn.cursorEnd;\n                        }}\n                        value={eInnerList.priceIncrease}\n                        autoFocus={\n                          autoFocusOn.index === index &&\n                          autoFocusOn.innerList === true &&\n                          autoFocusOn.inputName === \"priceIncrease\" &&\n                          autoFocusOn.indexInnerList === indexInnerList\n                        }\n                        style={{ marginLeft: 20, marginRight: 20 }}\n                      />\n                      <TouchableOpacity\n                        onPress={() => {\n                          const copy = structuredClone(newProduct);\n                          copy.options[index].optionsList.splice(\n                            indexInnerList,\n                            1\n                          );\n\n                          setnewProduct((prevState) => ({\n                            ...prevState,\n                            options: copy.options,\n                          }));\n\n                          setnewProduct((prevState) => ({\n                            ...prevState,\n                            options: copy.options,\n                          }));\n                        }}\n                      >\n                        <Text\n                          style={{\n                            fontWeight: \"700\",\n                            color: \"red\",\n                          }}\n                        >\n                          X\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                  );\n                })}\n                <Button\n                  title=\"Add Option Choice\"\n                  onPress={() => {\n                    const newOptionsList = [...newProduct.options];\n                    newOptionsList[index].optionsList.push({\n                      label: null,\n                      priceIncrease: null,\n                    });\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: newOptionsList,\n                    }));\n                    setautoFocusOn({\n                      index: index,\n                      inputName: \"label\",\n                      innerList: true,\n                      indexInnerList:\n                        newOptionsList[index].optionsList.length - 1,\n                    });\n                    // sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                  }}\n                  style={{ marginBottom: 25 }}\n                />\n                {optionLbls.length > 1 && (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      marginBottom: 25,\n                    }}\n                  >\n                    <DropDown\n                      label=\"Show if...\"\n                      options={optionLbls}\n                      setValue={(val) => {\n                        const newOptionsList = [...newProduct.options];\n                        newOptionsList[index].selectedCaseKey = val;\n                        setnewProduct((prevState) => ({\n                          ...prevState,\n                          options: newOptionsList,\n                        }));\n                        // sessionStorage.setItem(\n                        //   \"scrollPosition\",\n                        //   window.pageYOffset\n                        // );\n                        setautoFocusOn({\n                          index: null,\n                          inputName: null,\n                          innerList: null,\n                          indexInnerList: null,\n                        });\n                      }}\n                      value={e.selectedCaseKey}\n                      style={{ marginBottom: 25 }}\n                    />\n                    <Text>\"=\"</Text>\n                    <DropDown\n                      label=\"Show if...\"\n                      options={optionLblsValues}\n                      setValue={(val) => {\n                        const newOptionsList = [...newProduct.options];\n                        newOptionsList[index].selectedCaseValue = val;\n                        setnewProduct((prevState) => ({\n                          ...prevState,\n                          options: newOptionsList,\n                        }));\n                        // sessionStorage.setItem(\n                        //   \"scrollPosition\",\n                        //   window.pageYOffset\n                        // );\n\n                        setautoFocusOn({\n                          index: null,\n                          inputName: null,\n                          innerList: null,\n                          indexInnerList: null,\n                        });\n                      }}\n                      value={e.selectedCaseValue}\n                      style={{ marginBottom: 25 }}\n                    />\n                  </View>\n                )}\n              </View>\n            );\n          }}\n        />\n        <Button\n          title=\"Add Product Option\"\n          onPress={() => {\n            // sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: [\n                ...prevState.options,\n                {\n                  label: null,\n                  optionsList: [],\n                  selectedCaseKey: null,\n                  selectedCaseValue: null,\n                  numOfSelectable: null,\n                },\n              ],\n            }));\n\n            // Not using -1 on length since this is before the new option is added to list\n            setautoFocusOn({\n              index: newProduct.options.length,\n              inputName: \"label\",\n              innerList: false,\n              indexInnerList: null,\n            });\n          }}\n          style={{ marginBottom: 25 }}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView\n      contentContainerStyle={{\n        width: \"93%\",\n        alignSelf: \"center\",\n        marginTop: 25,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 20,\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <TouchableOpacity onPress={() => setProductModal(false)}>\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n            X\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            let copy = structuredClone(newProduct);\n            copy.name = copy.name + \" Copy\";\n            handleDataUpdate(copy);\n          }}\n        >\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <Text style={{ marginBottom: 25 }}>AddProduct</Text>\n      </View>\n      <TextInput\n        placeholder=\"Enter Product Name\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, name: val }));\n        }}\n        value={newProduct.name}\n        style={{ marginBottom: 25 }}\n      />\n      <TextInput\n        placeholder=\"Enter any other items that come with this\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, description: val }));\n        }}\n        style={{ marginBottom: 25 }}\n        value={newProduct.description}\n      />\n      <TextInput\n        placeholder=\"Enter Product Price\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, price: val }));\n        }}\n        style={{ marginBottom: 25 }}\n        value={newProduct.price}\n      />\n      <DropDown\n        label=\"Choose catagory\"\n        options={catalog.categories}\n        setValue={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, catagory: val }));\n        }}\n        value={newProduct.catagory}\n        style={{ marginBottom: 25 }}\n      />\n      <OptionsAddingSection />\n      <Button\n        title=\"Add/Save Product\"\n        onPress={() => handleDataUpdate()}\n        style={{\n          marginBottom: 25,\n          marginTop: 25,\n          backgroundColor: \"lightgreen\",\n        }}\n      />\n    </ScrollView>\n  );\n};\n\nexport default AddProduct;\n\nconst styles = StyleSheet.create({});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}