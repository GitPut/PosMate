{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GOOGLE_API_KEY = \"AIzaSyB5l-wEA7ueMuvdHqVZK8ZD7-1yMLV076M\";\nvar GooglePlacesInput = function GooglePlacesInput() {\n  var Input = function Input(props) {\n    return _jsx(TextInput, _objectSpread({\n      style: {\n        width: 200\n      }\n    }, props));\n  };\n  return _jsx(GooglePlacesAutocomplete, {\n    placeholder: \"Search\",\n    onPress: function onPress(data) {\n      var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      console.log(data, details);\n    },\n    query: {\n      key: GOOGLE_API_KEY,\n      language: \"en\"\n    },\n    textInputProps: {\n      InputComp: Input,\n      leftIcon: {\n        type: \"font-awesome\",\n        name: \"chevron-left\"\n      },\n      errorStyle: {\n        color: \"red\"\n      }\n    },\n    requestUrl: {\n      useOnPlatform: \"web\",\n      url: \"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api\"\n    }\n  });\n};\n\nvar App = function App() {\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [_jsx(Text, {\n        children: \"Get The Best Route List\"\n      }), _jsx(GooglePlacesInput, {})]\n    })\n  });\n};\nexport default App;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","GooglePlacesAutocomplete","GOOGLE_API_KEY","GooglePlacesInput","Input","props","width","data","details","console","log","key","language","InputComp","leftIcon","type","name","errorStyle","color","useOnPlatform","url","App","flex","alignItems","justifyContent","styles","StyleSheet","create"],"sources":["/Users/peterputros/Desktop/best-route/App.tsx"],"sourcesContent":["import { SafeAreaView, StyleSheet, Text, TextInput, View } from \"react-native\";\nimport React from \"react\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\n\nconst GOOGLE_API_KEY = \"AIzaSyB5l-wEA7ueMuvdHqVZK8ZD7-1yMLV076M\";\n\nconst GooglePlacesInput = () => {\n  const Input = (props) => <TextInput style={{ width: 200 }} {...props} />;\n\n  return (\n    <GooglePlacesAutocomplete\n      placeholder=\"Search\"\n      onPress={(data, details = null) => {\n        // 'details' is provided when fetchDetails = true\n        console.log(data, details);\n      }}\n      query={{\n        key: GOOGLE_API_KEY,\n        language: \"en\",\n      }}\n      textInputProps={{\n        InputComp: Input,\n        leftIcon: { type: \"font-awesome\", name: \"chevron-left\" },\n        errorStyle: { color: \"red\" },\n      }}\n      requestUrl={{\n        useOnPlatform: \"web\", // or \"all\"\n        url: \"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api\", // or any proxy server that hits https://maps.googleapis.com/maps/api\n        // headers: {\n        //   Authorization: `an auth token`, // if required for your proxy\n        // },\n      }}\n    />\n  );\n};\n\nconst App = () => {\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <Text>Get The Best Route List</Text>\n        <GooglePlacesInput />\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default App;\n\nconst styles = StyleSheet.create({});\n"],"mappings":";;;;;;;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,QAAQ,yCAAyC;AAAC;AAAA;AAEnF,IAAMC,cAAc,GAAG,yCAAyC;AAEhE,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,GAAS;EAC9B,IAAMC,KAAK,GAAG,SAARA,KAAK,CAAIC,KAAK;IAAA,OAAK,KAAC,SAAS;MAAC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAI;IAAE,GAAKD,KAAK,EAAI;EAAA;EAExE,OACE,KAAC,wBAAwB;IACvB,WAAW,EAAC,QAAQ;IACpB,OAAO,EAAE,iBAACE,IAAI,EAAqB;MAAA,IAAnBC,OAAO,uEAAG,IAAI;MAE5BC,OAAO,CAACC,GAAG,CAACH,IAAI,EAAEC,OAAO,CAAC;IAC5B,CAAE;IACF,KAAK,EAAE;MACLG,GAAG,EAAET,cAAc;MACnBU,QAAQ,EAAE;IACZ,CAAE;IACF,cAAc,EAAE;MACdC,SAAS,EAAET,KAAK;MAChBU,QAAQ,EAAE;QAAEC,IAAI,EAAE,cAAc;QAAEC,IAAI,EAAE;MAAe,CAAC;MACxDC,UAAU,EAAE;QAAEC,KAAK,EAAE;MAAM;IAC7B,CAAE;IACF,UAAU,EAAE;MACVC,aAAa,EAAE,KAAK;MACpBC,GAAG,EAAE;IAIP;EAAE,EACF;AAEN,CAAC;;AAED,IAAMC,GAAG,GAAG,SAANA,GAAG,GAAS;EAChB,OACE,KAAC,YAAY;IAAC,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAA,UAC/B,MAAC,IAAI;MAAC,KAAK,EAAE;QAAEA,IAAI,EAAE,CAAC;QAAEC,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAA,WACvE,KAAC,IAAI;QAAA;MAAA,EAA+B,EACpC,KAAC,iBAAiB,KAAG;IAAA;EAChB,EACM;AAEnB,CAAC;AAED,eAAeH,GAAG;AAElB,IAAMI,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}