{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"../state/state\";\nimport { updateData } from \"../state/firebaseFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RenderItem = function RenderItem(_ref) {\n  var e = _ref.e,\n    index = _ref.index,\n    newProduct = _ref.newProduct,\n    setautoFocusOn = _ref.setautoFocusOn,\n    setnewProduct = _ref.setnewProduct,\n    autoFocusOn = _ref.autoFocusOn;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    optionLblsValues = _useState2[0],\n    setoptionLblsValues = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    optionLbls = _useState4[0],\n    setoptionLbls = _useState4[1];\n  useEffect(function () {\n    if (newProduct.options.length > 1) {\n      var optionLblsLocal = [];\n      newProduct.options.forEach(function (checkUseE) {\n        if (checkUseE.label !== e.label) optionLblsLocal.push(checkUseE.label);\n      });\n      setoptionLbls(optionLblsLocal);\n    }\n  }, []);\n  useEffect(function () {\n    if (e.selectedCaseKey !== null) {\n      var local = newProduct.options.filter(function (localE) {\n        return localE.label == e.selectedCaseKey;\n      });\n      var optionLblsValuesLocal = [];\n      local[0].optionsList.forEach(function (eVals) {\n        optionLblsValuesLocal.push(eVals.label);\n      });\n      setoptionLblsValues(optionLblsValuesLocal);\n    }\n  }, [optionLbls]);\n  return _jsxs(View, {\n    style: {\n      padding: 25,\n      margin: 15,\n      backgroundColor: \"lightgrey\"\n    },\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        var copy = structuredClone(newProduct);\n        copy.options.push(_objectSpread(_objectSpread({}, e), {}, {\n          label: e.label + \" Copy\"\n        }));\n        setautoFocusOn({\n          index: null,\n          inputName: null,\n          innerList: null,\n          cursor: null,\n          cursorEnd: null\n        });\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            options: copy.options\n          });\n        });\n      },\n      children: _jsx(Text, {\n        style: {\n          marginBottom: 25,\n          fontWeight: \"700\",\n          color: \"red\"\n        },\n        children: \"Copy\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        var copy = structuredClone(newProduct);\n        copy.options.splice(index, 1);\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            options: copy.options\n          });\n        });\n      },\n      children: _jsx(Text, {\n        style: {\n          marginBottom: 25,\n          fontWeight: \"700\",\n          color: \"red\"\n        },\n        children: \"X\"\n      })\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Select List Label\",\n      onChange: function onChange(e) {\n        var val = e.nativeEvent.text;\n        var newOptionsList = _toConsumableArray(newProduct.options);\n        newOptionsList[index].label = val;\n        setautoFocusOn({\n          index: index,\n          inputName: \"label\",\n          innerList: false,\n          cursor: e.target.selectionStart,\n          cursorEnd: e.target.selectionEnd\n        });\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            options: newOptionsList\n          });\n        });\n      },\n      onFocus: function onFocus(e) {\n        e.target.selectionStart = autoFocusOn.cursor;\n        e.target.selectionEnd = autoFocusOn.cursorEnd;\n      },\n      value: e.label,\n      autoFocus: autoFocusOn.index === index && autoFocusOn.innerList === false && autoFocusOn.inputName === \"label\",\n      style: {\n        marginBottom: 25\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Number Of Selectable; If There Is\",\n      onChange: function onChange(e) {\n        var val = e.nativeEvent.text;\n        var newOptionsList = _toConsumableArray(newProduct.options);\n        newOptionsList[index].numOfSelectable = val;\n        setautoFocusOn({\n          index: index,\n          inputName: \"numOfSelectable\",\n          innerList: false,\n          cursor: e.target.selectionStart,\n          cursorEnd: e.target.selectionEnd\n        });\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            options: newOptionsList\n          });\n        });\n      },\n      onFocus: function onFocus(e) {\n        e.target.selectionStart = autoFocusOn.cursor;\n        e.target.selectionEnd = autoFocusOn.cursorEnd;\n      },\n      value: e.numOfSelectable,\n      autoFocus: autoFocusOn.index === index && autoFocusOn.innerList === false && autoFocusOn.inputName === \"numOfSelectable\",\n      style: {\n        marginBottom: 25\n      }\n    }), e.optionsList.map(function (eInnerList, indexInnerList) {\n      return _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          marginBottom: 25,\n          alignItems: \"center\"\n        },\n        children: [_jsx(TextInput, {\n          placeholder: \"Enter Option Label\",\n          onChange: function onChange(e) {\n            var val = e.nativeEvent.text;\n            var newOptionsList = structuredClone(newProduct);\n            newOptionsList.options[index].optionsList[indexInnerList].label = val;\n            setautoFocusOn({\n              index: index,\n              inputName: \"label\",\n              innerList: true,\n              indexInnerList: indexInnerList,\n              cursor: e.target.selectionStart,\n              cursorEnd: e.target.selectionEnd\n            });\n            setnewProduct(newOptionsList);\n          },\n          onFocus: function onFocus(e) {\n            e.target.selectionStart = autoFocusOn.cursor;\n            e.target.selectionEnd = autoFocusOn.cursorEnd;\n          },\n          value: eInnerList.label,\n          autoFocus: autoFocusOn.index === index && autoFocusOn.innerList === true && autoFocusOn.inputName === \"label\" && autoFocusOn.indexInnerList === indexInnerList\n        }), _jsx(TextInput, {\n          placeholder: \"Enter price increase\",\n          onChange: function onChange(e) {\n            var val = e.nativeEvent.text;\n            var newOptionsList = structuredClone(newProduct);\n            newOptionsList.options[index].optionsList[indexInnerList].priceIncrease = val;\n            setautoFocusOn({\n              index: index,\n              inputName: \"priceIncrease\",\n              innerList: true,\n              indexInnerList: indexInnerList,\n              cursor: e.target.selectionStart,\n              cursorEnd: e.target.selectionEnd\n            });\n            setnewProduct(newOptionsList);\n          },\n          onFocus: function onFocus(e) {\n            e.target.selectionStart = autoFocusOn.cursor;\n            e.target.selectionEnd = autoFocusOn.cursorEnd;\n          },\n          value: eInnerList.priceIncrease,\n          autoFocus: autoFocusOn.index === index && autoFocusOn.innerList === true && autoFocusOn.inputName === \"priceIncrease\" && autoFocusOn.indexInnerList === indexInnerList,\n          style: {\n            marginLeft: 20,\n            marginRight: 20\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            var copy = structuredClone(newProduct);\n            copy.options[index].optionsList.splice(indexInnerList, 1);\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: copy.options\n              });\n            });\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: copy.options\n              });\n            });\n          },\n          children: _jsx(Text, {\n            style: {\n              fontWeight: \"700\",\n              color: \"red\"\n            },\n            children: \"X\"\n          })\n        })]\n      });\n    }), _jsx(Button, {\n      title: \"Add Option Choice\",\n      onPress: function onPress() {\n        var newOptionsList = _toConsumableArray(newProduct.options);\n        newOptionsList[index].optionsList.push({\n          label: null,\n          priceIncrease: null\n        });\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            options: newOptionsList\n          });\n        });\n        setautoFocusOn({\n          index: index,\n          inputName: \"label\",\n          innerList: true,\n          indexInnerList: newOptionsList[index].optionsList.length - 1\n        });\n      },\n\n      style: {\n        marginBottom: 25\n      }\n    }), optionLbls.length > 1 && _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        marginBottom: 25\n      },\n      children: [_jsx(DropDown, {\n        label: \"Show if...\",\n        options: optionLbls,\n        setValue: function setValue(val) {\n          var newOptionsList = _toConsumableArray(newProduct.options);\n          newOptionsList[index].selectedCaseKey = val;\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newOptionsList\n            });\n          });\n          setautoFocusOn({\n            index: null,\n            inputName: null,\n            innerList: null,\n            indexInnerList: null\n          });\n        },\n        value: e.selectedCaseKey,\n        style: {\n          marginBottom: 25\n        }\n      }), _jsx(Text, {\n        children: \"\\\"=\\\"\"\n      }), _jsx(DropDown, {\n        label: \"Show if...\",\n        options: optionLblsValues,\n        setValue: function setValue(val) {\n          var newOptionsList = _toConsumableArray(newProduct.options);\n          newOptionsList[index].selectedCaseValue = val;\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newOptionsList\n            });\n          });\n\n          setautoFocusOn({\n            index: null,\n            inputName: null,\n            innerList: null,\n            indexInnerList: null\n          });\n        },\n        value: e.selectedCaseValue,\n        style: {\n          marginBottom: 25\n        }\n      })]\n    })]\n  });\n};\nvar AddProduct = function AddProduct(_ref2) {\n  var setProductModal = _ref2.setProductModal,\n    setisModalVisible = _ref2.setisModalVisible,\n    existingProduct = _ref2.existingProduct,\n    existingProductIndex = _ref2.existingProductIndex;\n  var catalog = userStoreState.use();\n  var _useState5 = useState(existingProduct ? existingProduct : {\n      name: null,\n      price: null,\n      catagory: null,\n      options: [],\n      description: null\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    newProduct = _useState6[0],\n    setnewProduct = _useState6[1];\n  var _useState7 = useState({\n      index: null,\n      inputName: null,\n      innerList: null,\n      cursor: null,\n      cursorEnd: null\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    autoFocusOn = _useState8[0],\n    setautoFocusOn = _useState8[1];\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [copyProductData]));\n    } else if (existingProduct) {\n      var copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n      updateData(_toConsumableArray(catalog.categories), copy);\n    } else {\n      updateData(_toConsumableArray(catalog.categories), [].concat(_toConsumableArray(catalog.products), [newProduct]));\n    }\n    setisModalVisible(true);\n  }\n\n  var OptionsAddingSection = function OptionsAddingSection() {\n    return _jsxs(View, {\n      children: [_jsx(FlatList, {\n        data: newProduct.options,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item,\n            index = _ref3.index;\n          return _jsx(RenderItem, {\n            e: item,\n            index: index\n          });\n        }\n      }), _jsx(Button, {\n        title: \"Add Product Option\",\n        onPress: function onPress() {\n\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: [].concat(_toConsumableArray(prevState.options), [{\n                label: null,\n                optionsList: [],\n                selectedCaseKey: null,\n                selectedCaseValue: null,\n                numOfSelectable: null\n              }])\n            });\n          });\n\n          setautoFocusOn({\n            index: newProduct.options.length,\n            inputName: \"label\",\n            innerList: false,\n            indexInnerList: null\n          });\n        },\n        style: {\n          marginBottom: 25\n        }\n      })]\n    });\n  };\n  return _jsxs(ScrollView, {\n    contentContainerStyle: {\n      width: \"93%\",\n      alignSelf: \"center\",\n      marginTop: 25\n    },\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        padding: 20,\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setProductModal(false);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"X\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          var copy = structuredClone(newProduct);\n          copy.name = copy.name + \" Copy\";\n          handleDataUpdate(copy);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"Copy\"\n        })\n      }), _jsx(Text, {\n        style: {\n          marginBottom: 25\n        },\n        children: \"AddProduct\"\n      })]\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Product Name\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            name: val\n          });\n        });\n      },\n      value: newProduct.name,\n      style: {\n        marginBottom: 25\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Enter any other items that come with this\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            description: val\n          });\n        });\n      },\n      style: {\n        marginBottom: 25\n      },\n      value: newProduct.description\n    }), _jsx(TextInput, {\n      placeholder: \"Enter Product Price\",\n      onChangeText: function onChangeText(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            price: val\n          });\n        });\n      },\n      style: {\n        marginBottom: 25\n      },\n      value: newProduct.price\n    }), _jsx(DropDown, {\n      label: \"Choose catagory\",\n      options: catalog.categories,\n      setValue: function setValue(val) {\n        setnewProduct(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            catagory: val\n          });\n        });\n      },\n      value: newProduct.catagory,\n      style: {\n        marginBottom: 25\n      }\n    }), _jsx(OptionsAddingSection, {}), _jsx(Button, {\n      title: \"Add/Save Product\",\n      onPress: function onPress() {\n        return handleDataUpdate();\n      },\n      style: {\n        marginBottom: 25,\n        marginTop: 25,\n        backgroundColor: \"lightgreen\"\n      }\n    })]\n  });\n};\nexport default AddProduct;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useEffect","useState","Button","TextInput","DropDown","userStoreState","updateData","RenderItem","e","index","newProduct","setautoFocusOn","setnewProduct","autoFocusOn","optionLblsValues","setoptionLblsValues","optionLbls","setoptionLbls","options","length","optionLblsLocal","forEach","checkUseE","label","push","selectedCaseKey","local","filter","localE","optionLblsValuesLocal","optionsList","eVals","padding","margin","backgroundColor","copy","structuredClone","inputName","innerList","cursor","cursorEnd","prevState","marginBottom","fontWeight","color","splice","val","nativeEvent","text","newOptionsList","target","selectionStart","selectionEnd","numOfSelectable","map","eInnerList","indexInnerList","flexDirection","alignItems","priceIncrease","marginLeft","marginRight","justifyContent","selectedCaseValue","AddProduct","setProductModal","setisModalVisible","existingProduct","existingProductIndex","catalog","use","name","price","catagory","description","handleDataUpdate","copyProductData","categories","products","OptionsAddingSection","item","width","alignSelf","marginTop","styles","StyleSheet","create"],"sources":["/Users/peterputros/Desktop/PosMate-1/components/AddProduct.tsx"],"sourcesContent":["import {\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { userStoreState } from \"state/state\";\nimport { updateData } from \"state/firebaseFunctions\";\n\nconst RenderItem = ({e, index, newProduct, setautoFocusOn, setnewProduct, autoFocusOn}) => {\n            const [optionLblsValues, setoptionLblsValues] = useState([]);\n            const [optionLbls, setoptionLbls] = useState([]);\n\n            useEffect(() => {\n              //setnewProduct(newProductSaved.current);\n              if (newProduct.options.length > 1) {\n                const optionLblsLocal = [];\n                newProduct.options.forEach((checkUseE) => {\n                  if (checkUseE.label !== e.label)\n                    optionLblsLocal.push(checkUseE.label);\n                });\n                setoptionLbls(optionLblsLocal);\n              }\n            }, []);\n\n            useEffect(() => {\n              if (e.selectedCaseKey !== null) {\n                const local = newProduct.options.filter(\n                  (localE) => localE.label == e.selectedCaseKey\n                );\n                const optionLblsValuesLocal = [];\n                local[0].optionsList.forEach((eVals) => {\n                  optionLblsValuesLocal.push(eVals.label);\n                });\n                setoptionLblsValues(optionLblsValuesLocal);\n              }\n            }, [optionLbls]);\n\n            return (\n              <View\n                style={{\n                  padding: 25,\n                  margin: 15,\n                  backgroundColor: \"lightgrey\",\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => {\n                    const copy = structuredClone(newProduct);\n                    copy.options.push({\n                      ...e,\n                      label: e.label + \" Copy\",\n                    });\n                    setautoFocusOn({\n                      index: null,\n                      inputName: null,\n                      innerList: null,\n                      cursor: null,\n                      cursorEnd: null,\n                    });\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: copy.options,\n                    }));\n                  }}\n                >\n                  <Text\n                    style={{\n                      marginBottom: 25,\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    Copy\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={() => {\n                    const copy = structuredClone(newProduct);\n                    copy.options.splice(index, 1);\n\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: copy.options,\n                    }));\n                  }}\n                >\n                  <Text\n                    style={{\n                      marginBottom: 25,\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n                <TextInput\n                  placeholder=\"Enter Select List Label\"\n                  onChange={(e) => {\n                    const val = e.nativeEvent.text;\n                    const newOptionsList = [...newProduct.options];\n                    newOptionsList[index].label = val;\n                    setautoFocusOn({\n                      index: index,\n                      inputName: \"label\",\n                      innerList: false,\n                      cursor: e.target.selectionStart,\n                      cursorEnd: e.target.selectionEnd,\n                    });\n                    // sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: newOptionsList,\n                    }));\n                  }}\n                  onFocus={(e) => {\n                    e.target.selectionStart = autoFocusOn.cursor;\n                    e.target.selectionEnd = autoFocusOn.cursorEnd;\n                  }}\n                  value={e.label}\n                  autoFocus={\n                    autoFocusOn.index === index &&\n                    autoFocusOn.innerList === false &&\n                    autoFocusOn.inputName === \"label\"\n                  }\n                  style={{ marginBottom: 25 }}\n                />\n                <TextInput\n                  placeholder=\"Enter Number Of Selectable; If There Is\"\n                  onChange={(e) => {\n                    const val = e.nativeEvent.text;\n                    const newOptionsList = [...newProduct.options];\n                    newOptionsList[index].numOfSelectable = val;\n                    setautoFocusOn({\n                      index: index,\n                      inputName: \"numOfSelectable\",\n                      innerList: false,\n                      cursor: e.target.selectionStart,\n                      cursorEnd: e.target.selectionEnd,\n                    });\n                    // sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: newOptionsList,\n                    }));\n                  }}\n                  onFocus={(e) => {\n                    e.target.selectionStart = autoFocusOn.cursor;\n                    e.target.selectionEnd = autoFocusOn.cursorEnd;\n                  }}\n                  value={e.numOfSelectable}\n                  autoFocus={\n                    autoFocusOn.index === index &&\n                    autoFocusOn.innerList === false &&\n                    autoFocusOn.inputName === \"numOfSelectable\"\n                  }\n                  style={{ marginBottom: 25 }}\n                />\n                {e.optionsList.map((eInnerList, indexInnerList) => {\n                  return (\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        marginBottom: 25,\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <TextInput\n                        placeholder=\"Enter Option Label\"\n                        onChange={(e) => {\n                          const val = e.nativeEvent.text;\n                          const newOptionsList = structuredClone(newProduct);\n                          newOptionsList.options[index].optionsList[\n                            indexInnerList\n                          ].label = val;\n                          setautoFocusOn({\n                            index: index,\n                            inputName: \"label\",\n                            innerList: true,\n                            indexInnerList: indexInnerList,\n                            cursor: e.target.selectionStart,\n                            cursorEnd: e.target.selectionEnd,\n                          });\n                          // sessionStorage.setItem(\n                          //   \"scrollPosition\",\n                          //   window.pageYOffset\n                          // );\n                          setnewProduct(newOptionsList);\n                        }}\n                        onFocus={(e) => {\n                          e.target.selectionStart = autoFocusOn.cursor;\n                          e.target.selectionEnd = autoFocusOn.cursorEnd;\n                        }}\n                        value={eInnerList.label}\n                        autoFocus={\n                          autoFocusOn.index === index &&\n                          autoFocusOn.innerList === true &&\n                          autoFocusOn.inputName === \"label\" &&\n                          autoFocusOn.indexInnerList === indexInnerList\n                        }\n                      />\n                      <TextInput\n                        placeholder=\"Enter price increase\"\n                        onChange={(e) => {\n                          const val = e.nativeEvent.text;\n                          const newOptionsList = structuredClone(newProduct);\n                          newOptionsList.options[index].optionsList[\n                            indexInnerList\n                          ].priceIncrease = val;\n                          setautoFocusOn({\n                            index: index,\n                            inputName: \"priceIncrease\",\n                            innerList: true,\n                            indexInnerList: indexInnerList,\n                            cursor: e.target.selectionStart,\n                            cursorEnd: e.target.selectionEnd,\n                          });\n                          // sessionStorage.setItem(\n                          //   \"scrollPosition\",\n                          //   window.pageYOffset\n                          // );\n                          setnewProduct(newOptionsList);\n                        }}\n                        onFocus={(e) => {\n                          e.target.selectionStart = autoFocusOn.cursor;\n                          e.target.selectionEnd = autoFocusOn.cursorEnd;\n                        }}\n                        value={eInnerList.priceIncrease}\n                        autoFocus={\n                          autoFocusOn.index === index &&\n                          autoFocusOn.innerList === true &&\n                          autoFocusOn.inputName === \"priceIncrease\" &&\n                          autoFocusOn.indexInnerList === indexInnerList\n                        }\n                        style={{ marginLeft: 20, marginRight: 20 }}\n                      />\n                      <TouchableOpacity\n                        onPress={() => {\n                          const copy = structuredClone(newProduct);\n                          copy.options[index].optionsList.splice(\n                            indexInnerList,\n                            1\n                          );\n\n                          setnewProduct((prevState) => ({\n                            ...prevState,\n                            options: copy.options,\n                          }));\n\n                          setnewProduct((prevState) => ({\n                            ...prevState,\n                            options: copy.options,\n                          }));\n                        }}\n                      >\n                        <Text\n                          style={{\n                            fontWeight: \"700\",\n                            color: \"red\",\n                          }}\n                        >\n                          X\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n                  );\n                })}\n                <Button\n                  title=\"Add Option Choice\"\n                  onPress={() => {\n                    const newOptionsList = [...newProduct.options];\n                    newOptionsList[index].optionsList.push({\n                      label: null,\n                      priceIncrease: null,\n                    });\n                    setnewProduct((prevState) => ({\n                      ...prevState,\n                      options: newOptionsList,\n                    }));\n                    setautoFocusOn({\n                      index: index,\n                      inputName: \"label\",\n                      innerList: true,\n                      indexInnerList:\n                        newOptionsList[index].optionsList.length - 1,\n                    });\n                    // sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n                  }}\n                  style={{ marginBottom: 25 }}\n                />\n                {optionLbls.length > 1 && (\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      marginBottom: 25,\n                    }}\n                  >\n                    <DropDown\n                      label=\"Show if...\"\n                      options={optionLbls}\n                      setValue={(val) => {\n                        const newOptionsList = [...newProduct.options];\n                        newOptionsList[index].selectedCaseKey = val;\n                        setnewProduct((prevState) => ({\n                          ...prevState,\n                          options: newOptionsList,\n                        }));\n                        // sessionStorage.setItem(\n                        //   \"scrollPosition\",\n                        //   window.pageYOffset\n                        // );\n                        setautoFocusOn({\n                          index: null,\n                          inputName: null,\n                          innerList: null,\n                          indexInnerList: null,\n                        });\n                      }}\n                      value={e.selectedCaseKey}\n                      style={{ marginBottom: 25 }}\n                    />\n                    <Text>\"=\"</Text>\n                    <DropDown\n                      label=\"Show if...\"\n                      options={optionLblsValues}\n                      setValue={(val) => {\n                        const newOptionsList = [...newProduct.options];\n                        newOptionsList[index].selectedCaseValue = val;\n                        setnewProduct((prevState) => ({\n                          ...prevState,\n                          options: newOptionsList,\n                        }));\n                        // sessionStorage.setItem(\n                        //   \"scrollPosition\",\n                        //   window.pageYOffset\n                        // );\n\n                        setautoFocusOn({\n                          index: null,\n                          inputName: null,\n                          innerList: null,\n                          indexInnerList: null,\n                        });\n                      }}\n                      value={e.selectedCaseValue}\n                      style={{ marginBottom: 25 }}\n                    />\n                  </View>\n                )}\n              </View>\n            );\n          }\n\nconst AddProduct = ({\n  setProductModal,\n  setisModalVisible,\n  existingProduct,\n  existingProductIndex,\n}) => {\n  const catalog = userStoreState.use();\n  const [newProduct, setnewProduct] = useState(\n    existingProduct\n      ? existingProduct\n      : {\n          name: null,\n          price: null,\n          catagory: null,\n          options: [],\n          description: null,\n        }\n  );\n  const [autoFocusOn, setautoFocusOn] = useState({\n    index: null,\n    inputName: null,\n    innerList: null,\n    cursor: null,\n    cursorEnd: null,\n  });\n\n  function handleDataUpdate(copyProductData) {\n    if (copyProductData) {\n      updateData(\n        [...catalog.categories],\n        [...catalog.products, copyProductData]\n      );\n    } else if (existingProduct) {\n      let copy = structuredClone(catalog.products);\n      copy[existingProductIndex] = newProduct;\n\n      updateData([...catalog.categories], copy);\n    } else {\n      updateData([...catalog.categories], [...catalog.products, newProduct]);\n    }\n    setisModalVisible(true);\n  }\n\n  // useEffect(() => {\n  //   const scrollPosition = sessionStorage.getItem(\"scrollPosition\");\n  //   if (scrollPosition) {\n  //     window.scrollTo(0, parseInt(scrollPosition));\n  //     sessionStorage.removeItem(\"scrollPosition\");\n  //   }\n  // }, [newProduct]);\n\n  const OptionsAddingSection = () => {\n    return (\n      <View>\n        <FlatList\n          data={newProduct.options}\n          renderItem={({ item, index }) => <RenderItem e={item} index={index} />}\n        />\n        <Button\n          title=\"Add Product Option\"\n          onPress={() => {\n            // sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: [\n                ...prevState.options,\n                {\n                  label: null,\n                  optionsList: [],\n                  selectedCaseKey: null,\n                  selectedCaseValue: null,\n                  numOfSelectable: null,\n                },\n              ],\n            }));\n\n            // Not using -1 on length since this is before the new option is added to list\n            setautoFocusOn({\n              index: newProduct.options.length,\n              inputName: \"label\",\n              innerList: false,\n              indexInnerList: null,\n            });\n          }}\n          style={{ marginBottom: 25 }}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView\n      contentContainerStyle={{\n        width: \"93%\",\n        alignSelf: \"center\",\n        marginTop: 25,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          padding: 20,\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <TouchableOpacity onPress={() => setProductModal(false)}>\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n            X\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            let copy = structuredClone(newProduct);\n            copy.name = copy.name + \" Copy\";\n            handleDataUpdate(copy);\n          }}\n        >\n          <Text style={{ marginBottom: 25, fontWeight: \"700\", color: \"red\" }}>\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <Text style={{ marginBottom: 25 }}>AddProduct</Text>\n      </View>\n      <TextInput\n        placeholder=\"Enter Product Name\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, name: val }));\n        }}\n        value={newProduct.name}\n        style={{ marginBottom: 25 }}\n      />\n      <TextInput\n        placeholder=\"Enter any other items that come with this\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, description: val }));\n        }}\n        style={{ marginBottom: 25 }}\n        value={newProduct.description}\n      />\n      <TextInput\n        placeholder=\"Enter Product Price\"\n        onChangeText={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, price: val }));\n        }}\n        style={{ marginBottom: 25 }}\n        value={newProduct.price}\n      />\n      <DropDown\n        label=\"Choose catagory\"\n        options={catalog.categories}\n        setValue={(val) => {\n          setnewProduct((prevState) => ({ ...prevState, catagory: val }));\n        }}\n        value={newProduct.catagory}\n        style={{ marginBottom: 25 }}\n      />\n      <OptionsAddingSection />\n      <Button\n        title=\"Add/Save Product\"\n        onPress={() => handleDataUpdate()}\n        style={{\n          marginBottom: 25,\n          marginTop: 25,\n          backgroundColor: \"lightgreen\",\n        }}\n      />\n    </ScrollView>\n  );\n};\n\nexport default AddProduct;\n\nconst styles = StyleSheet.create({});\n"],"mappings":";;;;;;;;;;;AAQA,OAAOA,KAAK,IAAIC,SAAS,EAAUC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,MAAM,EAAEC,SAAS,QAAQ,6BAA6B;AAC/D,OAAOC,QAAQ;AACf,SAASC,cAAc;AACvB,SAASC,UAAU;AAAkC;AAAA;AAErD,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAA2E;EAAA,IAAtEC,CAAC,QAADA,CAAC;IAAEC,KAAK,QAALA,KAAK;IAAEC,UAAU,QAAVA,UAAU;IAAEC,cAAc,QAAdA,cAAc;IAAEC,aAAa,QAAbA,aAAa;IAAEC,WAAW,QAAXA,WAAW;EACzE,gBAAgDZ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArDa,gBAAgB;IAAEC,mBAAmB;EAC5C,iBAAoCd,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAzCe,UAAU;IAAEC,aAAa;EAEhCjB,SAAS,CAAC,YAAM;IAEd,IAAIU,UAAU,CAACQ,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;MACjC,IAAMC,eAAe,GAAG,EAAE;MAC1BV,UAAU,CAACQ,OAAO,CAACG,OAAO,CAAC,UAACC,SAAS,EAAK;QACxC,IAAIA,SAAS,CAACC,KAAK,KAAKf,CAAC,CAACe,KAAK,EAC7BH,eAAe,CAACI,IAAI,CAACF,SAAS,CAACC,KAAK,CAAC;MACzC,CAAC,CAAC;MACFN,aAAa,CAACG,eAAe,CAAC;IAChC;EACF,CAAC,EAAE,EAAE,CAAC;EAENpB,SAAS,CAAC,YAAM;IACd,IAAIQ,CAAC,CAACiB,eAAe,KAAK,IAAI,EAAE;MAC9B,IAAMC,KAAK,GAAGhB,UAAU,CAACQ,OAAO,CAACS,MAAM,CACrC,UAACC,MAAM;QAAA,OAAKA,MAAM,CAACL,KAAK,IAAIf,CAAC,CAACiB,eAAe;MAAA,EAC9C;MACD,IAAMI,qBAAqB,GAAG,EAAE;MAChCH,KAAK,CAAC,CAAC,CAAC,CAACI,WAAW,CAACT,OAAO,CAAC,UAACU,KAAK,EAAK;QACtCF,qBAAqB,CAACL,IAAI,CAACO,KAAK,CAACR,KAAK,CAAC;MACzC,CAAC,CAAC;MACFR,mBAAmB,CAACc,qBAAqB,CAAC;IAC5C;EACF,CAAC,EAAE,CAACb,UAAU,CAAC,CAAC;EAEhB,OACE,MAAC,IAAI;IACH,KAAK,EAAE;MACLgB,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE,EAAE;MACVC,eAAe,EAAE;IACnB,CAAE;IAAA,WAEF,KAAC,gBAAgB;MACf,OAAO,EAAE,mBAAM;QACb,IAAMC,IAAI,GAAGC,eAAe,CAAC1B,UAAU,CAAC;QACxCyB,IAAI,CAACjB,OAAO,CAACM,IAAI,iCACZhB,CAAC;UACJe,KAAK,EAAEf,CAAC,CAACe,KAAK,GAAG;QAAO,GACxB;QACFZ,cAAc,CAAC;UACbF,KAAK,EAAE,IAAI;UACX4B,SAAS,EAAE,IAAI;UACfC,SAAS,EAAE,IAAI;UACfC,MAAM,EAAE,IAAI;UACZC,SAAS,EAAE;QACb,CAAC,CAAC;QACF5B,aAAa,CAAC,UAAC6B,SAAS;UAAA,uCACnBA,SAAS;YACZvB,OAAO,EAAEiB,IAAI,CAACjB;UAAO;QAAA,CACrB,CAAC;MACL,CAAE;MAAA,UAEF,KAAC,IAAI;QACH,KAAK,EAAE;UACLwB,YAAY,EAAE,EAAE;UAChBC,UAAU,EAAE,KAAK;UACjBC,KAAK,EAAE;QACT,CAAE;QAAA;MAAA;IAGG,EACU,EACnB,KAAC,gBAAgB;MACf,OAAO,EAAE,mBAAM;QACb,IAAMT,IAAI,GAAGC,eAAe,CAAC1B,UAAU,CAAC;QACxCyB,IAAI,CAACjB,OAAO,CAAC2B,MAAM,CAACpC,KAAK,EAAE,CAAC,CAAC;QAE7BG,aAAa,CAAC,UAAC6B,SAAS;UAAA,uCACnBA,SAAS;YACZvB,OAAO,EAAEiB,IAAI,CAACjB;UAAO;QAAA,CACrB,CAAC;MACL,CAAE;MAAA,UAEF,KAAC,IAAI;QACH,KAAK,EAAE;UACLwB,YAAY,EAAE,EAAE;UAChBC,UAAU,EAAE,KAAK;UACjBC,KAAK,EAAE;QACT,CAAE;QAAA;MAAA;IAGG,EACU,EACnB,KAAC,SAAS;MACR,WAAW,EAAC,yBAAyB;MACrC,QAAQ,EAAE,kBAACpC,CAAC,EAAK;QACf,IAAMsC,GAAG,GAAGtC,CAAC,CAACuC,WAAW,CAACC,IAAI;QAC9B,IAAMC,cAAc,sBAAOvC,UAAU,CAACQ,OAAO,CAAC;QAC9C+B,cAAc,CAACxC,KAAK,CAAC,CAACc,KAAK,GAAGuB,GAAG;QACjCnC,cAAc,CAAC;UACbF,KAAK,EAAEA,KAAK;UACZ4B,SAAS,EAAE,OAAO;UAClBC,SAAS,EAAE,KAAK;UAChBC,MAAM,EAAE/B,CAAC,CAAC0C,MAAM,CAACC,cAAc;UAC/BX,SAAS,EAAEhC,CAAC,CAAC0C,MAAM,CAACE;QACtB,CAAC,CAAC;QAEFxC,aAAa,CAAC,UAAC6B,SAAS;UAAA,uCACnBA,SAAS;YACZvB,OAAO,EAAE+B;UAAc;QAAA,CACvB,CAAC;MACL,CAAE;MACF,OAAO,EAAE,iBAACzC,CAAC,EAAK;QACdA,CAAC,CAAC0C,MAAM,CAACC,cAAc,GAAGtC,WAAW,CAAC0B,MAAM;QAC5C/B,CAAC,CAAC0C,MAAM,CAACE,YAAY,GAAGvC,WAAW,CAAC2B,SAAS;MAC/C,CAAE;MACF,KAAK,EAAEhC,CAAC,CAACe,KAAM;MACf,SAAS,EACPV,WAAW,CAACJ,KAAK,KAAKA,KAAK,IAC3BI,WAAW,CAACyB,SAAS,KAAK,KAAK,IAC/BzB,WAAW,CAACwB,SAAS,KAAK,OAC3B;MACD,KAAK,EAAE;QAAEK,YAAY,EAAE;MAAG;IAAE,EAC5B,EACF,KAAC,SAAS;MACR,WAAW,EAAC,yCAAyC;MACrD,QAAQ,EAAE,kBAAClC,CAAC,EAAK;QACf,IAAMsC,GAAG,GAAGtC,CAAC,CAACuC,WAAW,CAACC,IAAI;QAC9B,IAAMC,cAAc,sBAAOvC,UAAU,CAACQ,OAAO,CAAC;QAC9C+B,cAAc,CAACxC,KAAK,CAAC,CAAC4C,eAAe,GAAGP,GAAG;QAC3CnC,cAAc,CAAC;UACbF,KAAK,EAAEA,KAAK;UACZ4B,SAAS,EAAE,iBAAiB;UAC5BC,SAAS,EAAE,KAAK;UAChBC,MAAM,EAAE/B,CAAC,CAAC0C,MAAM,CAACC,cAAc;UAC/BX,SAAS,EAAEhC,CAAC,CAAC0C,MAAM,CAACE;QACtB,CAAC,CAAC;QAEFxC,aAAa,CAAC,UAAC6B,SAAS;UAAA,uCACnBA,SAAS;YACZvB,OAAO,EAAE+B;UAAc;QAAA,CACvB,CAAC;MACL,CAAE;MACF,OAAO,EAAE,iBAACzC,CAAC,EAAK;QACdA,CAAC,CAAC0C,MAAM,CAACC,cAAc,GAAGtC,WAAW,CAAC0B,MAAM;QAC5C/B,CAAC,CAAC0C,MAAM,CAACE,YAAY,GAAGvC,WAAW,CAAC2B,SAAS;MAC/C,CAAE;MACF,KAAK,EAAEhC,CAAC,CAAC6C,eAAgB;MACzB,SAAS,EACPxC,WAAW,CAACJ,KAAK,KAAKA,KAAK,IAC3BI,WAAW,CAACyB,SAAS,KAAK,KAAK,IAC/BzB,WAAW,CAACwB,SAAS,KAAK,iBAC3B;MACD,KAAK,EAAE;QAAEK,YAAY,EAAE;MAAG;IAAE,EAC5B,EACDlC,CAAC,CAACsB,WAAW,CAACwB,GAAG,CAAC,UAACC,UAAU,EAAEC,cAAc,EAAK;MACjD,OACE,MAAC,IAAI;QACH,KAAK,EAAE;UACLC,aAAa,EAAE,KAAK;UACpBf,YAAY,EAAE,EAAE;UAChBgB,UAAU,EAAE;QACd,CAAE;QAAA,WAEF,KAAC,SAAS;UACR,WAAW,EAAC,oBAAoB;UAChC,QAAQ,EAAE,kBAAClD,CAAC,EAAK;YACf,IAAMsC,GAAG,GAAGtC,CAAC,CAACuC,WAAW,CAACC,IAAI;YAC9B,IAAMC,cAAc,GAAGb,eAAe,CAAC1B,UAAU,CAAC;YAClDuC,cAAc,CAAC/B,OAAO,CAACT,KAAK,CAAC,CAACqB,WAAW,CACvC0B,cAAc,CACf,CAACjC,KAAK,GAAGuB,GAAG;YACbnC,cAAc,CAAC;cACbF,KAAK,EAAEA,KAAK;cACZ4B,SAAS,EAAE,OAAO;cAClBC,SAAS,EAAE,IAAI;cACfkB,cAAc,EAAEA,cAAc;cAC9BjB,MAAM,EAAE/B,CAAC,CAAC0C,MAAM,CAACC,cAAc;cAC/BX,SAAS,EAAEhC,CAAC,CAAC0C,MAAM,CAACE;YACtB,CAAC,CAAC;YAKFxC,aAAa,CAACqC,cAAc,CAAC;UAC/B,CAAE;UACF,OAAO,EAAE,iBAACzC,CAAC,EAAK;YACdA,CAAC,CAAC0C,MAAM,CAACC,cAAc,GAAGtC,WAAW,CAAC0B,MAAM;YAC5C/B,CAAC,CAAC0C,MAAM,CAACE,YAAY,GAAGvC,WAAW,CAAC2B,SAAS;UAC/C,CAAE;UACF,KAAK,EAAEe,UAAU,CAAChC,KAAM;UACxB,SAAS,EACPV,WAAW,CAACJ,KAAK,KAAKA,KAAK,IAC3BI,WAAW,CAACyB,SAAS,KAAK,IAAI,IAC9BzB,WAAW,CAACwB,SAAS,KAAK,OAAO,IACjCxB,WAAW,CAAC2C,cAAc,KAAKA;QAChC,EACD,EACF,KAAC,SAAS;UACR,WAAW,EAAC,sBAAsB;UAClC,QAAQ,EAAE,kBAAChD,CAAC,EAAK;YACf,IAAMsC,GAAG,GAAGtC,CAAC,CAACuC,WAAW,CAACC,IAAI;YAC9B,IAAMC,cAAc,GAAGb,eAAe,CAAC1B,UAAU,CAAC;YAClDuC,cAAc,CAAC/B,OAAO,CAACT,KAAK,CAAC,CAACqB,WAAW,CACvC0B,cAAc,CACf,CAACG,aAAa,GAAGb,GAAG;YACrBnC,cAAc,CAAC;cACbF,KAAK,EAAEA,KAAK;cACZ4B,SAAS,EAAE,eAAe;cAC1BC,SAAS,EAAE,IAAI;cACfkB,cAAc,EAAEA,cAAc;cAC9BjB,MAAM,EAAE/B,CAAC,CAAC0C,MAAM,CAACC,cAAc;cAC/BX,SAAS,EAAEhC,CAAC,CAAC0C,MAAM,CAACE;YACtB,CAAC,CAAC;YAKFxC,aAAa,CAACqC,cAAc,CAAC;UAC/B,CAAE;UACF,OAAO,EAAE,iBAACzC,CAAC,EAAK;YACdA,CAAC,CAAC0C,MAAM,CAACC,cAAc,GAAGtC,WAAW,CAAC0B,MAAM;YAC5C/B,CAAC,CAAC0C,MAAM,CAACE,YAAY,GAAGvC,WAAW,CAAC2B,SAAS;UAC/C,CAAE;UACF,KAAK,EAAEe,UAAU,CAACI,aAAc;UAChC,SAAS,EACP9C,WAAW,CAACJ,KAAK,KAAKA,KAAK,IAC3BI,WAAW,CAACyB,SAAS,KAAK,IAAI,IAC9BzB,WAAW,CAACwB,SAAS,KAAK,eAAe,IACzCxB,WAAW,CAAC2C,cAAc,KAAKA,cAChC;UACD,KAAK,EAAE;YAAEI,UAAU,EAAE,EAAE;YAAEC,WAAW,EAAE;UAAG;QAAE,EAC3C,EACF,KAAC,gBAAgB;UACf,OAAO,EAAE,mBAAM;YACb,IAAM1B,IAAI,GAAGC,eAAe,CAAC1B,UAAU,CAAC;YACxCyB,IAAI,CAACjB,OAAO,CAACT,KAAK,CAAC,CAACqB,WAAW,CAACe,MAAM,CACpCW,cAAc,EACd,CAAC,CACF;YAED5C,aAAa,CAAC,UAAC6B,SAAS;cAAA,uCACnBA,SAAS;gBACZvB,OAAO,EAAEiB,IAAI,CAACjB;cAAO;YAAA,CACrB,CAAC;YAEHN,aAAa,CAAC,UAAC6B,SAAS;cAAA,uCACnBA,SAAS;gBACZvB,OAAO,EAAEiB,IAAI,CAACjB;cAAO;YAAA,CACrB,CAAC;UACL,CAAE;UAAA,UAEF,KAAC,IAAI;YACH,KAAK,EAAE;cACLyB,UAAU,EAAE,KAAK;cACjBC,KAAK,EAAE;YACT,CAAE;YAAA;UAAA;QAGG,EACU;MAAA,EACd;IAEX,CAAC,CAAC,EACF,KAAC,MAAM;MACL,KAAK,EAAC,mBAAmB;MACzB,OAAO,EAAE,mBAAM;QACb,IAAMK,cAAc,sBAAOvC,UAAU,CAACQ,OAAO,CAAC;QAC9C+B,cAAc,CAACxC,KAAK,CAAC,CAACqB,WAAW,CAACN,IAAI,CAAC;UACrCD,KAAK,EAAE,IAAI;UACXoC,aAAa,EAAE;QACjB,CAAC,CAAC;QACF/C,aAAa,CAAC,UAAC6B,SAAS;UAAA,uCACnBA,SAAS;YACZvB,OAAO,EAAE+B;UAAc;QAAA,CACvB,CAAC;QACHtC,cAAc,CAAC;UACbF,KAAK,EAAEA,KAAK;UACZ4B,SAAS,EAAE,OAAO;UAClBC,SAAS,EAAE,IAAI;UACfkB,cAAc,EACZP,cAAc,CAACxC,KAAK,CAAC,CAACqB,WAAW,CAACX,MAAM,GAAG;QAC/C,CAAC,CAAC;MAEJ,CAAE;;MACF,KAAK,EAAE;QAAEuB,YAAY,EAAE;MAAG;IAAE,EAC5B,EACD1B,UAAU,CAACG,MAAM,GAAG,CAAC,IACpB,MAAC,IAAI;MACH,KAAK,EAAE;QACLsC,aAAa,EAAE,KAAK;QACpBK,cAAc,EAAE,eAAe;QAC/BpB,YAAY,EAAE;MAChB,CAAE;MAAA,WAEF,KAAC,QAAQ;QACP,KAAK,EAAC,YAAY;QAClB,OAAO,EAAE1B,UAAW;QACpB,QAAQ,EAAE,kBAAC8B,GAAG,EAAK;UACjB,IAAMG,cAAc,sBAAOvC,UAAU,CAACQ,OAAO,CAAC;UAC9C+B,cAAc,CAACxC,KAAK,CAAC,CAACgB,eAAe,GAAGqB,GAAG;UAC3ClC,aAAa,CAAC,UAAC6B,SAAS;YAAA,uCACnBA,SAAS;cACZvB,OAAO,EAAE+B;YAAc;UAAA,CACvB,CAAC;UAKHtC,cAAc,CAAC;YACbF,KAAK,EAAE,IAAI;YACX4B,SAAS,EAAE,IAAI;YACfC,SAAS,EAAE,IAAI;YACfkB,cAAc,EAAE;UAClB,CAAC,CAAC;QACJ,CAAE;QACF,KAAK,EAAEhD,CAAC,CAACiB,eAAgB;QACzB,KAAK,EAAE;UAAEiB,YAAY,EAAE;QAAG;MAAE,EAC5B,EACF,KAAC,IAAI;QAAA;MAAA,EAAW,EAChB,KAAC,QAAQ;QACP,KAAK,EAAC,YAAY;QAClB,OAAO,EAAE5B,gBAAiB;QAC1B,QAAQ,EAAE,kBAACgC,GAAG,EAAK;UACjB,IAAMG,cAAc,sBAAOvC,UAAU,CAACQ,OAAO,CAAC;UAC9C+B,cAAc,CAACxC,KAAK,CAAC,CAACsD,iBAAiB,GAAGjB,GAAG;UAC7ClC,aAAa,CAAC,UAAC6B,SAAS;YAAA,uCACnBA,SAAS;cACZvB,OAAO,EAAE+B;YAAc;UAAA,CACvB,CAAC;;UAMHtC,cAAc,CAAC;YACbF,KAAK,EAAE,IAAI;YACX4B,SAAS,EAAE,IAAI;YACfC,SAAS,EAAE,IAAI;YACfkB,cAAc,EAAE;UAClB,CAAC,CAAC;QACJ,CAAE;QACF,KAAK,EAAEhD,CAAC,CAACuD,iBAAkB;QAC3B,KAAK,EAAE;UAAErB,YAAY,EAAE;QAAG;MAAE,EAC5B;IAAA,EAEL;EAAA,EACI;AAEX,CAAC;AAEX,IAAMsB,UAAU,GAAG,SAAbA,UAAU,QAKV;EAAA,IAJJC,eAAe,SAAfA,eAAe;IACfC,iBAAiB,SAAjBA,iBAAiB;IACjBC,eAAe,SAAfA,eAAe;IACfC,oBAAoB,SAApBA,oBAAoB;EAEpB,IAAMC,OAAO,GAAGhE,cAAc,CAACiE,GAAG,EAAE;EACpC,iBAAoCrE,QAAQ,CAC1CkE,eAAe,GACXA,eAAe,GACf;MACEI,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,IAAI;MACdvD,OAAO,EAAE,EAAE;MACXwD,WAAW,EAAE;IACf,CAAC,CACN;IAAA;IAVMhE,UAAU;IAAEE,aAAa;EAWhC,iBAAsCX,QAAQ,CAAC;MAC7CQ,KAAK,EAAE,IAAI;MACX4B,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE;IACb,CAAC,CAAC;IAAA;IANK3B,WAAW;IAAEF,cAAc;EAQlC,SAASgE,gBAAgB,CAACC,eAAe,EAAE;IACzC,IAAIA,eAAe,EAAE;MACnBtE,UAAU,oBACJ+D,OAAO,CAACQ,UAAU,gCAClBR,OAAO,CAACS,QAAQ,IAAEF,eAAe,GACtC;IACH,CAAC,MAAM,IAAIT,eAAe,EAAE;MAC1B,IAAIhC,IAAI,GAAGC,eAAe,CAACiC,OAAO,CAACS,QAAQ,CAAC;MAC5C3C,IAAI,CAACiC,oBAAoB,CAAC,GAAG1D,UAAU;MAEvCJ,UAAU,oBAAK+D,OAAO,CAACQ,UAAU,GAAG1C,IAAI,CAAC;IAC3C,CAAC,MAAM;MACL7B,UAAU,oBAAK+D,OAAO,CAACQ,UAAU,gCAAOR,OAAO,CAACS,QAAQ,IAAEpE,UAAU,GAAE;IACxE;IACAwD,iBAAiB,CAAC,IAAI,CAAC;EACzB;;EAUA,IAAMa,oBAAoB,GAAG,SAAvBA,oBAAoB,GAAS;IACjC,OACE,MAAC,IAAI;MAAA,WACH,KAAC,QAAQ;QACP,IAAI,EAAErE,UAAU,CAACQ,OAAQ;QACzB,UAAU,EAAE;UAAA,IAAG8D,IAAI,SAAJA,IAAI;YAAEvE,KAAK,SAALA,KAAK;UAAA,OAAO,KAAC,UAAU;YAAC,CAAC,EAAEuE,IAAK;YAAC,KAAK,EAAEvE;UAAM,EAAG;QAAA;MAAC,EACvE,EACF,KAAC,MAAM;QACL,KAAK,EAAC,oBAAoB;QAC1B,OAAO,EAAE,mBAAM;;UAGbG,aAAa,CAAC,UAAC6B,SAAS;YAAA,uCACnBA,SAAS;cACZvB,OAAO,+BACFuB,SAAS,CAACvB,OAAO,IACpB;gBACEK,KAAK,EAAE,IAAI;gBACXO,WAAW,EAAE,EAAE;gBACfL,eAAe,EAAE,IAAI;gBACrBsC,iBAAiB,EAAE,IAAI;gBACvBV,eAAe,EAAE;cACnB,CAAC;YACF;UAAA,CACD,CAAC;;UAGH1C,cAAc,CAAC;YACbF,KAAK,EAAEC,UAAU,CAACQ,OAAO,CAACC,MAAM;YAChCkB,SAAS,EAAE,OAAO;YAClBC,SAAS,EAAE,KAAK;YAChBkB,cAAc,EAAE;UAClB,CAAC,CAAC;QACJ,CAAE;QACF,KAAK,EAAE;UAAEd,YAAY,EAAE;QAAG;MAAE,EAC5B;IAAA,EACG;EAEX,CAAC;EAED,OACE,MAAC,UAAU;IACT,qBAAqB,EAAE;MACrBuC,KAAK,EAAE,KAAK;MACZC,SAAS,EAAE,QAAQ;MACnBC,SAAS,EAAE;IACb,CAAE;IAAA,WAEF,MAAC,IAAI;MACH,KAAK,EAAE;QACL1B,aAAa,EAAE,KAAK;QACpBzB,OAAO,EAAE,EAAE;QACX8B,cAAc,EAAE,eAAe;QAC/BJ,UAAU,EAAE;MACd,CAAE;MAAA,WAEF,KAAC,gBAAgB;QAAC,OAAO,EAAE;UAAA,OAAMO,eAAe,CAAC,KAAK,CAAC;QAAA,CAAC;QAAA,UACtD,KAAC,IAAI;UAAC,KAAK,EAAE;YAAEvB,YAAY,EAAE,EAAE;YAAEC,UAAU,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAM,CAAE;UAAA;QAAA;MAE5D,EACU,EACnB,KAAC,gBAAgB;QACf,OAAO,EAAE,mBAAM;UACb,IAAIT,IAAI,GAAGC,eAAe,CAAC1B,UAAU,CAAC;UACtCyB,IAAI,CAACoC,IAAI,GAAGpC,IAAI,CAACoC,IAAI,GAAG,OAAO;UAC/BI,gBAAgB,CAACxC,IAAI,CAAC;QACxB,CAAE;QAAA,UAEF,KAAC,IAAI;UAAC,KAAK,EAAE;YAAEO,YAAY,EAAE,EAAE;YAAEC,UAAU,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAM,CAAE;UAAA;QAAA;MAE5D,EACU,EACnB,KAAC,IAAI;QAAC,KAAK,EAAE;UAAEF,YAAY,EAAE;QAAG,CAAE;QAAA;MAAA,EAAkB;IAAA,EAC/C,EACP,KAAC,SAAS;MACR,WAAW,EAAC,oBAAoB;MAChC,YAAY,EAAE,sBAACI,GAAG,EAAK;QACrBlC,aAAa,CAAC,UAAC6B,SAAS;UAAA,uCAAWA,SAAS;YAAE8B,IAAI,EAAEzB;UAAG;QAAA,CAAG,CAAC;MAC7D,CAAE;MACF,KAAK,EAAEpC,UAAU,CAAC6D,IAAK;MACvB,KAAK,EAAE;QAAE7B,YAAY,EAAE;MAAG;IAAE,EAC5B,EACF,KAAC,SAAS;MACR,WAAW,EAAC,2CAA2C;MACvD,YAAY,EAAE,sBAACI,GAAG,EAAK;QACrBlC,aAAa,CAAC,UAAC6B,SAAS;UAAA,uCAAWA,SAAS;YAAEiC,WAAW,EAAE5B;UAAG;QAAA,CAAG,CAAC;MACpE,CAAE;MACF,KAAK,EAAE;QAAEJ,YAAY,EAAE;MAAG,CAAE;MAC5B,KAAK,EAAEhC,UAAU,CAACgE;IAAY,EAC9B,EACF,KAAC,SAAS;MACR,WAAW,EAAC,qBAAqB;MACjC,YAAY,EAAE,sBAAC5B,GAAG,EAAK;QACrBlC,aAAa,CAAC,UAAC6B,SAAS;UAAA,uCAAWA,SAAS;YAAE+B,KAAK,EAAE1B;UAAG;QAAA,CAAG,CAAC;MAC9D,CAAE;MACF,KAAK,EAAE;QAAEJ,YAAY,EAAE;MAAG,CAAE;MAC5B,KAAK,EAAEhC,UAAU,CAAC8D;IAAM,EACxB,EACF,KAAC,QAAQ;MACP,KAAK,EAAC,iBAAiB;MACvB,OAAO,EAAEH,OAAO,CAACQ,UAAW;MAC5B,QAAQ,EAAE,kBAAC/B,GAAG,EAAK;QACjBlC,aAAa,CAAC,UAAC6B,SAAS;UAAA,uCAAWA,SAAS;YAAEgC,QAAQ,EAAE3B;UAAG;QAAA,CAAG,CAAC;MACjE,CAAE;MACF,KAAK,EAAEpC,UAAU,CAAC+D,QAAS;MAC3B,KAAK,EAAE;QAAE/B,YAAY,EAAE;MAAG;IAAE,EAC5B,EACF,KAAC,oBAAoB,KAAG,EACxB,KAAC,MAAM;MACL,KAAK,EAAC,kBAAkB;MACxB,OAAO,EAAE;QAAA,OAAMiC,gBAAgB,EAAE;MAAA,CAAC;MAClC,KAAK,EAAE;QACLjC,YAAY,EAAE,EAAE;QAChByC,SAAS,EAAE,EAAE;QACbjD,eAAe,EAAE;MACnB;IAAE,EACF;EAAA,EACS;AAEjB,CAAC;AAED,eAAe8B,UAAU;AAEzB,IAAMoB,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}