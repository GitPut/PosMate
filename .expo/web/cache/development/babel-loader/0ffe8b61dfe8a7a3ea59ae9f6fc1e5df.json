{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar functions = require(\"firebase-functions\");\nvar admin = require(\"firebase-admin\");\nvar nodemailer = require(\"nodemailer\");\nvar cors = require(\"cors\")({\n  origin: true\n});\nadmin.initializeApp();\n\nvar transporter = nodemailer.createTransport({\n  host: \"smtp.office365.com\",\n  port: 587,\n  secure: false,\n  requireTLS: true,\n  auth: {\n    user: \"support@divinepos.com\",\n    pass: \"20Peter12\"\n  },\n  tls: {\n    ciphers: \"SSLv3\"\n  }\n});\n\nexports.sendEmail = functions.https.onRequest(function (req, res) {\n  console.log(\"from sendEmail function. The request object is:\", JSON.stringify(req.body));\n\n  cors(req, res, function () {\n    var email = req.body.email;\n    var name = req.body.name;\n    var message = req.body.message;\n\n    var mailOptions = {\n      from: email,\n      to: \"support@divinepos.com\",\n      subject: \"Divine Pos Message\",\n      text: message\n    };\n\n    return transporter.sendMail(mailOptions, function (error, info) {\n      if (error) {\n        return res.status(500).send({\n          data: {\n            status: 500,\n            message: error.toString()\n          }\n        });\n      }\n      return res.status(200).send({\n        data: {\n          status: 200,\n          message: \"sent\"\n        }\n      });\n    });\n  });\n});\n\nexports.sendPasswordResetEmail = functions.https.onRequest(function (req, res) {\n  cors(req, res, function () {\n    var email = req.body.email;\n    admin.auth().generatePasswordResetLink(email).then(function () {\n      var _ref = _asyncToGenerator(function* (link) {\n        var updatedLink = link.replace(\"posmate-5fc0a.firebaseapp\", \"divinepos\");\n        var mailOptions = {\n          from: \"support@divinepos.com\",\n          to: email,\n          subject: \"Divine Pos Password Reset\",\n          html: \"<h1>Divine Pos Password Reset</h1>\\n                        <p>\\n                           <b>Hello! Here is your password reset link: </b>\" + updatedLink + \"<br>\\n                        </p>\"\n        };\n        return transporter.sendMail(mailOptions, function (error, data) {\n          if (error) {\n            return res.send(error.toString());\n          }\n          var data = JSON.stringify(data);\n          return res.send(\"Sent! \" + data);\n        });\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).catch(function (error) {\n      res.status(500).send({\n        data: {\n          status: 500,\n          message: error.toString()\n        }\n      });\n    });\n  });\n});\n\nexports.sendSettingsPass = functions.https.onRequest(function (req, res) {\n  cors(req, res, function () {\n    var email = req.body.email;\n    var password = req.body.password;\n    var mailOptions = {\n      from: \"support@divinepos.com\",\n      to: email,\n      subject: \"Divine Pos Settings Password\",\n      html: \"<h1>Divine Pos Settings Password</h1>\\n                        <p>\\n                           <b>Hello! Here is your password for your settings page: </b>\" + password + \"<br>\\n                        </p>\"\n    };\n    return transporter.sendMail(mailOptions, function (error, data) {\n      if (error) {\n        return res.send(error.toString());\n      }\n      var data = JSON.stringify(data);\n      return res.send(\"Sent! \" + data);\n    });\n  });\n});","map":{"version":3,"names":["functions","require","admin","nodemailer","cors","origin","initializeApp","transporter","createTransport","host","port","secure","requireTLS","auth","user","pass","tls","ciphers","exports","sendEmail","https","onRequest","req","res","console","log","JSON","stringify","body","email","name","message","mailOptions","from","to","subject","text","sendMail","error","info","status","send","data","toString","sendPasswordResetEmail","generatePasswordResetLink","then","link","updatedLink","replace","html","catch","sendSettingsPass","password"],"sources":["/Users/peterputros/Desktop/PosMate/functions/index.js"],"sourcesContent":["// import { createRequire } from \"module\";\n// const require = createRequire(import.meta.url);\n\nconst functions = require(\"firebase-functions\");\nconst admin = require(\"firebase-admin\");\nconst nodemailer = require(\"nodemailer\");\n//when this cloud function is already deployed, change the origin to 'https://your-deployed-app-url\nconst cors = require(\"cors\")({ origin: true });\n// const { SMTPClient } = require(\"emailjs\");\nadmin.initializeApp();\n\n// const client = new SMTPClient({\n//   user: \"support@divinepos.com\",\n//   password: \"20Peter12\",\n//   host: \"smtp.office365.com\",\n//   ssl: true,\n// });\n\n//create and config transporter\nlet transporter = nodemailer.createTransport({\n  // name: \"outlook.office365.com\",\n  host: \"smtp.office365.com\",\n  port: 587,\n  secure: false, // true for 465, false for other ports\n  requireTLS: true,\n  auth: {\n    user: \"support@divinepos.com\",\n    pass: \"20Peter12\",\n  },\n  tls: {\n    ciphers: \"SSLv3\",\n  },\n});\n\n//export the cloud function called `sendEmail`\nexports.sendEmail = functions.https.onRequest((req, res) => {\n  //for testing purposes\n  console.log(\n    \"from sendEmail function. The request object is:\",\n    JSON.stringify(req.body)\n  );\n\n  //enable CORS using the `cors` express middleware.\n  cors(req, res, () => {\n    //get contact form data from the req and then assigned it to variables\n    const email = req.body.email;\n    const name = req.body.name;\n    const message = req.body.message;\n\n    //config the email message\n    const mailOptions = {\n      from: email,\n      to: `support@divinepos.com`,\n      subject: \"Divine Pos Message\",\n      text: message,\n    };\n\n    //call the built in `sendMail` function and return different responses upon success and failure\n    return transporter.sendMail(mailOptions, (error, info) => {\n      if (error) {\n        return res.status(500).send({\n          data: {\n            status: 500,\n            message: error.toString(),\n          },\n        });\n      }\n\n      return res.status(200).send({\n        data: {\n          status: 200,\n          message: \"sent\",\n        },\n      });\n    });\n  });\n});\n\n//export the cloud function called `sendEmail`\nexports.sendPasswordResetEmail = functions.https.onRequest((req, res) => {\n  //enable CORS using the `cors` express middleware.\n  cors(req, res, () => {\n    //get contact form data from the req and then assigned it to variables\n    const email = req.body.email;\n\n    admin\n      .auth()\n      .generatePasswordResetLink(email)\n      .then(async (link) => {\n        const updatedLink = link.replace(\n          \"posmate-5fc0a.firebaseapp\",\n          \"divinepos\"\n        );\n\n        const mailOptions = {\n          from: \"support@divinepos.com\",\n          to: email,\n          subject: \"Divine Pos Password Reset\",\n          html: `<h1>Divine Pos Password Reset</h1>\n                        <p>\n                           <b>Hello! Here is your password reset link: </b>${updatedLink}<br>\n                        </p>`,\n        };\n        return transporter.sendMail(mailOptions, (error, data) => {\n          if (error) {\n            return res.send(error.toString());\n          }\n          var data = JSON.stringify(data);\n          return res.send(`Sent! ${data}`);\n        });\n        // const mailOptions = {\n        //   from: \"support@divinepos.com\",\n        //   to: email,\n        //   subject: \"Divine Pos Password Reset\",\n        //   text: `Hello! Here is your password reset link: ${updatedLink}`,\n        // };\n        // await new Promise((resolve, reject) => {\n        //   transporter.sendMail(mailOptions, (error, info) => {\n        //     if (error) {\n        //       res.status(500).send({\n        //         data: {\n        //           status: 500,\n        //           message: error.toString(),\n        //         },\n        //       });\n        //     } else {\n        //       res.status(200).send({\n        //         data: {\n        //           status: 200,\n        //           message: \"sent\",\n        //         },\n        //       });\n        //     }\n        //   });\n        // });\n      })\n      .catch((error) => {\n        res.status(500).send({\n          data: {\n            status: 500,\n            message: error.toString(),\n          },\n        });\n      });\n  });\n});\n\n\n//export the cloud function called `sendEmail`\nexports.sendSettingsPass = functions.https.onRequest((req, res) => {\n  //enable CORS using the `cors` express middleware.\n  cors(req, res, () => {\n    //get contact form data from the req and then assigned it to variables\n    const email = req.body.email;\n    const password = req.body.password;\n\n        const mailOptions = {\n          from: \"support@divinepos.com\",\n          to: email,\n          subject: \"Divine Pos Settings Password\",\n          html: `<h1>Divine Pos Settings Password</h1>\n                        <p>\n                           <b>Hello! Here is your password for your settings page: </b>${password}<br>\n                        </p>`,\n        };\n        return transporter.sendMail(mailOptions, (error, data) => {\n          if (error) {\n            return res.send(error.toString());\n          }\n          var data = JSON.stringify(data);\n          return res.send(`Sent! ${data}`);\n        });\n  });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}