{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FieldInputWithLabel from \"./FieldInputWithLabel\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\nfunction CheckOutDetails(_ref) {\n  var storeDetails = _ref.storeDetails,\n    setorderDetails = _ref.setorderDetails,\n    orderDetails = _ref.orderDetails,\n    setpage = _ref.setpage;\n  function calculateDistance(lat1, lon1, lat2, lon2) {\n    var R = 6371;\n    var dLat = (lat2 - lat1) * (Math.PI / 180);\n    var dLon = (lon2 - lon1) * (Math.PI / 180);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * (Math.PI / 180)) * Math.cos(lat2 * (Math.PI / 180)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var distance = R * c;\n    return distance;\n  }\n\n  function getLatLng(_x) {\n    return _getLatLng.apply(this, arguments);\n  }\n  function _getLatLng() {\n    _getLatLng = _asyncToGenerator(function* (placeId) {\n      var response = yield fetch(\"https://us-central1-posmate-5fc0a.cloudfunctions.net/getLatLng\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          placeId: placeId\n        })\n      });\n      try {\n        var responseData = yield response.json();\n        if (response.ok && responseData.success) {\n          console.log(\"Success!\");\n          return responseData.data;\n        } else {\n          console.error(responseData.message);\n        }\n      } catch (jsonError) {\n        console.error(\"Error parsing JSON response:\", jsonError);\n      }\n    });\n    return _getLatLng.apply(this, arguments);\n  }\n  function calculateDistanceBetweenAddresses(_x2, _x3) {\n    return _calculateDistanceBetweenAddresses.apply(this, arguments);\n  }\n  function _calculateDistanceBetweenAddresses() {\n    _calculateDistanceBetweenAddresses = _asyncToGenerator(function* (address1, address2) {\n      try {\n        var _yield$getLatLng = yield getLatLng(address1),\n          lat1 = _yield$getLatLng.lat,\n          lon1 = _yield$getLatLng.lng;\n        var _yield$getLatLng2 = yield getLatLng(address2),\n          lat2 = _yield$getLatLng2.lat,\n          lon2 = _yield$getLatLng2.lng;\n        var distance = calculateDistance(lat1, lon1, lat2, lon2);\n        return distance;\n      } catch (error) {\n        console.error(\"Error calculating distance:\", error);\n        return null;\n      }\n    });\n    return _calculateDistanceBetweenAddresses.apply(this, arguments);\n  }\n  var stripe = useStripe();\n  var elements = useElements();\n  var _useState = useState(\"cad\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    currency = _useState2[0],\n    setCurrency = _useState2[1];\n\n  var handleSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* (event) {\n      event.preventDefault();\n      if (!stripe || !elements) {\n        return;\n      }\n      var cardElement = elements.getElement(_jsx(CardElement, {\n        options: {\n          hidePostalCode: true\n        }\n      }));\n      var _yield$stripe$createT = yield stripe.createToken(cardElement),\n        token = _yield$stripe$createT.token,\n        error = _yield$stripe$createT.error;\n      if (error) {\n        console.error(\"Error creating token:\", error);\n      } else {\n        console.log(\"Token:\", token);\n\n        var response = yield fetch(\"https://us-central1-posmate-5fc0a.cloudfunctions.net/processPayment\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            token: token.id,\n            amount: orderDetails.total,\n            currency: currency,\n            storeUID: storeDetails.docID,\n            orderDetails: orderDetails\n          })\n        });\n        try {\n          var responseData = yield response.json();\n          if (response.ok && responseData.success) {\n            console.log(\"Payment processed successfully!\");\n            setpage(4);\n          } else {\n            console.error(\"Payment processing failed. Server message:\", responseData.message);\n          }\n        } catch (jsonError) {\n          console.error(\"Error parsing JSON response:\", jsonError);\n        }\n      }\n    });\n    return function handleSubmit(_x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.fieldsGroup,\n      children: [_jsx(FieldInputWithLabel, {\n        txtInput: \"Name\",\n        label: \"Name*\",\n        style: styles.nameField,\n        value: orderDetails.customer.name,\n        onChangeText: function onChangeText(text) {\n          return setorderDetails(_objectSpread(_objectSpread({}, orderDetails), {}, {\n            customer: _objectSpread(_objectSpread({}, orderDetails.customer), {}, {\n              name: text\n            })\n          }));\n        }\n      }), _jsx(FieldInputWithLabel, {\n        txtInput: \"(123) 456-7890\",\n        label: \"Phone Number*\",\n        style: styles.nameField,\n        value: orderDetails.customer.phoneNumber,\n        onChangeText: function onChangeText(text) {\n          return setorderDetails(_objectSpread(_objectSpread({}, orderDetails), {}, {\n            customer: _objectSpread(_objectSpread({}, orderDetails.customer), {}, {\n              phoneNumber: text\n            })\n          }));\n        }\n      }), _jsx(FieldInputWithLabel, {\n        txtInput: \"Delivery Address\",\n        label: \"Delivery Address*\",\n        style: styles.addressField,\n        customInput: function customInput() {\n          return _jsx(GooglePlacesAutocomplete, {\n            apiOptions: {\n              region: \"CA\"\n            },\n            debounce: 800,\n            apiKey: GOOGLE_API_KEY\n            ,\n            selectProps: {\n              address: orderDetails.address,\n              onChange: function onChange(address) {\n                return setorderDetails(_objectSpread(_objectSpread({}, orderDetails), {}, {\n                  address: address\n                }));\n              },\n              defaultValue: orderDetails.address,\n              menuPortalTarget: document.body,\n              styles: {\n                menuPortal: function menuPortal(base) {\n                  return _objectSpread(_objectSpread({}, base), {}, {\n                    zIndex: 9999\n                  });\n                }\n              }\n            },\n            renderSuggestions: function renderSuggestions(active, suggestions, onSelectSuggestion) {\n              return _jsx(\"div\", {\n                children: suggestions.map(function (suggestion) {\n                  return _jsx(\"div\", {\n                    className: \"suggestion\",\n                    onClick: function onClick(event) {\n                      onSelectSuggestion(suggestion, event);\n                    },\n                    children: suggestion.description\n                  });\n                })\n              });\n            }\n          });\n        }\n      }), _jsxs(View, {\n        style: styles.buzzCodeAndPhoneRow,\n        children: [_jsx(FieldInputWithLabel, {\n          txtInput: \"#\",\n          label: \"Buzz Code\",\n          style: styles.buzzCodeField,\n          value: orderDetails.customer.buzzCode,\n          onChangeText: function onChangeText(text) {\n            return setorderDetails(_objectSpread(_objectSpread({}, orderDetails), {}, {\n              customer: _objectSpread(_objectSpread({}, orderDetails.customer), {}, {\n                buzzCode: text\n              })\n            }));\n          }\n        }), _jsx(FieldInputWithLabel, {\n          txtInput: \"#\",\n          label: \"Unit Number\",\n          style: styles.phoneNumberField,\n          value: orderDetails.customer.unitNumber,\n          onChangeText: function onChangeText(text) {\n            return setorderDetails(_objectSpread(_objectSpread({}, orderDetails), {}, {\n              customer: _objectSpread(_objectSpread({}, orderDetails.customer), {}, {\n                unitNumber: text\n              })\n            }));\n          }\n        })]\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.continueBtn,\n      onPress: function onPress() {\n        setpage(2);\n      },\n      children: _jsx(Text, {\n        style: styles.continueBtnTxt,\n        children: \"CONTINUE\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: 380,\n    height: 390\n  },\n  fieldsGroup: {\n    width: 380,\n    height: 325,\n    justifyContent: \"space-between\"\n  },\n  nameField: {\n    height: 70,\n    width: 380\n  },\n  addressField: {\n    height: 70,\n    width: 380\n  },\n  buzzCodeAndPhoneRow: {\n    width: 380,\n    height: 70,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  buzzCodeField: {\n    height: 70,\n    width: 175\n  },\n  phoneNumberField: {\n    height: 70,\n    width: 175\n  },\n  continueBtn: {\n    width: 219,\n    height: 60,\n    backgroundColor: \"rgba(238,125,67,1)\",\n    borderRadius: 60,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    elevation: 30,\n    shadowOpacity: 0.2,\n    shadowRadius: 10\n  },\n  continueBtnTxt: {\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 18,\n    fontWeight: \"700\"\n  }\n});\nexport default CheckOutDetails;","map":{"version":3,"names":["React","FieldInputWithLabel","GooglePlacesAutocomplete","GOOGLE_API_KEY","CheckOutDetails","storeDetails","setorderDetails","orderDetails","setpage","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","distance","getLatLng","placeId","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","success","console","log","data","error","message","jsonError","calculateDistanceBetweenAddresses","address1","address2","lat","lng","stripe","useStripe","elements","useElements","useState","currency","setCurrency","handleSubmit","event","preventDefault","cardElement","getElement","hidePostalCode","createToken","token","id","amount","total","storeUID","docID","styles","fieldsGroup","nameField","customer","name","text","phoneNumber","addressField","region","address","onChange","defaultValue","menuPortalTarget","document","menuPortal","base","zIndex","active","suggestions","onSelectSuggestion","map","suggestion","description","buzzCodeAndPhoneRow","buzzCodeField","buzzCode","phoneNumberField","unitNumber","continueBtn","continueBtnTxt","StyleSheet","create","container","width","height","justifyContent","flexDirection","backgroundColor","borderRadius","alignItems","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","color","fontSize","fontWeight"],"sources":["/Users/peterputros/Desktop/PosMate/pages/non-authed/OnlineOrderPages/components/home/CheckOutDetails.tsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, View, TouchableOpacity, Text } from \"react-native\";\nimport FieldInputWithLabel from \"./FieldInputWithLabel\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nconst GOOGLE_API_KEY = \"AIzaSyDjx4LBIEDNRYKEt-0_TJ6jUcst4a2YON4\";\n\nfunction CheckOutDetails({\n  storeDetails,\n  setorderDetails,\n  orderDetails,\n  setpage,\n}) {\n  // Function to calculate distance between two points using Haversine formula\n  function calculateDistance(lat1, lon1, lat2, lon2) {\n    const R = 6371; // Radius of the Earth in km\n    const dLat = (lat2 - lat1) * (Math.PI / 180); // Convert degrees to radians\n    const dLon = (lon2 - lon1) * (Math.PI / 180);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(lat1 * (Math.PI / 180)) *\n        Math.cos(lat2 * (Math.PI / 180)) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in km\n    return distance;\n  }\n\n  // Function to get the latitude and longitude of an address using the Google Maps Geocoding API\n  async function getLatLng(placeId) {\n    const response = await fetch(\n      \"https://us-central1-posmate-5fc0a.cloudfunctions.net/getLatLng\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          placeId: placeId,\n        }),\n      }\n    );\n\n    try {\n      const responseData = await response.json();\n\n      if (response.ok && responseData.success) {\n        console.log(\"Success!\");\n        return responseData.data;\n      } else {\n        console.error(responseData.message);\n      }\n    } catch (jsonError) {\n      console.error(\"Error parsing JSON response:\", jsonError);\n    }\n  }\n\n  // Function to calculate distance between two addresses using Google Places API\n  async function calculateDistanceBetweenAddresses(address1, address2) {\n    try {\n      const { lat: lat1, lng: lon1 } = await getLatLng(address1);\n      const { lat: lat2, lng: lon2 } = await getLatLng(address2);\n      const distance = calculateDistance(lat1, lon1, lat2, lon2);\n      return distance;\n    } catch (error) {\n      console.error(\"Error calculating distance:\", error);\n      return null;\n    }\n  }\n\n  //////////////////////////\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [currency, setCurrency] = useState(\"cad\"); // Default to CAD\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet.\n      return;\n    }\n\n    const cardElement = elements.getElement(\n      <CardElement options={{ hidePostalCode: true }} />\n    );\n\n    const { token, error } = await stripe.createToken(cardElement);\n\n    if (error) {\n      console.error(\"Error creating token:\", error);\n    } else {\n      console.log(\"Token:\", token);\n\n      // Send the token, amount, and currency to your Firebase Function to process the payment\n      const response = await fetch(\n        \"https://us-central1-posmate-5fc0a.cloudfunctions.net/processPayment\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            token: token.id,\n            amount: orderDetails.total,\n            currency,\n            storeUID: storeDetails.docID,\n            orderDetails: orderDetails,\n          }),\n        }\n      );\n\n      try {\n        const responseData = await response.json();\n\n        if (response.ok && responseData.success) {\n          console.log(\"Payment processed successfully!\");\n          setpage(4);\n        } else {\n          console.error(\n            \"Payment processing failed. Server message:\",\n            responseData.message\n          );\n        }\n      } catch (jsonError) {\n        console.error(\"Error parsing JSON response:\", jsonError);\n      }\n    }\n  };\n\n\n  return (\n    <>\n      <View style={styles.fieldsGroup}>\n        <FieldInputWithLabel\n          txtInput=\"Name\"\n          label=\"Name*\"\n          style={styles.nameField}\n          value={orderDetails.customer.name}\n          onChangeText={(text) =>\n            setorderDetails({\n              ...orderDetails,\n              customer: { ...orderDetails.customer, name: text },\n            })\n          }\n        ></FieldInputWithLabel>\n        <FieldInputWithLabel\n          txtInput=\"(123) 456-7890\"\n          label=\"Phone Number*\"\n          style={styles.nameField}\n          value={orderDetails.customer.phoneNumber}\n          onChangeText={(text) =>\n            setorderDetails({\n              ...orderDetails,\n              customer: { ...orderDetails.customer, phoneNumber: text },\n            })\n          }\n        ></FieldInputWithLabel>\n        <FieldInputWithLabel\n          txtInput=\"Delivery Address\"\n          label=\"Delivery Address*\"\n          style={styles.addressField}\n          customInput={() => (\n            <GooglePlacesAutocomplete\n              apiOptions={{\n                region: \"CA\",\n              }}\n              debounce={800}\n              apiKey={GOOGLE_API_KEY}\n              // onSelect={handleAddress}\n              selectProps={{\n                address: orderDetails.address,\n                onChange: (address) =>\n                  setorderDetails({ ...orderDetails, address }),\n                defaultValue: orderDetails.address,\n                menuPortalTarget: document.body,\n                styles: {\n                  menuPortal: (base) => ({ ...base, zIndex: 9999 }),\n                },\n              }}\n              renderSuggestions={(active, suggestions, onSelectSuggestion) => (\n                <div>\n                  {suggestions.map((suggestion) => (\n                    <div\n                      className=\"suggestion\"\n                      onClick={(event) => {\n                        onSelectSuggestion(suggestion, event);\n                      }}\n                    >\n                      {suggestion.description}\n                    </div>\n                  ))}\n                </div>\n              )}\n            />\n          )}\n        ></FieldInputWithLabel>\n        <View style={styles.buzzCodeAndPhoneRow}>\n          <FieldInputWithLabel\n            txtInput=\"#\"\n            label=\"Buzz Code\"\n            style={styles.buzzCodeField}\n            value={orderDetails.customer.buzzCode}\n            onChangeText={(text) =>\n              setorderDetails({\n                ...orderDetails,\n                customer: { ...orderDetails.customer, buzzCode: text },\n              })\n            }\n          ></FieldInputWithLabel>\n          <FieldInputWithLabel\n            txtInput=\"#\"\n            label=\"Unit Number\"\n            style={styles.phoneNumberField}\n            value={orderDetails.customer.unitNumber}\n            onChangeText={(text) =>\n              setorderDetails({\n                ...orderDetails,\n                customer: { ...orderDetails.customer, unitNumber: text },\n              })\n            }\n          ></FieldInputWithLabel>\n        </View>\n      </View>\n      <TouchableOpacity\n        style={styles.continueBtn}\n        onPress={() => {\n          // if (\n          //   orderDetails.customer.name === \"\" ||\n          //   orderDetails.customer.phoneNumber === \"\" ||\n          //   orderDetails.address === \"\"\n          // )\n          //   return alert(\"Please fill in all fields\");\n          // calculateDistanceBetweenAddresses(\n          //   storeDetails.address.value.reference,\n          //   orderDetails.address.value.reference\n          // ).then((distance) => {\n          //   if (distance !== null) {\n          //     console.log(\n          //       `Distance between addresses: ${distance.toFixed(2)} km`\n          //     );\n          //     if (storeDetails.deliveryRange) {\n          //       if (distance > parseFloat(storeDetails.deliveryRange)) {\n          //         alert(\"The delivery address is out of range\");\n          //       } else {\n          //         setpage(2);\n          //       }\n          //     } else {\n          //       setpage(2);\n          //     }\n          //   } else {\n          //     alert(\n          //       \"Distance calculation between the store and your location failed. Please refresh page.\"\n          //     );\n          //   }\n          // });\n          setpage(2);\n        }}\n      >\n        <Text style={styles.continueBtnTxt}>CONTINUE</Text>\n      </TouchableOpacity>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 380,\n    height: 390,\n  },\n  fieldsGroup: {\n    width: 380,\n    height: 325,\n    justifyContent: \"space-between\",\n  },\n  nameField: {\n    height: 70,\n    width: 380,\n  },\n  addressField: {\n    height: 70,\n    width: 380,\n  },\n  buzzCodeAndPhoneRow: {\n    width: 380,\n    height: 70,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  buzzCodeField: {\n    height: 70,\n    width: 175,\n  },\n  phoneNumberField: {\n    height: 70,\n    width: 175,\n  },\n  continueBtn: {\n    width: 219,\n    height: 60,\n    backgroundColor: \"rgba(238,125,67,1)\",\n    borderRadius: 60,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 3,\n      height: 3,\n    },\n    elevation: 30,\n    shadowOpacity: 0.2,\n    shadowRadius: 10,\n  },\n  continueBtnTxt: {\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 18,\n    fontWeight: \"700\",\n  },\n});\n\nexport default CheckOutDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}