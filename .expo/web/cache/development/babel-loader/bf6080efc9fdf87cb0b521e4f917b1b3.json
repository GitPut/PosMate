{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport HomeScreen from \"../../pages/authed/pos/HomeScreen\";\nimport DefaultLayout from \"../../pages/authed/main/InitialPage/Sidebar/DefaultLayout\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AuthRoute = function AuthRoute(props) {\n  var location = props.location;\n  var history = useHistory();\n  useEffect(function () {\n    var _location$pathname, _location$pathname2;\n    var isLoginSettings = localStorage.getItem(\"isAuthedBackend\");\n    if (!((_location$pathname = location.pathname) != null && _location$pathname.includes(\"/authed\")) || (_location$pathname2 = location.pathname) != null && _location$pathname2.includes(\"/authed\") && isLoginSettings === false) {\n      history.push(\"/pos\");\n    }\n  }, []);\n  useEffect(function () {\n    if (location.pathname !== '/pos' && location.pathname !== '/authed') {\n      history.push(\"/pos\");\n    }\n  }, [location.pathname]);\n  return _jsxs(Switch, {\n    children: [_jsx(Route, {\n      path: \"/pos\",\n      component: HomeScreen\n    }), _jsx(Route, {\n      path: \"/authed\",\n      component: DefaultLayout\n    })]\n  });\n};\nexport default AuthRoute;","map":{"version":3,"names":["React","useEffect","Route","Switch","HomeScreen","DefaultLayout","useHistory","AuthRoute","props","location","history","isLoginSettings","localStorage","getItem","pathname","includes","push"],"sources":["/Users/peterputros/Desktop/PosMate/navigation/authed/AuthRoute.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport HomeScreen from 'pages/authed/pos/HomeScreen';\nimport DefaultLayout from 'pages/authed/main/InitialPage/Sidebar/DefaultLayout';\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthRoute = (props) => {\n    const { location } = props;\n    const history = useHistory();\n\n    useEffect(() => {\n        const isLoginSettings = localStorage.getItem(\"isAuthedBackend\")\n        if (!location.pathname?.includes(\"/authed\") || location.pathname?.includes(\"/authed\") && isLoginSettings === false) {\n            history.push(\"/pos\");\n        }\n        // else {\n        //     history.push(\"/authed\");\n        // }\n        // //CHANGE BACK ONCE PUBLISHING\n    }, [])\n\n    useEffect(() => {\n        if (\n            location.pathname !== '/pos' &&\n            location.pathname !== '/authed'\n        ) {\n            history.push(\"/pos\");\n        }\n    }\n        , [location.pathname])\n\n\n\n    return (\n        <Switch>\n            {/* <Route path=\"/signIn\" component={SignIn} />\n                <Route path=\"/forgetPassword\" component={ForgetPassword} />\n                <Route path=\"/signUp\" component={SignUp} /> */}\n            <Route path=\"/pos\" component={HomeScreen} />\n            <Route path=\"/authed\" component={DefaultLayout} />\n\n            {/* <Route path=\"/error-404\" component={Error404} />\n                <Route path=\"/error-500\" component={Error500} />\n                <Route path=\"/pos\" component={Pos} /> */}\n\n        </Switch>\n    )\n}\n\nexport default AuthRoute"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,SAASC,UAAU,QAAQ,kBAAkB;AAAC;AAAA;AAE9C,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAIC,KAAK,EAAK;EACzB,IAAQC,QAAQ,GAAKD,KAAK,CAAlBC,QAAQ;EAChB,IAAMC,OAAO,GAAGJ,UAAU,EAAE;EAE5BL,SAAS,CAAC,YAAM;IAAA;IACZ,IAAMU,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAC/D,IAAI,wBAACJ,QAAQ,CAACK,QAAQ,aAAjB,mBAAmBC,QAAQ,CAAC,SAAS,CAAC,KAAI,uBAAAN,QAAQ,CAACK,QAAQ,aAAjB,oBAAmBC,QAAQ,CAAC,SAAS,CAAC,IAAIJ,eAAe,KAAK,KAAK,EAAE;MAChHD,OAAO,CAACM,IAAI,CAAC,MAAM,CAAC;IACxB;EAKJ,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,YAAM;IACZ,IACIQ,QAAQ,CAACK,QAAQ,KAAK,MAAM,IAC5BL,QAAQ,CAACK,QAAQ,KAAK,SAAS,EACjC;MACEJ,OAAO,CAACM,IAAI,CAAC,MAAM,CAAC;IACxB;EACJ,CAAC,EACK,CAACP,QAAQ,CAACK,QAAQ,CAAC,CAAC;EAI1B,OACI,MAAC,MAAM;IAAA,WAIH,KAAC,KAAK;MAAC,IAAI,EAAC,MAAM;MAAC,SAAS,EAAEV;IAAW,EAAG,EAC5C,KAAC,KAAK;MAAC,IAAI,EAAC,SAAS;MAAC,SAAS,EAAEC;IAAc,EAAG;EAAA,EAM7C;AAEjB,CAAC;AAED,eAAeE,SAAS"},"metadata":{},"sourceType":"module"}