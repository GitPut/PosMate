{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Component, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/Entypo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DropdownSelectableOption(_ref) {\n  var style = _ref.style,\n    setopenDropdown = _ref.setopenDropdown,\n    openDropdown = _ref.openDropdown,\n    key = _ref.key;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    val = _useState2[0],\n    setval = _useState2[1];\n  var options = [{\n    id: 1,\n    name: \"Thin\"\n  }, {\n    id: 2,\n    name: \"Thick\"\n  }, {\n    id: 3,\n    name: \"Stuffed\"\n  }];\n  return _jsxs(View, {\n    style: [styles.container, style],\n    children: [_jsx(Text, {\n      style: styles.lbl,\n      children: \"Crust\"\n    }), _jsxs(View, {\n      children: [_jsxs(TouchableOpacity, {\n        style: styles.dropdown,\n        onPress: function onPress() {\n          console.log();\n          if (openDropdown === key) {\n            setopenDropdown(null);\n          } else {\n            setopenDropdown(key);\n          }\n        },\n        children: [_jsx(Text, {\n          style: styles.placeholder,\n          children: val ? val : \"Select\"\n        }), _jsx(Icon, {\n          name: openDropdown === key ? \"chevron-small-up\" : \"chevron-small-down\",\n          style: styles.downIcon\n        })]\n      }), openDropdown === key && _jsx(View, {\n        style: {\n          width: 352,\n          position: \"absolute\",\n          backgroundColor: \"white\",\n          bottom: -44 * options.length\n        },\n        children: options.map(function (option) {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              setval(option.name);\n              setopen(false);\n            },\n            style: {\n              width: \"100%\",\n              height: 44,\n              backgroundColor: \"white\",\n              padding: 10,\n              borderWidth: 1\n            },\n            children: _jsx(Text, {\n              children: option.name\n            })\n          }, option.id);\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  lbl: {\n    fontWeight: \"700\",\n    color: \"#3e3f41\"\n  },\n  dropdown: {\n    width: 352,\n    height: 44,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: \"#6987d3\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\"\n  },\n  placeholder: {\n    fontWeight: \"500\",\n    color: \"#7f838c\",\n    fontSize: 12,\n    margin: 10\n  },\n  downIcon: {\n    color: \"rgba(128,128,128,1)\",\n    fontSize: 30,\n    margin: 0,\n    marginTop: 2,\n    marginRight: 2\n  }\n});\nexport default DropdownSelectableOption;","map":{"version":3,"names":["React","Component","useState","Icon","DropdownSelectableOption","style","setopenDropdown","openDropdown","key","val","setval","options","id","name","styles","container","lbl","dropdown","console","log","placeholder","downIcon","width","position","backgroundColor","bottom","length","map","option","setopen","height","padding","borderWidth","StyleSheet","create","flexDirection","justifyContent","alignItems","fontWeight","color","borderRadius","borderColor","fontSize","margin","marginTop","marginRight"],"sources":["/Users/peterputros/Desktop/PosMate/pages/non-authed/OnlineOrderPages/components/ProductBuilderModal/DropdownSelectableOption.js"],"sourcesContent":["import React, { Component, useState } from \"react\";\nimport { StyleSheet, View, Text, TouchableOpacity } from \"react-native\";\nimport Icon from \"react-native-vector-icons/Entypo\";\n\nfunction DropdownSelectableOption({\n  style,\n  setopenDropdown,\n  openDropdown,\n  key,\n}) {\n  const [val, setval] = useState(null);\n\n  const options = [\n    { id: 1, name: \"Thin\" },\n    { id: 2, name: \"Thick\" },\n    { id: 3, name: \"Stuffed\" },\n  ];\n\n  return (\n    <View style={[styles.container, style]}>\n      <Text style={styles.lbl}>Crust</Text>\n      <View>\n        <TouchableOpacity\n          style={styles.dropdown}\n          onPress={() => {\n            console.log()\n            if (openDropdown === key) {\n              setopenDropdown(null);\n            } else {\n              setopenDropdown(key);\n            }\n          }}\n        >\n          <Text style={styles.placeholder}>{val ? val : \"Select\"}</Text>\n          <Icon\n            name={\n              openDropdown === key ? \"chevron-small-up\" : \"chevron-small-down\"\n            }\n            style={styles.downIcon}\n          ></Icon>\n        </TouchableOpacity>\n        {openDropdown === key && (\n          <View\n            style={{\n              width: 352,\n              position: \"absolute\",\n              backgroundColor: \"white\",\n              bottom: -44 * options.length,\n              // height: 44 * options.length,\n            }}\n          >\n            {options.map((option) => (\n              <TouchableOpacity\n                key={option.id}\n                onPress={() => {\n                  setval(option.name);\n                  setopen(false);\n                }}\n                style={{\n                  width: \"100%\",\n                  height: 44,\n                  backgroundColor: \"white\",\n                  padding: 10,\n                  borderWidth: 1,\n                }}\n              >\n                <Text>{option.name}</Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  lbl: {\n    fontWeight: \"700\",\n    color: \"#3e3f41\",\n  },\n  dropdown: {\n    width: 352,\n    height: 44,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: \"#6987d3\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n  },\n  placeholder: {\n    fontWeight: \"500\",\n    color: \"#7f838c\",\n    fontSize: 12,\n    margin: 10,\n  },\n  downIcon: {\n    color: \"rgba(128,128,128,1)\",\n    fontSize: 30,\n    margin: 0,\n    marginTop: 2,\n    marginRight: 2,\n  },\n});\n\nexport default DropdownSelectableOption;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}