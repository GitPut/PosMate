{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar OptionView = function OptionView(_ref) {\n  var item = _ref.item,\n    index = _ref.index,\n    setnewProduct = _ref.setnewProduct,\n    newProduct = _ref.newProduct,\n    newProductOptions = _ref.newProductOptions,\n    indexOn = _ref.indexOn,\n    setindexOn = _ref.setindexOn;\n  if (indexOn === index) {\n    var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      optionLblsValues = _useState2[0],\n      setoptionLblsValues = _useState2[1];\n    var _useState3 = useState(item),\n      _useState4 = _slicedToArray(_useState3, 2),\n      e = _useState4[0],\n      sete = _useState4[1];\n    var _useState5 = useState(structuredClone(item.optionsList)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      testMap = _useState6[0],\n      settestMap = _useState6[1];\n    var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ifStatementList = _useState8[0],\n      setifStatementList = _useState8[1];\n    var optionLbls = newProduct.options.map(function (el) {\n      if (el.label !== e.label && el.label !== null) {\n        return el.label;\n      }\n    });\n    useEffect(function () {\n      if (e.selectedCaseKey !== null) {\n        if (newProduct.options.length > 1) {\n          var local = newProduct.options.filter(function (localE) {\n            return localE.label == e.selectedCaseKey;\n          });\n          var optionLblsValuesLocal = local.length > 0 && local[0].optionsList.map(function (el) {\n            return el.label;\n          });\n          setoptionLblsValues(optionLblsValuesLocal);\n        } else {\n          newProductOptions.current[index].selectedCaseKey = null;\n          newProductOptions.current[index].selectedCaseValue = null;\n        }\n      }\n    }, [e]);\n    return _jsx(View, {\n      children: _jsxs(View, {\n        style: {\n          padding: 25,\n          margin: 15,\n          backgroundColor: \"lightgrey\"\n        },\n        children: [_jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return indexOn !== index ? setindexOn(index) : setindexOn(null);\n          },\n          style: {\n            padding: 25,\n            margin: 15,\n            backgroundColor: \"lightgrey\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            height: 100\n          },\n          children: [_jsx(Text, {\n            children: item.label\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              newProductOptions.current.push(_objectSpread(_objectSpread({}, item), {}, {\n                label: item.label + \" Copy\"\n              }));\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newProductOptions.current\n                });\n              });\n              setindexOn(newProductOptions.current.length - 1);\n            },\n            children: _jsx(Text, {\n              style: {\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"Copy\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              newProductOptions.current.splice(index, 1);\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newProductOptions.current\n                });\n              });\n              setindexOn(indexOn - 1);\n            },\n            children: _jsx(Text, {\n              style: {\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"X\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              function moveItem(from, to) {\n                var f = newProductOptions.current.splice(from, 1)[0];\n                newProductOptions.current.splice(to, 0, f);\n              }\n              moveItem(index, index + 1);\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newProductOptions.current\n                });\n              });\n              setindexOn(null);\n            },\n            children: _jsx(Text, {\n              style: {\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"\\\\/\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              function moveItem(from, to) {\n                var f = newProductOptions.current.splice(from, 1)[0];\n                newProductOptions.current.splice(to, 0, f);\n              }\n              moveItem(index, index - 1);\n              setnewProduct(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  options: newProductOptions.current\n                });\n              });\n              setindexOn(null);\n            },\n            children: _jsx(Text, {\n              style: {\n                marginBottom: 25,\n                fontWeight: \"700\",\n                color: \"red\"\n              },\n              children: \"/\\\\\"\n            })\n          })]\n        }), _jsx(TextInput, {\n          placeholder: \"Enter Select List Label\",\n          onChangeText: function onChangeText(val) {\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                label: val\n              });\n            });\n            newProductOptions.current[index].label = val;\n          },\n          value: e.label,\n          style: {\n            marginBottom: 25\n          }\n        }), _jsx(DropDown, {\n          label: \"Option Type\",\n          options: [\"Standard\", \"Dropdown\"],\n          setValue: function setValue(val) {\n            if (e.optionType) {\n              newProductOptions.current[index].optionType = val;\n            } else {\n              newProductOptions.current[index] = _objectSpread(_objectSpread({}, e), {}, {\n                optionType: val\n              });\n              console.log(newProductOptions.current[index].optionType);\n            }\n            setnewProduct(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                options: newProductOptions.current\n              });\n            });\n          },\n          value: e.optionType,\n          style: {\n            marginBottom: 25\n          }\n        }), _jsx(TextInput, {\n          placeholder: \"Enter Number Of Selectable; If There Is\",\n          onChangeText: function onChangeText(val) {\n            sete(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                numOfSelectable: val\n              });\n            });\n            newProductOptions.current[index].numOfSelectable = val;\n          },\n          value: e.numOfSelectable,\n          style: {\n            marginBottom: 25\n          }\n        }), testMap.map(function (eInnerListStart, indexInnerList) {\n          var eInnerList = structuredClone(eInnerListStart);\n          return _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              marginBottom: 25,\n              alignItems: \"center\"\n            },\n            children: [_jsx(TextInput, {\n              placeholder: \"Enter Option Label\",\n              onChangeText: function onChangeText(val) {\n                var clone = structuredClone(testMap);\n                clone[indexInnerList].label = val;\n                newProductOptions.current[index].optionsList = clone;\n                settestMap(clone);\n              },\n              value: eInnerList.label\n            }), _jsx(TextInput, {\n              placeholder: \"Enter price increase\"\n              ,\n              onChangeText: function onChangeText(val) {\n                var clone = structuredClone(testMap);\n                clone[indexInnerList].priceIncrease = val;\n                newProductOptions.current[index].optionsList = clone;\n                settestMap(clone);\n              },\n              value: eInnerList.priceIncrease,\n              style: {\n                marginLeft: 20,\n                marginRight: 20\n              }\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                var clone = structuredClone(testMap);\n                clone.splice(indexInnerList, 1);\n                newProductOptions.current[index].optionsList = clone;\n                settestMap(clone);\n              },\n              children: _jsx(Text, {\n                style: {\n                  fontWeight: \"700\",\n                  color: \"red\"\n                },\n                children: \"X\"\n              })\n            })]\n          });\n        }), _jsx(Button, {\n          title: \"Add Option Choice\",\n          onPress: function onPress() {\n            var clone = structuredClone(testMap);\n            clone.push({\n              label: null,\n              priceIncrease: null\n            });\n            newProductOptions.current[index].optionsList = clone;\n            settestMap(clone);\n          },\n          style: {\n            marginBottom: 25\n          }\n        }), ifStatementList.map(function (ifStatement, indexOfIf) {\n          return _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              marginBottom: 25\n            },\n            children: [_jsx(DropDown, {\n              label: \"Show if...\",\n              options: optionLbls,\n              setValue: function setValue(val) {\n              },\n              value: ifStatement.selectedCaseKey,\n              style: {\n                marginBottom: 25\n              }\n            }), _jsx(Text, {\n              children: \"\\\"=\\\"\"\n            }), _jsx(DropDown, {\n              label: \"Show if...\",\n              options: optionLblsValues,\n              setValue: function setValue(val) {\n              },\n              value: ifStatement.selectedCaseValue,\n              style: {\n                marginBottom: 25\n              }\n            })]\n          });\n        }), optionLbls.length > 1 && _jsx(Button, {\n          title: \"Add If Statement\",\n          onPress: function onPress() {\n            return setifStatementList(function (prev) {\n              return [].concat(_toConsumableArray(prev), [{\n                selectedCaseKey: null,\n                selectedCaseValue: null\n              }]);\n            });\n          }\n        })]\n      })\n    });\n  } else {\n    return _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return indexOn !== index ? setindexOn(index) : setindexOn(null);\n      },\n      style: {\n        padding: 25,\n        margin: 15,\n        backgroundColor: \"lightgrey\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        height: 100\n      },\n      children: [_jsx(Text, {\n        children: item.label\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          newProductOptions.current.push(_objectSpread(_objectSpread({}, item), {}, {\n            label: item.label + \" Copy\"\n          }));\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n          setindexOn(newProductOptions.current.length - 1);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"Copy\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          newProductOptions.current.splice(index, 1);\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n          setindexOn(indexOn - 1);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"X\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          function moveItem(from, to) {\n            var f = newProductOptions.current.splice(from, 1)[0];\n            newProductOptions.current.splice(to, 0, f);\n          }\n          moveItem(index, index + 1);\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n          setindexOn(null);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"\\\\/\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          function moveItem(from, to) {\n            var f = newProductOptions.current.splice(from, 1)[0];\n            newProductOptions.current.splice(to, 0, f);\n          }\n          moveItem(index, index - 1);\n          setnewProduct(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              options: newProductOptions.current\n            });\n          });\n          setindexOn(null);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginBottom: 25,\n            fontWeight: \"700\",\n            color: \"red\"\n          },\n          children: \"/\\\\\"\n        })\n      })]\n    });\n  }\n};\nexport default OptionView;","map":{"version":3,"names":["React","useEffect","useState","Button","TextInput","DropDown","OptionView","item","index","setnewProduct","newProduct","newProductOptions","indexOn","setindexOn","optionLblsValues","setoptionLblsValues","e","sete","structuredClone","optionsList","testMap","settestMap","ifStatementList","setifStatementList","optionLbls","options","map","el","label","selectedCaseKey","length","local","filter","localE","optionLblsValuesLocal","current","selectedCaseValue","padding","margin","backgroundColor","flexDirection","justifyContent","height","push","prevState","marginBottom","fontWeight","color","splice","moveItem","from","to","f","val","optionType","console","log","numOfSelectable","eInnerListStart","indexInnerList","eInnerList","alignItems","clone","priceIncrease","marginLeft","marginRight","ifStatement","indexOfIf","prev"],"sources":["/Users/peterputros/Desktop/PosMate-1/components/OptionView.tsx"],"sourcesContent":["import { View, Text, TouchableOpacity } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, TextInput } from \"@react-native-material/core\";\nimport DropDown from \"./DropDown\";\n\nconst OptionView = ({\n  item,\n  index,\n  setnewProduct,\n  newProduct,\n  newProductOptions,\n  indexOn,\n  setindexOn,\n}) => {\n  if (indexOn === index) {\n    const [optionLblsValues, setoptionLblsValues] = useState([]);\n    const [e, sete] = useState(item);\n    const [testMap, settestMap] = useState(structuredClone(item.optionsList));\n    const [ifStatementList, setifStatementList] = useState([]);\n    var optionLbls = newProduct.options.map(function (el) {\n      if (el.label !== e.label && el.label !== null) {\n        return el.label;\n      }\n    });\n\n    useEffect(() => {\n      if (e.selectedCaseKey !== null) {\n        if (newProduct.options.length > 1) {\n          const local = newProduct.options.filter(\n            (localE) => localE.label == e.selectedCaseKey\n          );\n          const optionLblsValuesLocal =\n            local.length > 0 &&\n            local[0].optionsList.map(function (el) {\n              return el.label;\n            });\n          setoptionLblsValues(optionLblsValuesLocal);\n        } else {\n          newProductOptions.current[index].selectedCaseKey = null;\n          newProductOptions.current[index].selectedCaseValue = null;\n        }\n      }\n    }, [e]);\n\n    return (\n      <View>\n        <View\n          style={{\n            padding: 25,\n            margin: 15,\n            backgroundColor: \"lightgrey\",\n          }}\n        >\n          <TouchableOpacity\n            onPress={() =>\n              indexOn !== index ? setindexOn(index) : setindexOn(null)\n            }\n            style={{\n              padding: 25,\n              margin: 15,\n              backgroundColor: \"lightgrey\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              height: 100,\n            }}\n          >\n            <Text>{item.label}</Text>\n            <TouchableOpacity\n              onPress={() => {\n                newProductOptions.current.push({\n                  ...item,\n                  label: item.label + \" Copy\",\n                });\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(newProductOptions.current.length - 1);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                Copy\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                newProductOptions.current.splice(index, 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(indexOn - 1);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                X\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                function moveItem(from, to) {\n                  // remove `from` item and store it\n                  var f = newProductOptions.current.splice(from, 1)[0];\n                  // insert stored item into position `to`\n                  newProductOptions.current.splice(to, 0, f);\n                }\n\n                moveItem(index, index + 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(null);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                \\/\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                function moveItem(from, to) {\n                  // remove `from` item and store it\n                  var f = newProductOptions.current.splice(from, 1)[0];\n                  // insert stored item into position `to`\n                  newProductOptions.current.splice(to, 0, f);\n                }\n\n                moveItem(index, index - 1);\n\n                setnewProduct((prevState) => ({\n                  ...prevState,\n                  options: newProductOptions.current,\n                }));\n                setindexOn(null);\n              }}\n            >\n              <Text\n                style={{\n                  marginBottom: 25,\n                  fontWeight: \"700\",\n                  color: \"red\",\n                }}\n              >\n                /\\\n              </Text>\n            </TouchableOpacity>\n          </TouchableOpacity>\n          <TextInput\n            placeholder=\"Enter Select List Label\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, label: val }));\n              newProductOptions.current[index].label = val;\n            }}\n            value={e.label}\n            style={{ marginBottom: 25 }}\n          />\n          {/* optionType */}\n          <DropDown\n            label=\"Option Type\"\n            options={[\"Standard\", \"Dropdown\"]}\n            setValue={(val) => {\n              // sete((prevState) => ({\n              //   ...prevState,\n              //   optionType: val,\n              // }));\n              if (e.optionType) {\n                newProductOptions.current[index].optionType = val;\n              } else {\n                newProductOptions.current[index] = { ...e, optionType: val };\n                console.log(newProductOptions.current[index].optionType);\n              }\n              setnewProduct((prevState) => ({\n                ...prevState,\n                options: newProductOptions.current,\n              }));\n            }}\n            value={e.optionType}\n            style={{ marginBottom: 25 }}\n          />\n          <TextInput\n            placeholder=\"Enter Number Of Selectable; If There Is\"\n            onChangeText={(val) => {\n              sete((prevState) => ({ ...prevState, numOfSelectable: val }));\n              newProductOptions.current[index].numOfSelectable = val;\n            }}\n            value={e.numOfSelectable}\n            style={{ marginBottom: 25 }}\n          />\n          {testMap.map((eInnerListStart, indexInnerList) => {\n            const eInnerList = structuredClone(eInnerListStart);\n            return (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  marginBottom: 25,\n                  alignItems: \"center\",\n                }}\n              >\n                <TextInput\n                  placeholder=\"Enter Option Label\"\n                  onChangeText={(val) => {\n                    const clone = structuredClone(testMap);\n                    clone[indexInnerList].label = val;\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                  value={eInnerList.label}\n                />\n                <TextInput\n                  placeholder=\"Enter price increase\"\n                  //   onChangeText={(val) => {\n                  //     newProductOptions.current[index].optionsList[\n                  //       indexInnerList\n                  //     ].priceIncrease = val;\n                  //     seteInnerList((prevState) => ({\n                  //       ...prevState,\n                  //       priceIncrease: val,\n                  //     }));\n                  //   }}\n                  onChangeText={(val) => {\n                    const clone = structuredClone(testMap);\n                    clone[indexInnerList].priceIncrease = val;\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                  value={eInnerList.priceIncrease}\n                  style={{ marginLeft: 20, marginRight: 20 }}\n                />\n                <TouchableOpacity\n                  onPress={() => {\n                    const clone = structuredClone(testMap);\n                    clone.splice(indexInnerList, 1);\n                    newProductOptions.current[index].optionsList = clone;\n                    settestMap(clone);\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontWeight: \"700\",\n                      color: \"red\",\n                    }}\n                  >\n                    X\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            );\n          })}\n          <Button\n            title=\"Add Option Choice\"\n            onPress={() => {\n              const clone = structuredClone(testMap);\n              clone.push({\n                label: null,\n                priceIncrease: null,\n              });\n              newProductOptions.current[index].optionsList = clone;\n              settestMap(clone);\n            }}\n            style={{ marginBottom: 25 }}\n          />\n          {ifStatementList.map((ifStatement, indexOfIf) => {\n            return (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  marginBottom: 25,\n                }}\n              >\n                <DropDown\n                  label=\"Show if...\"\n                  options={optionLbls}\n                  setValue={(val) => {\n                    // sete((prevState) => ({\n                    //   ...prevState,\n                    //   selectedCaseKey: val,\n                    // }));\n                    // newProductOptions.current[index].selectedCaseKey = val;\n                  }}\n                  value={ifStatement.selectedCaseKey}\n                  style={{ marginBottom: 25 }}\n                />\n                <Text>\"=\"</Text>\n                <DropDown\n                  label=\"Show if...\"\n                  options={optionLblsValues}\n                  setValue={(val) => {\n                    // sete((prevState) => ({\n                    //   ...prevState,\n                    //   selectedCaseValue: val,\n                    // }));\n                    // newProductOptions.current[index].selectedCaseValue = val;\n                  }}\n                  value={ifStatement.selectedCaseValue}\n                  style={{ marginBottom: 25 }}\n                />\n              </View>\n            );\n          })}\n          {optionLbls.length > 1 && (\n            <Button\n              title=\"Add If Statement\"\n              onPress={() =>\n                setifStatementList((prev) => [\n                  ...prev,\n                  { selectedCaseKey: null, selectedCaseValue: null },\n                ])\n              }\n            />\n          )}\n        </View>\n      </View>\n    );\n  } else {\n    return (\n      <TouchableOpacity\n        onPress={() =>\n          indexOn !== index ? setindexOn(index) : setindexOn(null)\n        }\n        style={{\n          padding: 25,\n          margin: 15,\n          backgroundColor: \"lightgrey\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          height: 100,\n        }}\n      >\n        <Text>{item.label}</Text>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.push({\n              ...item,\n              label: item.label + \" Copy\",\n            });\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(newProductOptions.current.length - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            Copy\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            newProductOptions.current.splice(index, 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(indexOn - 1);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            X\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            function moveItem(from, to) {\n              // remove `from` item and store it\n              var f = newProductOptions.current.splice(from, 1)[0];\n              // insert stored item into position `to`\n              newProductOptions.current.splice(to, 0, f);\n            }\n\n            moveItem(index, index + 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(null);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            \\/\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => {\n            function moveItem(from, to) {\n              // remove `from` item and store it\n              var f = newProductOptions.current.splice(from, 1)[0];\n              // insert stored item into position `to`\n              newProductOptions.current.splice(to, 0, f);\n            }\n\n            moveItem(index, index - 1);\n\n            setnewProduct((prevState) => ({\n              ...prevState,\n              options: newProductOptions.current,\n            }));\n            setindexOn(null);\n          }}\n        >\n          <Text\n            style={{\n              marginBottom: 25,\n              fontWeight: \"700\",\n              color: \"red\",\n            }}\n          >\n            /\\\n          </Text>\n        </TouchableOpacity>\n      </TouchableOpacity>\n    );\n  }\n};\n\nexport default OptionView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}