{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { withStyleAnimation } from \"../animation/styleAnimation\";\nimport { makeUIMutable } from \"../mutables\";\nimport { LayoutAnimationType } from \"./animationBuilder\";\nimport { runOnUIImmediately } from \"../threads\";\nvar TAG_OFFSET = 1e9;\nvar _worklet_15506333783207_init_data = {\n  code: \"function startObservingProgress(tag, sharedValue, animationType) {\\n  const {\\n    LayoutAnimationType,\\n    TAG_OFFSET\\n  } = this._closure;\\n  const isSharedTransition = animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\\n  sharedValue.addListener(tag + TAG_OFFSET, function () {\\n    _notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\\n  });\\n}\",\n  location: \"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAKA,+BAASA,CAAuBC,KAAGC,WAAEA,EAAWC,aAAEA,EAAa;EAAA;IAAA;IAAA;EAAA;EAG7D,MAAMC,kBAAkB,GAAGD,aAAa,KAAKE,mBAAmB,CAACC,yBAAyB;EAC1FJ,WAAW,CAACK,WAAW,CAACN,GAAG,GAAGO,UAAU,EAAE,YAAM;IAC9CC,oBAAoB,CAACR,GAAG,EAAEC,WAAW,CAACQ,KAAK,EAAEN,kBAAkB,CAAC;EAClE,CAAC,CAAC;AACJ\\\",\\\"names\\\":[\\\"startObservingProgress\\\",\\\"tag\\\",\\\"sharedValue\\\",\\\"animationType\\\",\\\"isSharedTransition\\\",\\\"LayoutAnimationType\\\",\\\"SHARED_ELEMENT_TRANSITION\\\",\\\"addListener\\\",\\\"TAG_OFFSET\\\",\\\"_notifyAboutProgress\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\\\"]}\"\n};\nvar startObservingProgress = function () {\n  var _e = [new global.Error(), -3, -27];\n  var _f = function _f(tag, sharedValue, animationType) {\n    var isSharedTransition = animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n    sharedValue.addListener(tag + TAG_OFFSET, function () {\n      _notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n    });\n  };\n  _f._closure = {\n    LayoutAnimationType: LayoutAnimationType,\n    TAG_OFFSET: TAG_OFFSET\n  };\n  _f.__initData = _worklet_15506333783207_init_data;\n  _f.__workletHash = 15506333783207;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_15203130483910_init_data = {\n  code: \"function stopObservingProgress(tag, sharedValue, cancelled, removeView) {\\n  const {\\n    TAG_OFFSET\\n  } = this._closure;\\n  sharedValue.removeListener(tag + TAG_OFFSET);\\n  _notifyAboutEnd(tag, cancelled, removeView);\\n}\",\n  location: \"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAaA,8BAASA,CAAsBC,KAAGC,WAAEA,EAAWC,SAAEA,EAASC,UAAEA,EAAU;EAAA;IAAA;EAAA;EAGpEF,WAAW,CAACG,cAAc,CAACJ,GAAG,GAAGK,UAAU,CAAC;EAC5CC,eAAe,CAACN,GAAG,EAAEE,SAAS,EAAEC,UAAU,CAAC;AAC7C\\\",\\\"names\\\":[\\\"stopObservingProgress\\\",\\\"tag\\\",\\\"sharedValue\\\",\\\"cancelled\\\",\\\"removeView\\\",\\\"removeListener\\\",\\\"TAG_OFFSET\\\",\\\"_notifyAboutEnd\\\"],\\\"sources\\\":[\\\"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\\\"]}\"\n};\nvar stopObservingProgress = function () {\n  var _e = [new global.Error(), -2, -27];\n  var _f = function _f(tag, sharedValue, cancelled, removeView) {\n    sharedValue.removeListener(tag + TAG_OFFSET);\n    _notifyAboutEnd(tag, cancelled, removeView);\n  };\n  _f._closure = {\n    TAG_OFFSET: TAG_OFFSET\n  };\n  _f.__initData = _worklet_15203130483910_init_data;\n  _f.__workletHash = 15203130483910;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_9557538670236_init_data = {\n  code: \"function createLayoutAnimationManager() {\\n  const {\\n    LayoutAnimationType,\\n    makeUIMutable,\\n    stopObservingProgress,\\n    withStyleAnimation,\\n    startObservingProgress\\n  } = this._closure;\\n  const enteringAnimationForTag = new Map();\\n  const mutableValuesForTag = new Map();\\n  return {\\n    start: function (tag, type, yogaValues, config) {\\n      const style = config(yogaValues);\\n      let currentAnimation = style.animations;\\n      if (type === LayoutAnimationType.ENTERING) {\\n        enteringAnimationForTag.set(tag, currentAnimation);\\n      } else if (type === LayoutAnimationType.LAYOUT) {\\n        const enteringAnimation = enteringAnimationForTag.get(tag);\\n        if (enteringAnimation) {\\n          currentAnimation = {\\n            ...enteringAnimation,\\n            ...style.animations\\n          };\\n        }\\n      }\\n      let value = mutableValuesForTag.get(tag);\\n      if (value === undefined) {\\n        value = makeUIMutable(style.initialValues);\\n        mutableValuesForTag.set(tag, value);\\n      } else {\\n        stopObservingProgress(tag, value, false, false);\\n        value._value = style.initialValues;\\n      }\\n\\n      const animation = withStyleAnimation(currentAnimation);\\n      animation.callback = function (finished) {\\n        if (finished) {\\n          enteringAnimationForTag.delete(tag);\\n          mutableValuesForTag.delete(tag);\\n          const shouldRemoveView = type === LayoutAnimationType.EXITING;\\n          stopObservingProgress(tag, value, finished, shouldRemoveView);\\n        }\\n        style.callback && style.callback(finished === undefined ? false : finished);\\n      };\\n      startObservingProgress(tag, value, type);\\n      value.value = animation;\\n    },\\n    stop: function (tag) {\\n      const value = mutableValuesForTag.get(tag);\\n      if (!value) {\\n        return;\\n      }\\n      stopObservingProgress(tag, value, true, true);\\n    }\\n  };\\n}\",\n  location: \"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAmBA,qCAASA,GAA4B;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAGnC,MAAMC,uBAAuB,GAAG,IAAIC,GAAG,EAAE;EACzC,MAAMC,mBAAmB,GAAG,IAAID,GAAG,EAAE;EACrC,OAAO;IACLE,KAAK,YAACC,GAAG,EAAEC,IAAI,EAAEC,UAAU,EAAEC,MAAM,EAAE;MACnC,MAAMC,KAAK,GAAGD,MAAM,CAACD,UAAU,CAAC;MAChC,IAAIG,gBAAgB,GAAGD,KAAK,CAACE,UAAU;MACvC,IAAIL,IAAI,KAAKM,mBAAmB,CAACC,QAAQ,EAAE;QACzCZ,uBAAuB,CAACa,GAAG,CAACT,GAAG,EAAEK,gBAAgB,CAAC;MACpD,CAAC,MAAM,IAAIJ,IAAI,KAAKM,mBAAmB,CAACG,MAAM,EAAE;QAG9C,MAAMC,iBAAiB,GAAGf,uBAAuB,CAACgB,GAAG,CAACZ,GAAG,CAAC;QAC1D,IAAIW,iBAAiB,EAAE;UACrBN,gBAAgB,GAAG;YACjB,GAAGM,iBAAiB;YACpB,GAAGP,KAAK,CAACE;UACX,CAAC;QACH;MACF;MACA,IAAIO,KAAK,GAAGf,mBAAmB,CAACc,GAAG,CAACZ,GAAG,CAAC;MACxC,IAAIa,KAAK,KAAKC,SAAS,EAAE;QACvBD,KAAK,GAAGE,aAAa,CAACX,KAAK,CAACY,aAAa,CAAC;QAC1ClB,mBAAmB,CAACW,GAAG,CAACT,GAAG,EAAEa,KAAK,CAAC;MACrC,CAAC,MAAM;QACLI,qBAAqB,CAACjB,GAAG,EAAEa,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QAC/CA,KAAK,CAACK,MAAM,GAAGd,KAAK,CAACY,aAAa;MACpC;;MAGA,MAAMG,SAAS,GAAGC,kBAAkB,CAACf,gBAAgB,CAAC;MACtDc,SAAS,CAACE,QAAQ,GAAGC,kBAAQ,EAAI;QAC/B,IAAIA,QAAQ,EAAE;UACZ1B,uBAAuB,CAAC2B,MAAM,CAACvB,GAAG,CAAC;UACnCF,mBAAmB,CAACyB,MAAM,CAACvB,GAAG,CAAC;UAC/B,MAAMwB,gBAAgB,GAAGvB,IAAI,KAAKM,mBAAmB,CAACkB,OAAO;UAC7DR,qBAAqB,CAACjB,GAAG,EAAEa,KAAK,EAAES,QAAQ,EAAEE,gBAAgB,CAAC;QAC/D;QACApB,KAAK,CAACiB,QAAQ,IAAIjB,KAAK,CAACiB,QAAQ,CAACC,QAAQ,KAAKR,SAAS,GAAG,KAAK,GAAGQ,QAAQ,CAAC;MAC7E,CAAC;MACDI,sBAAsB,CAAC1B,GAAG,EAAEa,KAAK,EAAEZ,IAAI,CAAC;MACxCY,KAAK,CAACA,KAAK,GAAGM,SAAS;IACzB,CAAC;IACDQ,IAAI,YAAC3B,GAAG,EAAE;MACR,MAAMa,KAAK,GAAGf,mBAAmB,CAACc,GAAG,CAACZ,GAAG,CAAC;MAC1C,IAAI,CAACa,KAAK,EAAE;QACV;MACF;MACAI,qBAAqB,CAACjB,GAAG,EAAEa,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;IAC/C;EACF,CAAC;AACH\\\",\\\"names\\\":[\\\"createLayoutAnimationManager\\\",\\\"enteringAnimationForTag\\\",\\\"Map\\\",\\\"mutableValuesForTag\\\",\\\"start\\\",\\\"tag\\\",\\\"type\\\",\\\"yogaValues\\\",\\\"config\\\",\\\"style\\\",\\\"currentAnimation\\\",\\\"animations\\\",\\\"LayoutAnimationType\\\",\\\"ENTERING\\\",\\\"set\\\",\\\"LAYOUT\\\",\\\"enteringAnimation\\\",\\\"get\\\",\\\"value\\\",\\\"undefined\\\",\\\"makeUIMutable\\\",\\\"initialValues\\\",\\\"stopObservingProgress\\\",\\\"_value\\\",\\\"animation\\\",\\\"withStyleAnimation\\\",\\\"callback\\\",\\\"finished\\\",\\\"delete\\\",\\\"shouldRemoveView\\\",\\\"EXITING\\\",\\\"startObservingProgress\\\",\\\"stop\\\"],\\\"sources\\\":[\\\"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\\\"]}\"\n};\nvar createLayoutAnimationManager = function () {\n  var _e = [new global.Error(), -6, -27];\n  var _f = function _f() {\n    var enteringAnimationForTag = new Map();\n    var mutableValuesForTag = new Map();\n    return {\n      start: function start(tag, type, yogaValues, config) {\n        var style = config(yogaValues);\n        var currentAnimation = style.animations;\n        if (type === LayoutAnimationType.ENTERING) {\n          enteringAnimationForTag.set(tag, currentAnimation);\n        } else if (type === LayoutAnimationType.LAYOUT) {\n          var enteringAnimation = enteringAnimationForTag.get(tag);\n          if (enteringAnimation) {\n            currentAnimation = _objectSpread(_objectSpread({}, enteringAnimation), style.animations);\n          }\n        }\n        var value = mutableValuesForTag.get(tag);\n        if (value === undefined) {\n          value = makeUIMutable(style.initialValues);\n          mutableValuesForTag.set(tag, value);\n        } else {\n          stopObservingProgress(tag, value, false, false);\n          value._value = style.initialValues;\n        }\n\n        var animation = withStyleAnimation(currentAnimation);\n        animation.callback = function (finished) {\n          if (finished) {\n            enteringAnimationForTag.delete(tag);\n            mutableValuesForTag.delete(tag);\n            var shouldRemoveView = type === LayoutAnimationType.EXITING;\n            stopObservingProgress(tag, value, finished, shouldRemoveView);\n          }\n          style.callback && style.callback(finished === undefined ? false : finished);\n        };\n        startObservingProgress(tag, value, type);\n        value.value = animation;\n      },\n      stop: function stop(tag) {\n        var value = mutableValuesForTag.get(tag);\n        if (!value) {\n          return;\n        }\n        stopObservingProgress(tag, value, true, true);\n      }\n    };\n  };\n  _f._closure = {\n    LayoutAnimationType: LayoutAnimationType,\n    makeUIMutable: makeUIMutable,\n    stopObservingProgress: stopObservingProgress,\n    withStyleAnimation: withStyleAnimation,\n    startObservingProgress: startObservingProgress\n  };\n  _f.__initData = _worklet_9557538670236_init_data;\n  _f.__workletHash = 9557538670236;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_14784208921142_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    createLayoutAnimationManager\\n  } = this._closure;\\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\\n}\",\n  location: \"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAyEmB,kBAAM;EAAA;IAAA;EAAA;EAGvBA,MAAM,CAACC,uBAAuB,GAAGC,4BAA4B,EAAE;AACjE\\\",\\\"names\\\":[\\\"global\\\",\\\"LayoutAnimationsManager\\\",\\\"createLayoutAnimationManager\\\"],\\\"sources\\\":[\\\"/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.js\\\"]}\"\n};\nrunOnUIImmediately(function () {\n  var _e = [new global.Error(), -2, -27];\n  var _f = function _f() {\n    global.LayoutAnimationsManager = createLayoutAnimationManager();\n  };\n  _f._closure = {\n    createLayoutAnimationManager: createLayoutAnimationManager\n  };\n  _f.__initData = _worklet_14784208921142_init_data;\n  _f.__workletHash = 14784208921142;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}())();","map":{"version":3,"mappings":"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","names":["withStyleAnimation","makeUIMutable","LayoutAnimationType","runOnUIImmediately","TAG_OFFSET","startObservingProgress","tag","sharedValue","animationType","isSharedTransition","SHARED_ELEMENT_TRANSITION","addListener","_notifyAboutProgress","value","stopObservingProgress","cancelled","removeView","removeListener","_notifyAboutEnd","createLayoutAnimationManager","enteringAnimationForTag","Map","mutableValuesForTag","start","type","yogaValues","config","style","currentAnimation","animations","ENTERING","set","LAYOUT","enteringAnimation","get","undefined","initialValues","_value","animation","callback","finished","delete","shouldRemoveView","EXITING","stop","global","LayoutAnimationsManager"],"sources":["/Users/georgebadal/Desktop/PosMate/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationsManager.ts"],"sourcesContent":["import { withStyleAnimation } from '../animation/styleAnimation';\nimport { SharedValue } from '../commonTypes';\nimport { makeUIMutable } from '../mutables';\nimport {\n  LayoutAnimationFunction,\n  LayoutAnimationType,\n  LayoutAnimationsValues,\n} from './animationBuilder';\nimport { runOnUIImmediately } from '../threads';\n\nconst TAG_OFFSET = 1e9;\n\nfunction startObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<number>,\n  animationType: LayoutAnimationType\n): void {\n  'worklet';\n  const isSharedTransition =\n    animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n  sharedValue.addListener(tag + TAG_OFFSET, () => {\n    _notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n  });\n}\n\nfunction stopObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<number>,\n  cancelled: boolean,\n  removeView: boolean\n): void {\n  'worklet';\n  sharedValue.removeListener(tag + TAG_OFFSET);\n  _notifyAboutEnd(tag, cancelled, removeView);\n}\n\nfunction createLayoutAnimationManager() {\n  'worklet';\n  const enteringAnimationForTag = new Map();\n  const mutableValuesForTag = new Map();\n\n  return {\n    start(\n      tag: number,\n      type: LayoutAnimationType,\n      yogaValues: LayoutAnimationsValues,\n      config: LayoutAnimationFunction\n    ) {\n      const style = config(yogaValues);\n      let currentAnimation = style.animations;\n\n      if (type === LayoutAnimationType.ENTERING) {\n        enteringAnimationForTag.set(tag, currentAnimation);\n      } else if (type === LayoutAnimationType.LAYOUT) {\n        // When layout animation is requested, but entering is still running, we merge\n        // new layout animation targets into the ongoing animation\n        const enteringAnimation = enteringAnimationForTag.get(tag);\n        if (enteringAnimation) {\n          currentAnimation = { ...enteringAnimation, ...style.animations };\n        }\n      }\n\n      let value = mutableValuesForTag.get(tag);\n      if (value === undefined) {\n        value = makeUIMutable(style.initialValues);\n        mutableValuesForTag.set(tag, value);\n      } else {\n        stopObservingProgress(tag, value, false, false);\n        value._value = style.initialValues;\n      }\n\n      // @ts-ignore The line below started failing because I added types to the method – don't have time to fix it right now\n      const animation = withStyleAnimation(currentAnimation);\n\n      animation.callback = (finished?: boolean) => {\n        if (finished) {\n          enteringAnimationForTag.delete(tag);\n          mutableValuesForTag.delete(tag);\n          const shouldRemoveView = type === LayoutAnimationType.EXITING;\n          stopObservingProgress(tag, value, finished, shouldRemoveView);\n        }\n        style.callback &&\n          style.callback(finished === undefined ? false : finished);\n      };\n\n      startObservingProgress(tag, value, type);\n      value.value = animation;\n    },\n    stop(tag: number) {\n      const value = mutableValuesForTag.get(tag);\n      if (!value) {\n        return;\n      }\n      stopObservingProgress(tag, value, true, true);\n    },\n  };\n}\n\nrunOnUIImmediately(() => {\n  'worklet';\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\n})();\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}